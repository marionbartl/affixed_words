» Overview | Charts | Timeline |
Tell your story online !
| Special Report Pundits and knitters find common ground in Web logs Editor 's note :
As part of its Online Evolution special report , CNN.com is asking several Web and Internet pioneers for their thoughts on the impact and future of the Internet .
Mena Trott is president and co-founder of Six Apart , a company that makes Web log publishing tools .
SPECIAL REPORT RELATED YOUR E-MAIL ALERTS Blogs Internet or or Create Your Own ( CNN ) -- Mena Trott 's personal Web log is n't exactly the stuff of headlines .
She writes mostly about her daily life -- what she did over the weekend , what 's she 's reading , what she ate for dinner .
Chances are , if she were n't the co-founder of a successful Web log publishing company ( Six Apart ) , her Web log probably would n't get much press .
Dollarshort.org , like many other Web logs , is a distant cousin of the popular political opinion sites that keep cropping up in the news .
Both use the same technology , but to slightly different ends .
Trott spoke recently by phone with CNN. com 's Lila King about the phenomenon of Web logs -- what they 're good for , where they 're heading , and how they serve pundits and knitters alike .
CNN : What do you think the Internet 's biggest impact has been ?
TROTT : The ability for anybody to really be able to communicate online .
...
Even if you 're in sub-Saharan Africa , there is someone that can post your story .
And that ability to communicate with anybody is something that we take so much for granted , but if it stopped , I do n't know how we would live our lives .
CNN : What do you use the Internet for primarily ?
TROTT : I use it to keep in touch with my friends and my family .
I read what 's going on in the world , but at the end of the day , that 's not the thing I want to read .
[ I look at ] photo - sharing services , my LiveJournal .
It 's like a part of me .
... I just write things documenting my life .
...
For example , I have a Web log where I take a picture of myself every day .
And it sounds incredibly vain , but it 's something that I can go back and I can look at February 12 and I can see what I looked like , see what I was wearing , and I go back to that day .
And there 's no other way to really do that .
Visual imagery is the best way to capture moments .
CNN : What is it that makes you want to write these things publicly instead of , say , scribbling in your diary ?
TROTT : I think we do want an audience ...
I think we have this desire to have our voices heard , even if you 're not writing this diatribe about something .
...
It 's a nice way to kind of keep people in the loop in your life .
We do n't really have time to do that .
It 's funny , because people say technology is the thing that speeds up our lives and kind of prevents us from communicating the way we used to .
What I 'm seeing is it 's enabling us to kind of have that .
...
Knitting blogs are a huge phenomenon .
I find it fascinating because knitting and sewing are things that have historically drawn women -- and now men , too -- together in groups to talk about their families , talk about their lives , talk about society .
And they would use sewing and knitting and quilting as this way of getting together .
I do n't think it 's any coincidence that knitting is one of the things that drives a lot of people to Web logging and to online communities .
What I want to see and I what I think the Internet is really evolving to is this idea that taking these things that we 've done offline for centuries and millennia and bringing it in a way that is compatible with our daily lives .
We live in e-mail , we live in front of the computer , we live with our cell phones .
But we have to figure a way to work all these things in together .
CNN : How much will the Internet change over the next 10 years ?
TROTT : I think that blogging is going more and more mainstream , and in 10 years I doubt it will be called " blogging . "
It may not even look like what we 're doing today .
But the whole idea [ of being ] able to quickly express what you want to say online is going to be still a big part of what we do .
Another big part is going to be mobile computing and devices .
I use my cell phone right now to post to my Web log .
I post something every day to that one with pictures of me .
It 's mindless , it 's just something I can do really quickly and it does n't interfere with my life at all .
...
Being able to record your life is something that I can imagine everyone [ doing ] .
[ Everyone will ] have terabyte after terabyte of all these instances of their lives .
And certain information is going to be available to certain groups and other will be available only to like family and other stuff will be available only to you .
So in 10 years , I can fully imagine every moment of my life is documented .
And the privacy will be there to prevent it from being used in a malicious way .
But that I think is the biggest thing .
We 're going into a recording of life .
CNN : Anything you predict that will surprise us ?
TROTT : What needs to happen is we need to move away from the desktop computer model .
Not everyone sits in front of a computer .
There are a lot of people who see a computer every once in a while .
They 're either afraid to touch it or they do n't have any reason to .
I think we 're going to have our devices , like cell phones that are going to ... have to be easy for everyone to use .
...
We have to bring this technology to as many people as possible and not just have it limited to white , affluent , middle class Americans .
... I 'm surprised I 'm here right now , with this company .
It was a hobby for me , and a passion , and there was such a need that it got to the point where it was a company .
That I have any influence amazes me .
CNN : Where are the women bloggers ?
TROTT : I think the women are there .
I think what we see is a focus on topics that tend to be more male - dominated , so we do n't get as much coverage .
Men blog more about politics .
Politics are more likely to get picked up by the media .
Technology has always been male - dominated .
So there 's this sort of echo chamber .
But there 's knitting , this family , these topics that have been relegated to being sub - par blogging , which I disagree with completely .
Seventy - five percent of our users on LiveJournal are female .
And on Typepad and Movabletype it 's almost a 50/50 split .
There are women blogging , they just do n't need to be so loud .
CNN : How do you think blogging will evolve ?
What 's next ?
TROTT : We need to get mainstream users blogging .
They 're very put off , I think , when we do focus groups .
The words we hear are " egotistical , " " too much free time , " " people in their bathrobes ranting . "
But there 's so much more about blogging .
I do n't fit any of those personas -- well , maybe egotistical .
I started my blog because I wanted to write humorous stories about my life .
And I think most people have the ability to do that .
And once they get over the fear that everyone 's going to read it or it 's going to get you fired , ... when they hear about blogs , it 's always about someone getting fired .
When people get fired , it 's not because they keep a blog , it 's because they have no judgment .
That sort of thing puts people off .
What we need to do is get people informed and make it as easy to use as e-mail .
I hope it does n't take 10 years to get that way with blogging .
That 's what the Internet is to me .
It has given me a voice that I had never imagined .
...
There 's a power you can harness if you know how to use a medium .
Home Page
Get up - to - the minute news from CNN CNN.com gives you the latest stories and video from the around the world , with in - depth coverage of U.S. news , politics , entertainment , health , crime , tech and more .
Home Page
Get up - to - the minute news from CNN CNN.com gives you the latest stories and video from the around the world , with in - depth coverage of U.S. news , politics , entertainment , health , crime , tech and more .
How much would Pepsi pay to get Coke ’s secret formula ?
A few days back some dastardly Coca - Cola employees got nabbed trying to sell corporate secrets to Pepsi .
Pepsi turned the bad guys in and cooperated in the sting operation .
Did the executives at Pepsi give up the chance to make huge profits at Coke ’s expense in order to “ do the right thing ? ”
I had lunch with my friend and colleague Kevin Murphy yesterday .
He made an interesting point : knowing Coke ’s secret formula is probably worth almost nothing to Pepsi .
Here is the logic .
Let ’s say that Pepsi knew Coke ’s secret formula and could publish it so that anyone could make a drink that tasted just like Coke .
That would be a lot like what happens to prescription drugs when they go off patent and generic drug companies come in .
The impact would be that the price of real Coke would fall a lot ( probably not all the way to the price of the generic Coke knockoffs ) .
This would clearly be terrible for Coke .
It would probably also be bad for Pepsi .
With Coke now much cheaper , people would switch from Pepsi to Coke .
Pepsi profits would likely fall .
So if Pepsi had Coke ’s secret formula , they would n’t want to give it away to everyone .
What if they instead kept it to themselves and made their own drink that tasted exactly like Coke ?
If they could really convince people that their drink was identical to Coke , then the new Pepsi-made version of Coke and the Real Thing would be what economists call “ perfect substitutes . ”
When two goods are essentially interchangeable in consumers ’ minds , that tends to lead to fierce price competition and very low profits .
Neither Coke nor the Pepsi knockoff of it would be very profitable as a consequence .
With the price of Coke lower , consumers would switch away from the original Pepsi to either Coke or the new Pepsi-made Coke knockoff , which would be far less profitable than original Pepsi anyway .
In the end , both Coke and Pepsi would likely be worse off if Pepsi had Coke ’s secret formula and acted on it .
So , maybe the executives at Pepsi were acting morally and honorably when they turned in the criminals stealing Coke ’s secrets .
Or maybe they are just good economists .
Common Lisp - Myths and Legends
Lisp has been supporting the world 's most complex applications since 1958 .
And Lisp has grown a lot since then .
So if you or someone you know harbors fears or concerns about Lisp because of something learned in a class or muttered by a friend 20 or 30 years ago , it 's time to take a fresh look .
In this paper we 're going to survey what Lisp is today .
Partially , Lisp is the stuff of Legends .
We hear again and again from our users that writing their system in Lisp cut their investment in developer years by a factor of five or ten .
" We could n't have done this in any other language , " they say .
Once bitten by Lisp , they do n't want to let go .
In this paper we 'll take a look at some of the reasons for this enthusiasm , at why lisp is the premier language for advanced application development .
There are a lot of myths out there which need to be dispelled , and we 've decided to take some of these head - on in this paper .
If we leave you with any questions , please feel welcome to ask a LispWorks representative to clarify them .
We 're not afraid of hard questions ; confronting hard questions is our speciality .
And it also happens to be what has kept Lisp alive and strong through four decades !
Who 's Using Lisp ?
You do n't always see it , but Lisp is all around you .
The Web is growing as fast for Lisp as for the rest of the industry .
Yahoo !
Store includes a WYSIWYG editor for editing your online store through a standard web browser .
The editor is written in Common Lisp .
Public domain Lisp - based web servers include CL - HTTP , architected by John Mallery at the MIT Artificial Intelligence Laboratory .
Some companies consider Lisp technology so valuable that they tend to keep their use of it under wraps ; this is often a source of frustration to those wanting to crow about Lisp 's successes .
But in 1994 , in an unusual move , AT&T permitted Harlequin to confirm that they had ``been supplying Lisp consulting services and products to AT&T , in support of AT&T's development of switched virtual circuit capabilities ' ' .
Toward this end , Harlequin created a special variant of its LispWorks ® system which offers the realtime response necessary to meet AT&T 's rigorous needs , even in spite of being a garbage collected system !
Do you use a credit card ?
It 's quite possible there 's Lisp technology used when you present your card for authorization .
Fraud detection is another area where Lisp has been used with great success .
Xanalys Ltd uses Common Lisp within application products .
Its Xanalys LinkEXPLORER is a LispWorks application .
In addition to the above specific examples involving internet web services , telecommunications , document translation , credit - card fraud detection , and criminal investigation , Lisp is also used in applications involving financial and investment analysis and tracking stock market trends , airline scheduling , space exploration , process planning and scheduling , robotics , chemistry , medicine , physics .
That 's a broad range of uses , but it has an important commonality : each of these areas confronts seriously hard problems .
So from this we can evolve a checklist of possible reasons for using Lisp .
Should I be using Lisp ?
We wo n't claim that everyone should be using Lisp , but there are some particular situations in which we think you 're really hurting yourself if you 're not .
If you answer yes to any of the following questions , Lisp is definitely for you :
Is the problem very complex or ill - specified ?
Experience shows that Lisp excels at dealing with partially specified problems and problems whose essential nature is not fully known at the outset .
A programmer can write an approximation to a process and then use the programming to refine his or her understanding of the process interactively .
Does the problem involve multiple representations of data from varying sources ?
Because of Lisp 's flexible class system and dynamic typing , configuring robust systems is easy .
If new data types are added , classes and methods already compiled usually do not have to be recompiled in order to interact properly .
Lisp is ideal for large systems that evolve over time .
Do the conditions of the problem change frequently , even dynamically ?
Lisp has become highly optimized over the years for `incremental change ' .
For example : New function and class definitions can be loaded after Lisp starts , even multiple times to accommodate runtime redefinition of behavior .
The default behavior of class redefinition is to update existing data to accommodate the new definition automatically in a fairly general way that usually involves no programming at all , but more refined programmer control of this process is available for cases where it is needed .
Methods on new datatypes can be added to existing generic functions without access to sources for the methods on existing datatypes and without the need to recompile existing methods !
! Lisp 's automatic storage mechanism , the ``garbage collector '' , is constantly on guard to reclaim old storage in the face of redefinition .
These are only some of the many features Lisp has to support incrementality in ways that most other languages do not .
Does the program have to be delivered quickly ?
Many features of Lisp support rapid prototyping and application delivery .
Lisp provides a comprehensive set of pre-defined libraries .
The presence of the garbage collector saves time in writing storage reclamation code , permits more flexible programming styles , and avoids wasted programmer time tracking down obscure memory leaks .
Lisp makes it easy to write modular code and to test modules interactively .
For more information about the features of Lisp that support rapid prototyping , see : http://www.nhplace.com/kent/PS/Hindsight.html
Will the program have to be frequently modified and updated ?
The last thing one wants to have to do is to constantly be recompiling every module of change .
As we have discussed already , Lisp is optimized for incrementality and redefinition .
Common operations like adding or deleting a method , or adding and deleting a slot do n't normally require recompilation of a whole system .
Will the program have to deal with faulty or erroneous data ?
The last thing you want is to have programs that think error handling means popping up a bomb box or dumping core .
Lisp 's error handling capabilities are powerful and give you a lot more options than that .
It 's easy to control the disposition of a specific kind of error dynamically .
Also , the error system of Lisp is active , not passive , so you do n't have to be constantly checking functions to see if they returned " error codes " rather than correct results .
You can write your programs to assume a correct result will come back because you can arrange for an active transfer of control to happen in the case where an error occurs .
This makes programming more modular and also avoids compounding an error by failing to test for it !
The problems we 've enumerated above are ones that usually cause other programming languages to fall flat .
But they are the very things that Lisp was designed , through its long association with the Artificial Intelligence community , to handle best .
So what does n't Lisp do ?
Well , we do n't get a lot of call for it to do business accounting systems .
Bulk processing of well - understood , very homogenous data is something Lisp could do but is rarely called upon to do because commodity languages usually work fine .
But it 's almost too bad Lisp has n't been used for more business systems because among Lisp 's many features is a built - in understanding of dates and times which is not susceptible to the Year 2000 bug .
And Lisp 's dynamically modifiable class and object system would provide excellent support for the changing needs of growing companies .
Oh , and we do n't tend to do terribly well on dumping out tiny ``hello world '' executables .
So if your only need is a program that does very little and is correspondingly tiny , we 're probably not the language for you .
But in our experience , one 's needs tend to grow with time and we find that ``hello world '' is not typical in size or functionality to real commercial programs .
So we 've focused our energies on optimizing real programs .
What Does Lisp Offer Me ?
In one sentence : Lisp offers you a stunning level of productivity which frees you to write complex , robust , understandable and evolving applications with an order - of - magnitude reduction in the associated pain .
Lisp systems are particularly good at supporting rapid prototyping - you develop your application the same way as you think about it : from the top down .
Modules can be constructed in isolation , partially written programs can be tested and debugged interactively .
Interpreted code under development can be freely mixed with highly optimized compiled code .
Lisp IDEs generally come with a built - in lisp editor - the code you write becomes a fully integrated part of your system as you write it , and you never have to leave your lisp session to rebuild and start over .
Your development style ends up reflecting the dynamic powers of the language itself : you can redefine your functions and classes , as often as you want , both in development and in the running application .
You do n't have to worry about implementing a whole load of primitives just to get yourself going , because the language provides them for you .
Then when the job 's done you can deliver either free - running executables or relocatable libraries ( DLLs on Windows ) .
Tree - shaking and pruning tools are typically provided to help you cut you application down to size .
ANSI Common Lisp
Lisp is actually a whole family of languages , but in this document we 're mostly talking about ANSI Common Lisp , the Lisp dialect of choice for industrial - strength applications development worldwide .
ANSI Common Lisp offers you the following features :
Compiler configurability
Using simple constructs within Lisp itself you get to select where your code will run fast , where it will run slower but " safe " ( automatically performing checks on the data as it runs ) , and where the compilation itself will be rapid .
You can specify this by the system , per file , or even on a line - by - line basis when you need to .
Further constructs allow you to state which functions should be compiled inline .
Macros
A powerful and elegant macro facility allows lisp code to generate more lisp code .
The macros themselves are also written in lisp and can perform arbitrary operations as part of the expansion process .
Calls to the macro- expander have the same syntax as function calls - there is no sense of leaving lisp or learning a second language .
Common Lisp Object System Otherwise known as CLOS , the most advanced object system in the world .
It supports : dynamic change of an object 's class , dynamic method recombination for runtime - added methods without access to source code or any need to " rebuild " , dispatch on classes or object identity , dispatch on multiple objects , not just one object , user - defined forms of method combination , an unofficial but widely accepted " Meta Object Protocol " which allows introspection and even dynamic redefinition of the object system itself .
Built - in types Lisp provides a rich set of built - in data - types , including Symbols ( symbolic identifiers ) Numerical types : Machine integers and arbitrary precision integers IEEE floats ( single and double ) Rational and complex numbers Characters Containers : Arrays ( simple or indirect , with varying element types )
Lists ( containing mixed and arbitrary kinds of typed objects ) Strings Various kinds of Hash Tables Pathnames : portable file naming which accesses the native file system while hiding system characteristics for cross- platform situations Functions ( including high - order functions ) as first class objects
Standardized library
The runtime library for Common Lisp is part of the standard .
That makes it fully platform and vendor independent .
The library is large and supplies several hundred highly flexible functions .
These cover sequence and string utilities , sorting , hash table creation / lookup , flexible file I/O , numerical operations ( extremely efficient with declarations ) , and much much more .
Powerful error - handling facility
No application is perfect , and nor is the real world with which applications interact .
Errors do occur , and what Common Lisp does is to provide a rich facility for surviving such " conditions " : signalling , handling , restarting - all under program control .
As an aid to debugging that elusive error , Common Lisp allows you to trace and even to disassemble your code .
Other features
We listed above the main features of ANSI Common Lisp .
Other features of note , but at this time not included within the standard , include :
Introspection tools Lisp systems provide considerable assistance to writing and debugging an application .
The following tools are typical , and tend to be fully integrated : state and values can be exchanged between them with a minimum of fuss .
Lisp listeners allow interaction with the underlying lisp system - lisp forms ( think of them as small programs ) are evaluated and the results returned .
Inspectors allow introspection of Lisp objects - you can present an inspector with an arbitrary object and it will show you the values in all its slots .
You do n't need to tell the inspector what type the object is - Lisp can figure that out for itself .
Class tools allow you to browse the accessors associated with any object .
In conjunction with inspectors they allow for extremely rapid learning about existing systems .
Debuggers give the application writer access to the stack in the event of an unhandled error .
Arguments to function calls can be inspected , handed to the listener which can perform arbitrary operations on them , or even changed and the function called again with the new values .
Common Lisp Interface Manager Standardized ( but not within ANSI - CL ) , CLIM gives application users one of the most highly sought - after features around : a combination of both vendor and platform independence in their user interface .
It offers : optional specification of native look - and - feel , supporting most standard GUI widgets .
a straight - forward mapping of application semantic components ( actions and objects ) to GUI components ( commands and text / graphics ) powerful graphics facilities ( shapes , fonts , colors , bitmaps ) incremental redisplay manager table formatting , including dynamic layout based on size of cell entries , arbitrary text and / or graphics for cell entries , nesting of tables , etc commands trivially made available as keystrokes , pull - down menu entries , command - line style ( with completion ) , and / or associated with pointer gestures on display objects automatic prompting for and type - checked parsing of command arguments horizontal or vertical formatting of n-ary , cyclic graphs with text or graphics for node labels high - level support for common pointer - based operations ( like drag - and - drop ) and much more .
Multitasking Light - weight control of multiple execution strands within a single machine process .
On Windows this would typically be implemented with native threads .
System definition
To keep track of build dependencies when it you 're managing a large system .
Myths About Lisp
In this section , we 'll look at some of the amazing myths that we still hear told about Lisp , and contrast them with the actual reality .
Myth # 1 : Lisp is slow
The reality is that when all datatypes are appropriately declared , a typical commercial Lisp compiler produces native machine code that is comparable in speed with other languages .
However , something Lisp does which other languages do n't is to allow you to run code with no type declarations .
In this mode , types are dynamically determined and appropriate behavior occurs based on runtime dispatch .
This is slower than heavily declared compiled code would be , but it 's faster to write and therefore a big boon to debugging .
After all , who wants to write type declarations for a bunch of tentative code they are n't sure they 're even going to use ?
It 's not appropriate to compare the speed of such non -type - declared code to the speed of other languages since in other languages , the absence of declarations is fatal to programs in most other languages .
If you want to make a proper comparison , you have to either compare properly declared code in Lisp to properly declared code in other languages .
If you do that , Lisp will compare favorably .
Otherwise , to be fair , you should compare the speed of undeclared code in Lisp ( modest ) to the speed of undeclared code in other languages ( often zero , since such code in other languages is usually ``incomplete ' ' and will not run ) .
Once such a proper comparison is made , we again see the Lisp 's behavior is quite favorable .
Myth # 2 : Lisp is big
Big is a moving target .
Sometime in the early 1980's , people started complaining about the size of Lisp as an impediment .
Lisp was big at that time , compared to other applications of the time because it packed a lot of useful functionality and there was a limit to how small that functionality could be made .
But Lisp vendors became very sensitive to the size issue and Lisp has been one of the few programming languages in recent years that has not been allowed to grow by leaps and bounds with every release .
At this point , the size of a typical application in Lisp and its runtime libraries are comparable in size to what a similar application would be written in another language .
But if the ``bloating '' trend of other languages increases as it has been , Lisp will soon be seen as the much more compact alternative !
Myth # 3 : Lisp has no arrays
Lisp has had an array datatype for at least 30 years , but it 's common for people who took a ``comparative programming languages '' course not to know this .
This is because other languages often have not had Lisp 's well - known LIST datatype , and so Lisp is used as a showcase for dealing with linked lists and recursion .
Sometimes out of ignorance and sometimes just for sheer lack of time , the discussion of array types in Lisp often receives no attention .
But that does n't mean Lisp does n't offer powerful support for single and multi-dimensional arrays , arrays of varying element type , and array access that provides transparent access to fixed size arrays , arrays displaced to other arrays , and arrays whose size is expected to dynamically grow and shrink .
Myth # 4 : Lisp has no compiler
Since its earliest days , now 40 years ago , Lisp implementations have been variously interpreted or compiled , and often both .
In fact , much important work in the theory of program compilation has been done using Lisp , and Lisp compilers have benefited enormously by this .
No modern commercial Lisp is without a compiler .
The fact that modern Lisps often come with an interpreter as well is simply a convenience for some implementations to encourage late - binding semantics and promote program flexibility , including interactive debugging .
The ANSI Common Lisp standard does not require the presence of a compiler provided that an interpreter achieves the defined semantics .
It is intended that the marketplace will sort out this issue .
The ability to omit a compiler allows certain price / performance points to be achieved , especially among subset and freeware implementations .
However , serious commercial implementations invariably offer optimizing compilers as a standard part of their product .
Ask to be sure , but do n't let ever anyone tell you there 's no such thing !
Myth # 5 : Lisp is not standard
This one is simple to correct .
X3.226/1994 , the American National Standard for Programming Language Common Lisp , not only exists but in fact was the first ANSI standard for an object - oriented programming language .
A webbed adaptation of the ANSI Common Lisp standard , The Common Lisp HyperSpecTM ( CLHS ) is available from LispWorks Ltd free of charge from our downloads page .
CLHS contains a comprehensive glossary and myriad programming examples .
It is heavily cross-indexed ( 105 K hyperlinks ) and is optimized to use low graphics for very fast browsing .
Common Lisp is not only a standard but it places a heavy emphasis on program portability .
This allows you to smoothly deploy the same program on quite different platforms .
With additional help from CLIM , the Common Lisp Interface Manager , an application can be developed which uses the same code to take on a native Motif look - and - feel under X Windows or a Windows look - and - feel under Windows .
The design of the Common Lisp language planned for a wide variety of potential platform variances ( character set , machine word size , filename syntax , interaction style ) and will serve its users well into the future without the need to make costly program upgrades required by other languages .
Myth # 6 : Lisp does n't talk to other programs
While the ANSI standard for Common Lisp does n't require it , a serious vendor of Common Lisp such as LispWorks Ltd goes well beyond what the standard requires in the way of potential connections between Lisp and the rest of your computer system .
And in future releases , we 'll be adding more because we know this is a key issue in the modern , heterogeneous computing environment .
Foreign Interface .
Data and program interfaces to C can be declared and called in a way that is transparent to Lisp programs .
Network interfaces .
Lisp supports easy access to TCP so that programming TCP - based interfaces is easy .
Also , third - party software such as CL - HTTP ( mentioned earlier ) , allows Common Lisp to talk to the web .
And , of course , access to other network facilities for which there is no pre-packaged access in Lisp is still readily accessible using the Foreign Interface .
CORBA Interface .
A binding of CORBA to Lisp allows natural Lisp programming style to be used when interacting with CORBA interfaces .
Database Interfaces .
Flexible accesses to external database through SQL and ODBC interfaces make database entities conveniently available as Lisp data .
DDE Client .
A DDE client interface is available for programs requiring Inter - application communication under Windows .
COM and Automation .
COM client / server and Automation modules are also available on Windows .
The reality is far from what the myth suggests because , in fact , Common Lisp from LispWorks Ltd provides a flexible and growing set of interconnection options .
Myth # 7 : Lisp syntax is painful
If you have n't seen it before , the Lisp notation for what other languages might write as `` 5 * a+3 '' is `` (+ (* 5 a ) 3 ) '' .
And we 'll admit this is to some degree a matter of personal taste .
However , in spite of the fact that it may look initially a little funny to the unaccustomed , there are some sound technical reasons why Lisp syntax exists and is preferred by most Lisp programmers , and we 've tried to enumerate them here :
It 's easy to teach .
There are no complicated precedence rules waiting to trip you up .
Grouping of operators and associativity is manifestly obvious .
It 's easy to parse .
A few simple rules apply throughout .
If you extend the language to add a new operator , you do n't have to train the Lisp parser ( provided to Lisp programmers as the function called READ ) to understand your new operator .
You can focus immediately on the semantics , which is what 's important anyway .
It maps naturally to an underlying data structure .
When teaching someone about macros , it 's obvious what the internal representation of a Lisp expression is because it looks just like Lisp program data .
This greatly simplifies the writing of macros and ``automatic programming '' facilities .
It means that when you extend the language , you do n't have to worry about system operators looking different than the ones you define .
This breaks down the system / user distinction and keeps the system operators from looking more important than the ones you write yourself .
Text editors can provide better support .
A text editor , such as GNU Emacs or the built - in editor that comes with products like Common LispWorks , can automatically provide useful support for indentation based solely on parenthesis level without having to understand the specifics of your program .
They can also provide commands for moving forward and backward conveniently over expressions , which in turn allows more flexible use of ``keyboard macros '' to perform automated program manipulation that is much harder to do in infix languages because the beginning and end of an infix expression must always be designated explicitly ( usually by mouse motion to establish a ``region ' ' ) .
Myth # 8 : Lisp GC is slow
Generational GC .
First , LispWorks offers a modern ``generational '' garbage collector .
Such collectors are based on a layering theory of data that says that when one wants to get back some storage , one should look ``nearby ' ' for recently discarded objects .
If not enough are found , additional work is done to find slightly older objects .
And so on .
The idea is that the nearby search is quickest and if that succeeds , very little work will have been done .
Objects that survive for a long time in the innermost circle are eventually ``aged '' and become part of a second generation .
In practice , this kind of garbage collector can be highly efficient , especially in an environment in which virtual memory is used , because they generally do n't have to touch all of memory in order to reclaim enough storage to succeed .
Realtime GC .
Customers whose applications can't even tolerate the speed of a generational GC should talk to LispWorks Ltd about its realtime implementation of Lisp .
So far , this has not been packaged as a shrink - wrapped product but we might be able to provide it to you under some sort of consulting arrangement .
Even if you 're not sure you want to get involved in a consulting arrangement , please do contact us about your needs so we can be aware of your interest and help you determine how best to proceed .
Myth # 9 : Lisp needs special hardware
No .
Lisp 's performance can certainly be optimized by special hardware .
It 's hard to imagine a language that could n't .
Various machines from Digital Equipment Corporation in the 1970's , notably the PDP - 10 processor , contained numerous instructions which helped Lisp work efficiently .
Later , in the 1980's and into the very early 1990's , there were several companies that built custom ``Lisp chips ' ' which ran Lisp very efficiently .
But any language can benefit from a hardware assist ; that does n't automatically mean it requires special hardware to run that language .
In the 1970's , the C language grew up on the PDP11 , and yet now it is used widely .
Lisp grew up on a wide variety of machines , most of them general purpose .
LispWorks Ltd Lisp products were originally developed on stock hardware .
They have never been ported to Lisp - only platforms .
Today they run on Unix workstations and on the PC under Linux , Solaris , FreeBSD and MS Windows and on Apple Macintosh hardware running Mac OS X .
Myth # 10 : Lisp is expensive
This is wrong on several levels .
First , some people believe the expense comes from the need for special purpose hardware .
As mentioned already , that 's not necessary .
LispWorks will run comfortably on a low to mid-range home PC - that 's about as general purpose as you can get .
Second , features such as dynamic redefinition , powerful debugging tools and automatic memory management mean Lisp programmers are highly productive .
Third , Lisp is available at a variety of prices .
For example , a person who 's just getting his or her feet wet with Lisp might want to obtain the LispWorks Personal Edition , which is available for free .
Hopefully that 's not too expensive !
Of course , it comes with some limitations that are not present in the Professional Edition and Enterprise Edition .
And even these other editions are quite reasonably priced ; see the products or contact a LispWorks Ltd sales representative for details .
Or , if you 're not ready to actually order a copy of Lisp , feel free to browse the Common Lisp HyperSpecTM to get a feel for the language .
Lisp tools from LispWorks Ltd
LispWorks
Ltd brings the best of Common Lisp to the Windows , Macintosh , Linux and UNIX platforms .
All versions include optimizing native code compilers , advanced garbage collection , and excellent platform integration .
LispWorks implements the ANSI Common Lisp Standard and adds numerous libraries for GUI creation , foreign function and enterprise integration , and expert system programming .
The LispWorks integrated development environment further simplifies software development .
Once your application is developed , LispWorks supports optimized application delivery .
There is no charge for runtime distribution on the Windows , Macintosh , Linux , FreeBSD and x86/x64 Solaris platforms .
On UNIX platforms , runtime distribution is available for a modest fee .
LispWorks IDE
The LispWorks IDE provides a smooth and comfortable workflow , allowing you to incrementally write , test , and extend your software while it is running .
Features of the LispWorks IDE include :
Interactive Lisp listener , for compiling and executing expressions ,
Debugger , tracer and source code stepper ,
Object inspector ,
Browsers for classes , generic functions , and compilation errors ,
Execution time profiler ,
Integrated extensible editor and ability to use external editors ( e.g. EMACS ) ,
Build system manager ,
Incremental compiler and dynamic loader ,
Source code location and cross-referencing tool ,
Complete on - line documentation in hypertext format .
Language Extensions
Our Common Lisp products include a number of extensions to the language standard , further increasing your productivity .
Additional libraries and features include :
CAPI portable GUI toolkit , supporting both Windows and OSF / Motif look and feel ,
CLIM 2.0 , the Common Lisp Interface Manager ,
CORBA interface for creating distributed components ,
KnowledgeWorks ® and Prolog for expert system programming ,
and Prolog for expert system programming , Integrated database access ,
Support for internationalization through Unicode ,
Symmetric Multiprocessing ,
Programmer - extensible I/ O streams ,
TCP socket streams ,
Object finalization ; weak vectors and hash tables .
Platforms
LispWorks Ltd provides Common Lisp implementations on a variety of operating system and hardware platforms .
The use of portable language constructs lets you maintain your software on all of these platforms simultaneously .
LispWorks for Windows provides a full native implementation of Common Lisp on all modern x86/x64 Windows computers .
LispWorks for Windows , LispWorks for Macintosh , LispWorks for x86/x64 Solaris , LispWorks for Linux , LispWorks for FreeBSD and LispWorks for AIX are available in several editions .
All editions include an advanced Common Lisp compiler , runtime system , and Common LispWorks IDE .
LispWorks
Ltd does not charge runtime license fees for applications developed with the HobbyistDV , Professional and Enterprise Editions .
The Personal Edition is intended for personal and educational Lisp programming .
As a contribution to the Common Lisp community , LispWorks Ltd makes the Personal Edition of LispWorks available free of charge .
While the Personal Edition includes the full Common Lisp compiler and development environment , it does limit program size and duration and it does not support application delivery .
The Professional Edition includes everything you need for commercial Common Lisp software development and application delivery .
CLIM 2.0 is included to further increase program portability .
The Enterprise Edition ( with a 64 - bit version now available ) includes all the features of the Professional Edition , and provides further support for software needs of the modern enterprise , including :
Database access through object - oriented SQL / ODBC libraries .
Portable distributed computing through CORBA .
Expert system programming through our KnowledgeWorks product and an embedded Prolog compiler .
For UNIX platforms , we offers two products : LispWorks and Liquid Common Lisp ( formerly Lucid Common Lisp ) .
Both include the full LispWorks integrated development environment and foreign function interface .
Product delivery and specialized libraries are available as separate add - ons .
The following platforms are supported :
Compaq Tru64 Unix ( OSF 1 )
PA -RISC / HP -UX
Sun SPARC / Solaris
Acknowledgements
Copyright © LispWorks Ltd 2000 - 10 .
All rights reserved .
This document was written by Nick Levine and Kent M. Pitman .
Minor updates have since been made by Harlequin , Xanalys and LispWorks Ltd .
How Can I Contact LispWorks Ltd ?
If you have more questions , or if you want to place an order , please contact Lisp Sales .
Category :
Art
Idea :
Paper artworks
Peter Callesen about his works :
A common theme in many of my works earlier works is a reinterpretation of classical fairytales as well as a more general interest in memory in connection to childhood - as for instance in my performances Castle , Folding and Jukebox .
These playful performances exist in the lost land of childhood , between dream and reality , and It is in this meeting or confrontation of these two conditions , in a kind of utopian embodiment , that these works of art becomes alive , often in a tragicomic way .
This interest for the romantic is extended in my later exhibitions White Shadows at Esbjerg Art Museum and From dust to dusk , but here with less focus on the confrontation between dream and reality leaving more space for the poetic aspect as well as the possibility of a reality behind or within the dream .
Big Paper Castle , 2004
7,20 x 7,15 x 3,75 m
Cut and folded from one sheet of 350 gsm paper ,
Charlottenborg Udstillingsbygning ’s Autumn exhibition , Copenhagen
The Impossible Meeting Between Image and Reality , 2006
47,5x37x7 cm
Acid free A4 80 gms paper and glue in artist made frame
The Impossible Meeting Between Image and Reality ( detail ) , 2006 47,5x37x7 cm Acid free A4 80 gms paper and glue in artist made frame
Trancendence , 2006
47,5x37x7 cm
Acid free A4 80 gms paper and glue in artist made frame
Unter dem Nebelmeer , 2006 47,5x37x7 cm
Acid free A4 80 gms paper and glue in artist made frame
Alive , but Dead , 2006 127x94x11,5 cm. Acid
Free paper , glue , color in artist made frame
Alive , but Dead , ( detail ) 2006 127x94x11,5 cm. Acid
Free paper , glue , color in artist made frame
Alive , but Dead , ( detail ) 2006 127x94x11,5 cm. Acid
Free paper , glue , color in artist made frame
Heaven and Hell , 2006 134x127x11,5 cm. Acid
Free paper , glue , color in artist made frame
Heaven and Hell , ( detail ) 2006
134x127x11,5 cm. Acid
Free paper , glue , color in artist made frame
The weight of feathers , 2005
12 x 55 x 34 cm
Acid - free 115 gsm paper and glue
18,2 cm Tall Tower of Babel , 2005 Acid free A4 80 paper and glue ,
Down the River , 2005 Acid free A4 80 paper and glue ,
Down the River , ( detail ) 2005 Acid free A4 80 paper and glue ,
Wedding Dress Without Bride , 2005 Acid free A4 80 gms paper and glue ,
All in All , 2006 Acid free A4 115 gms paper and glue ,
All in All , ( detail ) 2006
Acid free A4 115 gms paper and glue ,
Angel , 2006
Acid free A4 115 gms paper and glue ,
Angel , ( detail ) 2006
Acid free A4 115 gms paper and glue ,
Closet , 2006 Acid free A4 80 gms paper and glue ,
Closet , ( detail ) 2006
Acid free A4 80 gms paper and glue ,
Dead Bird , 2006
Acid free A4 80 gms paper and glue ,
Big wave moving towards a small castle made of sand , 2005 Acid free A4 80 gsm paper and glue
Distant Wish , 2006 Acid - free A4 115 gms paper and glue
Distant Wish , ( detail ) 2006 Acid - free A4 115 gms paper and glue
Eismeer , 2006 Acid free A4 80 gsm paper and glue
Hunting , 2005 Acid - free A4 80 gsm paper and glue
Hunting ( detail ) , 2005 Acid - free A4 80 gsm paper and glue
In the Beginning ( Snake inside an egg ) , 2005 Acid free A4 80 gms paper and glue
In the Shadow of an Orchid ( detail ) , 2005 Acid free A4 80 gms paper and glue
In the Shadow of an Orchid , 2005 Acid free A4 80 gms paper and glue
Impenetrable Castle , 2005 Acid free A4 80 gms paper and glue
Impenetrable Castle , ( detail ) 2005 Acid free A4 80 gms paper and glue
Looking back , 2006 Acid free A4 115 gms paper and glue
Man Made of Woman , 2005 Acid - free A4 80 gsm paper and glue
Pandora 's Box , 2005 Acid free A4 80 gms paper and glue
Snowballs , 2005 Acid free A4 80 gms paper and glue
Snowballs , ( detail ) 2005 Acid free A4 80 gms paper and glue
Traces in Snow , 2005 Acid - free A4 80 gsm paper and glue
Traces in Snow ( detail ) , 2005 Acid - free A4 80 gsm paper and glue
Single Double Bed , 2005 Acid - free A4 80 gsm paper and glue
Fall , 2005 Acid - free A4 80 gsm paper and glue
Fall , ( detail ) 2005 Acid - free A4 80 gsm paper and glue
The Impossible Meeting , 2005 Acid - free A4 80 gsm paper and glue
The Impossible Meeting ( detail ) , 2005 Acid - free A4 80 gsm paper and glue
Bridge Over Troubled Water , 2005 Acid - free A4 80 gsm paper and glue
Baby Mama's ! > Maternity Wear Hilarious maternity wear !
The perfect gift for friends with a sense of humor !
Be sure to buy one size larger to accomodate the kidlet .
Sexy .
Stylish .
Pregnant .
Just Like Salma Hayek Wore !
Hilarious maternity wear !
The perfect gift for friends with a sense of humor !
Be sure to buy one size larger to accomodate the kidlet .
Unfortunately the last time that a serious look was taken at this resource was back in the 1970's and 1980's , when at one time , under the Project Independence Blueprint , a shale oil production target of 1 million barrels of oil per day was projected , in line with President Ford 's State - of - the - Union Message of 1975 .
( Ref 2 ) .
That program , in turn , was based on the considerable amount of research that had been carried out , both in the US , and abroad , and on an initial evaluation of practical means to meet the target .
But before one looks at that target , and its feasibility , perhaps it is better to look a little more closely at the information which led up to the prediction .
There seems to be a general consensus among many of those that write about world energy , that the 2 trillion barrels of oil potentially available out of the 4 trillion barrels locked in the United States oil shales are not a realistic source of supply .
However , after an eleven year hiatus , Colorado School of Mines are reactivating their annual Oil Shale Symposia .
And the resource is not quite the nonentity that it may appear .
( A quick search through the indices of a number of the PO books did not find it listed in any ) .
Given that , for example , " Japan started oil production at Fushun in 1929 , and developed , in less than ten years , the world 's largest oil shale industry .
Shale oil was a principal source of fuels for Japan during World War II .
Fushun production continues to expand under Communist China and may be 40,000 bpd presently . "
( Ref. 1 ) it is perhaps justifiable to take a little closer look at this whole issue and try to explain some of the technical state of affairs , point out a little of the disingenuousness of some of the statements that have been made , but largely leave the political discussion to others .
To begin with , while the basic definition of an oil shale suggests the fine - grained rock that is often called shale , and implies it is impregnated with oil , that might be easily recovered , Unfortunately , in most cases the rock is not a shale , and the organic material that it contains is not yet an oil that will not run out , or separate out with normal treatment .
It has been described as a precursor to oil , in that , it was initially formed in the same way , but has not undergone the natural high - temperature and pressure regimes of deep burial in the earth that are needed to turn it into oil .
( However , if additional kerogen were to be added to the shale it would through time more likely end up as a coal - Ref 3 . ) .
The material is known as a kerogen , and to date the most successful methods of removing it from the rock has been to heat the rock until the contents volatize , and then to condense the hydrocarbons back out ( in the same fashion that one cracks the oil in a refinery - though there are some significant differences that I will get to later ) .
However , since the initial natural process was not carried as far as with oil , then the amount of energy that is required is generally greater .
The greatest deposits of interest are those found in relatively thick deposits around the point where Wyoming , Colorado , Utah , and Idaho come together .
This and the following section is taken from Ref. 4 .
A section through the lettered points in the above figure gives :
Note that the scale for the vertical section is in feet .
The darker band shown is known as the Mahogany zone in which the Mahogany bed some 100 - 200 ft thick , is considered to be the richest layer , and is a marker for the deposit .
Shale oil has been used as a fuel source in a number of countries around the world , over the past 150 years , but only become of economic significance in the 1920's .
( Ref 3 ) .
There have been over two thousand patents issued describing different ways to separate what , for convenience , I will call oil , from the shale ( similarly called ) .
( Ref 5 ) .
Only a few have , however , been demonstrated , and later in this series of posts I will explain some of the peculiar problems that arise in retorting oil shale .
But , as an illustration of the type of process that could be used , I will describe the Gas Combustion Process , as developed by the US Bureau of Mines for one of its original experiments .
I thought it would be useful to describe this in a little detail , since it points out some of the potential benefits that can come from retorting the material .
The retort can be simply thought of as a vertical pipe with the raw shale fed into the top .
As it moves down through the retort it passes through four zones .
At the top of the retort the shale is cold , and the gasses rising from the lower parts of the process , mix with this shale .
This has two effects , it pre-heats the shale as it drops into the next zone , while at the same time the oil is condensed into a mist , and the product gasses are cooled .
( They are both then collected as they leave the retort ) .
As the shale continues to move down the retort it reaches , about half - way down , a series of ports that inject air mixed with a portion of the produced gas that has been collected ( call this the dilution gas ) .
These two combine to cause ignition and to raise the temperature of the shale ( to between 700 and 950 degrees F ) so that the hydrocarbon contents vaporize and create the oil and gas combination that rises up out of the retort .
The shale residue , continues down the retort , where it is now used to pre-heat a second supply of the collected gas ( known as the recycled gas ) that is moving up into the retorting zone .
This cools the shale as it heats the gas , and the shale residue can then be collected and moved away .
By using this form of heat transfer during the process a relatively high thermal efficiency can be achieved , and the retort can produce about 90 % of the original oil in the shale , as well as a secondary volume of gas , beyond that needed to energize the retort .
The retort has been shown able to handle shale particles ranging in size from ¼ " to 3 " .
By design it is possible to make sure that the oil mist that is the major product does not condense onto the shale particles that are being fed into the retort .
You may note that this separation process does not require any additional external fuel , nor the addition of water to the process .
Using a slightly different method Union Oil Company ran a demonstration plant that ran at rates up to 1200 tons / day , using oil shale from the Piceance Basin .
The crude produced was " a waxy , intermediate gravity , high nitrogen and intermediate sulfur crude " where the wax was removed and separately cracked , and the sulfur and nitrogen levels lowered before it could be considered a " commercial shale oil " with properties similar to that of a high quality Utah crude ( Ref. 6 ) .
A feed of crude shale oil at 26,900 b/d would yield 25,000 bd of commercial shale oil , and 500 t of green coke .
The oil could then be cracked into 380 bd of lpg ; 13,635 bd of gasoline ; 1,300 bd of stove oil ; 6,700 bd of diesel and 590 bd of fuel oil ( ibid ) .
As I said at the beginning of the post , there is an awful lot of oil shale in the United States , the beds can reach up to 2,000 ft thick , and the oil content can reach 90 gallons / ton .
Unfortunately these do not occur at the same time .
Rather the highest grade , is found in relatively narrow layers in the Uinta Basin , although the oil - shale sequence in the area can be up to 1,200 ft. ( Ref. 4 ) .
And unfortunately not all the oil in the shale is made up of the same material , or has the same sort of properties .
This can lead both to difficulties in mining and in retorting .
I will discuss those , and the issue of in - situ retorting , and some of its problems in the next post .
But , given what happened , it is perhaps appropriate to close this first post with a comment by Harold Carver of Union .
It should be quite obvious that if imports to the coastal states and from Canada suddenly increase disproportionately after a shale industry is started , the embryo shale industry would be placed in a severe competitive bind .
Unlimited cheap foreign crude imports would make shale oil as well as a large percentage of domestic crude oil production non-competitive .
What is needed is assurance that shale oil production will face a stable economic environment in which it can share in the spectrum of raw materials for our future energy needs .
Given what happened that was quite visionary .
References - since most of these papers were written before the advent of the Internet , I am going to have to give some of the references in " the old style "
Ref. 1 Cameron " Foreign oil shale industries and their influence on United States Oil Shale Development , " First Symposium on Oil Shale , CSM , 1964
Ref. 2 Utter S. , Oil Shale R & D - A Bureau of Mines Program , 2nd Annual UMR - MEC
Conference on Energy , October 1975
Ref. 3 Oil Shale entry , Encyclopaedia Brittanica , 1978 , paper edition .
Ref 4 . Donnell J.R. Geology and Oil - Shale Resources of the Green River Formation , First Symposium on Oil Shale , CSM , 1964
Ref. 5 Guthrie B. , Oil from Rock - The Gas-Combustion Process , First Symposium on Oil Shale , CSM , 1964
Ref. 6 Carver H. Conversion of Oil Shale to Refined Products , First Symposium on Oil Shale , CSM , 1964
Welcome
This site collects content related to FREE CULTURE , the book .
music videos
If you 're looking for information about FreeCulture.org , the student movement , click here .
An Elemental Fascination
Our interactive periodic table showcases 93 element samples from the collection of PopSci contributing editor Theodore Gray , who spent four years assembling and photographing them .
by
I wrote yesterday about the HDCP / HDMI technology that Hollywood wants to use to restrict the availability of very high - def TV content .
Today I want to go under the hood , explaining how the key part of HDCP , the handshake , works .
I ’ll leave out some mathematical niceties to simplify the explanation ; full details are in a 2001 paper by Crosby et al .
Suppose you connect an HDMI - compliant next - gen DVD player to an HDMI - compliant TV , and you try to play a disc .
Before sending its highest - res digital video to the TV , the player will insist on doing an HDCP handshake .
The purpose of the handshake is for the two devices to authenticate each other , that is , to verify that the other device is an authorized HDCP device , and to compute a secret key , known to both devices , that can be used to encrypt the video as it is passed across the HDMI cable .
Every new HDCP device is given two things : a secret vector , and an addition rule .
The secret vector is a sequence of 40 secret numbers that the device is not supposed to reveal to anybody .
The addition rule , which is not a secret , describes a way of adding up numbers selected from a vector .
Both the secret vector and the addition rule are assigned by HDCP ’s central authority .
( I like to imagine that the central authority occupies an undersea command center worthy of Doctor Evil , but it ’s probably just a nondescript office suite in Burbank . )
An example will help to make this clear .
In the example , we ’ll save space by pretending that the vectors have four secret numbers rather than forty , but the idea will be the same .
Let ’s say the central authority issues the following values :
secret vector addition rule Alice ( 26 , 19 , 12 , 7 ) [ 1 ] +[ 2 ]
Bob ( 13 , 13 , 22 , 5 ) [ 2 ] +[ 4 ]
Charlie ( 22 , 16 , 5 , 19 ) [ 1 ] +[ 3 ]
Diane ( 10 , 21 , 11 , ,14 ) [ 2 ] +[ 3 ]
Suppose Alice and Bob want to do a handshake .
Here ’s how it works .
First , Alice and Bob send each other their addition rules .
Then , Alice applies Bob ’s addition rule to her vector .
Bob ’s addition rule is “ [ 2 ] +[ 4 ] ” , which means that Alice should take the second and fourth elements of her secret vector and add them together .
Alice adds 19+7 , and gets 26 .
In the same way , Bob applies Alice ’s addition rule to his secret vector – he adds 13+13 , and gets 26 .
( In real life , the numbers are much bigger – about 17 digits . )
There are two things to notice about this process .
First , in order to do it , you need to know either Alice ’s or Bob ’s secret vector .
This means that Alice and Bob are the only ones who will know the result .
Second , Alice and Bob both got the same answer : 26 .
This was n’t a coincidence .
There ’s a special mathematical recipe that the central authority uses in generating the secret vectors to ensure that the two parties to any legitimate handshake will always get the same answer .
Now both Alice and Bob have a secret value – a secret key – that only they know .
They can use the key to authenticate each other , and to encrypt messages to each other .
This sounds pretty cool .
But it has a very large problem : if any four devices conspire , they can break the security of the system .
To see how , let ’s do an example .
Suppose that Alice , Bob , Charlie , and Diane conspire , and that the conspiracy wants to figure out the secret vector of some innocent victim , Ed. Ed ’s addition rule is “ [ 1 ] +[ 4 ] ” , and his secret vector is , of course , a secret .
The conspirators start out by saying that Ed ’s secret vector is ( x1 , x2 , x3 , x4 ) , where all of the x’s are unknown .
They want to figure out the values of the x’s – then they ’ll know Ed ’s secret vector .
Alice starts out by imagining a handshake with Ed .
In this imaginary handshake , Ed will apply Alice ’s addition rule ( [ 1 ] +[ 2 ] ) to his own secret vector , yielding x1+x2 .
Alice will apply Ed ’s addition rule to her own secret vector , yielding 26+7 , or 33 .
She knows that the two results will be equal , as in any handshake , which gives her the following equation :
x1 + x2 = 33
Bob , Charlie , and Diane each do the same thing , imagining a handshake with Ed , and computing Ed ’s result ( a sum of some of the x’s ) , and their own result ( a definite number ) , then setting the two results equal to each other .
This yields three more equations :
x2 + x4 = 18
x1 + x3 = 41
x2 + x3 = 24
That makes four equations in four unknowns .
Whipping out their algebra textbooks , the conspiracy solves the four equations , to determine that
x1 = 25
x2 = 8
x3 = 16
x4 = 10
Now they know Ed ’s secret vector , and can proceed to impersonate him at will .
They can do this to any person ( or device ) they like .
And of course Ed does n’t have to be a real person .
They can dream up an imaginary person ( or device ) and cook up a workable secret vector for it .
In short , they can use this basic method to do absolutely anything that the central authority can do .
In the real system , where the secret vectors have forty entries , not four , it takes a conspiracy of about forty devices , with known private vectors , to break HDCP completely .
But that is eminently doable , and it ’s only a matter of time before someone does it .
I ’ll talk next time about the implications of that fact .
[ Correction ( April 15 ) : I changed Diane ’s secret vector and addition rule to fix an error in the conspiracy - of - four example .
Thanks for Matt Mastracci for pointing out the problem . ]
Automatic License Plate Scanners
The Boston Transportation Department , among other duties , hands out parking tickets .
If a car has too many unpaid parking tickets , the BTD will lock a Denver Boot to one of the wheels , making the car unmovable .
Once the tickets are paid up , the BTD removes th boot .
The white SUV in this photo is owned by the Boston Transportation Department .
Its job is to locate cars that need to be booted .
The two video cameras on top of the vehicle are hooked up to a laptop computer running license plate scanning software .
The vehicle drives around the city scanning plates and comparing them with the database of unpaid parking tickets .
When a match is found , the BTD officers jump out and boot the offending car .
You can sort of see the boot on the front right wheel of the car behind the SUV in the photo .
This is the kind of thing I call “ wholesale surveillance , ” and I ’ve written about license plate scanners in that regard last year .
Technology is fundamentally changing the nature of surveillance .
Years ago , surveillance meant trench - coated detectives following people down streets .
It was laborious and expensive , and was only used when there was reasonable suspicion of a crime .
Modern surveillance is the policeman with a license - plate scanner , or even a remote license - plate scanner mounted on a traffic light and a policeman sitting at a computer in the station .
It ’s the same , but it ’s completely different .
It ’s wholesale surveillance .
And it disrupts the balance between the powers of the police and the rights of the people . [… ]
Like the license - plate scanners , the electronic footprints we leave everywhere can be automatically correlated with databases .
The data can be stored forever , allowing police to conduct surveillance backwards in time .
The effects of wholesale surveillance on privacy and civil liberties is profound ; but unfortunately , the debate often gets mischaracterized as a question about how much privacy we need to give up in order to be secure .
This is wrong .
It ’s obvious that we are all safer when the police can use all techniques at their disposal .
What we need are corresponding mechanisms to prevent abuse , and that do n’t place an unreasonable burden on the innocent .
Throughout our nation ’s history , we have maintained a balance between the necessary interests of police and the civil rights of the people .
The license plate itself is such a balance .
Imagine the debate from the early 1900s :
The police proposed affixing a plaque to every car with the car owner ’s name , so they could better track cars used in crimes .
Civil libertarians objected because that would reduce the privacy of every car owner .
So a compromise was reached : a random string of letter and numbers that the police could use to determine the car owner .
By deliberately designing a more cumbersome system , the needs of law enforcement and the public ’s right to privacy were balanced .
The search warrant process , as prescribed in the Fourth Amendment , is another balancing method .
So is the minimization requirement for telephone eavesdropping : the police must stop listening to a phone line if the suspect under investigation is not talking .
For license - plate scanners , one obvious protection is to require the police to erase data collected on innocent car owners immediately , and not save it .
The police have no legitimate need to collect data on everyone ’s driving habits .
Another is to allow car owners access to the information about them used in these automated searches , and to allow them to challenge inaccuracies .
The Boston Globe has written about this program .
Richard M. Smith , who took this photo , made a public request to the BTD last summer for the database of scanned license plate numbers that is being collected by this vehicle .
The BTD told him at the time that the database is not a public record , because the database is owned by AutoVu , the Canadian company that makes the license plate scanner software used in the vehicle .
This software is being “ loaned ” to the City of Boston as part of a “ beta ” test program .
Anyone doubt that AutoVu is going to sell this data to a company like ChoicePoint ?
Posted on October 7 , 2005 at 1:49 PM • 65 Comments
7 Idea Dumping Tips ( How To Manage Diarrhea of the Brain )
Idea dumping is a lot like brainstorming .
( I happen to be an expert on idea dumping because I just made the term up 5 minutes ago . ) .
Brainstorming to me is more of a process where you have a problem , and you try and find a solution to it , with the end goal in mind .
It ’s a great concept in theory –except it never happens that way for me .
It seems like whenever I really need a great idea , they are nowhere to be found .
Yet when I ’m doing something completely unrelated and seemingly unimportant , I ’ll be floating in ideas .
And when the mind finally does agree to cooperate and turn on , I wo n’t usually get just one good idea but a bunch of ’em at a time .
When it rains it pours , but it ’s a summer in Texas otherwise .
It ’s more like my brain all of the sudden opens up and throws out a flurry of ideas , a proverbial diarrhea of the brain .
Except with a good connotation , ( unlike most comparisons to bowel movements ) .
So I ’ve decided to call this process Idea Dumping to kind of fuse Brainstorming and , well … the bowel thing .
So if you have n’t already quit reading this post , here are my 7 tips for effective Idea Dumping .
1. ALWAYS carry paper
It almost always never fails .
I ’ll have a great idea , I ’ll think about it for a while , and never remember it again .
Why ?
I did n’t write it down .
Half of having a good idea is actually writing it down .
Writing it down gives you freedom to let your mind explore it even more , because it does n’t have to work on actually remembering it .
If paper is n’t your thing , use a voice recorder , your cell phone ’s voicemail , a pda , a rock and chisel … anything so that you can file it somewhere other than your brain .
2 . Be descriptive when writing it down
There have also been times where I ’ve written an idea down quickly , and then looked at it later and had no idea I was talking about .
The more descriptive you are , the better you can get back into your train of thinking when you wrote it down , like picking up where you left off .
Also , being more descriptive frees up your brain ’s resources to develop the idea even further .
3 . Plan for not planning on it
One problem with the way we typically brainstorm is this : it ’s unnatural .
We bang our heads against the wall while chanting “ think , think ” .
If you ’re like me , your brain does n’t like to be told what to do .
The second I sit down and “ make ” myself be creative , my brain goes on lockdown .
Nothing in , nothing out .
There ’s no such thing as forced creativity .
I ’ve found that the best way to allow your mind to form ideas is when I ’m doing something else .
You have to be ready at anytime to jot something down .
I know this point is a lot like # 1 , but I ca n’t stress it enough .
4 . Good environments matter
Allow yourself time to let your mind breathe and relax .
I ’ve found that the best times to have idea dumps are when you ’re in an aesthetically pleasing environment , or at least one where you ’re enjoying yourself .
A lot of times the ideas start coming when I ’m running , or talking a walk in nice weather .
You my find yourself partial to different situations .
It really does n’t matter , just so long as what you ’re doing somewhat automated and your mind can freely wander wherever it wants .
In short ; you ’re giving yourself time to daydream .
5 . Think big picture down
Ok , so I realize that there will be times when you ’ll actually have good ideas when you are forced into brainstorming on a certain problem .
A good strategy for finding solutions to a specific problem is always thinking top down .
In David Allen ’s Getting Things Done , you should always start with asking yourself why you ’re doing it .
Why are you trying to find the solution ?
Why is it important ?
It sounds mind - numbingly simple , but it really helps you focus your thinking on the problem , rather then going off on tangents .
6. Organize your thoughts
Once your ideas have stopped coming , be sure to organize them more coherently once you ’re done .
This will help you get a better handle on what you ’ve discovered , and you ’ll remember it better in the long run .
( If you were descriptive in writing down your ideas , you ’ll find it speeds this process up . )
Once you ’ve got them organized , break them into actionable steps ( another component to GTD ) .
You ’ll quickly realize what needs to be done next to implement your ideas , in what order , etc .
For me , notecards are my weapon of choice .
I always keep a few handy , and I organize my ideas into ideas .
If a project has more than one thought to it , I assign it it ’s own card .
If it ’s something simple like a future post title , I put it on the “ catch - all ” notecard that holds just quick ideas .
Later I ’ll take the day ’s cards and process them further .
7 . Know when to stop
Do n’t force the issue , man !
You could hurt yourself if you ’re not careful .
If the well of ideas has run dry , pumping it more wo n’t help .
Do n’t worry , there will be other times of plenty in terms of ideas .
Use what you you ’ve been given and start to implement them .
Sometimes you wo n’t get all you need in one dumping session , like this post .
Ironically enough , this article was a product of 3 idea dumps , spread over a couple of weeks .
Moore ’s
Law roughly guarantees that processor speed doubles every 18 months .
However , if we look at how modern processors achieve this , one realizes that this fact can not apply to all programs run .
Superscalar processors rely on heavy branch prediction and instruction pipelining — which is not given in everyone ’s favourite “ always too slow ” applications , namely language interpreters .
If you want to implement an language efficiently nowadays , you have two choices : write a compiler or write a fast interpreter .
Here , I assume the compiler approach consists of translating the source language code into assembly or C , before the program is run .
Everything else , I ’ll consider to be a fast interpreter — for example , a virtual machine , possibly compiling code just - in - time .
In both ways , there is no way around machine code generation — directly or indirectly .
It is just about impossible to write a architecture - independent ( read : ANSI C only ) , efficient interpreter .
Luckily , runtime code generation does not need to be difficult .
Imagine having a virtual machine , where you can extend the instruction set at runtime .
Or even write the instructions in a higher - level language !
The problem of fast interpreters is that their dispatch needs a lot of time .
Research suggests that there are two code threading schemes that are reasonable to implement on modern architectures : direct threaded code and subroutine threading .
( See Anton Ertl ’s explanations for details . )
Let me introduce you libsew , a library for generating subroutine - threaded code at runtime .
Here is a quick example :
#include < stdio.h > # include " libsew.h " void a ( ) { printf ( " A
" ) ; } void b( ) { printf ( " B
" ) ; } int main ( ) { sew_seam *s = sew_new ( ) ; sew_add_call ( s , a ) ; sew_add_call ( s , b ) ; sew_add_call ( s , a ) ; sew_finalize ( s ) ; sew_call ( s ) ; sew_free ( s ) ; return 0 ; }
As you probably can guess , this will output
A B A
Now , how does this work ?
Libsew internally generates this code :
0x100150 : mflr r0 0x100154 : stw r0,8( r1 ) 0x100158 : stwu r1,-64( r1 ) 0x10015 c : bla 0x2654 < a> 0x100160 : bla 0x2690 < b > 0x100164 : bla 0x2654 < a> 0x100168 : lwz r0,72( r1 ) 0x10016 c : addic r1,r1,64 0x100170 : mtlr r0 0x100174 : blr
The three bla ( Branch Absolute and Link ) call the subroutines mentioned , the rest sets up and removes the stack frame .
Usually , every opcode will just be a C function ; the machine state is kept in global variables .
Of course , code generation like this is highly architecture dependent — so far I only target PPC , because that ’s what I currently run .
However , a port of the code generator can be done on a rainy afternoon , it is pretty minimal and short .
If you make use of global register variables ( that ’s of course only reasonable with RISC ) , the actual code for the instructions generated by GCC is short and efficient .
It also will be easy to inline it , resulting in zero - overhead compared to usually generated code ( though you obviously wont make use of any optimization ) .
The big fun , however , is using that library and hooking it onto Ruby .
Thanks to Ruby / DL , this can be done without a single additional line in C . I even can define opcodes in pure Ruby !
require ' sew ' s = Sew :: Seam.new s.add_call { p " foo ! " } 5.times { s.add_call { p " bar ! " } } s.finalize s.call
Putting everything together , we can do Behavior - Driven Virtual Machine Design ( a.k.a. BDVMD ) using RSpec .
For example , have a look at this :
context " An empty stack " do specify " should raise on drop " do handler = Sew : : Seam [ lambda { raise Sew:: StackUnderflow } ] lambda { Sew : : Seam [ : stack_clear , handler.address , :stack_set_handler , :stack_drop].call }.should.raise
Sew :: StackUnderflow end end
Truly a powerful thing to have at your fingertips , no ?
More details and code to come soon .
How About a “ War on Taxes ” ?
David Cay Johnston , who does an incredible job covering U.S. tax policy and other business issues for the N.Y .
Times , today has an interesting article about how the I.R.S. is outsourcing the collection of back taxes to third parties — i.e. , collection agencies .
“ The private debt collection program , ” Johnston writes , “ is expected to bring in $ 1.4 billion over 10 years , with the collection agencies keeping about $ 330 million of that , or 22 to 24 cents on the dollar . ”
Maybe that seems like too big a cut to surrender .
And maybe people will be worried about the collection agencies having access to their financial records ( a concern that Johnston addresses in the Times article ) .
But what ’s most striking to me is that the I.R.S. knows who owes the money , and knows where to get it , but ca n’t afford to collect it itself because it is understaffed .
So it has to hire someone else to do it , at a stiff price .
The I.R.S. admits that external collection is far more expensive than internal collection .
Johnston cites current I.R.S. commissioner Mark Everson as saying so , as well as former commissioner Charles O. Rossotti , who told Congress that if the I.R.S. hired more agents , it “ could collect more than $ 9 billion each year and spend only $ 296 million — or about three cents on the dollar — to do so , ” according to Johnston .
Even if Rossotti was exaggerating by a factor of 5 , the U.S. Govt .
would still be getting a better deal by hiring more agents than by contracting to a third party that takes a 22 % cut .
But Congress , which oversees the I.R.S. budget , is famously reluctant to give the agency more resources to do its job .
We touched on this subject in a column we wrote a few months back .
Why is this the case ?
Maybe our congressmen are a bunch of history buffs so imbued with the spirit of our republic that they remember the Boston Tea Party too well and are scared of how the populace might revolt if they ramp up tax enforcement .
But keep in mind that we are talking about tax enforcement here , which is the I.R.S. ’s job , and not tax law , which is Congress ’s responsibility .
In other words , Congress is happy to set the tax rates that it does ; but it does n’t want to be seen as giving too much comfort to the bad cops who have to go out and collect those tax dollars .
So maybe they need to relabel their effort to get all the tax money that is owed .
Since Congress approves so much money for the War on Terror and the War on Drugs , maybe it ’s time for them to launch a War on Taxes — well , really , a War on Tax Cheats .
What if they could demonize the tax cheats so thoroughly , emphasizing that the “ tax gap ” ( the difference between taxes owed and money collected ) is about the size of the federal deficit : would that make it more politically palatable to give the I.R.S. the resources to collect the money that is owed ?
Maybe they could put pictures of tax cheats on milk cartons , on flyers at the post office , even on America ’s Most Wanted .
Would that do the trick ?
Would a properly managed War on Tax Cheats fix the problem ?
For now , we ’ll have to settle for the I.R.S. turning over the job to collection agencies who will collect some money but not nearly as much as is owed .
Which means a lot of money — a lot of tax money , that is , collected from the people who do n’t cheat — continuing to go down the drain .
[ Update : Paul Krugman ’s Monday Times column also addresses the I.R.S. plan ; here ’s the link , though it may only work if you subscribe . ]
What special secret can a lazy soul use to motivate him / herself ?
Here is how I do it .
Needless to say , my way is based on avoiding work .
Needless to say , my way emphasizes fun , joy , and ease .
And needless to say , my way “ plays ” like a charm .
The key for me is to start with a goal or vision for a project that inspires me from many different perspectives , each perspective addressing one or more of my passions .
I come up with my goals in a most lazy and relaxed manner .
In fact , relaxation is THE essential ingredient for this process to be successful .
No sweat , no effort , no strain , no pain , no pressure , no aggravation , no commute , no bosses , no deadlines , no distractions , no work ; just relaxing with a quiet desire to have a new goal .
Then I play with my imagination throughout the day , every day .
Major overhauls of an idea can be done effortlessly from a hammock .
A million starts and restarts can be done on a leisurely walk without generating a bead of perspiration .
Adjusting , tweaking and refining the goal can be done without any elbow grease .
An idea can be examined from many different angles without flexing any muscle fiber .
No money or effort or manpower ever need be committed in this entire process .
I simply enjoy the dreams and I do n’t get impatient and try to force anything .
The closer I get to creating a pretty good idea of what I want to accomplish , the more my juices flow .
When those juices reach a critical mass , the next step is automatic .
I then ca n’t wait to get started putting the pieces together .
The formula is simple :
When the goal is inspiring , the activity that is required to fulfill the goal becomes irresistible .
Now comes the coolest part .
In every case , I have found that both the vision of my goal and the activity needed to realize it naturally attract people who have sophisticated skills .
These folks just want to join the fun .
When you add creative , talented people to the mix , the project becomes even more fun and alluring , which attracts more talent which makes it more fun which attracts more people and so on .
The whole thing becomes a delicious cycle .
And before you know it , my “ job ” reverts back to where I started – relaxing .
And dreaming of ways to make it even bigger and better .
Only this time I do a lot of cheerleading too .
www.lazyway.net
( Essay was written in April , 2002 )
( If you were sent here to read about preferences , consider reading this cleaned - up extract instead - you 'll avoid a lot of dated discussion of 2002 GNOME .
I 'm leaving the original essay here but would n't suggest reading it all .
Click here for the extract . )
Many people have argued that free software has trouble creating good user interfaces .
Recently Matthew Thomas posted a nice example of this argument , which I found on Joel 's web site .
It was cool to find mpt's article , because it nicely articulates what 's gone wrong with many projects - including past versions of all the major Linux / UNIX desktops .
Aside from the list of bullet points there are a couple big - picture issues I consider significant about GNOME 2 , but do n't expect most outsiders have noticed yet .
Accessibility .
The enormous amount of work Sun has invested in GNOME 2 accessibility keeps us in the running for government use in the US and around the world .
Without this rather substantial body of work , free software would have been shut out of all government agencies .
( Not to mention that this work means we 're accessible to disabled users ! )
Importantly , Mozilla and OpenOffice are being integrated into the same accessibility architecture .
Most people do n't understand the significance of the accessibility initiative , even if they know about it .
Usability .
GNOME 2 has a long way to go .
But in my opinion , it has changed the slope of the trend line that Matthew Thomas ( and others before him ) have observed , and moreover GNOME 2 is ( in my opinion ) the first Linux / UNIX desktop release to round this corner .
I 'd been meaning to write about this second point for a while , and mpt's web log really inspired me to go ahead and do so .
So here are some random thoughts .
This is n't an organized essay .
What is " Good UI " ?
As far as I can tell from user posts on mailing lists and magazine / webzine reviews , to your average technically - inclined Internet resident a good UI means you have a lot of features , or alternatively that you have a lot of snazzy graphics , or alternatively that your UI is just like one that the commentator has used in the past .
I do n't have any genius definition of " good UI " ; I 'm not a UI expert .
But it clearly does n't mean snazzy graphics or featuritis .
In the end when I think good UI I think of MacOS classic : clean , simple , consistent , productive .
You focus on your work or play and the GUI is n't in the way .
OS X adds the cool graphics too , but those are n't the part that makes it a good UI , just the part that makes it fun .
Another element of good UI is attention to all the little details : good error dialogs , setting up keyboard navigation , dealing with relayout when a window gets resized , accessibility , internationalization .
People do n't usually know how to evaluate these aspects of a UI , unless they 're experienced UI designers or GUI programmers .
I suppose I have a Cliff 's notes approach to good UI and the real UI designers will laugh , but ah well .
It 's a decent heuristic . ;-)
So anyhow , when I talk about a good UI that 's a vague definition of what I mean .
Why free software can do good UI
Have a look at the list of reasons why mpt says that free software UIs come out badly :
Not enough UI designers .
Too many cooks .
Designers can't submit code patches .
Just copying Apple and Microsoft .
Volunteers only want to do cool stuff .
Volunteers do n't do boring details .
Maintainers cave in and add lame preferences rather than endure flamewars .
People want their own fifteen pixels of UI .
Workarounds are introduced during the devel process and never removed .
I do n't think most of these bullet points explain why free software user interfaces are traditionally sucky .
Here is how I explain it : consistently producing quality user interfaces is hard .
Let me explain that a bit more . ;-)
Take all of the above bullet points , and plug in " good software design " in place of " good UI . "
Observe that most of the bullet points still make sense , and in fact you 'll probably feel that you 've heard the arguments before .
Here are the ones that still apply :
Not enough software designers to get the work done .
Too many cooks spoil the code 's architecture .
Free software does n't innovate , just copies .
Volunteers only want to do cool stuff .
Volunteers do n't do boring details .
Maintainers cave in and add misguided features or code rather than endure flamewars .
People want their own features to point at .
Workarounds are introduced during the devel process and never removed .
People have argued that good software developers wo n't work for free , that too many cooks could screw up the design , that free software wo n't have innovative features , that no one will do the boring bugfixes , that lame workarounds will remain forever , etc. etc .
( Hmm - it 's even possible Bill Gates has been saying some of this stuff lately ... )
Guess what - many successful free software projects have overcome those issues on the software architecture side .
The tools to overcome them are n't anything mysterious : a culture of strong lead architects propagating good guidelines and insisting that things be done correctly ; good process and bug tracking ; commercial companies helping to bang out the boring issues ; finding good contributors and ignoring the crazy and incompetent ones .
Look at the Linux kernel , Apache , XFree86 , whatever - all these successful projects have dealt with these kinds of issues in the realm of code , and it can also be done in the realm of UI .
Good UI is no different from good software , you achieve quality results through quality process and quality people , working over time .
Only one of the bullet points in mpt's article is unique to UI :
Designers can't submit code patches .
While it has an impact , I do n't think this bullet point is very significant by itself .
For one thing , it is n't always true .
GNOME UI team leader Seth Nickell is famous for going into CVS and changing things . ;-)
For another , based on watching mailing lists and spam from the bug tracker , we have lots of developers who are willing to follow the human interface guidelines , fix UI bugs , and ask the UI team for suggestions .
Finally , we have UI designers who work for companies that contribute developers to GNOME , and they typically have the ability to guide the efforts of their company 's developers .
( It is true that UI designers have to spend more time convincing others to do things than they might have to in a proprietary because - I - said - so situation ; but that 's true of everyone involved in a free software project .
Some people have the personality for this , others do n't . )
If all these points apply to software development as well and free software projects seem to produce great software , why have they typically produced bad user interfaces ?
Again , consistently producing quality user interfaces is hard .
Specifically :
User interfaces are hard to learn how to do well , they are a legitimate area of expertise , and people have n't had even basic knowledge of this area .
User interface programming is hard to learn how to do well .
Answering questions for new GTK + developers , I 've watched hundreds of people go through the same stages ; such as the misguided " hmm , maybe I can autogenerate my GUI " stage , or the " oh , I finally understand what ' event - driven ' means ! " stage .
is hard to learn how to do well .
Answering questions for new GTK + developers , I 've watched hundreds of people go through the same stages ; such as the misguided " hmm , maybe I can autogenerate my GUI " stage , or the " oh , I finally understand what ' event - driven ' means ! " stage .
User interfaces are a lot of work even after you know how to do them well , and while companies have thrown hundreds of millions at the Linux kernel to move it from toy to enterprise - class , they have only started to take an interest in the GUI .
User interfaces competitive with Windows or OS X require a certain amount of technical infrastructure in order to develop them .
The availability of modern GUI toolkits such as GTK + 2 and Qt 3 ( rather than Xt or Tk ) is a big step forward .
We still have a long way to go on the systems level though . [ 1 ]
In short , our UI has sucked for the same reason version 1.0 of the Linux kernel sucked ; it 's not mature yet .
Creating a good UI is a matter of assembling and effectively organizing a sufficiently large and coordinated group of contributors for a sufficiently long amount of time .
In the GNOME Project , my feeling is that we 're getting some traction on the hard problem of creating a good interface .
Here are some of the specific reasons why :
We have several good UI designers with respected leadership roles .
I would attribute this in part to Sun and Ximian paying these designers for their time , and also in part to the influence of Eazel .
Developers have basic UI understanding , and can make an intelligent case about a UI question on mailing lists or in bugzilla .
Programmers have learned how to design and write GUI code effectively .
Our culture encourages good UI and discourages " crackrock features . "
No matter how nice your code , GNOME developers will not be impressed if the UI is junk .
UI bugs are tracked as bugs in bugzilla , they get fixed , and people who wo n't fix their UI are considered incompetent .
UI bugs are just like any other problem with the software ; they 're something to be addressed .
No rocket science here .
It 's just a matter of creating a critical mass of people who " get " what the right thing to do is , and having the resources to go ahead and do it .
Over perhaps the last year , especially the last 6 months , I 've gotten the sense that we 've turned the corner and finally could really tell you what 's involved in creating a GUI competitive with OS X or Windows XP .
And enough resources have fallen into place that we 're making noticeable progress on some of the more challenging aspects of doing so .
But there 's still a mountain of work remaining .
[ 1 ]
The kernel and underlying OS frequently do n't offer the features you 'd need to make a UI competitive with OS X or Windows XP - and most of the lower - level OS programmers , even the famous ones , do n't understand what a good UI is like , or how to write a GUI program , so are no help in fixing the situation .
Of course I 'm also no help in fixing the kernel , so I do n't mean to criticize , just to suggest that we need a few people with dual expertise , or better communication between projects .
Do commercial companies help or hurt ?
mpt claims in a brief aside that Eazel and Ximian have hurt the GNOME Project .
While Eazel and Ximian are the high - profile GNOME - specific companies , the OS vendors ( Red Hat , Sun , Hewlett - Packard , Mandrake , etc. ) have also been major players .
Here 's a brief tangent on my personal view , though you are free to consider me biased since I work at Red Hat .
Each influx of commercial developers has had some costs .
Several times we 've had a big mass of new full - time developers joining our existing development team .
As predicted by Fred Brooks , this has resulted in delays .
With each new group we 've had to enhance and formalize our process for doing things , and learn to scale the project to more participants ; and the new developers have taken a while to ramp up .
Moreover , you can certainly blame some bad UI on commercial factors ; for example , I think Nautilus would have been more integrated with the desktop if it had n't been Eazel 's flagship product , and it 's unfortunate that the company disappeared before reaching the optimization phase of the project .
( GNOME 2 has largely fixed both issues , btw . )
At the same time , Eazel introduced the culture of usability to GNOME , and the vast majority of Nautilus code is great stuff .
So the net contribution was positive .
IMO the companies that have gotten involved in GNOME have been crucial to our success .
Having contributors employed full - time is pretty nice .
It makes large / hard changes easier and helps get the boring bits of work done .
The process and infrastructure we 've developed to handle the large number of full - time developers working on GNOME caused short - term delays , but is proving invaluable .
An enormous number of bug fixes have originated from the operating system vendors .
UI designers and user testing .
Understanding of the problems that are encountered by " real world " customers .
While you can certainly point to screwups caused by people working for companies , I would n't blame mysterious corporate agendas ; most of them have been the kind of screwups you get when you move a software project from 5 people to 300 people .
Our largest screwups have been caused by interpersonal / individual issues , not companies ; and on the whole , GNOME is a lot more harmonious than the linux - kernel mailing list , or the legendary Perl flamefests .
The GNOME Foundation has been vital for taking advantage of commercial contributions , without letting them compromise the integrity of the project .
The Foundation bylaws clearly place all control in the hands of individual GNOME project members , and I expect most members to be volunteers pretty much forever .
Many other projects such as the Linux kernel and Apache have managed to benefit enormously from corporate contributions , without sacrificing technical goals , and IMO the same is happening for GNOME .
The Question of Preferences
The most - often - mentioned example of bad free software UI is " too many preferences . "
This is pretty much my pet peeve ; I was inspired to write a whole window manager on the premise that current window managers suffer from preferences overload .
A traditional free software application is configurable so that it has the union of all features anyone 's ever seen in any equivalent application on any other historical platform .
Or even configurable to be the union of all applications that anyone 's ever seen on any historical platform ( Emacs * cough * ) .
Does this hurt anything ?
Yes it does .
It turns out that preferences have a cost .
Of course , some preferences also have important benefits - and can be crucial interface features .
But each one has a price , and you have to carefully consider its value .
Many users and developers do n't understand this , and end up with a lot of cost and little value for their preferences dollar .
Too many preferences means you can't find any of them .
While I use X - Chat every day and am fundamentally friendly to it , I have to pick on it in this paragraph and hope the maintainer is good - natured .
It has so many preferences that there 's a whole menu just to hold all the different preferences dialogs .
Plus you can script it - in your choice of languages .
If I want to change something about X - Chat , it takes me eons just to find the right button .
Preferences really substantively damage QA and testing .
As someone who reads dozens of bug reports per day , and occasionally fixes a couple , I can tell you that it 's extremely common to find a bug that only happens if some certain combination of options are enabled .
As a software developer , I can tell you that preferences frequently do add quite a bit of code complexity as well ; some more than others , but even simple preferences can add a lot of complexity if there are 200 of them .
Upshot : more preferences means fewer real features , and more bugs .
Preferences make integration and good UI difficult .
One of the hardest lessons of GUI programming is that hard coding behavior can be the Right Thing .
Programmers are taught to make everything generic and infinitely flexible .
The problem is that the more generic and infinitely flexible your UI is , the more similar it is to a programming language .
Lisp is not a good user interface .
The point of a good program is to do something specific and do it well .
The thing is that each UI decision depends on countless other UI decisions .
A really simple example is keybindings .
On UNIX / Linux , it 's nearly impossible to pick reasonable default bindings for global desktop navigation because they all conflict with bindings that some app is using .
On Windows , the desktop navigation bindings are hardcoded , and no app uses them , because apps know for sure which bindings to avoid .
If your program has no idea what the rest of its environment ( or even all the parts of itself ) will be like , then it can't really have reasonable defaults .
It ca n't " just work . "
Basically , at some point the existence of preferences means that everyone must configure their desktop ; while ideally preferences are optional and the default behavior is reasonable without intervention .
Hard coding what can be hard coded has a lot of value .
Preferences keep people from fixing real bugs .
One of the more amusing functions in GNU Emacs is " menu- bar - enable - clipboard . "
Now that KDE is fixed , Emacs is basically the last remaining X application that insists on having cut and paste that does n't work correctly .
So they have this function " menu- bar - enable - clipboard " which basically means " please make my cut and paste work correctly . "
Why is this an option ?
I call this kind of preference the " unbreak my application please " button .
Just fix the app and be done with it .
Preferences can confuse many users .
Take the famous too many clocks example .
A significant number of test subjects were so surprised to have 5 choices of clock they could n't figure out how to add a clock to their panel .
This cost of preferences is invariably underestimated by us technical types .
The simplest issue : the preferences dialog is finite in size .
You can see many large apps struggling with where to put the things .
Mozilla has a zillion prefs that are n't even in the dialog .
So how do you decide which preferences to have ?
On hearing that preferences have a cost , some people get upset that we 're going to remove every preference , or that their favorite one is gone , or whatever .
Step back for a minute and think about the preferences problem .
For any program , there are literally an infinite number of possible preferences .
Each one has a cost .
A program with infinite preferences is therefore infinitely bad .
But clearly some preferences are genuinely useful and important .
So the UI developer 's job is to choose the useful subset of possible preferences .
An argument that " preferences are good " or " preferences are bad " is clearly unproductive .
Only an argument that draws a line between when a preference should exist , and when it should not , is a meaningful argument that impacts real - world developer decisions .
The traditional , de facto free software line between when a preference should exist and when it should n't is " a preference should exist if someone implements it or asks for it . "
No one is going to seriously defend this one though .
At least , no one who 's maintained an application and seen the sheer number of non-overlapping feature / preference requests you typically receive can take this one seriously .
Just as Linus rejects most kernel patches these days - but probably took more of them back in the Linux 0.1 era - as free software matures , more preferences will be rejected .
So how is the decision made ?
It 's a judgment call .
I try to go through some questions like these :
Ask questions to find out what 's really bugging someone who requests a preference .
What is the annoyance or inefficiency that prompted them to ask ?
Can said annoyance be made to go away for all users without requiring a preference ?
If so , just do that .
You may have to think about the big picture of the UI to figure out how to make it Just Work .
Is the annoyance or inefficiency really significant , or did it cost them 1 second doing something that users do once per week on average ?
If it 's just some trivial thing , then the extra feature or preference probably costs more than it 's worth , even if you can't make things Just Work .
Does any other OS have this feature or preference ?
I 'm all for innovation , but if no one else is doing something , you should think it through twice to be sure there is n't a reason they are n't doing it .
If you 're appropriately humble you 'll probably find that a lot of thought and user testing has gone into the currently popular platforms .
The main point is to set limits .
Figure you have some fixed number of slots for preferences ; is the preference in question worth " spending " one of those slots ?
Once spent it 's hard to free a slot up again .
Keep in mind that preferences have a cost , and demand that each preference have some real value .
Standing up to user pressure
As the maintainer of a free software package , it 's really tough to stand up to the continuous barrage of feature requests , many of which are " requests for preferences , " often accompanied by patches .
Reading dozens of GNOME and Red Hat bugs per day , I find that users ask for a preference by default .
If a user is using my app FooBar and they come to something they think is stupid - say the app deletes all their email - it 's extremely common that they 'll file a bug saying " there should be an option to disable eating all my email " instead of one saying " your craptastic junk - heap of an app ate my email . "
People just assume that FooBar was designed to eat your email , and humbly ask that you let them turn off this feature they do n't like .
Fight the temptation !
Admit the truth to your users - you 're a loser , FooBar just sucks and ate their email . ;-)
This feature should be fixed , not made optional .
I got a patch just today because the Metacity window shading animation is pretty lame - looking , and moreover grabs the X server which results in keeping all apps from repainting during the animation .
So the patch made the animation optional .
But that 's probably not the right fix .
As far as I currently know , the problem is that the animation sucks .
Based on that info , the preference would be a band - aid .
Linus had a good quote on this , found in LWN this week .
The argument on the linux - kernel list was apparently about whether some poorly - implemented IDE feature should have been removed prior to creating a new , better replacement implementation .
Linus says :
The fact is , many things are easier to fix afterwards .
Particularly because that 's the only time you 'll find people motivated enough to bother about it .
If you were to need to fix everything before - the - fact , nothing fundamental would ever get fixed , simply because the people who can fix one thing are not usually the same people who can fix another .
The annoying problem here is that sometimes you have to temporarily cause regressions in order to get things fixed .
For GNOME 2 for example , we wanted to fix the window list ( task bar ) applet ; under GNOME 1.4 , it has to be manually sized via preferences .
We wanted it to Just Work .
But it took a while to make it Just Work and we were flamed regularly during its period of brokenness , because we did n't get it quite right .
Most of those flames demanded re-adding all the manual sizing preferences .
But that would have been wrong .
( Now that the applet is mostly working , it may even make sense to add a " maximum size " preference as a useful feature . )
Stick to your guns and get it right .
What about advanced users ?
As Joel points out advanced users do not want a million useless preferences when things should just work on their own .
The point rings true in my experience .
Sometimes there may be a good reason for an Advanced tab or the like , but something as elaborate as the Nautilus 1 " user levels " concept is n't warranted IMO , and Advanced tabs must not be used as band - aids or excuses for stupid designs .
( The Desktop Preferences -> Advanced menu in current GNOME 2 betas is precisely such a band - aid , because the new control panels have n't fully replaced the functionality of the old ones ; this menu needs to die . )
Why all this obsession with preferences anyway ?
I find that if you 're hard - core disciplined about having good defaults that Just Work instead of lazily adding preferences , that naturally leads the overall UI in the right direction .
Issues come up via bugzilla or mailing lists or user testing , and you fix them in some way other than adding a preference , and this means you have to think about the right UI and the right way to fix problems .
Basically , using preferences as a band - aid is the root of much UI evil .
It 's a big deal and a big change in direction for free software that GNOME has figured this out .
But how can you claim GNOME 2 is good , it lacks < insert my favorite feature here >
Sure , it probably needs that feature . ;-)
File a bug report , add the Usability keyword .
I 'd be a moron to claim GNOME 2 is perfect .
But I do think that in many places it 's a clear departure from the traditional hundreds - of - preferences , as - many - buttons - as - will - fit , as - many - menu - items - as - will - fit , union - of - all - possible - features free software UIs . [ 2 ]
And when you file that bug report , consider asking that the defaults be fixed , instead of asking for a preference .
Web 2.0と呼ばれるユーザー主導のインターネットに出資しようと投資家たちは必死だが、これらの企業はそのような資金を必要としていないという。
英国で現地時間2月20日に開催された「 UK Technology Innovation ＆ Growth Forum」では、注目が高ま るWeb 2.0から利益を得る方法を模索するベンチャーキャピタル（VC）の姿が浮き彫りとなった。
Arma Partnersのパートナーであ るVictor Basta氏によると、今日のユーザー主導型インターネットサービスになんとか投資しようと、投資家は悪戦苦闘しているという。
「 VC はWeb 2.0に悩まされている。というのも、Web 2.0企業は最初から利益を出しているので、投資のしようがないのだ。VC側はWeb 2.0企業に投資しようと必死だが、企業側は投資を受ける必要がない」（Basta氏）
1990 年代のドットコムバブル時には、成功しそうな技術系新興企業にVCが多額の出資をするが、資金を受けた企業が大規模な黒字を出すのは数年後というものが典型的なパターンだった。
Web 2.0の人気を牽引しているのは、オンライン写真共有サイトのFlickr、お気に入りを共有できるサイトDel.icio.usなどのインターネットサービスだ。2005年、Yahooは1社あたり推定約3000万ドルを支払い、この2社を買収している。
「いくつかの取引を見ると、企業はまだ黎明期にある技術に惜しみない金額を支払っている」とBasta氏は述べる。同氏自身も、Web 2.0環境で成功する企業は、財務的な見通しが優良であるという考えを持つ。「これらの企業は、税引前利益40％を容易に達成できる」とBasta氏は述べた。
CSS Font and Text Style Wizard
Font font - family serif sans - serif cursive fantasy monospace custom : font - style normal italic oblique font - variant normal small - caps font - weight normal bold bolder lighter 100 200 500 600 900 font - size medium small large smaller larger custom :
Text line - height 100 % 200 % 80 % 2em 1em 0.8 em custom : word - spacing normal 1ex 1.5ex 2ex 5ex letter - spacing normal 0.1ex 0.3ex 0.75ex 1ex text - decoration none underline overline line - through blink text - transform none capitalize uppercase lowercase text - align left right center justify text - indent 0ex 1ex 2ex 5ex 10ex 10 % 20 %
Click the buttons above to change the text below " You are old , Father William , " the young man said ,
" And your hair has become very white ;
And yet you incessantly stand on your head --
Do you think , at your age , it is right ? " vertical - align baseline sub super top text - top middle bottom text - bottom Vertical - align applies only to the image and THIS CAPITALIZED TEXT relative to this line .
CSS and HTML Source Code
The box below shows example CSS and HTML source code .
The code will update dynamically as you press the buttons above .
You can select text in the box and then copy and paste the starter code .
CSS Font and Text Style Wizard
Welcome to the CSS Font and Text Style Wizard , brought to you due to the popularity of the HTML and CSS Table Border Style Wizard .
Use this wizard to experiment with font and text styles and generate sample CSS style source code .
This wizard uses dynamic HTML to change the style of the table in - situ , without loading another page .
It is cross - browser compatible with Firefox , Netscape , Internet Explorer , and other modern browsers .
Font and Text Style Notes
Font Family
For font - family , you can specify an actual font name , like " Courier New " in the custom field .
If the name has spaces , you should quote it , and it is case - insensitive .
You can specify a comma-separated list of font names , which will be used in the order listed when some are not found on the user 's system .
Designers should use the most desired font first , the most compatible font second - to - last , and the generic font family last and always .
For example , a common font - family value is " Verdana " , " Arial " , sans - serif .
Units
When you use specify lengths in CSS , you should generally use the relative units appropriate to the property .
For width properties , use ex units , which corresponds to the width of the lower - case ' x ' character .
For height properties , use em units , which corresponds to the height of the capital ' M ' character .
Relative units are preferred to absolute units , like px , pt , and in .
One reason for this is that one day , monitors may have more than 96 dots per inch , in which case your 14px font will look too small .
Other relative values like smaller , bolder , and percentages are also better choices than the absolute values .
There are always exceptions though .
Browser Support
This page does not work in Opera 8 or IE5 for the Mac .
The above properties and values are the most commonly supported , but among them are some that have very limited support ( e.g. the numeric font weights ) .
There are other properties , such as those defined in CSS2 , that are not shown here because they are not supported by any browsers yet .
I chose to link the property names to the IndexDotCSS CSS Property Index page because they have compatibility information .
They also have detailed explanations of how the properties work .
For example , when you specify percentage values for the text - indent property , the percentage is relative to the parent element , which in this case is a table cell .
Vertical Alignment
The vertical alignment property is a bit difficult to grasp , and is sometimes classified as a positioning property .
In general , it defines the relationship between the baseline of the element and the baseline of its parent .
For text , the baseline is an imaginary line on which the text sits .
Characters like lower - case ' j ' and ' q ' have decenders which extend below this line .
For images , the baseline is just the bottom of the image .
In the context of this wizard , this property is included to show superscript and subscript display with CSS .
Misc
To see text like one finds in comic books , set font - family to cursive , font - style to italic , font - variant to small - caps , font - weight to bold , and letter - spacing to 0.1ex .
The justify text - align option will not have any visible effect since none of the lines are wrapped .
And in case you were wondering , the sample text and image are from Alice 's Adventures in Wonderland .
This book by Lewis Carroll was made available by the efforts of Project Gutenberg .
For information on dynamically setting styles with Javascript and how the HTML toggle buttons work , please see the border style wizard ( first link below ) .
More CSS Wizards
Recommended Books
Bush : Criticism dovetails with ' enemy propaganda ' President Bush told a largely military audience Friday that critics who believe that fighting the war in Iraq has made America less safe are " buying into enemy propaganda . "
" You do not create terrorism by fighting terrorism , " Bush told a meeting of the Reserve Officers Association in Washington .
" If that ever becomes the mindset of the policymakers in Washington , it means we will go back to the old days of waiting to be attacked and then respond . "
He said the only way to fight terrorism " is to stay on the offense against the terrorists . "
Bush said some of his critics " selectively quoted " from recently leaked portions of a classified National Intelligence Estimate on the war against terrorism to suggest that extremists were using the Iraq war to recruit more terrorists .
The president declassified key judgments from the NIE after leaks appeared in The New York Times .
Bush said it was noteworthy that the leaks appeared in the run-up to the Nov. 7 midterm elections .
" Some of them selectively quoted from the document to make the case that by fighting terrorists , by fighting them in Iraq , we are making people less secure here at home , " Bush said .
" This argument buys into the enemy propaganda that the enemies attacked up because we are fighting them . "
" I want to remind American citizens , " he said to long applause , " that we were not in Iraq on Sept. 11 , 2001 . "
The president 's speech focused almost exclusively on fighting in Afghanistan and made only passing reference to the war in Iraq .
At one point , however , he said , " Iraq is not the reason the terrorists are at war against us . "
" Their war against us is because they hate the very thing that America stands for , " he said .
" And we stand for freedom . "
The president 's remarks were the latest in a series of speeches on the war against terrorism , which Bush calls the " ideological struggle of the 21st century " , that began shortly before the fifth anniversary of the Sept. 11 attacks .
On August 18 2006 a post was made at our website explaining how easy it was to access ( private ) comments and photos on Myspace profiles set to " private " .
This vulnerability in Myspace profiles had apparently been known by the " Myspace underground " for some time , but had not been addressed by the Myspace security people .
On August 26 , this vulnerability was made public on Digg.com and suddenly the whole world knew about it .
Once in the spotlight , Myspace band - aided this " view private profile " hole in less than 24 hours .
Note :
The information contained on this page is for educational purposes only .
It is hoped that by making such breaches in Myspace privacy / security public , Myspace administrators / programmers can correct the issue and prevent further lapses in security in the future .
Myspace.com has been notified of this security vulnerability .
Originally posted :
8/18/06 ; 12:05 PM
Posted by : xxrachelnic0lexx ;
Subject : comments on a private profile
ok .. here 's the Myspace code to view private comments :
http://editprofile.myspace.com/index.cfm?fuseaction=profile.safeDeleteComments&FriendID=
* insert their Myspace friendID at the end For pictures : http://collect.myspace.com/user/viewPicture.cfm?friendID=
** ** Put the friendID there
Looking for an exotic finish for your case mod or do you just want to pimp your ride ?
Look no further .
The folks at ALSA have developed some amazing paint finishes including one that has the ability to change colors temporarily when heat is applied .
Their Eclipse paint is a special spray - on basecoat that can change colors from black to white or blue to white .
Then additional color coats can be sprayed on over the top of the basecoat to create some super cool effects .
Check out this video of the paint in action :
ALSA offers a number of other cool finishes as well including a color - shifting chrome coat among others .
A sample pack of their paints and finishing materials can be ordered here .
If it was up to the RIAA , nobody would copy music anymore .
The funny thing is however , blank media and media recorders bring a lot of money to the RIAA .
You might probably not be aware of this , but every time somebody buys a cd-recorder in the US , $ 2 goes directly to the RIAA .
And even more striking , the RIAA cashes 2 % 3 % of the money spent on blank media like recordable cd’s .
The RIAA thanks the money to the Audio Home Recording Act ( link to riaa site ) .
The AHRA forces manufacturers and importers of digital audio recorders and blank media to pay royalties to the RIAA .
The RIAA is supposed to divide this money among artists ( 40 % ) and record labels ( 60 % ) .
However , the artists never see a penny .
Update : Note that the money does n’t go directly to the RIAA , but to the AARC .
However , the RIAA and AARC share office space , and some employees .
So for the sake of simplicity … ;) ( see comments )
But even if they did get their money , it would be a strange construction .
The AHRA dates back to 1992 , a time where blank media ( cd , minidisk , dat ) were mostly used to copy music .
Today , 16 years later , people use these disks for other ( read personal ) uses .
700 MB is not what it used to be if you know what I mean .
And this puts the AHRA in a whole other light .
Because , even if you buy a couple of cd’s to backup some of your documents , or to store your holiday pictures , you ’re paying 2 % to the RIAA .
A friend of mine recently produced a cd full of educational movies and info about the AIDS problems in Africa .
He spent hours making the CD , and distributed 1000 copies for free , to make school children aware of these problems .
Guess what ?
The RIAA collected 2 % ….
Some careful readers pointed out that the law only affect blank music CDR ’s so the latter reasoning is incorrect .
But still , it ’s strange that the RIAA or AARC collect money , but forbid us to copy music on the other hand .
Sounds like a double standard to me .
And indeed , this bill was supposed to give consumers the legal right to copy music for non-commercial use .
AnonEmouse found some interesting quotes in the congressional record of the floor discussion for the “ audio home recording act ” .
( Mr. MOORHEAD )
Mr. Speaker , H.R. 3204 would make it clear that noncommercial taping of music by consumers is not a violation of copyright law .
The debate over home taping of records goes back to 1970 when Congress first extended copyright protection for records but this legislation will end the 22 - year - old debate and make it clear that home taping does not constitute copyright infringement .
â€ ¦
I am not aware of any opposition to this bill .
It has the support of industry , the Copyright Office , the consumers and the administration .
I urge your support .
( Mr. HUGHES )
H.R. 3204 removes the legal cloud over home copying of prerecorded music in the most proconsumer way possible :
It gives consumers a complete exemption for noncommercial home copying of both digital and analog music , even though the royalty obligations under the bill apply only to digitally formatted music .
No longer will consumers be branded copyright pirates for making a tape for their car or for their children .
( Mrs. COLLINS )
This compromise solution was reached through difficult negotiations by a coalition of the recording industry ; songwriters and music publishers ; electronics industry and groups that want consumers to continue to enjoy the benefits of private home taping .
There are three basic provisions of the legislation .
First , it guarantees consumers the legal right to make analog or digital copies of musical recordings for noncommercial use .
Also it prohibits lawsuits being brought against those that manufacture , import , or distribute a digital or analog audio recorder or medium .
Revolt of the fairly rich
Today 's lower upper class is seething about the ultrawealthy .
( Fortune Magazine ) --
Not long ago an investment banker worth millions told me that he was n't in his line of work for the money .
" If I was doing this for the money , " he said , with no trace of irony , " I 'd be at a hedge fund . "
What to say ?
Only on a small plot of real estate in lower Manhattan at the dawn of the 21st century could such a statement be remotely fathomable .
That it is suggests how debauched our ruling class has become .
The widening chasm between rich and poor may well threaten our democracy .
Yet if that banker 's lament staggers your brain as it did mine , you 're on your way to seeing why America 's income gap is arguably less likely to spark a retro fight between proletarians and capitalists than a war between what I call the " lower upper class " and the ultrarich .
Here 's my outlandish theory : that economic resentment at the bottom of the top 1 percent of America 's income distribution is the new wild card in public life .
Ordinary workers wo n't rise up against ultras because they take it as given that " the rich get richer . "
But the hopes and dreams of today 's educated class are based on the idea that market capitalism is a meritocracy .
The unreachable success of the superrich shreds those dreams .
" I 've seen it in my research , " says pollster Doug Schoen , who counsels Michael Bloomberg and Hillary Clinton , among others .
" If you look at the lower part of the upper class or the upper part of the upper middle class , there 's a great deal of frustration .
These are people who assumed that their hard work and conventional ' success ' would leave them with no worries .
It 's the type of rumbling that could lead to political volatility . "
Lower uppers are doctors , accountants , engineers , lawyers .
At companies they 're mostly executives above the rank of VP but below the CEO .
Their comrades include well - fed members of the media ( and even Fortune columnists who earn their living as consultants ) .
Lower uppers are professionals who by dint of schooling , hard work and luck are living better than 99 percent of the humans who have ever walked the planet .
They 're also people who can't help but notice how many folks with credentials like theirs are living in Gatsby - esque splendor they 'll never enjoy .
This stings .
If people no smarter or better than you are making ten or 50 or 100 million dollars in a single year while you 're working yourself ragged to earn a million or two - or , God forbid , $ 400,000 - then something must be wrong .
You can hear the fallout in conversations across the country .
A New York - based market research guru - a well - to - do fellow who 's built and sold his own firm - explodes in a rant about ultras bidding up real estate prices .
A family doctor in Los Angeles with two kids shakes his head that between tuition and donations , ultras have raised the ante for private school slots to the point where he can't get his kids enrolled .
A senior executive at a nationally known firm seethes at the idea of eliminating the estate tax ; it is an ultra conspiracy , in his view , a reprehensible giveaway to people whose outsized lucre bears little relation to hard work .
As one civic - minded lower - upper businessman told me , even his charity now feels insignificant :
When buyout kings plunk down $ 1 million for a youth or arts group , his $ 20,000 contribution does n't get him the right to co-chair a dinner , let alone a seat on the board .
There 's only so much of this a smart , vocal elite can take before the seams burst - and a bilious reaction against unmerited privilege starts oozing from every pore .
Especially when it 's clear to lower uppers that many ultras are reaping the rewards of rigged systems : CEOs who preside over tumbling stock prices , hedge fund managers who barely beat the market .
It may seem far - fetched to think a revolt against extreme inequality will be led by posh professionals .
But the conversations above suggest there 's a potent political opening for a " comeuppance agenda . "
Eliot Spitzer , an ultra by birth ( like F.D.R. ) , has shown the power of turning against the sleazy self - dealing of his class .
Once Spitzer 's crusades against greed sweep him into the New York governor 's mansion next month , imitators may follow .
Shame as a strategy to constrain avarice may come back into fashion .
Like I said , it 's just a theory .
It could be sour grapes .
But if I were in this for the money , I 'd bet there was something to it .
Matt Miller is a senior fellow at the Center for American Progress and the author of " The 2 % Solution : Fixing America 's Problems in Ways Liberals and Conservatives Can Love . "
25 Rules to Grow Rich By
MONEY Magazine 's
What it takes to be rich
Return of the bubble : IPOs behaving badly
Call it the not - Google syndrome :
For tech companies filing to go public lately , profitability is optional .
Investors beware .
Maybe we 're back in a tech bubble after all .
That 's the conclusion to be drawn , at least , from the quality of the technology companies that are filing to go public lately .
Of six prominent tech IPOs in registration right now - Vonage , Riverbed Technology , Clearwire , Alien , GoDaddy and DivX - just one , DivX , is profitable .
Perhaps because of high - quality IPOs from profitable companies like Google , Salesforce.com ( Research ) and Rackable Systems ( Research ) recently , we 've been seduced into thinking that the " old rules " apply again .
That is , it used to be that a company needed several quarters of profitable growth before it could qualify for an IPO - not because of government regulations but because investment banks supposedly would n't risk their reputations by bringing untested companies to the market .
The bankers threw out the rules in the late 1990s , happily muttering something about how if the ducks were quacking you had to feed them .
We all know how that ended .
While numerous immature companies are alive today because they managed to raise a boatload in bubble - era IPOs , their duped investors got creamed .
In the dreadful years after the bust , it was often said that companies would have to do things the old - fashioned way if they wanted to ask public investors for money again .
Judging from a raft of filings from companies hoping to go public in coming months , however , the " new " rules never went away .
Some of the IPO filings are like bad jokes being played on investors .
Vonage seems to be trying to see how much money it can lose before asking for an infusion from the public .
The company , which sells an Internet calling service , lost $ 28 million on operations in 2003 , $ 72 million in 2004 and $ 265 million last year .
It gets better .
Vonage spent $ 243 million in marketing expenses last year in order to generate $ 269 million in revenue .
That 's some business .
Oh , according to Vonage 's filing with the SEC , those marketing expenses do not " include the cost of certain customer acquisition activities , such as rebates and promotions , which are accounted for as an offset to revenues , or customer equipment subsidies , which are accounted for as direct cost of goods sold . "
Should you consider investing in the Vonage IPO , you might consider asking who is trying to play a joke on you .
Other than the company 's management , which saw fit to hire a CEO just before filing to go public , the major investors include four big private - equity and venture - capital firms : New Enterprise Associates , Meritech Capital , Bain Capital and 3i .
They 're the ones who will benefit if money - losing Vonage succeeds in selling its shares to the public .
They 've agree to hold onto their shares for six months following an IPO , a standard procedure .
The rest of the crop is n't much better .
Clearwire , a massive wireless adventure founded by industry pioneer Craig McCaw , hopes to raise $ 400 million to fund its network .
It 's a true show - me story .
Service revenue totaled $ 8 million last year .
The company spent $ 106 million on selling , general and administrative expenses , managing to rack up an operating loss of $ 127 million .
And it wants your money .
Alien Technology is an RFID company .
In its most recent fiscal year it recorded a whopping $ 13 million in product revenue .
Operating losses totaled $ 53 million , up from $ 27 million the year before .
But Alien 's ready to go public .
It hopes to snag as much as $ 138 million .
The details are similar for GoDaddy , the company that provides domain names , and Riverbed Technology , which makes equipment for something called wide - area data services .
It began shipping products two years ago .
Perhaps the best proof that Google ( Research ) is the exception to the rule that we 're stuck again in bad bubble behavior is that the only profitable company of the bunch , DivX , relies heavily on Google for its success .
DivX makes video compression - decompression software , commonly called a codec , and Google accounted for 15 % of the company 's revenues last year .
But it has other major customers .
What 's more , its revenues have been doubling yearly and DivX is profitable , making $ 3 million in operating profits last year on revenue of $ 27 million .
That 's certainly small compared to Vonage .
But which company would you rather own ?
------------------------------------------
Here come the big IPOs .
Read more .
Customers to get crack at Vonage IPO .
Click here .
Last week , Abbas Raza of 3 Quarks Daily posed a list of logic problems to the site ’s readers .
I ’d seen some of these problems before and I did n’t have the time to work through the unfamiliar ones , but my favorite was the very first question :
You are given two ropes and a lighter .
This is the only equipment you can use .
You are told that each of the two ropes has the following property : if you light one end of the rope , it will take exactly one hour to burn all the way to the other end .
But it does n’t have to burn at a uniform rate .
In other words , half the rope may burn in the first five minutes , and then the other half would take 55 minutes .
The rate at which the two ropes burn is not necessarily the same , so the second rope will also take an hour to burn from one end to the other , but may do it at some varying rate , which is not necessarily the same as the one for the first rope .
Now you are asked to measure a period of 45 minutes .
How will you do it ?
For those in the US , this is a little something to keep the conversation at the holiday dinner table interesting .
I ’ll post the answer here this weekend … good luck .
Update : Alright , here ’s the answer .
Light both ends of rope A and one end of rope B .
After 30 minutes , rope A will be completely burned up and there will be 30 minutes of rope B left .
Light the other end of rope B ; it will burn up in 15 minutes .
Total time elapsed since starting the ropes on fire : 45 minutes .
I 've been programming ( when I do program ) mainly in Perl for the last 10 years or so .
But I 've been itching to learn a new language for a while now , and the two near the top of the list are Ruby and Python .
I figure that Ruby would be easy to learn because of its similarity to Perl ( I 'm told ) .
But I also figure that Python would be easy to learn because of its simplicity .
And when it comes to webby stuff , I can use Rails with Ruby and Django with Python .
I 'm currently leaning toward Python and began doing so last week .
I started with Mark Pilgrim 's excellent Dive Into Python and made it thru the first 3 chapters pretty quickly .
So far it feels pretty good .
Before I really dive in , though , I 'm curious to hear what others think about the choice between these two languages .
( On a related note , you might also read Tim Bray 's On Ruby post , since he just started learning Ruby . )
Posted by jzawodn at July 31 , 2006 10:29 AM
Gruppendynamische Studie Zuchtmeister schlagen Schmarotzer
Niemand wird gern bestraft - und doch können wir ohne Strafe nicht sein .
Das zeigt eine psychologische Studie :
In Scharen liefen Probanden von einer straflosen Gruppe zu einer über , in der sie ihre Mitmenschen maßregeln konnten - obwohl sie das selbst etwas kostete .
EVERY
Apple product - launch is preceded by feverish speculation about what , exactly , Steve Jobs will have up his sleeve .
This week 's unveiling of a movie - download service was correctly predicted by many of the websites devoted to Apple - related trivia .
Oddly , however , the most talked - about product among Apple - watchers is one that the company has yet to admit even exists : an Apple mobile phone , or iPhone .
It is an obvious product for Apple , given the power of its brand , and the threat to the iPod posed by mobile phones with built - in music players .
So where is it ?
The problem for Apple is that mobile phones are not like iPods , but are sold in a completely different way .
People do not generally buy them in shops , but from mobile operators .
And they do not pay the full price of the handset , but get a subsidy from the operator in return for signing a service contract .
So if Apple sells iPhones as though they were iPods , they will be far more expensive than competing handsets .
The alternative is for Apple to sell iPhones through operators , as other handset - makers do .
But being reliant on operators , with their poor reputation for customer service , could damage Apple 's iconic brand .
A third option would be for Apple to deepen its partnership with Motorola , the second - largest handset - maker .
The two firms have already worked together to add Apple 's iTunes software to some of Motorola 's phones .
But it seems unlikely that Mr Jobs , a legendary perfectionist , would want to co-brand a handset with Motorola .
And any such phone would still have to be sold via operators , as Motorola 's are today .
There is another option : for Apple to set up as a mobile operator itself , by leasing network capacity from an existing operator .
This is known in the industry as a “ mobile virtual network operator ” , or MVNO .
It would give Apple complete control over sales , service , support and billing .
But it would be expensive and risky .
The MVNO launched this year by ESPN , a sports channel owned by Disney , has been a flop .
Yet perhaps Apple 's powerful brand would see it through .
For Apple 's fans , it could be a case of iPhone , therefore I am .
Oil & gas in the Caspian has a long history - indeed it is one of the earliest oil production regions in the world , with Baku a major oil center in the second half of the 19th century and beyond .
What makes the situation today interesting is the simultaneuous appearence of three things : ( i ) new reserves discovered offshore , ( ii ) the fact that , with the break up of the Soviet Union , the oil is located in ( new ) countries that are keen to have foreign investment and are now one of the few oil provinces around the world that still welcome Western oil majors , and ( iii ) these countries haveto the world markets .
" Caspian energy " actually covers 3 different things :
the oil production in the region developped under Soviet times , and connected to Russia by oil pipelines .
This concerns mostly Kazakhstan , Uzbekistan , and a very small volume of production from Azerbaijan .
That oil is usually produced by the national oil company created in each of these countries to pick up the Soviet assets in the sector , and sold to ( or through ) Russia on the basis of bilateral governmental agreements .
This sector is declining and is slowly being replaced by the third one below .
Transportation issues that go with it are more and more resolved through the negotiations ongoing in the third bullet below ;
production in the region developped under Soviet times , and connected to Russia by oil pipelines .
This concerns mostly Kazakhstan , Uzbekistan , and a very small volume of production from Azerbaijan .
That oil is usually produced by the national oil company created in each of these countries to pick up the Soviet assets in the sector , and sold to ( or through ) Russia on the basis of bilateral governmental agreements .
This sector is declining and is slowly being replaced by the third one below .
Transportation issues that go with it are more and more resolved through the negotiations ongoing in the third bullet below ; the gas production in the region developped under Soviet times , and also connected to Russia by ( gas ) pipelines .
This concerns mostly Turkmenistan and Uzbekistan .
That gas is almost exclusively produced by the national company , and also sold to ( or through ) Russia on the basis of bilateral governmental agreements .
In the absence of the third sector like for oil , Russia has absolute power over these countries and their gas production , because they have absolutely no other choice .
They would like to have other pipelines to export their production ( for instance going South to India or Pakistan via Afghanistan ) , and some people seem to tell them that this would be possible , but IT IS NOT .
I have written about this elsewhere , and will do so again in the comments if requested , but you need just remember one thing : the mooted pipelines through Afghanistan would be gas pipelines , not oil and they have no chance to being built for a very long time because nobody will pay for them .
production in the region developped under Soviet times , and also connected to Russia by ( gas ) pipelines .
This concerns mostly Turkmenistan and Uzbekistan .
That gas is almost exclusively produced by the national company , and also sold to ( or through ) Russia on the basis of bilateral governmental agreements .
In the absence of the third sector like for oil , Russia has absolute power over these countries and their gas production , because they have absolutely no other choice .
They would like to have other pipelines to export their production ( for instance going South to India or Pakistan via Afghanistan ) , and some people seem to tell them that this would be possible , but IT IS NOT .
I have written about this elsewhere , and will do so again in the comments if requested , but you need just remember one thing : the mooted pipelines through Afghanistan would be and they have no chance to being built for a very long time because nobody will pay for them .
the third and most interesting sector is the new investments being made by Western Oil Majors to develop recently discovered fields , mostly in the oil sector .
This is where most of our attention will focus , because that 's what most of the diplomacy of the past 15 years has been concerned about , with two main topics ( i ) how to make the investments to develop production , and ( ii ) how to get the hydrocarbons to the market once produced .
It is this new sector that has created the hype around the Caspian and its new reserves , because it is one of the few areas in the world where big fields have been discovered in recent years .
The excitement in big oil companies is real , because the province is probably the size of the North Sea AND it is accessible to them .
Being the size of the North Sea only ( say 30 billion barrels of oil ) , it will not change the oil balance of the world either - it will account at most for 3 - 5 % of world production at its peak , in 5 to 10 years .
I have some good news : Caspian oil is actually fairly simple to understand because there are only 5 hydrocarbon fields worth noting , and a couple of pipelines .
So here they are :
( picture from the US Energy Information Agency 's Caspian area brief ) ( table from EIA , same link as above )
(1) ACG ( formerly , AIOC )
That 's the big oil field just offshore of Baku in the Azerbaijan sector of the Caspian Sea .
It is currently the only field in Azerbaijan with proven oil reserves , despite massive exploration campaigns in the past 10 years .
It is currently being developed by a Western consortium led by BP ( which includes Unocal ( now Chevron ) , ExxonMobil as well as a number of other companies ) , under a contract signed in 1994 ( and which is public , you can download it here , along with a ton of other documents on the project ) .
It has an estimated 5 to 7 billion barrels of recoverable oil ( slightly less than what is hoped to be found in ANWR , to give you an idea ) .
It has been producing small volumes , about 100 to 150,000 b/d , since 1998 , which are exported by a small pipeline going to Georgia , the Baku Supsa ( the " WREP " in the map below ) .
They also have the right to use the Baku - Novorossisk pipeline going through Russia ( the " NREP " in the map below ) .
Big investments are underway to bring production to above 1,000,000 b/d in the next couple of years .
Whan I say big investment , I mean big : more than 15 billion dollars will have been spent by 2010 .
Most of that oil will use a new pipeline , the BTC ( see map above , and more detail below ) which was completed last year and has recently entered into operations .
And THAT'S IT for Azeri oil .
At least 20 PSAs were signed , each involving one or several exploration wells and all except Shah - Deniz , a gas field described below , ( ACG had been discovered a number of years earlier ) came out dry of with insignificant volumes of hydrocarbons and were abandoned .
This map , from 2003 , shows the whole sorry end to the Caspian oil boom of the 90s .
(2) Shah - Deniz
It 's a big mostly gas field offshore Azerbaijan .
Gas was not the best of news for the oil companies , as the markets are very , very far away .
The consortium is also led by BP ( with Total , Statoil of Norway , TPAO of Turkey and OIEC of Iran ) and it has managed to go ahead with the development of the project by signing a contract for the gas with Turkey ( although there are doubts about Turkey 's need for that gas ) .
BP has agreed to build a gas pipeline in parallel to the BTC oil pipeline to bring the gas to Turkey , as shown above , and they have a contract to sell that gas in Turkey ( I 'll write more about the " war to bring gas to Turkey " in another story ) .
They are now hoping to build new pipelines from Turkey to central Europe to be able to give more value to that gas .
That project is still in its early phase ( you can find more details by clicking on this link which refers to its codename : Nabucco ( pdf , 280 kb ) , which includes the map below ) but is backed by all the national governments involved and by Gaz de France , so it is likely to go ahead in the near future .
(3) Tengiz
A big onshore oil field in Kazakhstan - one of the biggest in the world , developped by a consortium led by Chevron ( and including ExxonMobil and Lukoil and ENI of Italy ) , with about 9 billion barrels of recoverable reserves ( another ANWR ) .
Although Chevron came in in 1993 , they have had a really hard time with that field , as they had no way to export the oil anywhere .
They have used amazing ingenuity to sell their oil ( including owning most of the railcars of the former Soviet Union during the 90s - about 9,000 , to sell their crude by rail , or sending barges all the way to Finland by the canals of Russia ) but this has seriously limited the production of the field .
Now that the CPC pipeline has been built ( see below ) , they are ramping up production , which is expected to reach 700,000 b/d in a few years .
It is the big field on the Eastern shore of the Caspian Sea ( inland ) on the map below , from Rigzone
(4) Kashagan
The biggest oil field to be discovered in the world in the past 30 years , it is in the North of the Caspian Sea , in the Kazakh sector ( as shown on the map above ) , and it is being developped by a consortium including all the big majors - ExxonMobil , Shell , Total , ConocoPhillips , ENI and Inpex , with ENI , the Italian group , as the operator ( Exxon did not want Shell , Shell did not want Exxon , and ENI was smarter than Total to be voted in ... ) ) .
BP and BG were initially in but sold their shares in recent years .
With 9 - 15 billion barrels of reserves ( exploration is not totally complete ) , it is yet another ANWR fully in control of BigOil , but it is very , VERY , challenging technically ( very high pressures , located in an areas which is at times seawater , ice , mud or any combination in between , and far away from any infrastructure of any kind in an area with a very tough climate ) and it will need to find export routes for its production ( a combination of CPC and BTC is likely to start with )
( See here for a larger version with full explanations
Note that BG have sold out of Kashagan and have updated the linked map since I copied it )
(5) Karachaganak
A big , mostly gas field in North Kazakhstan near the border with Russia , it is being developped by ENI , BG , Chevron and Lukoil .
As a gas field , it is heavily dependent on Russian gas monopoly Gazprom ( the gas is currently being processed at the nearby Orenburg Gazprom plant ) , but the consortium is strong enough to negotiate decent terms and to buld its own infrastructure .
As the field contains both gas and condensates ( i.e. good quality oil ) which have to be produced together , the consortium has initially focused on selling the oil on the world markets while handing over the gas at a low price to Gazprom .
The oil goes into the CPC pipeline .
They are currently building a gas processing plant in order to at least be able to produce oil without depending on Gazprom .
Pipelines
So this bring us to the pipelines .
I 'll focus here exclusively on the oil pipelines .
The gas side here requires a lot more detail and I 'll have a go in a later story .
There are a number of existing ones , most of which go through Russia and are thus considered by the oil majors - with reason - as unreliable .
They have thus made a lot of efforts to find new routes .
A simple solution would have been to ship oil to Northern Iran ( where Iran 's refineries are ) and swap it for Iranian oil produced in the south of the country .
This made good sense for Iran , which would not have needed to ship its own oil for the production in the South to its refineries in the North , but it is not possible under the current US sanctions regime ( ILSA ) .
This solution would be partial anyway as the capacity of the Iranian refineries is no more than 800,000 b/d and they would have needed significant investment to be able to use the Caspian crude qualities .
So with Russia and Iran out , this left only the Western ( and at a later point Eastern to China ) routes .
An additional problem is that of the Bosphorus , which already sees a significant volume of oil tanker traffic , which the Turkish authorities were keen to not see increase .
Bringing in an additional million barrel per day or two into the Black Sea ( on the coast of Georgia for instance ) would have created a real danger for Istanbul and this was thus strongly opposed .
Thus came to birth the BTC , which goes West from Azerbaijan , through Georgia , and then South through Turkey to the Mediterranean .
It was built by a consortium led , again , by BP ( which , interestingly , is different from either the ACG consortium and the Shah - Deniz consortium , something which had sometimes unexpected consequences - another story in waiting again ) .
You can find a massive quantity of information on the project starting from here , but the main thing to know is that it has a maximum capacity of 1,000,000 b/d , a good chunk of which will be filled by ACG oil to start with , and by all the liquids Shah - Deniz can produce .
It has cost close to 4 billion dollars to build , half of which was financed by international banks with the participation of the World Bank and the EBRD .
You 've probably heard nasty things about the project because it has been used as a target by a number of NGOs that absolutely want the World Bank to stop financing the energy sector , and they tried to show that such projects were tremendously damaging to the environment and to the local populations .
They 've put pressure on the World Bank , on the commercial banks and on the oil companies , thankfully to no avail ( this is not the topic here , but I do intend to write more about this and explain that " thankfully " .
In the meantime , you can go see the envirionmental reports on the BTC site linked to above , and otherwise google " Extractive Industries Review " or " Equator Principles " ) .
The other big pipeline in the region is the CPC ( Caspian Pipeline Consortium ) which , as you can see on the maps above , does go through Russia and does bring oil into the Black Sea .
It nevertheless has the particularity of being the only privately owned pipeline on the territory of Russia ( something that they really do n't like and are trying to undermine at every turn , especially these days as an extension is being discussed ) .
It was built ( and paid for ) by a consortium led by ChevronTexaco , and currently has a capacity of 450,000 b/d , due to be increased to 1,300,000 b/d .
It is used for oil from Tengiz and from Karachaganak .
So , what can be learnt from that ?
Western Oil Majors fully control the operations of the 5 major oil fields , so the region clearly falls in the sphere of influence of the " West " .
Chinese companies that tried to buy their way into Kashagan in 2005 were vetoed out by the other shareholders , despite massive - and very public - pressure from the Chinese government on Shell and others not to exercise their preemption rights .
Azerbaijan and Kazakhstan have made an explicit decision to welcome foreign investment and will be richly rewarded for it .
( Whether that money is wisely used is another issue , of course ) .
The revenues are split using a standard instrument , the PSA ( production sharing agreement ) , which allocates the oil produced first to repay the initial investments ( " cost oil " ) and then as profit ( " profit oil " ) .
Host countries get a growing share of the oil as the fields produce and as prices go up .
The marginal split usually gives more than 90 % to the host country .
Oil transit is also pretty much solved , with the CPC and now the BTC both in service .
These two pipelines bring significant new volumes of ( light , good quality ) oil into the Mediterranean oil markets and are enough to transport the expected oil volumes from the existing fields .
Oil majors have been smart enough to lead in parallel the investments in the upstream ( production ) and midstream ( transport ) and have thus been able to ramp up the production of their fields as fast as was possible under the circumstances ( it still took time - more than 10 years for both ACG and Tengiz , with the same expected for Kashagan ) .
Graph by JaP. " kb / j " = thousand barrels per day .
" Autres " = other
Gas is still an almost completely blank field for the Western oil majors .
They have not been really happy to find gas when they did , as it is a lot harder to manage ( infrastructure is a lot more important and more expensive ) and they have to face a much stronger adversary in Gazprom , the Russian monopoly , which controls both the existing infrastructure and the downstream markets in Europe .
( The outcome of the Nabucco project will be interesting thing to see , as it would create a new ( smallish ) competitor for Russian gas in Europe ) .
the Caspian oil will go entirely West for the next 10 years , but it is likely that the next route will go East to China .
China is making a lot of efforts , especially in Kazakhstan , to procure some oil , but with uneven results .
They have tried to buy out BG 's stake in Kashagan , but the other shareholders exercised their preemption rights despite strong Chinese pressure ( they threatened to kick Shell out of the Chinese refining business ) .
Nevertheless , there is a strong strategic rationale for it to happen eventually .
Again :
do n't be impressed by big numbers .
We 're talking close to 50 billion dollars of investments underway .
Which needed to be paid upfront before any significant volumes could be sold .
please , please be wary of what you read on this topic .
Too many people have other interests that you may not be familiar with and their public announcements should be taken with a grain of salt ; do n't believe that everything which is announced will happen ; do n't even believe that everything signed will happen .
It 's not because Halliburton is involved that it is necessarily a big plan to scam us off ( KBR , the Halliburton subsidiary , is one of the biggest contractors for big oil projects , and one of a few to be in the competition .
Please remember that they are paid by Exxon or ChevronTexaco and thus will not scam them like they seem to be able to do with the US government )
will happen .
It 's not because Halliburton is involved that it is necessarily a big plan to scam us off ( KBR , the Halliburton subsidiary , is one of the biggest contractors for big oil projects , and one of a few to be in the competition .
Please remember that they are paid by Exxon or ChevronTexaco and thus will not scam them like they seem to be able to do with the US government ) finally : do n't forget that people are going to these God-forsaken places to get the oil that YOU will be burning today , tomorrow and again .
Before blaming them for providing a valuable service , remember that they are providing that service ultimately to YOU .
There is a lot more to write on the topic ; I will write more in the future and would be pleased to provide more info in the comments at your request .
スパイスハム製 品 「 Spam」の商標権を保有す るHormel Foodsは、迷惑メールを指す言葉として使用される場合の「spam」について、欧州連合全体で通用する商標として登録しようとしたが、この試みは失敗に終わった。
Hormelは 、 「 迷惑メールの回避、差し止めサービス」および「コンピュータソフトウェアの作成および保守、特にネットワークサービスを組み合わせた技術コンサルタント、（ジャンクメールに関する）専門知識や技術サービスおよび技術コンサルティングサービスの提供」に言及する際に使用される商標として「spam」を登録しようとした。
Hormelは、欧州連合の下部組織である欧州共同体商標意匠庁（OHIM）に対する訴えのなかで、一般には「spam」という言葉が連想させるのは、ジャンクメールに関してではなく、「スパイシーハムの一種」である食品だ、と述べている。
しかし、OHIMはHormelの主張に同意せず、訴えを退けた。その根拠としてOHIMは、スパム問題への対処を目的とした製品がIT専門家を対象にしており、彼らがジャンクメールと肉製品を混同するとは思えない点を挙げている。また、Googleで「spam」という言葉を検索した場合、ヒット数はHormelの缶詰肉に比べてジャンクメールのスパムの方が多いことから、「spam」が迷惑メールを指す言葉としても一般的に認知されているとOHIMは認識した。
「問題となっているサービスの利用者にとって、『spam』という言葉の最も明白な意味は、缶詰スパイシーハムの商品名ではなく、『膨大な数のアドレス宛てに承諾なしに送られる、通常は商用目的の迷惑メール』であることは間違いない」とOHIMは裁定で述べている。
Hormelは、これまでも何度か、同社の製品名である「Spam」という言葉が一般に使用されるのを阻止しようと試みてきた。2004年には広告キャンペーンを実施し、2005年には英国高裁で「Spambuster」という名称を無効にしようとしたが、その時も失敗に終わった。
Flirting Tips for Women :
Make the first move !
95 % of men say they would love to be approached by a woman .
Unless she 's a fat chick .
Then it 's just awkward .
If you are not interested , be polite when rejecting a man !
" Get lost nerd ! " is not the way to say no .
Just like people , nerds have feelings too .
If you are not interested , make it clear and be polite .
If this person is not for you , they may have friend potential and who knows the benefits that can bring !
Most men are so thrilled at the prospect of " friend potential " that they 'll high - five their buds right there in the bar and do a celebratory dance called the " Friend Zone Shuffle " !
Separate Yourself from Your Friends !
Better yet , do n't have any friends to begin with !
But if you must , separate from them so that you are less intimidating .
No man wants approach you when you are " protected " by a herd of other women .
Especially if your friends are large , cud-chewing and work at the rodeo .
A Great Attitude is Contagious !
Just like that cold sore on your lip !
Act like you are happy and cheerful !
If you have to ... fake it !
( This is a skill that will serve you well in other areas of the relationship , too ! )
Do n't let him know you are really a pessimistic grouch who constantly complains about everything .
He 'll find that out soon enough !
You can reveal that once you have him addicted to having sex regularly .
Then you can put an end to that charade , too !
Carry Something to Get You Noticed !
If you want a man to approach you , be sure to wear or carry something that is eye - catching and noticeable to you ... a flirting prop .
A good book , funky earrings or an unusual hat are good flirting props .
A severed finger is n't ... unless the male attention you 're looking for is police questioning .
Give Clear Signals !
Men are notoriously bad at interpreting signals from women .
You may think that doing subtle things like playing with your hair or lightly touching his arm would give him the hint .
But men are not subtle creatures .
So be direct : Look him in the eye , smile , and squeeze your boobs while mouthing " I want you . "
If that does n't work , ask for his phone number .
Then get together with your girlfriends and call him , giggle , then quickly hang - up .
Do this about 14 times .
Check Your Voice !
Men prefer a soft soothing voice to a high - pitched squeal .
But more importantly , are you using your voice to complain about your co-workers or to tell him how much you admire the large size of his genitals ?
NOTE : Your voice can sound about as pleasant as fingernails on a chalkboard if you compliment his cockershnockel .
Ask him what he enjoys doing !
Men are much more activity - orientated whereas women like to talk about emotions .
You may enjoy connecting with friends , while he may enjoy doing your friends .
Be Interesting by being Interested
Cut down the talk about yourself .
For example , you may tell him your name .
Men can't stand this kind of incessant personal chatter .
If you must communicate a concept , take a cue from the deaf community : grunt and gesture at your vagina .
NOTE TO DEAF CHICKS : Just kidding !
NOTE TO HOT DEAF CHICKS : I would n't mind if you grunted at me , baby !
NOTE TO ANGRY HOT DEAF CHICKS : Hey !
That finger is NOT officially recognized as American Sign Language !
If you give out your number , give the genuine one !
Imagine what it must feel like plucking up the courage to dial a woman 's number only to find it is the local Chinese Carryout .
Unless you work in a Chinese Carryout .
In that case give him the number of another Chinese Carryout .
Be yourself !
Only better looking and less needy .
Actually , be more like your one hot friend .
Flirting Tips for Men :
Know what you want and what is reasonable to expect !
Some men flirt with women primarily to get sex .
You want to learn from these men .
Because it looks like you flirt primarily to go home alone and play computer games .
Make sure you 're clean !
It is a scientific fact that a woman 's sense of smell is much stronger than a man's .
For this reason it is vital that your wash yourself thoroughly and clench your butt cheeks together while in the 69 position .
Quick smell check :
Before leaving for your date , get naked and spread your legs in front of a fan .
If you are knocked out by the stink of your balls , it is best to shower upon regaining consciousness .
When you buy a woman a drink , that is all you are buying !
Do n't expect her to fall at your feet .
Unless you plan ahead !
Ask your doctor if Rohypnol is right for you !
Concentrate on the Conversation !
Most women want to know what kind of person they are going out with .
Please note that conversation does not typically emit from cleavage .
Give Genuine Compliments !
There 's nothing worse than someone giving out a load of B.S. lines , try something honest :
" You are in great shape !
It 's almost distracting me from that cratered round moon you call a face . "
" I bet you 're the friend with the personality , am I right ? "
" I am very attracted to your low self - esteem because I will totally be able to get away with treating you like crap . "
" Your outfit looks great !
I had no idea they made such nice clothes in plus sizes ! "
Keep your hands to yourself !
Be patient , Mr. Touchy .
You 've gone THIS long without touching a woman , what 's a few more days ?
If you ask for a phone number , be sure you want to use it !
If you do n't call the woman , at least have the common decency to graffiti her number in the men's room stall .
Keep Your Self - respect !
There 's only 1 thing on a woman 's mind ... cuddling .
Do n't cheapen yourself by providing this emotional and sort - of physical bond before you are ready .
Make her work for it and she will respect you .
Cuddle on the 1st date and you can assure yourself that she will treat you like a cuddle - buddy .
YOU may want something more , but she will only phone you when she wants a late - night cuddle - call .
Trust Your Instincts !
Remember that scene in Star Wars where Luke Skywalker is flying down the exhaust port of the Deathstar trying to blow it up with his Proton Torpedoes , when he hears Obi-Wan 's voice telling to use the Force and trust his instincts ?
Then he turns off his targeting computer and scores a direct hit !!
You do remember that ?
Because that perfectly illustrates why you can't get a date !
Now remember that girl who said " Get Lost Nerd ! " in the Flirting Tips for Women ?
Well , she still wants you to get lost .
Get Involved !
You 'll see lots of flyers at the gym for running groups , paint - ball weekends and white - water rafting .
Give them a try !
Most of the people participating in these activities are just like you – lonely , lonely dudes .
Be yourself !
GLOCOMセミナー 「 『仮想経済』の世界:仮想と現実の出会い 」に行ってきた。
会場は六本木ヒルズのふもとのGLOCOM研究所。最近六本木によく縁があるな。
山 口先生の講 演
まずは、駒澤大学グローバル・メディア・スタディーズ学部助教授の山口浩先生による講演「ゲーム内経済学 : 仮想と現実の出会う場所 」。
ゲーム内経済学というのはそのまま、ゲーム内の仮想世界で起きている経済現象に対する経済学的アプローチ。対象としてはMMORPGが典型的。アメリカでは" In - game Economics " という言葉がそこそこ出てきているけれども、日本では"
ゲーム内経済学"という言葉はまだほとんど使われていないとのこと。けれども、
やりとりをし、活動する一定のグループ
希少性のある資源の分配をめぐる人間の行動
という対象があるとき、そこで起きている現象を捉え、分析しようとする行為は確かに経済学と呼べるものである、と経済学の教科書的定義を引いて述べていた。
行為者たる " ヒ ト "
分配対象となる " モ ノ "
価値の基準、媒介、保存をする " カ ネ "
取引の成立する領域た る " バシ ョ "
満足の基 準(効用 )
交換の仕組み(市場 )
これらをそろえてい るMMORPGのようなゲーム内世界では、経済圏と呼べるものが成立するという。また、MMORPGが空間、人間関係、自己像(キャラクター、アバター)、商取引を有すること、一定の没入感をもたらしそれが世界であると認識されるモノであるとも指摘する。ゲームは「仮想世界」なのである。 特に 、Second Lifeなどでは運営サイドもこれを強調する。
MMORPG経済とは
ゲーム内の経済 はMMORPGにおいてこそ顕著である。多くのMMOPRGが商取引機能をゲームの重要な機能としてサポートしている。また、(GMによる)官制の市場ではなく、自然発生的に取引が行われる市場が存在している。モンスターのよく現れる場所に必要なアイテムを売りに来る商人が発生するなどもある。価格は需給に応じて決まる。MMORPGにおいては、その世界の現実とは異なる特徴から、その中の経済に関しても独特の性質が発生する。
MMORPGの経済にはいくつか、現在の現実の経済とは異なる特徴がある。(多くのゲームでは、)
狩猟採集による生産 土地所有がない 農耕はない モンスターを狩ることが富の源 それを加工する工業、取引する商業が存在する( NPCもしくはPC )
発達した通貨システム 基本的に通貨の偽造はなく、中世的世界観であっても極めて通貨の信頼性が高い
産業構造は前近代的 家内制手工 業
システムによる恣意的な部分を有する その内部で取引が閉じている 固定価格のアイテムがある
これらの結果として生じるのがMUDflationである。これは基本的にはinflationである。プレイヤーが限りなくプレイを続け、キャラクターが限りなくモンスターを倒し続けることにより経済圏内にリュ通する通貨は増え続ける。これによりインフレーションが発生する。
ただし、異なるのはアイテムの流通量も、特に入手の容易なアイテムほど増え続ける。これにより低レベルのアイテムは実質価格が下落する。また、一部のアイテムはNPCにより固定価格で販売されるため、インフレーションに伴い著しく実質価格が下落する。
このような状況をもたらすのは、MMORPGのルール上の問題による。
レベルアップにより急速に所得が増加する
遊んでいてレベルを上げる過程でどうしてもアイテムを取得してしまう。構造的に過剰生産である。
レベルや所得がモンスターを倒すというプレイ行為に伴ってしまう。
アイテムは基本的には壊れないので過少消費である
生活必需品の消費も必要ない ( 最近は壊れるルールもあるけれども )
通貨が運搬に便利なので過剰貯蓄になる マネーサプライを制御する方法もない
人々の能力が現実よりも急速に向上する(ドラゴンポール経済と呼んでいた)
能力差はプレイ時間に強く依存する。 知恵や技術による挽回や抑制が掛からないので、プレイ時間に応じて人々の能力がどうしても向上してしまう。
誰でも品質の心配なく生産活動に従事できる。過剰生産となる。
必ず換金できる。過剰生産となる。 拾ったリンゴでも売れる
最近では運営会社はこうした欠点をカバーするためにアイテム課金のような制度を取り入れ始めている。
また、ゲーム通貨と地域通貨の類似点も指摘された。
発行量を決めるのはプレイヤー 労働が通貨の発行をもたらす( アイテム取得 )
利子が存在しな い
合意したコミュニティのみで通用する
この結果として通貨は発行され続ける。一方、利子も融資もないのでマネーサプライの制御は不能。
これらの問題点はすべてゲームデザインからの要請である。
誰でも楽しめ る
飽きさせな い
システム上の負荷を小さくする
こうした目的から設定されているものであるが、それがゲーム内経済の混乱をもたらしている。
これを解消する方策として山口先生は次を挙げた。
農業政策 : モンスター出現率を下げたり、強さを引き上げたりすることで生産を減らす
公共事業 : NPC サービスの料金を引き上げる
労働政策 : レベル上げとアイテム獲得を分離する。職業選択の自由。固定給制、労働時間の制限
経済政策 : 生活必需品を導入する。アイテムの耐用年数や賞味期限を設定する。流行を発生させ、モデルチェンジ、古いアイテムの陳腐化を起こす。
移民政策 : 新しいユーザーを増やして一人あたりの量を薄める。古参ユーザーを新サーバーに誘導して経済の若返りを図る。
ガンホーにおける2006年の元社員によるゲーム内通貨「ゼニー」不正作成/転売事件においては、ゲーム内通貨が急増することでインフレが加速したが、次の対処によって収束が見られた。
不正流通ゼニーを回収することで全体量を減らす
消費型/期間限定型のアイテムを販売することでゼニーの消費を促進
アイテム流通量を増やして相対的に価値を下げ、アイテムの高値感をおさえる
リアルマネートレー ド( RMT ) とは現実の通貨によるアイテムやゲーム内通貨の取引。ほとんどのゲームではこれは禁止行為であるが絶えることはない。これを通じて現実の経済にゲーム内経済が相互作用する。
日本の市場規模は150億円前後、米国・韓国では1000億円以上。中国では50万人以上がRMTのためにゲーム内で労働している。
RMTは一種の貿易である。現実世界で高い収入を得られる人が、仮想世界で高い収入を得られる人からゲーム内の財産を買っている。これは比較優位に基づく貿易である。ただし、禁止行為であるためにもっぱら密貿易として行われている。
RMTの存在は現実通貨を使ってでもアイテムを手に入れたいほどゲーム内の財産が魅力的であることを意味する。
RMTを原動力として次のような現象が発生している
企業の発生。アメリカなどでは人を雇ってゲーム内で労働させる事例がある。
国外の労働者を使ったアウトソーシング、BOTを使った生産の自動化などが発生
貨幣流通量の増大 MUDflaton 現実-仮想の為替相場が下落
RMT は、必然であるという。
ゲーム内に経済が存在すること
キャラクター、生産活動、アイテム、通貨の設計
本人確認、セキュリティの仕組
現実通貨を使ってても欲しいほどゲームがおもしろいこと
これらの要因から必然的に発生するものであり、善し悪しは別として、禁止すればなくなるものではない。そこで、もし、RMTと共存するとしたらどうするか。
経済政策 : 需給バランスを動かす : 新アイテムの導入、NPC買い取り価格の弾力化 地下経済を地上化させる : 公営の市場を設ける。ソニーなどが行なっている
労働政策 : 能力アップに技や知恵、知的な対話を必要とする仕組みを導入。時間を掛ければ自動的にレベルが上がる仕組みを弾力化する 商人を免許制とする。
移民政策 : ここはよくわからなかった。
為替政策 : どうして も" Real Money " との取引が嫌だというなら、他のゲーム内通貨との間に外国為替を導入。仮想世界観で流通させる。
仮想経済と経済モデ ル
MMORPGのほか、ポイントプログラムにおけるポイントの経済、予測市場(ニュースの予測に対する先物市場)における仮想通貨など、様々な仮想経済がある。
これまでは労働時間はすべて現実世界に充てるほかなかったので、経済における予算制約は問題となっても時間制約は問題とならなかった。
仮想世界の台頭により、人々はどの世界にどれだけ時間を割り当てるのかという戦略判断を迫られている
何が労働であるかは世界により異なる MMORPGにおいてはモンスターを倒すことが労働である。
ネットオークションにおいては買い物をすることポイント取得というである。
買い物というより、その過程やポイントを得ることを楽しんでいるユーザーの存在
仮想世界は独自の法則があるので、現実世界の仕組みが最善とは限らない。
賃金の仕組み、通貨の特徴
仮想世界が社会活動の場となれば資源配分のルールを変更できる可能性がある NEETは現実世界では労働者でないが、仮想世界では生産に従事できることもある。
労働を楽しみめる時代 ?
オンラインゲームと社会システムの実験と実行
続いて、GLOCOM 主任研究員 鈴木健さんによる 「 オンラインゲームと社会システムの実験と実行」。
現実とゲームがリンクすることにより、ゲームが社会実験として機能する。いや、社会そのものを駆動するかもしれない。
現状把握
リアルとネットはしばしば対立的に描かれ、ネットは現実と異なるというイメージがある。しかし、世界は現実しかない。起きているのは新しいテクノロジーにより現実が変容する現象である。ネットワークがユビキタス化すると、ネット社会は意識する必要がないはずだ。自動車により変容した自動車世界こそが現実であり、今更自動車社会という言葉を意識しないように、いずれはネット社会という言葉も意識されなくなる。
ゲームというよりは仮想空間提供サービス。現実とのリンケージが高い。User数100万人を突破。年間100億円の売買が動く。3D仮想空間でオブジェクトをモデリング、プログラム可能な自由度がある。
すで にSecond Life内のビジネスに対するコンサルタントも出現している。また、世界で100人ほどがSecond Life上で生計を立てている。
Mozaic , Mozillaのころに似た熱狂がある。これから、3Dに対するブラウザのデファクトが出現するのではないか。
DELL , IBM がSecond Lifeで製品発表。ロイターが支局をおいてニュース配信
Secod Life API で仮想世界のイベントと現実世界のイベントを同期できる。仮想世界で人が訪ねてくると携帯が鳴ったり。
Amazon mechanical turks と連動させるなどの案。人間が得意な処理を市場に流して自動取引し、処理させる。GEETが出現する可能性。
認識の変 容
ネットオークションだってゲームとしての楽しみがあるけれども、3D空間のリアリティは大きい。物理空間との間に対応があるというのでは意味がない。そのものではなくてはならない。3Dの没入感。あとはヒューマンインターフェースの問題である。
Web 2.0は技術の変化ではなくユーザーの感覚の変化である。技術としては10年前にあったが、
一定のプライベートを晒すのが一般的な行為になった
ハンドルを付けて活動するのがそれほどオタッキーな行為ではなくなった
というところか らWeb 2.0が出現した
3Dは認知性における変化。
仮想世界経済の5つの段階
3d 仮想世界経済はリアルな経済とは関係ないお遊び
3d 仮想世界経済はリアルな経済に従属する ← いまこ こ
3d 仮想世界経済はリアルな経済と同じことが起こる。
3d 仮想世界経済は、仮想世界の法則を制御できるから、リアルの経済とは異なることが起こる。
3d 仮想世界経済は、仮想世界の法則を制御できるので、リアルの経済全体を変えてしまう。
これから、3D空間で実験をして、現実世界に連動・応用する例が出てくる。仮想世界は金融工学やオベレーションズリサーチの実験場へ。
投票システム : PageRank
市場システム : 予測市場
統治システ ム
貨幣システム : PICSY
鈴木さんによる実験。通常の決済貨幣( SECSY ) に対して伝播投資貨幣(
PICSY ) という。
PICSY においては
販売相手がより高い付加価値を生めば、その価値が販売元に還元される。
貢献度に応じて購買力を与える。
販売とは投資である。投資した相手が高い価値を生めば自分の購買力が増す
医者の例 。従来の経済では、病状を長引かせた方が儲かる。PICSY においては、医師の得る対価は病気の回復による患者の価値生産増大に比例する。早くなおした医師が儲かる。
実装上は、貢献度をフローと見なして、グラフの隣接行列固有ベクトルを求めれば良い。PageRankと同じである。
素朴なやり方ではP2Pな取引となって、グラフの組み合わせ数が爆発する。そこでカンパニーをつくる。組織は内部に富を更に分配。対組織の取引と見なせば爆発を抑えられる。
組織を仮想化。組織に入ってきたフローが蓄積されることなく、個人に分配される。究極の個人主義。
また、従来は自分の給与を上げれるには、会社という部分を最適化するしかなかった。社会に害をもたらしてでも会社の利益を上げた方が給与が上がりやすかったが、PICSYなら、社会の全体最適化をしたほうが儲かりやすい。
コミュニケーション力学を変える。
従来はお客様は神様だった。 → 売り手は商品/サービスを投資する
実際の買い手の効用はどうでもよかった。錯覚でも。 → 効用があった気分にさせてもだめ。効用をもたらさないと売り手の持っている通貨の価値が増えない。
まずはゲーム通貨として導入。
社内人事評価システムとして導入。評価の高い人からの評価は高くする。株式会社はてなでボーナスの査定に利用したが、あまりに酷であるという意見も。
community のpeer reviewに利 用
いずれは貨幣システムとして導入したい。300年後くらい掛かるか?
ゲーム内通貨として のPICSY
インフレの抑制 : マネーサプライの総計は人口に比例。
ゲームを続行させるインセンティブ : 初心者を狩るよりはサポートした方が自分に価値が伝播して自分が儲かる。初心者にゲームを継続するサポートに。
対談
質疑応答
説における労働、活動、仕事の定義は?
どこが新しい ? 選択肢が増えただけでは?
( 山口)伝統的経済学においては労働は楽しみではない。経済の目的を楽しみにおいた経済学はなかった。経済学の性格を変えるものになりうる?
( 鈴木 ) 認知上の問題は意外に重要。色一つで人の行動が変わる。ゲームという感覚を持ち込むことで変わる。
意図的か意図的でないか。働いているという感覚はないが結果的にお金が入ってくる場合。
ポイントは、普通はディスカウントととらえるはず。囲い込みの目的だったはず。じゃあ、共通化する動機は?
どこかで企業は気がつくのか? 流れができてしまって、降りられなくなるのか。そこにネットが関わるとどうなるか
( 山口 ) point 間 でaggregation が 始まると、ディスカウントとしては解釈できなくなる
( 鈴木 ) 他の業種に広げるのは囲い込みになる でも、同業種は囲い込みになる。認知的なものも含めて微妙な変換コストでカバーするだろう。
経済学におけるrational choiceはどうなってるの ?
認知的とか言っても、それは予測不可能では?
( 山口 ) 経済がrationalだけで動いていないのはみんな知っていたが、経済学者は見ないふりをしていた。いま、最後の砦が崩れようとしている。もはやirrationalを考えないといけない。
ゲーム内インフレはなぜまずい ?
山口 : ただのインフレなら問題ない( ハイパーインフレは別だが ) でも、一部の商品は固定価格だから、バランスが崩れる。
所有しているお金の価値が減るのでインセンティブが減る。ユーザーの不満要因にならないなら無問題だが、実際にはしばしば不満となっている。
楽しめる労働と言っても制度化されると、楽しみから離れていくのでは?
今は、新しく発見された労働だから、楽しめる層と均衡しているだけでは?
( 山口 ) 「 楽しい仕事は給料やすくても良いじゃないか」現状はむしろ逆。楽しくて、やすくても人が集まる職に高給を払うのは果たして合理的か?
ネットとリアルの決定的な違いは自動化の可能性。RMTとの共存は可能だけれども、BOTとの共存は可能か?
( 山口 )共存するとすれば、お助けBOTはあってもい。
人間的知性作業こそをゲームの中心にする?
感想
経済は素人なので質疑応答のやりとりは理解できない部分もあったけれども、講演は平易に話してくださったのでお二方ともわかりやすかった。
山 口先生に 「 はてなの換金停止は 円本位制の脱却と見ている のだが、今後そういうことは起きるか」と訊いたところ、「ポイントは潜在的には負債でもあるのであれはリスクを下げるという面もある。金本位制を廃したように、仮想経済が現実の経済から分離する現象もこれからも起きうる」という。
Meet Joe .
He ’s an amateur web developer who ’s just starting to receive a good feedback , a steady stream of traffic , and maybe even some revenue from his website .
So Joe decides to kick it up a notch and add a forum .
After all , everyone else is doing it — how hard can it be ?
So Joe downloads some bulletin board software and fancy skins to make his forums sexy , creates 20 topical sub - forums , and starts posting .
All he needs to do now is sit back and watch the membership grow .
Article Continues Below
Unfortunately , the members Joe expects never arrive .
He talks a few friends into signing up and posting here and there , but his friends do n’t share his enthusiasm for the website , so they do n’t stick around .
Joe ’s prepared for a party … and nobody showed up .
What happened ?
Are you really ready to start a new community ?
# section2
Before you create a forum , you should ask yourself a series of questions :
Why would people join your community ?
Does your existing site attract a decent amount of traffic ?
Do other established forums exist that aim to attract your target user base ?
Do you have a niche audience in mind , or is your planned forum subject too broad to compete against other communities ?
How will a forum add to your current website ?
You may find that you have more homework to do — or that there ’s probably not enough interest to make a new forum worth your while .
If you decide that you are ready to get started , keep in mind that online communities are quite a bit like college parties — you ’re inviting a bunch of people you do n’t know into your house , and that poses a series of challenges .
If you do n’t get the word out , you may be the only one there .
If you ’re not properly organized , your guests will leave before they ’ve even introduced themselves .
If you do n’t keep on top of the party , inebriated strangers may bully your invited guests or trash your living room .
Laying groundwork #section3
Most popular , active forums are associated with great websites — websites that include a great deal of unique content and are updated on a regular basis .
Link lists or news feeds from other sites wo n’t cut it , so if you do n’t already have a thriving website with compelling , original content , you ’ll need spend the time required to create one .
To get back to our party metaphor , think of this part as the foundation of your healthy social life : becoming an interesting person and making some friends .
Now that I ’ve scared off all the folks who want a “ website in a box , ” we can get started building a forum .
Get ready and send invitations #section4
If you want to throw a great party , you probably want to get your house ready and then let everyone know about it .
So to begin with , make your forum look decent .
You do n’t need to make it spotless , but you should match the style sheets with those on your static pages so that the look and feel is consistent with the rest of your website .
Then you need to invite your guests .
Obviously you ’ll want to link to your forum from your website , but you can also include your URL in your signature on other forums , register with search engines , advertise on other websites geared toward your niche , and work with fellow webmasters on link swaps .
As long as you ’re not employing sneaky or spammy tactics to lure visitors , you should be in good shape .
Last but not least , do n’t make it difficult for your guests to join — or just peek in at — the forums .
When you ’re getting your party started , you ca n’t really be choosy .
Waive the cover charge ( intensive registration ) , and let everyone in .
You can always be a little more selective once your site is established .
Make sure potential guests can look in through the windows and see enough lively discussion to inspire them to sign up .
So now it ’s a few minutes before the big event , and now you ’re just hoping your publicity has worked , and that people will come .
All you can do now is wait , right ?
Actually , no .
The most important part is just about to begin .
It ’s party time #section5
Start small and nurture your early conversations .
This means creating one forum and calling it something like “ Joe ’s General Discussion . ”
Start a few threads pertaining to your website ’s niche , and then recruit a few friends to help you get started .
Be a good host .
Make everyone feel welcome , introduce people , and make sure that current conversations do n’t go stagnant and that new conversations are started to keep things fresh .
The first 50 or so members will set the tone for your whole forum , so make sure it ’s headed in the right direction .
For example , if you want your site to be family - friendly , now is the time to gently remind folks what ’s okay and what is n’t .
Speaking of which , it ’s a good idea to write clear , simple ground rules for community participation and post them where everyone can see them .
You probably do n’t need dozens of rules , but a few basics will help maintain order later on .
If nothing happens right away , remember that forums take time .
It may take months , even years , before you start noticing real growth .
Do n’t give up if you ’re not seeing immediate responses .
The hardest members to get are the first ones — after all , they ’re investing in an unproven commodity .
You might even entice your initial users in to joining by offering incentives like free products or discounts .
Keep those precious initial users interested by responding to their comments and threads .
Make them feel like they are royalty .
If your promotional tactics have paid off , next thing you know , your initial user base of friends will expand to include people you do n’t know .
Your new members will begin start their own topics or adding to discussions .
Do n’t expand your forum too rapidly or scare off your new guests .
Add politely to conversations , but do n’t be so overbearing that you look desperate .
When the time is right , split the forum into two sections — but do n’t split it until you ’re certain both forums will continue to thrive .
The worst thing you can do to a promising new forum is go off and create 20 different sub - forums , only to watch them all die .
If you have enough posts to support a total of a dozen topics , it looks far healthier if they are all on one forum , rather than distributed one each across twelve sub-forums .
People do n’t want to come to a dead forum .
They want to join a party !
Be ready to improvise #section6
After your basic forum has started to grow , you may notice some trends in new topics .
Perhaps you own a gaming forum and see that many discussions are veering toward role - playing games .
Even if you did n’t anticipate this trend , create a sub - forum for this niche .
If you notice quite a few folks starting threads on Playstation 3 , create a sub - forum for this as well .
Follow all the threads on the forum and continue this process as needed — but only when you know the split will not kill both .
As long as both potential new topics have enough posts in them to look intriguing to new guests , it ’s generally safe to split a topic .
Keep your partygoers from leaving #section7
If you want your forum to thrive , you ’ll want to retain your existing members and keep them active .
After all , a large membership base is useless if they never really post .
Keep your community thriving by adding .
Constantly monitor your competition and provide incentives for users to stick around .
This often means adding more content on your static site , but is n’t limited to this .
Your members can start to help you out in this department .
Once you have a solid user base , you may ask some of your most active members to contribute an article for the main section of your site .
If you ’re lucky , your website can continue to grow without much more than simple maintenance .
Do n’t let things get out of hand #section8
With growth comes problems .
Hackers , spammers , and other troublemakers can make a party a little less fun to attend .
If you do n’t control them , your guests may longer feel welcome .
As your forum grows , recruit a few co-moderators , review your ground rules , and make sure everyone — including your moderators — complies with your guidelines .
Not sure where to get moderators ?
Watch your forum closely as it grows past the first 20 – 30 members , and you ’ll notice some posters are more mature ( and active ) than others .
Bring those users on board by giving them moderation privileges .
In addition to help you with moderation , these members are likely to post even more , because they feel a sense of ownership .
If your community continues to grow , you might consider peer moderation systems ( karma points and their ilk ) to keep the signal to noise ratio high .
Dealing with party crashers #section9
It ’s only a matter of time before someone starts making a fool of themselves on your forum .
which can make you look like a bad host if you are n’t ready .
Do n’t be afraid to make an example out of some of the folks who test your limits ; if you do n’t , your members will start to push the envelope over what is and is not allowed .
Do n’t forget to keep up with the times : download the latest bulletin - board software patches regularly so no troublemakers sneak in through a back door .
Enjoy your own party # section10
A vibrant online community can engage your members and pull them into a deeper relationship with your site by giving them a place to vent , share information , and get to know one another .
With good planning and some help from your friends , you ’ll be able to create a thriving online community that comes back regularly — and people will thank you for throwing such a great party .
The Halloween horror hit Saw III was released on Friday in the UK
One woman was taken to hospital and two other adults were treated by medics after fainting in Stevenage , Herts .
And in a separate case , a man collapsed at a cinema in Peterborough , Cambs , " due to the film 's content " .
" If you know you 're squeamish , do n't go , " warned a spokesman for the East of England Ambulance Service .
" This is obviously a blood - thirsty film .
Some of the scenes are fairly horrific , " Matthew Ware told the BBC News website .
All the incidents took place on Friday evening , one of the busiest nights of the week for emergency crews , he added .
Discharged
" Taking three ambulances out of the system on a Friday could potentially be a problem " , said Mr Ware .
A woman in her 20s was discharged from the Lister Hospital in Stevenage after being treated .
And the two other cinemagoers - who had been at the town 's Cineworld complex - were left " in the care of friends and relatives " without needing to be taken to hospital .
A man aged 34 fainted at the Showcase in Peterborough , Mr Ware said .
There was also a case of a 22 - year - old woman passing out at Cineworld in Cambridge on Friday , but it had not been confirmed that she was watching Saw III , he added .
The slasher movie is currently number one in both the UK and North American box office charts .
A spokeswoman for the Cineworld chain said they did not wish to comment .
Another Space Adventures client , Greg Olsen , who made millions in the sale of his camera technology company , Sensors Unlimited , is preparing to visit the space station for several days in October .
Of the Moon trip , he said , " It 's certainly intriguing , and it 's something I 'd like to do . "
Will he buy a ticket , then ?
" One trip at a time , " he replied .
The trip seems feasible , said Dr. John M. Logsdon , director of the Space Policy Institute at George Washington University .
" As a nontechnical person , I do n't see any technical showstoppers , " Dr. Logsdon said , " if people are crazy enough to do it . "
And , he added , it would make " a lot of money for the Russians . "
Christopher C. Kraft , a former director of the Johnson Space Center , said his feelings about the enterprise were mixed .
" I think it would be a fantastic journey , " he said .
" I could see why , if I had the price of the ticket and could use the money that way , that it would be tempting to go . "
But Mr. Kraft added that the flight would be cramped and probably extremely unpleasant .
With three people in a small Soyuz craft for an extended trip , he said , " I imagine that you could endure that , but , man , it would be tough . "
Mr. Anderson of Space Adventures said the craft had about as much room as a sport utility vehicle .
" Will it be cramped ?
Yes , " he said .
" But will it be doable ?
Yes . "
He noted that the Gemini capsule was smaller than the Soyuz , and that the astronauts James A. Lovell and Frank Borman orbited the Earth for 14 days in the Gemini 7 mission in 1965 .
But Mr. Kraft , who was the flight director for that mission , recalled that Mr. Lovell and Mr. Borman were miserable .
They complained bitterly that the trip was like " 14 days in a men 's room , " and Mr. Kraft said that he had to talk them out of ending the mission early .
" They wanted to get out of there , " he said .
Wannabe American satrap brings peace to the Middle East after spending a few hours with Adobe Illustrator .
A gigantic new Kurdish state ... a huge Arab Shia state composed of chunks of Iraq , Iran , and Saudi Arabia .. a massively expanded Greater Jordan ... a Greater Lebanon eating up all of Syria 's coast ... Pakistan cut in half ... The only spot he seems to show any reticence whatsoever about carving up is Israel / Palestine ... notice the status of the Occupied Territories is still ' undetermined ' . ;-) Hmmm ... maybe that evil aspartame stuff really is an incredibly dangerous neurotoxin ... say comparable to Roman lead plumbing ... ;-)
Time Warner seems to have lost patience with the dropping AOL subscriber count , and is making some radical changes to squeeze some profit out of the wilting subsidiary before it 's too late .
AOL management has announced that services that currently cost money will become free - for - all as early as next month .
That includes the flagship e-mail service , content now inside AOL 's subscriber - only walled garden , and even 5GB online storage account through AOL's Xdrive.com service .
The subscription revenues are expected to be replaced by advertising income , which makes the Google partnership all the more vital to AOL 's future success .
Its European dial - up access operations are on the sales block , with a buyer already lined up for the French service and several interested parties swarming around the British and German ones .
That planned divestiture , along with plain old job cuts inside and outside American borders , will remove 5,000 jobs from AOL 's current headcount of 19,000 workers , all over the next six months .
A lot of people still use AOL out of old habit , or because they just do n't know any other way to access the Internet ( Hi , Joseph and Leslie , hope the kids are OK ) .
Now that the same features will be available for free , traffic on AOL 's online properties should increase even as the subscriber count falls through the floor , and online advertising is certainly serving Google quite well .
Still , this remains a dangerous gambit , and places a lot of trust in AOL 's ability to remain relevant even as MySpace , YouTube , Google , and others push into territories where AOL has traditionally ruled the roost .
Now we 'll see how much of that dominance was due to user inertia , and how much was truly based on great products .
This document has been restructured and relocated .
You may wish to look at the new table of contents to find the section you want .
Alternatively , if you would like to be automatically redirected to the passage you were looking for , please turn on javascript and try again .
By Lucy Williamson
BBC News , Sidaorjo
Many villagers ran to escape the encroaching hot mud
The sludge , which has been spewing out of the ground for more than two months , is the result of a crack in a gas drilling project near Indonesia 's second city , Surabaya .
In a sign of growing international concern over the disaster , Indonesian President Susilo Bambang Yudhoyono visited the affected area of Sidoarjo last week .
But despite attempts by government officials and the company involved , so far nothing has managed to contain the flow .
The mud now covers around 20 square kilometres .
Climb up a bank of earth at the outskirts of Shiring village and you see it - a lake of mud stretching for kilometre after kilometre .
A white plume of gas marks the spot where it all started ; a crack in the earth spewing out steaming sludge .
You can count the rooftops floating in the mud - marking out factories and schools .
And you can imagine the things you cannot see - the homes , the rice paddies , the furniture , the toys : whole lives buried ; their owners gone , forced to run for higher ground .
' We just ran '
A few kilometres away is what one local person described as a " people market " .
It is a newly - built market place , not yet filled with shops .
Residents have been living in temporary shelters
Instead , most of the 9,000 people who have been displaced by the mud have ended up here , two families to one shop space .
Motorbikes , clothes and plastic buckets mark the entrance to these new homes - a handful of belongings saved from the sludge .
" We were all scared , " Suliati said , as she squatted outside one shop entrance , cooking up a dinner of fried eggs .
" The mud came up to our chest , we did n't have time to save anything from the house , we just ran to save our lives . "
Behind her , her mother nodded agreement .
" Now we have to help each other just to survive , " she said .
" Some people borrow things from us , we borrow other things from them .
We have food , but we 've lost everything else - our homes , our jobs .
It 's a hard time for us . "
Investigation
The gas company running the operation in Sidaorjo , Lapindo Brantas , has been criticised for risking the safety of local people , and allegations of corruption have soured the air .
A criminal investigation has begun into several senior executives from Lapindo and one of their sub-contractors , but the company 's lawyer , Masieyh Sutiono , said the company had done nothing wrong .
Instead , he said , the company was acting responsibly towards local people by offering food and compensation to those affected by the mud , while everyone waited for the results of the police investigation .
Lapindo has been trying to stem the flow of mud , but so far nothing has worked .
The government , meanwhile , is anxious to keep the sludge away from any other residential areas and is putting its faith in a series of dams meant to contain the growing lake .
Trucks carrying mounds of earth to build these new barriers rumble up and down the main highway every couple of minutes , but the dams have not always proved effective .
Earlier this month , a barrier around the village of Shiring burst , causing a second wave of refugees .
Many of those living close to the affected area have now moved out , and many of those that remain are thinking about it .
Rainy season
Mrs Jhoni watches the trucks come and go from the front of her button and bead shop on the main highway .
She is reluctant to leave her customers , and her shop - which is raised a little way above the main road - will give her some protection .
Dams are being built to hold back the mud
But she says she is playing a " wait and see " game and is ready to run whenever things take a turn for the worse .
Officials are working against the clock .
The rainy season is due to begin in two months ' time , and plans to build a stronger , concrete barrier to cope with it have not convinced many of the experts brought in to find a solution .
Heavy rainfall , they say , could break through the barrier in a matter of hours .
Pressure from environmentalists has so far prevented them from using the river to divert tonnes of sludge into the Java Sea .
But with pressure also growing from the local population to find a solution , and with the volume of mud increasing and the rainy season approaching , everyone in Sidoarjo is having to think hard about who will pay the cost of fixing the problem .
By Martha J. SpearAs a high school library media specialist , I have the good fortune to work with , and sometimes mold , young people .
If I ’m lucky , I discover what they do after graduation .
Recently , one of my favorite students informed me that after earning her humanities degree at a tiny private college , she was pursuing a master ’s degree in museum studies .
Congratulating her , I jokingly said , “ Watch it .
That ’s awfully close to a master ’s in library science . ”
She laughed and said : “ Oh , I ’d never do that . ”
Somewhat defensively , I replied , “ You could do worse .
” Long after this brief conversation , I wondered , where did we , as librarians , go wrong ?
Why is there such an onus on this profession that a bright , young person would choose , well , any career but that of librarianship ?
I think it ’s sad .
Librarianship has much to offer , and I think we can do better in promoting our profession .
Toward that end , I present my top 10 reasons for being a librarian .
The single thing I like most about being a librarian is that it is , to paraphrase Ernest Hemingway , a moveable feast .
I ’ve been employed in academic , public , and school libraries in three different states working in technical services , public services , and classrooms , and with street people , teachers , and young adults .
I ’ve booked psychics , mountain climbers , rock musicians , and landlords for programs .
I teach , catalog , book talk , advise , troubleshoot , demonstrate , connect s-video cables , and shelve . . . in a single day .
What I learned in my master ’s program bears little resemblance to what I actually do in my library today .
Yet the principles remain ; and , through conferences , professional literature , and networking , I hold my own .
If the new books do n’t excite me , the new technologies do .
Most importantly , I learn something new every day .
Can you say that about working at McDonald ’s ?
Okay , so I may be stretching things a bit here .
I married a librarian .
( For the record , we met in a singles group ; but our paths would have crossed in local library circles eventually , I ’m sure . )
My case may be extreme , but there is help for the lovelorn in libraries — either in the wonderfully interesting colleagues we meet ( see reasons # 2 and # 7 ) or in the books and resources libraries offer .
I did not enter library school with a soaring heart .
I viewed the degree less as graduate school and more as a kind of trade school .
Truthfully , my library education was both .
I learned the value of organization ( I finally put my massive LP collection in alpha order by artist ) .
I discovered the importance of collection development , equal access to resources , and intellectual freedom .
I learned valuable skills in locating and using information that serve me to this day , whether I ’m helping a patron write a paper on the Manhattan Project or figuring out the best place to buy a teakettle online .
Librarians host good conferences .
I love the hustle and bustle of ALA Annual Conference .
I consider my state conference to be so necessary to my mental well - being that I often pay my own way .
My husband ’s ties to the International Federation of Library Associations and Institutions have taken us to Nairobi , Tokyo , Havana , and elsewhere .
What better way to see the world and recharge the professional batteries ?
Conferences are blessed events , and you do n’t have them when you work at Wal - Mart .
Librarians may not get great pay , but we do generally receive liberal vacations .
As a public librarian , I got six weeks off and as a school media specialist . . . well , you do n’t want to know .
In any case , these vacations have made it possible to visit Paris in April , and Beijing in September , and to spend five weeks in Scandinavia .
And when I ’m not away , I ’ve been able to repaper my hallway , paint the family room , and put in a patio .
As a child , when people asked me what I wanted to be , I have to admit I never said librarian .
Although I used and enjoyed libraries , it never occurred to me to actually work in one .
I did say that I wanted a job with scope .
I am not sure what I meant by that then , but I know what it means now .
It means being a librarian .
I do dozens of different things every day .
It ’s not a desk job and it ’s anything but routine .
When you work with people , changing technologies , and always - new resources , how could it be ?
As a librarian , I will never get rich .
However , it has allowed me to live alone ( without the dreaded roommate ) , subsist moderately well , and be employable in different markets and in changing times .
I have made a living as a librarian for almost 25 years and I ’m not on the street corner selling pencils yet .
I ’ve worked in factories where I stood on my feet for nine hours .
I ’ve worked in kitchens where I came home smelling of puréed peas .
I was a production typist where my derrière routinely fell asleep , not to mention my brain .
In a library , you ’re clean , dry , warm , and working with people who are generally happy to be there .
I love librarians ( also see # 9 ) .
We are intelligent , cultured , well - read people who bring a myriad of skills , backgrounds , and interests to the job .
Most of my fellow librarians , myself included , have degrees and / or work experience in other areas .
I backed into librarianship after realizing that a major in English and German was n’t going to make me very employable .
I know librarians who are former attorneys , truck drivers , teachers , and factory workers .
This experiential , intellectual potpourri makes for an interesting mix .
And librarians are readers .
The conversational gambit “ Read any good books lately ? ” is met with a din around librarians .
As librarians , we support the freedom to read .
We champion the right to access information for all people , regardless of race , creed , religion , or economic disposition .
Libraries are everyone ’s university .
These may feel like clich‚s to the converted ( us librarians ) , but they remain truisms .
In sum , I feel very much like Evelyn Carnahan in the film The Mummy .
To refresh your memory , our leading lady is in the midst of describing — and defending — what she does for a living to a roguish male .
They have been drinking .
Evelyn : Look , I — I may not be an explorer , or an adventurer , or a treasure - seeker , or a gunfighter , Mr. O’Connell !
But I am proud of what I am !
Rick O’Connell :
And what is that ?
Evelyn : I am . . . a librarian !
I could n’t have said it better .
This article originally appeared in American Libraries , October 2002 , p. 54–55
Quick guide to somewhat advanced JavaScript
tour of some OO features
by
last update : February 21st 2006
Other versions Portuguese BR Vietnamese Vietnamese ( .doc ) Spanish Other versions ( volunteers needed )
Hey , I did n't know you could do that
If you are a web developer and come from the same place I do , you have probably used quite a bit of Javascript in your web pages , mostly as UI glue .
Until recently , I knew that Javascript had more OO capabilities than I was employing , but I did not feel like I needed to use it .
As the browsers started to support a more standardized featureset of Javascript and the DOM , it became viable to write more complex and functional code to run on the client .
That helped giving birth to the AJAX phenomena .
As we all start to learn what it takes to write our cool , AJAXy applications , we begin to notice that the Javascript we used to know was really just the tip of the iceberg .
We now see Javascript being used beyond simple UI chores like input validation and frivolous tasks .
The client code now is far more advanced and layered , much like a real desktop application or a client - server thick client .
We see class libraries , object models , hierarchies , patterns , and many other things we got used to seeing only in our server side code .
In many ways we can say that suddenly the bar was put much higher than before .
It takes a heck lot more proficiency to write applications for the new Web and we need to improve our Javascript skills to get there .
If you try to use many of the existing javascript libraries out there , like Prototype.js , Scriptaculous , moo.fx , Behaviour , YUI , etc you 'll eventually find yourself reading the JS code .
Maybe because you want to learn how they do it , or because you 're curious , or more often because that 's the only way to figure out how to use it , since documentation does not seem to be highly regarded with most of these libraries .
Whatever the case may be , you 'll face some kung - fu techniques that will be foreign and scary if you have n't seen anything like that before .
The purpose of this article is precisely explaining the types of constructs that many of us are not familiar with yet .
Related article
Prototype.js documentation
JSON
JavaScript Object Notation ( JSON , ) is one of the new buzzwords popping up around the AJAX theme .
JSON , simply put , is a way of declaring an object in javascript .
Let 's see an example right away and note how simple it is .
var my Pet = { color : ' black ' , leg_count : 4 , communicate : function ( repeatCount ) { for ( i=0 ; i< repeatCount ;i++ ) alert ( ' Woof ! ' ) ; } } ;
Let 's just add little bit of formatting so it looks more like how we usually find out there :
var my Pet = { color : ' black ' , legCount : 4 , communicate : function ( repeatCount ) { for ( i=0 ; i< repeatCount ;i++ ) alert ( ' Woof ! ' ) ; } } ;
Here we created a reference to an object with two properties ( color and legCount ) and a method ( communicate . )
It 's not hard to figure out that the object 's properties and methods are defined as a comma delimited list .
Each of the members is introduced by name , followed by a colon and then the definition .
In the case of the properties it is easy , just the value of the property .
The methods are created by assigning an anonymous function , which we will explain better down the line .
After the object is created and assigned to the variable myPet , we can use it like this :
alert ( 'my pet is ' + my Pet.color ) ; alert ( 'my pet has ' + myPet.legCount + ' legs ' ) ; // if you are a dog , bark three times : myPet.communicate(3 ) ;
You 'll see JSON used pretty much everywhere in JS these days , as arguments to functions , as return values , as server responses ( in strings , ) etc .
What do you mean ?
A function is an object too ?
This might be unusual to developers that never thought about that , but in JS a function is also an object .
You can pass a function around as an argument to another function just like you can pass a string , for example .
This is extensively used and very handy .
Take a look at this example .
We will pass functions to another function that will use them .
var myDog = { bark : function ( ) { alert ( ' Woof ! ' ) ; } } ; var myCat = { meow : function ( ) { alert ( ' I am a lazy cat .
I will not meow for you . ' ) ; } } ; function annoyThePet( petFunction ) { // let 's see what the pet can do petFunction ( ) ; } //annoy the dog : annoyThePet( myDog.bark ) ; //annoy the cat : annoyThePet( myCat.meow ) ;
Note that we pass myDog.bark and myCat. meow without appending parenthesis " ( ) " to them .
If we did that we would not be passing the function , rather we would be calling the method and passing the return value , undefined in both cases here .
If you want to make my lazy cat start barking , you can easily do this :
myCat.meow = myDog.bark ; myCat.meow ( ) ; //alerts ' Woof ! '
Arrays , items , and object members
The following two lines in JS do the same thing .
var a = new Array ( ) ; var b = [ ] ;
As I 'm sure you already know , you can access individual items in an array by using the square brackets :
var a = [ ' first ' , ' second ' , ' third ' ] ; var v1 = a [ 0 ] ; var v2 = a [ 1 ] ; var v3 = a [ 2 ] ;
But you are not limited to numeric indices .
You can access any member of a JS object by using its name , in a string .
The following example creates an empty object , and adds some members by name .
var obj = {} ; //new , empty object obj [ ' member_1 ' ] = ' this is the member value ' ; obj [ ' flag_2 ' ] = false ; obj [ ' some_function ' ] = function ( ) { /* do something */} ;
The above code has identical effect as the following :
var obj = { member_1 :' this is the member value ' , flag_2 : false , some_function : function ( ) {
/* do something */} } ;
In many ways , the idea of objects and associative arrays ( hashes ) in JS are not distinguishable .
The following two lines do the same thing too .
obj.some_function ( ) ; obj [ ' some_function ' ] ( ) ;
Enough about objects , may I have a class now ?
The great power of object oriented programming languages derive from the use of classes .
I do n't think I would have guessed how classes are defined in JS using only my previous experience with other languages .
Judge for yourself .
// defining a new class called Pet var Pet = function ( petName , age ) { this .
name = petName ; this .age = age ; } ; // let 's create an object of the Pet class var famousDog = new Pet ( ' Santa\'s Little Helper ' , 15 ) ; alert ( ' This pet is called ' + famousDog.name ) ;
Let 's see how we add a method to our Pet class .
We will be using the prototype property that all classes have .
The prototype property is an object that contains all the members that any object of the class will have .
Even the default JS classes , like String , Number , and Date have a prototype object that we can add methods and properties to and make any object of that class automatically gain this new member .
Pet.prototype.communicate = function ( ) { alert ( ' I do not know what I should say , but my name is ' + this .name ) ; } ;
That 's when a library like prototype.js comes in handy .
If we are using prototype.js , we can make our code look cleaner ( at least in my opinion . )
var Pet = Class.create ( ) ; Pet.prototype = { // our ' constructor ' initialize : function ( petName , age ) { this .
name = petName ; this .age = age ; } , communicate : function ( ) { alert ( ' I do not know what I should say , but my name is ' + this .name ) ; } } ;
Functions as arguments , an interesting pattern
If you have never worked with languages that support closures , like Ruby or C#2.0 , you may find the following idiom too funky .
var myArray = [ ' first ' , ' second ' , ' third ' ] ; myArray.each ( function ( item , index ) { alert ( ' The item in the position #' + index + ' is :' + item ) ; } ) ;
Whoa !
Let 's explain what is going on here before you decide I 've gone too far and navigate to a better article than this one .
First of all , in the above example we are using the prototype.js library , which adds the each function to the Array class .
The each function accepts one argument that is a function object .
This function , in turn , will be called once for each item in the array , passing two arguments when called , the item and the index for the current item .
Let 's call this function our iterator function .
We could have also written the code like this .
function myIterator ( item , index ) { alert ( ' The item in the position #' + index + ' is :' + item ) ; } var myArray = [ ' first ' , ' second ' , ' third ' ] ; myArray.each ( myIterator ) ;
But then we would not be doing like all the cool kids in school , right ?
More seriously , though , this last format is simpler to understand but causes us to jump around in the code looking for the myIterator function .
It 's nice to have the logic of the iterator function right there in the same place it 's called .
Also , in this case , we will not need the iterator function anywhere else in our code , so we can transform it into an anonymous function without penalty .
Let 's look at the original example again with some highlighting to hopefully make things clearer .
var myArray = [ ' first ' , ' second ' , ' third ' ] ; myArray.each ( function ( item , index ) { alert ( ' The item in the position #' + index + ' is :' + item ) ; } ) ;
This is this but sometimes this is also that
One of the most common troubles we have with JS when we start writing our code is the use of the this keyword .
It could be a real tripwire .
As we mentioned before , a function is also an object in JS , and sometimes we do not notice that we are passing a function around .
Take this code snippet as an example .
function buttonClicked ( ) { alert ( ' button ' + this .id + ' was clicked ' ) ; } var myButton = document.getElementById('someButtonID ' ) ; var myButton2 = document.getElementById('someOtherButtonID ' ) ; myButton.onclick = buttonClicked ; myButton2.onclick = buttonClicked ;
Because the buttonClicked function is defined outside any object we may tend to think the this keyword will contain a reference to the window or document object ( assuming this code is in the middle of an HTML page viewed in a browser . )
But when we run this code we see that it works as intended and displays the id of the clicked button .
What happened here is that we made the onclick method of each button contain the buttonClicked object reference , replacing whatever was there before .
Now whenever the button is clicked , the browser will execute something similar to the following line .
myButton.onclick ( ) ;
That is n't so confusing afterall , is it ?
But see what happens you start having other objects to deal with and you want to act on these object upon events like the button 's click .
var myHelper = { formFields : [ ] , emptyAllFields : function ( ) { for ( i=0 ; i< this .formFields.length ; i++) { var elementID = this .formFields [i ] ; var field = document.getElementById(elementID ) ; field.value = '' ; } } } ; //tell which form fields we want to work with myHelper.formFields.push('txtName ' ) ; myHelper.formFields.push('txtEmail ' ) ; myHelper.formFields.push(' txtAddress ' ) ; // clearing the text boxes : myHelper.emptyAllFields ( ) ; var clearButton = document.getElementById('btnClear ' ) ; clearButton.onclick = myHelper.emptyAllFields ;
So you think , nice , now I can click the Clear button on my page and those three text boxes will be emptied .
Then you try clicking the button only to get a runtime error .
The error will be related to ( guess what ? ) the this keyword .
The problem is that this .
formFields is not defined if this contains a reference to the button , which is precisely what 's happening .
One quick solution would be to rewrite our last line of code .
clearButton.onclick = function ( ) { myHelper.emptyAllFields ( ) ; } ;
That way we create a brand new function that calls our helper method within the helper object 's context .
Books I 've read and recommend
Some books are just too good not to pass the word forward .
I have n't read a whole lot of Javascript books , but the following books were very helpful to me .
They are very well written and did n't cause me to lose interest before reading half of it .
I 'm comfortable recommending them if you 're on the market for a new book .
SAN FRANCISCO – Jim Harper left his hotel early Thursday at 5:30 a.m. to give himself more than two hours to clear security at San Francisco International Airport .
It was n't that he was worried the security line would be long , but because he accepted a dare from civil liberties rabble - rouser John Gilmore to test whether he could actually fly without showing identification .
Gilmore issued the challenge at Wednesday 's meeting of the Department of Homeland Security 's privacy advisory committee in San Francisco , which otherwise lacked much in the way of controversy .
An entrepreneur and co-founder of the Electronic Frontier Foundation , Gilmore recently lost a court battle seeking to unmask the government 's secret regulations asking passengers to show identification when flying , and to have those rules declared unconstitutional .
Scolding the DHS committee for dithering over small matters , Gilmore said that it should be investigating the National Security Agency 's eavesdropping program and that the committee 's real job was to " protect the homeland from mean - spirited officials . "
Gilmore then dared committee members to place their driver 's licenses in the envelopes he had passed out , mail them to their home addresses and then attempt to fly home without identification .
While signs in the airport and on the Transportation Security Administration website insist that showing ID is mandatory , the official policy , as revealed by the judges ' decision ( .pdf ) in Gilmore 's case , is that " airline passengers either present identification or be subjected to a more extensive search . "
But Gilmore said that 's not what really happens in an airport when one refuses to provide identification .
" You will find out what the real rules are , " Gilmore said .
" Are you afraid to ?
You have good reason . "
Gilmore referred to his own experience when Southwest Airlines refused to let him fly in 2002 without identification , and a recent blog post by travel expert Edward Hasbrouck , chronicling his near - arrest for trying to figure out if the person checking identification at Washington Dulles International Airport was an airline or federal employee .
At the meeting 's close , Harper , a committee member , said he'd take the challenge so long as he could hand his envelope to a reporter who accompanied him to the airport .
He also challenged the other members to join him .
" We have influence , " Harper said .
" I challenge my colleagues to believe in the law . "
None of the other committee members volunteered , but the committee 's chair , former director of consumer protection for the Federal Trade Commission Howard Beales gave Harper a tongue - in - cheek blessing .
" I wish Jim the best and hope to see you in the future , " Beales said .
At 6 a.m. the next morning , Harper handed this reporter a green , self - addressed stamped envelope and entered the checkpoint line , which even at that early hour was filled with travelers facing a 20 - minute crawl to the magnetometers .
Harper told the identification checker he had no ID , and the attendant quickly wrote " No ID " with a red marker on his ticket and shunted him off to an extra screening line – generously allowing him to bypass the longer queue of card - carrying passengers .
There Harper was directed into the belly of a General Electric EntryScan puffer machine that shot bits of air at his suit in order to see if he had been handling explosives .
TSA employees wearing baby blue surgical gloves then swiped his Sidekick and his laptop for traces of explosives and searched through his carry - on , while a supervisor took his ticket , conferred with other employees and made a phone call .
Meanwhile , a TSA employee approached this reporter , who was watching the search through Plexiglas , and said , " It 's pretty awkward you are standing here taking notes , " but he did not ask for identification or call for a halt to the note - taking .
The TSA supervisor returned from her phone call and asked Harper why he did n't have identification and to where he was traveling .
But she was satisfied enough with his answer – that he had mailed his driver 's license home to Washington , D.C. – that she allowed him to pass .
At 6:30 a.m. , standing 50 yards away on the other side of the glass screen , Harper phoned to say he now had two hours to kill , having gotten through screening perhaps even faster than he would have if he 'd shown ID .
He guessed he was able to get through without much hassle by being polite and dressing well .
Why did he take the challenge ?
" Part of it was my concern with the growing use of identification checks to control access to society , such as buildings , stadiums and air travel , " Harper said , referring to issues that are central to his recently published book , Identity Crisis .
And will he do it again ?
" Yeah , I 'm inclined to do it more and more and hopefully more people will follow my lead and it will become a clear option to not show government ID to fly , " Harper said .
" My identity has nothing to do with the real risk .
" In fact , today , I 'm the safest guy on the plane . "
In the last year , 15 states have enacted laws that expand the right of self - defense , allowing crime victims to use deadly force in situations that might formerly have subjected them to prosecution for murder .
Supporters call them “ stand your ground ” laws .
Opponents call them “ shoot first ” laws .
Thanks to this sort of law , a prostitute in Port Richey , Fla. , who killed her 72 - year - old client with his own gun rather than flee was not charged last month .
Similarly , the police in Clearwater , Fla. , did not arrest a man who shot a neighbor in early June after a shouting match over putting out garbage , though the authorities say they are still reviewing the evidence .
The first of the new laws took effect in Florida in October , and cases under it are now reaching prosecutors and juries there .
The other laws , mostly in Southern and Midwestern states , were enacted this year , according to the National Rifle Association , which has enthusiastically promoted them .
Florida does not keep comprehensive records on the impact of its new law , but prosecutors and defense lawyers there agree that fewer people who claim self - defense are being charged or convicted .
Opinion
Living in a hidden - fee economy /
Things seem cheap until you tack on all the extra costs
- - Image 1 of / 1 Caption Close Living in a hidden - fee economy /
Things seem cheap until you tack on all the extra costs 1 / 1 Back to Gallery
The printer .
It 's one of the most common peripherals in the computer age and so cheap -- at first blush , anyway -- that stores often give them away when you buy a PC .
Yet how many people realize , when they walk out of CompUSA , a nice $ 99 inkjet model tucked under their arm , that it 's likely they 've just committed themselves to spending nearly $ 1,500 on ink cartridges over the next four years ?
( In fact , only about 3 percent realize it , according to Stanford economist Robert Hall . )
We 're living today in the hidden - fee economy .
Printers come with a particularly hefty and devious add - on fee in the form of those cartridges , but they 're just one of many products with a sneaky price structure .
Cell phones , of course , have deadly overage charges lurking behind the attractive monthly rates and credit card companies lure customers with low annual fees then hit them with late fees and higher interest rates if payment is even a day late .
( In 2001 , banks pulled in $ 7 billion in late fees according to one study . )
Comically pricey phone calls and outlandish minibar tabs pad the balance sheets of hotels whose affordable basic room rates serve as a come-on .
Low weekly fees for rental cars attract customers , but they get you on the insurance , car seats for the kids and $ 6 - per - gallon gas .
Getting nailed by a hidden fee is one of the great annoyances of modern life .
But , if it 's any consolation , the fees have also raised fascinating questions for economists :
Why , for example , do n't companies compete on all costs , including the ones in fine print ?
According to classical economic theory , it should n't be possible to conceal price information that 's important to the consumer : Competing firms will educate consumers about the other guy's high hidden prices in order to win business .
" We do n't think that 's right , " contends David Laibson , a professor of economics at Harvard and coauthor , with MIT 's Xavier Gabaix , of an article on hidden fees that appears in the latest issue of the Quarterly Journal of Economics .
" We think there are robust market forces that serve to suppress that information , and keep it suppressed . "
Laibson and Gabaix are n't conspiracy theorists .
Their explanation for the persistence of hidden prices , laid out in " Shrouded Attributes , Consumer Myopia , and Information Suppression in Competitive Markets , " describes a complex balancing act , in which companies must weigh the costs of educating consumers against the benefits of duping them .
And their work relies on the insight , now common in what 's called behavioral economics , that many consumers are far less rational than economists used to think .
Laibson and Gabaix 's explanation relies on a good bit of math , too , but it can be summarized pretty simply using a hypothetical example .
Imagine two hotel chains .
The first , Hidden Price Inn , has a very low room rate of $ 80 a night , but makes liberal use of high " shrouded " fees :
Three bucks for a minibar Coca - Cola , $ 25 for parking , $ 12 for eggs at breakfast .
The unsophisticated traveler cheerily ( if unwittingly ) forks over the fees , all the while patting herself on the back for getting a cheap room .
Now imagine a second chain , Straightforward Suites .
It charges much more reasonably for the extra costs ( $ 1 , say , for that Coke ) , but because it makes less on the extras , it has to charge slightly more for the room -- $ 95 , instead of $ 80 .
Even an unsophisticated traveler can tell $ 95 is n't as good as $ 80 .
Through an aggressive ad campaign , Straightforward could try to point out how devious the approach of Hidden Price Inn is and how much less deceptive its own prices are .
But Laibson and Gabaix show that there 's a catch in this strategy : Hidden Price
Inn actually has two key types of customers .
Yes , there are the clueless consumers ( the economists prefer to call them " myopic " ) .
But there are also the sophisticated ones , who know that if they avoid the hotel restaurant , take a taxi instead of using the parking garage and call home with a cell phone , they 'll actually get a better deal at Hidden Price than at Straightforward .
Straightforward Suites ' ad campaign , then , might just end up increasing the ranks of sophisticated consumers who will in turn dial up Hidden Price Inn for a cut -rate room .
Rather than play this self - defeating game , Straightforward will most likely just lower its own room prices and stick it to the customers on the extras .
The specifics may vary from industry to industry , but Laibson and Gabaix argue that this basic dynamic helps explain why we see so many shrouded fees .
Regulations requiring companies to be more up - front about their prices might help in some cases , they say .
But , being economists , they distrust regulation .
As long as these games exist , they conclude that your best bet is to be a sophisticate .
Laibson offers this tip in particular : " Print in draft mode , do n't gratuitously print things that you do n't need , and when in doubt , print at work .
Those simple pieces of advice will save you about $ 500 a year . "
But not all economists say it makes sense , even in self - interested terms , for companies to embrace the hidden - fee economy .
Barry Nalebuff , a professor of business strategy at the Yale School of Management and author of " In Praise of Honest Pricing , " which appeared in the MIT Sloan Management Review in 2003 , says Laibson and Gabaix 's article fails to consider that annoying consumers has a cost :
It drives them away .
" In the end , you do n't fool the customers with the hidden price , " he says .
" They know they 've paid it even if they did n't know they were going to pay it . "
And if they feel ripped off , they wo n't come back .
In the cell phone industry , he says , carriers lose 40 percent of their customers each year , a tremendous " churn " rate that industry players are starting to take note of .
Sprint , Nalebuff points out , recently began pushing what it calls its " Fair and Flexible " plan , which adjusts customers ' calling plans to minimize overage charges .
Sprint is betting , in other words , that customer loyalty is worth more , in the long run , than sneaky fees .
Laibson , though , has his doubts .
Companies that hide fees " may lose some customers , " he says , " but along the way it 's a good ride . "
これである 。
はてなブックマーク - Yahoo!ニュース - 時事通信 - イスラムは「邪悪」と発言＝ローマ法王発言に怒り広がる
うっかり報道を真に受けて[ これはひどい
]といってしまったのだが、ブクマでも指摘にあるようにどうも様子がおかしい。
そして、原文をのぞいてみたところ、
CNN.com - Pope : Conversion by violence not of God - Sep 12 , 2006
どうやら問題はこの 「要約報道」にあったようなのである。
問題は 「 かのような」という点だ。
原文をたどると、確かになんとも微妙な発言であることは確かだ。
" The emperor comes to speak about the issue of jihad , holy war , " the pope said .
" He said , I quote , ' Show me just what Mohammed brought that was new , and there you will find things only evil and inhuman , such as his command to spread by the sword the faith he preached . ' "
ポイントはまさにここだろう。
He said , I quote ,
（注：簡単に訳すと、 「彼は引用してこう言いました」。となる。）
つまり、 「現法王が東ローマ皇帝が*1引用した言葉をさらに引用して発言した。」ということである。
＊＊＊＊＊＊＊＊＊＊【ココ】「挿入」の＜訂正＞の「挿入」【カラ】＊＊＊＊＊＊＊＊＊＊
＜コメント欄でのご指摘＞
He said , I quote , ’ Show me ... ” の部分です が 、I quoteは挿入です 。
（根拠はクオーテーション・マークの位置です。）
つまり 、He said ” Show me ... ” と I quoteは別々で 、
「 私（＝ベネディクト16世）は引用しますが、彼（＝皇帝）は『……を見せなさい』と言いました」
ということになります。
よって、 「現法王が東ローマ皇帝が引用した言葉をさらに引用」したのではなく、
「 現法王は東ローマ皇帝の言葉を引用した」ということになります
誤訳を言上げする記事で誤訳してたら世話ないですね。
まぁ、幸いにも ？
（注：簡単に訳すと、 「彼は引用してこう言いました」。となる。）
の部分は間違ってなかったってことでなにとぞご勘弁ください。
＜とてもためになる参考記事＞
id:nofrillsさんの英文読解講座
I have got some news from ... - 「 挿入」というややこしい問題
個人的には 、
また、これ は
I believe , Michael said , " I do n't like punk rock . "
Michael said , " I do n't like punk rock , " I believe .
というかたちでも、同じ内容を伝える文となる。
という部分を読んで、 「英文法、テメーぶっころすぞｗ」と思いました。（主語と動詞が2個並ぶの禁止！！
＊＊＊＊＊＊＊＊＊＊【ココ】「挿入」の＜訂正＞の「挿入」【マデ】＊＊＊＊＊＊＊＊＊＊
なんともわかりにくいことはなはだしい、実にクドクドしい発言である。
だが、報道されていない後段の発言を読めばその意図がいかなるものははっきりとしている。
" The emperor goes on to explain in detail the reasons why spreading the faith through violence is something unreasonable , " Benedict said .
" Violence is incompatible with the nature of God and the nature of the soul , " the pope said , issuing an open invitation to dialogue among cultures .
（私訳）
「 皇帝は暴力を利用して信仰を広げることに何の理由もないことを説明しようとしたのです」と法王は言った。
そして、 「暴力は、神の本質や魂の本質と交換できるものではない」と言い、異文化間での対話の必要性を示唆しました。
これのどこが、 「 問題のある発言」なのだろうか。
しかし、現実に問題は発生している。
ならば、発言内容に問題があったのではなく、その発言形式にこそ問題があったとみるべきではないだろうか。
それを示す箇所がこれである。
Clearly aware of the sensitivity of the issue , Benedict added , " I quote , " twice before pronouncing the phrases on Islam and described them as " brusque , " while neither explicitly agreeing with nor repudiating them .
（注：要するに、法王は発言の際に「唐突ですが」とのことわりをつけた上で「引用ですよ」と二度も念を押したということである。）
つまり、何度も念を押さないといけないような発言とは、すなわち、発言者自身も誤解を招く可能性を十分に意識していた発言であるということになる。
要するに、法王が背負わなくてもいいリスクをわざわざ背負った発言形式を選択してしまった、と言うことがまさに問題だったのである。
そして案の定、そのリスクは、問題として具現化したというわけである。
なぜ、わざわざこんな言い回しをしたのか。
おそらくその理由は、この発言が「母国ドイツの大学で行った講義」におけるものだったという環境要因が作用していることは間違いないだろう。
この 「唐突ですが」とのことわりで始まる「とある言葉の引用」というのは、アカデミックなセカイでは毎度お決まりの話法として、極めてベーシックなものである。
この「引用」は、実にさまざまな効果を持っている。
その効果とは 、
自分の発言に客観性を持たせると同時に、自分の教養レベルを相手にアピールすることで知的ヒエラルキーを形成し、さらに、すでに出来上がった先人の言葉を使うことで自分が新たに対象について言葉をひねり出すという作業を省略することが出来る、といったものである。
まさに、一粒で二度も三度もおいしい話法なのである。
これに味をしめたら、その甘い誘いから逃れることはなかなかに難しい。
特に、それ が 「 許される」ひいては「求められる」ような場面においては。
大学という環境下に身を置いたことでつい、そのような二重鍵括弧言語を多用する学者気分で発言をし、
そして、高精度読解力を基礎とするその場においては、それが全く問題のない発言として受け取られたのであろう。
事実、発言内容自体に問題はないのだから。
よく読めば発言と報道が違うという指摘をするのはたやすい。
対して、法王がイスラームのジハード（聖戦）を肯定していないことも確かである。
しかし、
やはり、何万何億という人々の耳目に届く言葉において、専門的リテラシー能力を持つごくごくわずかな人々にだけ向けた「二重鍵括弧の付いた言葉」を発したことが、この問題のすべての原因ではないだろうか。
10億人とも言われるカソリックの頂点に立つ法王は、この点について責任を負わなければならない。
世界全体の大学進学率は1％程度に過ぎないのだから。
さらに付け加えれば、この「誤報」問題を引き起こした責任があるのは、イスラム圏に対して法王発言の恣意的な要約と誤報を撒き散らしたメディアにもある、といえるだろう。
関連：
小林恭子の英国メディア・ウオッチ : 思考の壁？ ローマ法王のスピーチ（オススメ：問題の箇所の丁寧な日本語訳と、欧州の社会背景の解説があります。）
eirene - ローマ教皇ベネディクト１６世に、イスラム諸国が抗議している件
kom ’s log - 誤謬
Where Sweetness and Light Failed - Violence is Incompatible
オーディオの科学 2017年5 月 記事追加 （ここ）
このページの目的は、あまりお金をかけずに演奏会にできるだけ近い雰囲気で家庭で音楽を再現するために、どのようなオーディオ装置を構築すればよいかを物理学的、技術的側面から検討したものです。
オーディオにロマンを求める人は読まない方がいいかもしれません。
( より詳しくは、コラム『高忠実度再生と良い音』をみて下さい）
中には少し難しい内容も含んでいますので、ご質問、ご意見があればお気軽に掲示板( Audio BBS ) に書き込むか 、
直接メールしてください。 必要なら、ご自由にリンクを張って下さい。
Audio BBS 過去の投稿を整理して公開しました、参考にして下さい。
私のオーディオ感 『 木を見て森を見ず』 『鰯の頭も信心から』の戒 め
オーディオの物理学 装置選び のＰｒｉｎｃｉｐｌｅ
リスニングルーム 、 スピーカーシステム , アンプ 、 スピーカーケーブル、 CD プレーヤ、携帯音楽プレーヤ、デジタルテレビ 、 HDD&DVD レコーダ 、 オーディオラッ ク
コラム ： 低周波発振器の効用 、 高忠実度再生とよい音 、 科学的とはどういうことか？ 、 音は脳で聴く 、 天動説から地動説へ 、 そもそも客観的事実とは？ 、BSエアチェックの薦め 、 時計とオーディオ製品 ( 機器の選び方 ） 、 iPad で手軽にオーディオを楽し む
オーディオ雑学 帳
ケーブル線材について の３つの迷信 、 CD のデータ処理と誤り訂正について 、 高域再生はどこまで必要か?、スピーカーの低域再生能力、導線の材質
、アンプ・ケーブル・スピーカーの相性 、電気の伝わる速さは？、分布定数回路とは？、
心理効果とブラインドテスト 、 電源とノイズ 、 エージングと劣化、 群遅延とは？ 、 フェライト磁石かアルニコか？ 、 非線形性と歪 、 音像定位はどうして決まるか？ 、聴く位置によってこんなに変わるｆ特 、インターコネクトケーブル・ディジタルケーブル 、脳波で見る『空耳』 、 遮音と吸音（室内音響の基礎と実際） 、 サブウーファーの薦め 、 サブウーファーの音は遅れる？ , 、 コア入りソレノイドコイルのインダクタンス 、 折り返し歪み とCDの音 圧縮音は音が悪い？ 、 音楽番組の音質 、 ハイレゾは必要 ?
( 2017.10.10改訂 ) , ケーブルの電磁気 学
( スピーカーカーは音質の決め手です。いいかえれば、オーディオ装置の中で最も不完全なもので、より良いものを作ろうとしても、あちら立てれば、こちらが立たずという要素が多く、なかなか理論通り動いてくれません。それだけに、その動作原理の基礎を知っておくことが肝要です。そこでここでは、基礎から始め、実際のスピーカーでの問題点に至る一連の解説講座を掲載する予定です。数式が多いので当面はpdf版のみの掲載とします。)
I 過渡特性とインピーダンス、 II 音響インピーダンスと放射インピーダン ス
、
（含 イヤホン ）
、
� W
エンクロージャ ー
( 2009.9.3 改訂 )
、
�X
( 2015.7.7 ）
現有オーディ オAVシステム
私のオーディオ 歴
副題の説明 。
『木を見て森を見ず』 『鰯の頭も信心から』 この二つの諺はオーディオマニアが陥りやすい傾向で、心すべき戒めです。
まず、『木を見て森を見ず』について。そもそも、オーディオ装置の目的は音楽
（私の場合クラシック音楽） を出来るだけ演奏会で聴いているのに近い雰囲気でリスニングルームに再現することにあります。このとき、その性能
（森 ）を決め る因子 （木） はたくさんありますが最大のものはリスニングルームそのものとスピーカーシステムの性能だと思っています。他の装置はスピーカーシステムに見合った価格の、名の通ったメーカーの製品を買っておけば大差ありません。 このとき具体的に何を選ぶかの基準は周波数帯域やひずみ率 （これらの値は同じ価格帯の製品ならほとんど同じです） などのデータや評論家先生の評価より、使い勝手で決めることをお勧めします。また、スピーカーケーブルに凝り何万円もかけるマニアがあると聞き及びますがこれなど典型的な『木を見て森を見ず』の一例です。たとえば、材料の銅線の純度を4N(99.99%純銅から6Nに変えても電気抵抗の変化は室温が1℃下がったと同じくらいの効果しかありません。
『鰯の頭も信心から 』
ともかくオーディオは趣味の世界です。従って、その性能の差が物理学的、電気工学的にみて、根拠のないものであっても本人が最高と思っていればそれでいいわけではあります。
この場合あまり物理学や電気工学を知らないほうがｈａｐｐｙかもしれません。しかし、私に言わせればメーカーの宣伝文句や評論家の記事はかなり眉につばをつけて見る必要があります。特に一見科学的な根拠を挙げてもっともらしい説明をしてある記事には注意する必要があります。科学的説明には定性的説明と定量的説明とがあります。前者は因果律といってもよく、例えばケープルの例で言いますと、他の条件が同じであれば確かに、4Ｎの線材より6Ｎの線材を使うほうがいいかもしれません。しかし、導線の電気抵抗の原因はこの程度の純度の銅線だと殆ど熱抵抗で決まっており、4Ｎ銅と6Ｎ銅の電気抵抗率の違いは温度差にしてせいぜい1度くらいです。そう考えればこんなところにお金をかけるのは意味のないことだといわざるを得ません。つまり、一見もっともらしい説明も定量的に分析すると殆ど意味のないことがこの世界には往々にしてあるということです。
そう思って、スピーカーケーブルについて宣伝文句や評論を見てみると、ちゃんとしたメーカーの宣伝文句は、確かに技術者も目を通しているだろうし、物理学的、技術的な事実に対しては嘘は書いてありません。しかし、『丸みのある音』だとか、『締まった音』だとかは証明しようのない主観なので決して誇大宣伝で訴えられるようなことではないことに注意する必要があります。また、いわゆる評論家には技術者出身とそうでない人があり、前者の場合は1ｍ何万円もするケーブルを薦めていることはあまりないと思います。しかし、後者の場合かなり高名な評論家でも物理法則をまったく無視した、あるいは矛盾したことを平気で言っている人があります。そんな記事を信じて、大枚のお金を投じるのはまさに『鰯の頭も信心から』と言わざるを得ません。
すこし一般的に『科学的とはどういうことか？』について論じてみました。
リスニングルームとスピーカーのセッティング
リスニングルームは低音域の特性に大きな影響を与えます。下の表1に可聴周波数帯
( 20 Ｈ ｚ 〜 20k Hz ) の各音域での周波数とその波長 （音波および電磁波） を示します。低音域での音波の波長は部屋の大きさに近く、壁面からの反射による定在波の発生や干渉効果が大きく壁面の構造やスピーカの置き場所や聴く位置により周波数特性は大きく変わります。 （このことは低周波発振器で周波数を連続的に変え音出しをしてみると明らかにわかります。） カタログにのっているスピーカーの周波数特性は無響室で測定したものですから概ねフラットですが実際には大きく波打っているはずです。また、中・高音域では直接波と反射波の位相差のため音像定位感の低下などを招きます。しかし、これらの現象はある程度避けられないもので、壁や床天井になるべく吸音効果のありそうな材質を使うこと、また、薄い窓ガラスや薄いベニヤやプラスティック板を使った家具など、共振しそうな平面版を使うのを避けることなどが対策です。音楽ホールがそうであるように、適当に音の反射 （残響） はあったほうが聞きやすいとも考えられるのであまり神経質に考えることはありません。
なお、リスニングルームの特性を決める壁面の遮音と吸音について、雑学帳に書いておきました。（ 2005.7.2 )
次にスピーカーのセッティングですが、確かにスピーカーを置く位置を変えると低音域の特性が変わります。しかし、聴く位置によっても変化するので置く位置ばかり気にしても意味がありません。2つのスピーカの位置の部屋に対する対象性
（壁面やコーナーからの距離） が極端にずれていなければそれほど気にすることではないと思います。ただし、中心軸を部屋の中心に一致させるのは感心しません。なぜなら、壁面からの反射による定在波の腹 （最大振幅） の位置は反射面にあり、中心位置は一次定在波の節
（振幅0 ） の位置に当たるからです。それから、よくスピーカと聞く位置は正三角形になるような位置がよいと書いてありますが、確かに２等辺3角形の頂点で聞くほうがいいと思いますが、正三角形である必然性があるとは思えません。むしろ、2つのスピーカーの間隔に適正距離があるはずです。音の指向性 （方向感覚） は両耳に入る音波の位相差が関係します。従って、波長が十数センチの音、つまり人の音声などがもっとも敏感に検知されます。この周波数帯から極端にずれた周波数の音は指向性がありません。従って、スピーカーの間隔は2〜3 ｍ離しておけば十分でそれ以上はなすと音波の干渉効果で周波数特性の『でこぼこ』が激しくなるので逆効果になると思います。
このように書くと、私がリスニングルームやセッティングを軽く見ていると思われるかもしれませんが決してそうではありません。これは、次項のスピーカーシステムと同等もしくはそれ以上に音質に影響します。ただ、一旦部屋の条件が与えられてしまうと
（例えば普通に設計されたリビングルームを使うなど）
少々手を加える程度では大きな改善は見込めず、あちら立てればこちら立たずという状況になりがちだということです。もし、本格的に音に拘るなら、過剰性能の高価なアンプやプレーヤー、ましてや怪しげで高価なケーブルやアクセサリー類には手を出さずに将来専用のリスニングルームを作る資金をためておくことをお奨めします。
表 １ いろいろな高さの音の波長 *固体の音速を2000ｍ/ｓ として計算 周波数 空気中の音波の波長 固体中の音波の波長 * 電磁波の波長 超低音 パイプオルガンのペダル 音 40 Hz 8.5 m 50 m 低 音 ティンパニー 200 Hz 1.7 m 10 m 中 音 音声( ソプラノ） 1000
Hz 34 cm 2 m 300000 m 高 音 バイオリン（最高音 ) 4000
Hz 8.5 cm 50 cm 超高音 10000 Hz 3.4 cm 20 cm 30000m
スピーカーシステムはオーディオ装置の中で、再現する音を決定付ける最も重要な部分です。したがって購入するに当たっては試聴なども行い慎重に決定すべき部分です。また予算の半分くらいはスピーカーシステムの購入に当てるべきだと思います。
（逆に他の部分については店の試聴室でちょっと聞いたくらいでは差は分からないと考えた方が無難です。この場合はカタログ等でスペックや使い勝手をよく検討する方が後で後悔しません。）
なお、『スピーカーの高域再生能力はどこまで必要か？』
および『スピーカーの低域再生能力』についてオーディオ雑学帳で論じています。また、基礎となる理論をスピーカーの物理学講座で解説しています。
まず、スピーカーの構造と動作を知っておきましょう。
右図は一般的な （ダイナミック） スピーカーの横断面の概念図です 。
永久磁石で発生する磁束が鉄で出来たヨークに導かれボイスコイルの所に強い磁場を作ります。
（この図では永久磁石は中心の円柱部にありますが、最近のフェライト磁石を使ったスピーカーでは、外側のシリンダー部に付けてあります。） ボイス コイルに流れる電流はこの磁場でローレンツ力を受け左右方向に動きこの動きが振動板 （コーン） に伝わり周りの空気を振動させ音に変わります。振動板はダンパーとエッジにより支えられています。
スピーカーの性能を決めるのは周波数特性、高調波歪み、能率 （音圧レベル ）、過渡特性などです。このうち、周波数特性は何で決まるか？
これは低音域と高音域を別に考える必要があります。
音波のエネルギーは振幅 ａ と振動数 ｆ の積の2 乗 （ａ・ｆ ）2 に比例します。 ｆ の小さい低音では振幅 ａ を大きくする必要があります。つまり、スピーカーは空気をゆっくりと大きく振動させる必要があるわけです。そのためには振動板を出来るだけ大きくし、かつ大振幅で振動するようにしなければなりません。当然ウーファーの口径が大きいほうがいいわけですが、実はこれは必要条件でなく、口径が小さくても無歪み振幅が大きければいいわけで、最近の傾向としてはあまり大口径のウーファーは使われなくなっています。その理由は、口径が大きいことの一義的なメリットはは能率が高くなることで、デメリットとして(1)質量が大きくなり過渡特性が悪くなること、(2)小口径ウーファーに比べ大きな箱を必要とすること、などがあり大出力のアンプが安価に手に入るようになった現在、能率についてあまり考慮する必要がなくなったからだと思います。
一方、高音域では、振幅は小さくとも高速に振動させる必要があり、振動板は出来るだけ軽くする必要があります。つまり、低音再生のための条件と高音再生の条件はあい矛盾するため、低音専用のスピーカー （ウーファー） と高音専用のスピーカー （トゥイター） を使い、更に、中音域を受け持つスピーカー （スコーカー） を加え た3ｗａｙ システムがよく使われます。実は、専用スピーカーを使うもう一つの理由があります。それは、ボイスコイルの変位が振動板に伝わるとき、波として伝わります。つまり、振動板は必ずしも平行移動 （いわゆるピストン運動 ) するのではなく、中心部から周辺部に変位が伝わっていくわけです。この現象が顕著になると、振動は同心円上に広がる波となり,エッジで反射された波との干渉で定在波が生じ、振動板がいわゆる分割振動を起こします。分割振動が生じると周波数特性に凹凸が生じ、高域になるほど放射される音が打ち消しあい高域が出なくなります。分割振動を起す周波数は、スピーカーの口径、振動板の強度 （剛性） などにより決まり、普通1000Hz以上の高音で生じます。低音用の大口径のスピーカーでは分割振動の生じる周波数が低く高音が出にくくなります。再生音域をさらに上げようとすると、口径を小さくする必要があり、そうすると低音が出にくくなり、いわゆるフルレンジスピーカーでの広帯域再生は難しくなることがわかります。さらに、最近のように５0000Hzあたりまで分割振動を抑え再生しようとすると、軽くて硬い特殊な材料を使い、振動板の口径を小さくする必要があります。トゥイター用の材料は時代とともに流行り廃りがあり、
ベリリウムが使われたり アルミやチタン合金が使われたりしました。私のスピーカの材料はボロン・カーバイト（B 4 C)という材料が使われているようです。
スピーカーの性能としてもう一つ重要なのは過渡特性です。右図は過渡特性を説明する図です。黒い線がスピーカーに入力する電気信号で赤線は音声出力を表します。両者が一致するのが理想ですが、実際にはずれが生じます。このずれを過渡歪みといいます。過渡特性を決めるのは立ち上がり
（下がり） の速さと制動力 ( すぐに静止する能力 ) また、固有振動を起こさないことも重要です。立ち上がりの速さは振動板の軽さと強度で決まります。出来るだけ軽くて硬い材料を使う必要があります。
制動力ははいろいろな因子で決まりますが、まず考えられるのは空気抵抗ですが、ダイナミックスピーカーでは余り大きな寄与をしません。従って、この場合スピーカー自身の持つ制動力に頼る必要があります。力学的な制動力はダンパーとエッジで決まり、その制動能力は、振動板の運動エネルギーをいかに早く吸収するかにより決まります。もう一つ重要なのは固有振動を起こさないことです。軽くて硬い材料といえばアルミ合金などの金属を思い浮かべますが、金属は一般に振動エネルギーを吸収する能力が低く、たたけば『カーン』という音がすることからもわかるように振動板に使うと固有振動を起こし不都合です。特にウーファーでは振動板のサイズが決める固有振動の周波数が可聴周波数帯にあるので使えません。これに対して例えばボール紙などはは叩いても殆ど音がしません。これは繊維が絡み合ったパルプ紙などは振動のエネルギーを素早く吸収するからです。普通低音用スピーカーの振動板には繊維系の材料を出来るだけ軽くて強度が出るように加工して使います。それに対し高音用スピーカーは口径が小さく固有振動の振動数が可聴周波数外になることもあり、制振よりも軽くて硬いことを重視し金属材料を使うこともあるようです。
（あまり感心しませんが）
スピーカーの制動能力を決めるもう一つの重要な因子は電磁制動力です。ボイスコイルはアンプにつながっており閉回路を作ります。すると、振動することによって生じる逆起電力が制動力となります.。その強さは、アンプの出力抵抗を含んだ閉回路の抵抗値に反比例し、磁場の強さ、コイルの巻き数に比例します。なお、後者はスピーカーの能率にも関係するので、出来るだけ強い磁石を使うことが望まれます。ここで、磁性材料の専門家として言わせてもらうと、永久磁石としてネオジム磁石を使い、ヨーク、特にギャップ部の材料に磁束密度が最大の鉄コバルト合金を使うと最も強い磁場が得られるはずです。ただし、磁気回路の設計が適切なら、ギャップの部分の磁束密度は永久磁石でなく、ギャップ部に使われている電磁石材料の飽和磁束密度が決めるので、永久磁石材料に何が使われているかはあまり重要ではありません。また、あまり制動力が強すぎるといわゆるオーバーダンプとなり低音が出にくくなるので磁場は強ければ強いほどいいというわけではありません。この辺りがスピーカーの設計者の腕の見せ所です。
** 最近ネオジム磁石を使ったスピーカーも出始めています。ただし、ウーファーなどはどちらかというと重い方がいいので、安価なフェライト磁石をたっぷり使って磁束密度を上げる方が賢明だと思います。 2004.11.24 追加
最後に、制動力を決めるもう一つの因子はスピーカーボックスです。そもそも、スピーカーを箱に入れるのは振動板の後方から出る逆位相の音波を遮断することにあります。最も単純なスピーカーボックスは密閉箱です。この場合箱の内部の空気が空気バネとして働きダンパー・エッジと合わせた、振動板を支えるバネ定数が増加します。従って、振動板の共振周波数 ｆ 0 が上昇し、かつ同一入力に対する振幅が減少します。その結果、低音の出力能率が低下します。
この時、ボックス内の吸音材などにエネルギーが吸収され制動力が生じます。もう一つはバスレフタイプといいい、スピーカーボックスの下部に穴 （ダクト ) を開け、ヘルムホルツ共鳴で低音を増強しかつ逆位相の音波を半波長遅らせ正位相にして放出するという方式です。この場合箱からの制動力はあまり期待できず、共鳴効果を利用するので共鳴周波数付近で過渡歪が生じやすくなります。さらに、共鳴周波数付近は位相特性の変化が著しく
（群遅延特性が悪化する） 、共振周波数より波長の長い超低音は打ち消され出なくなります。一方、バスレフタイプの利点として、最低音の共振周波数付近ではスピーカーの振動板の振幅が密閉型に比べ小さく抑えられ、エッジやダンパーの非線形性から来る歪が生じにくいという点です。最近の中小型のスピーカーシステムがほとんどバスレフタイプなのはこのためです。しかし、私に言わせれば、バスレフタイプを使っても重低音域の再生能力は一般に不足気味で、下に述べるようにスーパー （サブ） ウーファーを使い補強するという手をお奨めします。
さて、以上の話は、出来るだけ電気信号を忠実に音声信号に変えるのがいいスピーカーとして話を進めてきましたが、実際にはあまり制動の効かないボンボンした音が好きだとか、高音域がある程度カットされた音のほうが聴きよいという人もいるわけで、決して聴きよいスピーカーの条件を述べているわけでないことをお断りします。
ちなみに、私が使っているスピーカーシステムはかなり物理特性重視型で、一応聴き比べはしましたが、必ずしも最高のものと思っているわけではありません。特に、このスピーカは高域が60kHz まで伸びていることがうたい文句なのですが、CDがソースの場合20kHZ以上の周波数帯に意味のある情報は含まれておらず、回路で発生する超音波ノイズのみを放射する役目を担っているだけかも知れず、少々オーバースペックのような気がします。
通常のフロア型スピーカーでは、クラシック音楽で重要な役割を果たす30Hz〜40Hzの重低音を能率よく再生するには無理があります。このため、超低音の再生のみを受け持つサブウーファー
（以前はスーパーウーファーと言った）
を使う意味があります。理想的な方式は超大型のホーンを使うことですが、一般家庭で実現するのは困難です。私の使用しているヤマハのスーパーウーファーは30ｃｍ径のスピーカーを内臓の特殊なアンプ
（電流帰還によりスピーカーの内部抵抗を見かけ上ゼロにする方式）
で制動係数無限大で駆動し、その空気振動をヘルムホルツ共鳴の原理に基づきダクト内の気柱振動でとして放出するという方式です。その効果ですが、例えば室内楽などを聴いているとその存在は殆ど感じませんが、オルガンの演奏や、近代オーケストラの、特にバスドラムの音など大変な迫力で迫ってきます。それから、意外な効用ですが、最近、衛星放送などで放映される音楽会の中継録画をよく見 （聴き） ますが、サブウーファーがあるとすごい臨場感が感じられます。実は、これは会場の超低音ノイズを再現するためのようで、オーディオ的には邪道ですが音楽会の雰囲気を生々しく伝えてくれます。
低音楽器が活躍する曲として代表的なものを挙げると、R．シュトラウス｢ツアラスストラ｣冒頭オルガン （C 0 ：32.7 Hz） 、バッハ｢トッカータとフーガ ニ短調｣２小節目 (? ) 持続低音 （D 0 36.7 Hz） 、 ショウタコーヴィッチ｢交響曲第5番」、ベルリオーズ｢幻想交響曲｣のフィナーレのバスドラム強奏
（ 37Hz） といったところか。 その他、スペクトルアナライザーで解析した結果をここに載せています。
2006.10.1
なお、サブウーファーが受け持つ周波数帯では音の指向性がないので、1個のスピーカーで充分です。普通は左右の信号を足し合わせて駆動します。また、置く位置についても指向性の観点からは左右スピーカーの中心である必要はありません。しかし、何処へ置いても同じかというとそんなことはありません。表1からわかるようにこの周波数帯の波長は数ｍなので、メインスピーカーからの音、壁面からの反射波との干渉により、置く位置により大きく変化します。いろいろ試して最適の位置を見つければいいわけですが、何処に置いても強調される周波数、打ち消しあう周波数はあるので結局好みの問題となります。
このとき、メインスピーカーシステムがバスレフ型だと、スーパーウーファーとのクロスオーバー周波数付近で位相関係が複雑になり
（群遅延特性が暴れる） 、つながりが悪くなることが懸念されます。スーパーウーファーを使うときは
（メインシステムが密閉型であっても） 、正弦波発振機を用い低音域の周波数特性をしらべ、カットオフ周波数や位相関係を適当に選び周波数特性が出来るだけフラットになるよう調整することをお勧めします。
最後に、サブウーファーを使うと『音が遅れる』と言われることがあります。私はさほど感じませんが、部屋の定在波と一致する周波数
（８畳間だと50Hz ) 付近ではあり得ることです。というのは、定在波とはスピーカら出た音が正面の壁
（又は床面、側面） で反射し、さらに後面の壁 （天井、もう一方の側面） からの反射波、後続の音とが干渉し強め合い成長するものなので、少なくとも3,4周期 （ 50 Hzだと約0.1秒位） 後に最大振幅となります 。一方、スピーカ自身も共振周波数付近では群遅延により多少音が遅れますがせいぜい0.01〜0.02秒位で恐らく検知不能の遅れだと思います。つまり、仮に『音が遅れる』と感じても、スピーカーを疑う前に部屋の特性を疑うべきです。なお、実際にサブウーファーの過渡特性を測定した結果をここに挙げておきます。
また、実際の選択に当たっては、サブウーファーの薦めのページも参考にして下さい。
現在のスピーカーシステムはＣＤに録音されている超低音を十分再生出来ないものが多い。これをあまり費用をかけず簡単にチェックする方法を伝授しましょう。それは、ネオジ磁石を使った最近の密閉型 （カナル型） イヤホンを使うことです。密閉型イヤホンは電気→音響変換器として理想的な性質を備えたもので、安価なものでも、20Hzの超低音から20kHz 以上の高音までをほとんどフラットな特性で再生出来ます。また、振動板も軽量で過渡特性も極めて優秀です。これを使い、例えば上に例を挙げたような超低音を含むいい録音のCDを聴いて見て下さい。おそらく、スピーカーシステムではほとんど聴き取れなかった超低音が録音されていることが分かるでしょう。このとき注意すべきことは、耳とイヤホンの密閉性を完全に保つことです。普通、色々なサイズのイアーピースが付属しているので自分に最適なものを選び、空気漏れがないようしっかり耳に挿入して下さい。少しでも空気漏れがあると極端に低音の音圧が落ちます。もし、このテストで自分のスピーカーシステムに不満を感じたらサブウーファーを導入することをお薦めします。また、サブウーファーは『音が遅れる』と思われる方は一度このイヤホンと比較してみて下さい。イヤホンでは原理的に『音が遅く』なることは考えられません。
ちなみに、自分が使っているのは AudioTechnica 製の ATH - CKS990という製品で、カタログスペックは 5〜28，000
Hz となっています 。
アンプはオーディオシステムの中心の一つですが、これについてはあまり論ずるところがありません。最近の技術の進歩により、ちゃんとした技術者のいる定評あるメーカーの製品であれば同じ価格帯の製品ならどれを選んでも電気的性能に変わりありません。むしろ使い勝手とか見た目のかっこよさで選べばいいと思っています。ただどの価格帯を選ぶかは問題ですが、価格はほぼ出力に比例するのでどのくらいの出力が必要かということになります。
実際に家で聞く出力はかなりい小さく、数ワットあれば充分かもしれません。しかし、バスドラムの強奏のような低域の衝撃音をリアルに再現するには瞬間的にかなりの大電流を必要とし出力にはかなり余裕を見ておく必要があります。さらに、アンプの性能としてもう一つ重要で見逃されているのは上記のスピーカの項でのべた、ダンピングファクターで、これはアンプの出力インピーダンスに反比例します。出力インピーダンスが低いことは、いわゆる駆動力が大きいことを意味し、パルシブな音の立ち上がり特性も良くなります。普通大出力のアンプはダンピングファクターが大きく、制動の効いた、歯切れの良い音を良しとする場合は結果的にある程度出力の大きいアンプを選ぶ方がいいということになります。なお、見かけのダンピングファクターは負帰還を深くかける事により大きくすることが出来ますが、負帰還をかけすぎると弊害も生じ、無負帰還時の内部抵抗が低いハイパワーアンプの方が有利です。
ところで、この項の『アンプ （ただし、中級程度以上の半導体アンプ） によって大した 差がない』という主張は、オーディオマニアの常識とあまりにもかけ離れているようで、ひんしゅくをかっているようです。しかし、ブラインド・テストの結果などを見ると決して私の耳が悪いせいで分からないというわけではなさそうです。ただし、その結果をここで示すのはあまりに味気ないので、別ページにアップしておきました。入り口はこのサイトの別の所からリンク出来るようになっています。
セパレートアンプとトーンコントロール
LPレコードを真空管アンプで聴いていた時代は、プリアンプとメインアンプを切り離した、いわゆるセパレートアンプがいいとされ、実際自作する場合もこの方が楽でした。これには理由があり、微少信号を扱うプリアンプは出力段で使う大電流や電源のからの誘導ノイズ （ハム音など） を受けやすく両者を切り離すことによりノイズが軽減されるからです。しかし、CDプレーヤの出力を半導体アンプにより再生する場合は別です。そもそも、CDプレーヤーの出力電圧は大きく通常の規格のメインアンプであれば電圧を増幅する必要はありません。プリアンプの役割はもっぱらボリュームやトーンコントロールなどの制御機能で、本来コントロールアンプ
（増幅していないのにアンプというのも変ですが）
というべきでしょう。この場合扱う信号電圧は比較的大きく、また半導体回路は小さく、シールドも容易でなので別の筐体に入れる必要はありません。せいぜい電源部を別にするといった対策で十分でしょう
（これも過剰装備かもしれない） 。 ということで、アンプはプリ・メインアンプ
（インテグレーテッドアンプ） で十分です。セパレートでないとだめだというマニアの言は真空管時代のノスタルジーからくる思い込みに他ならないと思っています。
ところで、プリ・メインアンプであっても、トーンコントロール回路を通すと音が汚れるといって、これを活用しないマニアが多いようで、アンプの方でも、これをパスするダイレクトスイッチという物が付いているものがあります （私のアンプも） 。しかしこの回路を通したからと言って検知可能なレベルで歪みが増えるわけでなく、大いに活用すべきでしょう。特に、あまり大きな音で聴かない
（聴けない） 場合はいわゆる等ラウドネス曲線 （下のリンク先参照） に従って低域 （場合によっては高域も） を少し持ち上げてやるほうが実際の音楽体験に近い雰囲気が味わえます。
参考：等ラウドネス曲線について
http://www.asahi-net.or.jp/~yl1h-nkmr/oto/tokusei.html
参考：ラウドネス （等感） 曲線と低音再生 （ Audio BBS 過去録 ）
http://shigaarch.web.fc2.com/OldBBS/59laudones.html
AVアンプ 2014年6月追加
最 近5.1ch サラウンド放送など多チャンネルを使う音源が増えています （例えば、NHK Eテレのクラシック音楽館など） 。これを有効に使うにはいわゆるAVアンプが必要となります。AVアンプに必要とされる最小限の機能は、MPEG-2、-4 などの圧縮音源のデコーダーと多チャンネルアンプ （通常デジタルアンプ） ですが、その他にも、DSP
（ Digital Signal Processor ) を利用した音場効果付加機能 （もちろんこのような効果を付加しないモードも備えている） 、サブウーファー用のハイカットフィルター、さらには、視聴位置にマイクを置き、その位置での音場特性を自動的に最適化する機能なども供えている機種が多い。圧縮音源やデジタルアンプと聞くと、ピュアーオーディオファンからは毛嫌いされそうですが、一度体験されることをお薦めします。デジタルアンプといっても、ブラインドテストではアナログアンプと区別がつかないようです。
真空管アンプについ て
昔はアンプといえば真空管アンプでした。私も若い頃、何台か自作した覚えがあります。ところで、真空管アンプには普通真空管の高いインピーダンスとスピーカの低い抵抗をマッチさせるため出力トランスを使います。私は磁性物理学が専門なのですが、鉄心を使ったトランスは、周波数特性、線形性、位相遅れ、エネルギー損、バルクハウゼンノイズ,低ダンピングファクターなど多くの問題を抱えた代物でその物理特性を考えればとても使う気になれません。もちろん、世の真空管アンプ愛好家はこの点は承知で、無個性なトランジスターアンプより好ましい点を見つけられているのだと思いますが。
（コネクトケーブル、ディジタルケーブルについては雑学帳参考）
表 2 A社製スピーカーケーブルの価格と特性 価格
￥ /ｍ 抵抗値
m Ω / m 静電容 量
ｐ Ｆ/ｍ 材料 (純 度( % ) A 200 22.5 55 OFC ( 99.995 ) B 1200 6.5 86 PCOCC ( 99.996 ) C 11,200 15 30 Hi -OFC ( 99.995 ) D 14.000 6.6 78 7N - PCOCC(99.99999 )
スピーカーケーブルによって音が変わるということがよくいわれ、雑誌などで話題になっています。結論を先にいえば、１ｍ千円以下で手に入る太めのスピーカーケーブルを使っておけば充分で、それ以上この部分に投資する必要はありません。こんなところにお金を使うのがいかに無駄なことかを示すためその物理的側面を論じます。参考のため、表2に代表的なメーカーのいろいろなレベルのスピーカーケーブルの価格と特性をあげておきます。手短に要点だけ知りたい場合はここへジャンプしてください。逆に、詳しい電磁気学的解析が知りたい人はケーブルの電磁気学をご覧下さい。また、日本音響家協会の機関誌
SOUND A&T の" 電気音響はケーブルで音が変わる？ " というタイトルの特集号（No.88 ) に投稿した 「 オーディオケーブルを科学する 」 という記事も参考にして下さい。そこでは、ピンケーブルを含めたオーディオケーブルについて電磁気学、材料科学、心理学の視点からケーブルの特性を総合的に論じています。
スピーカーケーブルが音質 （正確にいうと信号伝達特性） に及ぼすと思われる要因 は ( 1 ) 直流抵抗値 ( 2 ) 表皮効果 ( 3 ) 静電容量 ( 4 ) 自己インダクタンス ( 5 ) 自己振動によるロ ス ( 6 ) その他、渦電流損失などが考えられます。以下に各々の要因について半定量的な説明を加えておきます。なお、量的な見積もりは、最も安価なケーブルAについて、長さを4m （往復8 m） 、負荷のスピーカーのインピーダンス （直流抵抗値） は 8 Ω （一定） 、パワーアンプの内部抵抗 （出力インピーダンス） は 0.8Ω （ DF=10 ) として計算しています。以下の解析は最も安価なケーブルAを例として計算しています。これは、直径1mm、線間間隔4mm程度の並行２芯線に相当する特性値です。なお、表には書いてないですがこの場合の自己インダクタンスは約1μH/m となります。
(1 ) 直流抵抗： 導線の電気抵抗は Ｒ＝ρ×l / Ｓ で与えられます。ここで、 l は線の長さ 、 Ｓ は断面積、 ρ は抵抗率 （単位長さ , 単位断面積当りの抵抗値） で材料により決まる量です。電気抵抗の原因は ( i ) 結晶格子の熱振動 ( ii ) 不純物 ( iii ) 格子欠陥 （結晶粒界、格子歪など） などです。ケーブルの宣伝文句などでは、( ii ) と( iii ) のみが論じられていますが、実は室温での電気抵抗の原因はは殆ど(i)で99.999%程度の純度の銅線だと ( ii ) と( iii ) の寄与は( i ) の100分の1以下です。つまり、安価なＯＦＣ材を高価な7Ｎ材に変えても温度が1,2度下がった程度の効果しかありません。ところで、表2 を見ると1ｍ当りの抵抗値は材料で決まっているわけでないことがわかります。すなわち、上式で l ＝ 1 ｍ なので、抵抗値を決めているのは 導線の断面積で決まっています。要するに線の太さが太いほど抵抗が小さくなるわけです。もちろん実際のケーブルは多芯構造なので素線の断面積の総和が
Ｓ となります。表2の例では比較的安価なＢが最小値となっています。なお、抵抗の原因によって音が違うなどと言う人もいますがそんなことはありえないことです。
スピーカーケーブルの直流抵抗が音に及ぼす効果は2つ考えられます。すなわち、
( i)単純なジュール熱による損失(ii)上記スピーカーの項で述べた電磁制動力の低下です。
( i ) ジュール損失 は Ｗ ＝Ｖ * Ｉ＝Ｒ * Ｉ 2 と抵抗値 Ｒ に比例します。ケーブルはスピーカーと直列につながっているので電流
Ｉ はスピーカーに流れる電流と同じです。いま、スピーカの抵抗値を8オームとして、ケーブルはもっとも安価なＡを4ｍ （往復で8ｍ） 使ったとすると、約１%のパワーロスとなります。Ｂの線を使うと0.3 % に減少し多少効果はありますが、普通アンプの出力には充分余裕があるのであまり気にすることではありません。
( ii ) スピーカーの電磁制動力 は [ アンプの出力インピーダンス＋スピーカーのボイスコイルのインピーダンス＋スピーカーケーブルの抵抗]
が小さいほど強くなります。アンプの出力インピーダンスは普通明示されていませんが、ダンピングファクター
Ｄ がそれにあたります。 Ｄ の定義はスピーカーのインピーダンスを Ｒ 、アンプの出力インピーダンスを Ｚ とすると、 Ｄ＝Ｒ / Ｚ で与えられます。従って、 Ｒ ＝ 8Ω 、 Ｄ ＝100 とすると Ｚ ＝0.08 Ω となります。従って、アンプの制動力を生かそうとすると, スピーカーケーブルの抵抗値は
Ｚ より小 さいことが望まれます。さきのケーブ ルＡ 4ｍの場合 , 抵抗値は0.18Ωとなるので制動力低下を招きます。Ｂの場合 0.052Ωとなりほぼ合格です。このように、スピーカーケーブルの直流抵抗はエネルギーのロスについてははあまり問題になりませんが制動力低下には影響があるかもしれません。ただし、全体のインピーダンスが約８Ωなので音質の変化として分かるかどうかははなはだ疑問です。
( 2) 表皮効 果
導線に高周波電流が流れるとき、電流が発生する磁場の影響で電流は表面部分を流れる傾向があります。これを、表皮効果と呼び、周波数が高いほどその影響は大きくなります。すなわち、高周波になるほど実効抵抗値が大きくなり高域の低下を招く可能性があります。では、これを定量的に考えて見ましょう。周波数
ｆ のとき、表皮効果の生じる厚さ ｄ は ｄ ＝sqrt [ 2 ρ /（ 2 πｆμ） ] で与えられます。 （μは真空の透磁率、ρは比抵抗） 銅線についてｆ ＝ 20000 Ｈ ｚとして計算すると、 ｄ 〜 0.5 mm ｆ ＝ 50000
Hzで ｄ 〜 0.3 mm となります。これより太い単芯線を使うと確かに表皮効果による高域の減衰が無視出来なくなります。実際にどれくらいの抵抗変化が生じるかは簡単な式では表せませんが、理論的計算により求められており、下表に直径1.6mm ( 実測値と比較するた めAより少し太めで計算） 、長さ4 ｍ （往復で8ｍ） の銅線について求めた結果を実測値とともに示します。透過率(%)、減衰率( dB)はスピーカー負荷を8オーム一定とし,1kHz を基準として計算しています。 なお、透過率は、スピーカー端子電圧/アンプ出力電圧×100
です。 （直流抵抗による減衰 （一定） を除くため ）
表 3 表皮効果 周 波 数 ( kHz ) 10 20 50 100 200 備考 交流抵抗/直流抵抗 1.09 1.21 1.64 2.34 3.09 計算値 同上 実測値 1.04 1.23 1.50 2.0 日立電線データ 同上 同じ断面積のリッツ 線
1.00 1.08 1.23 1.63 同上0.25 φ ｘ42 本 交流抵抗値（ｍΩ）/8ｍ 76 82 112 160 212 計算値に基づく SP端への透過率（ % ) 99.9 99.8 99.5 98.9 98.3 減 衰 率 ( dB ) -0.01 - 0.02 - 0.05 - 0.10 - 0.15
この表からわかるように、1.6φ単線の表皮効果による抵抗増加は100kHz
で計算値、実測値とも約2倍となり、20kHzでも無視できませんが、これによる信号減衰は、ケーブルの抵抗値がスピーカのインピーダンスに比べ十分に小さいため極わずかです。
ここで、表皮効果の低減のため使われる リッツ線 （互いに絶縁された細線を束ねた線） についても抵抗変化のデータがあり載せてありますが、確かに表皮効果による抵抗増加は抑えられているもののそれほど効果がないことがわかります。 （ちなみに、上の例の素線である0.25 φ単線の表皮効果 （抵抗増加） は 100 k
Hz でもせいぜい1%くらいです） これは、表皮効果とほぼ同じ原理で生じる近接効果によるものでリッツ線を使ったからと言って高域の減衰は免れないことに注意する必要があります。また、大多数のケーブルがそうである裸多芯線のケーブルについては単芯線とリッツ線の中間にあると考えられ多芯構造にしたことによる表皮効果の低減はあまり期待できません。なお、太い単芯線と多芯線を組み合わせたハイブリッド線というのもあるようですが、少なくとも表皮効果という観点からはあまり意味はありません。
なお、上の減衰率の計算は負荷のスピーカーのインピーダンスを一定としていますが実際には周波数とともに増加するので、減衰率はさらに小さくなります。いずれにせよ、表皮効果による高域信号の減衰は以下の自己インダクタンスによる減衰より小さく、少なくとも可聴周波数では問題にする必要はなさそうです。
(3)静電容量：通常の並行2芯線では行き帰りの2線間に静電容量
Ｃ があります。これがケーブルの直流抵抗 Ｒ +アンプの出力インピーダンス
Ｚ とでいわゆる直 流ＲＣ 回路を形成し、さらにスピーカーのインピーダンス
R sp を考慮しモデル化すると右図のような等価回路となり高域信号の減衰を招く可能性があります。しかし、具体的に4ｍのケーブルＡ （ C=45 pF×4＝180 pF ) についてインピーダンス （ Z c ＝ 1/2π ｆ C） を計算すると20kHzでは約40kΩとなり、スピーカーのインピーダンス
R sp の5000 倍にもなり 、100MHz でやっと8Ωくらいになります。つまり、ケーブルの容量成分は可聴周波数領域の減衰には全くといっていいほど寄与しません。ただし、これはスピーカーケーブルの場合でありプレイヤーとアンプをつなぐピンケーブルの場合は
R sp に相当するアンプの入力インピーダンスが20kΩ程度なのでこちらの方が高音減衰の主役となります（詳しくはここ）。
( 4) ケーブルの自己インダクタン ス
平 行2芯ケーブルは、単位長さ当り L＝（μ/π）ln(線の間隔/線の半径）
で与えられる自己インダクタンスを持ちます。インダクタンスによるインピーダンスは Z L ＝2 πｆ･L なので高周波数領域で減衰を招きます。 直径 1 φ、間隔 4 mm のケーブ ルA 4ｍについての自己インダクタンスの影響を計算した結果を下表に示します
。 この線の直流抵抗は約 0.2Ω 、スピーカーのインピーダンスは 8Ω （一定） としました 。
周波 数( kHz ) 10 20 50 100 200 Z L ＝2πｆ･L（Ω ） 0.25 0.50 1.26 2.51 5.03 位相差（度） - 1.7 - 3.5 - 8.6 - 17 - 31 透過率（％） 99.9 99.8 98.9 95.7 85.5 減衰( dB ) - 0.004 - 0.016 - 0.099 - 0.38 - 1.36
この表からわからわかるようにケーブルのインピーダンスは直流抵抗に比べ無視できない大きさとなります。しかし、これはまず位相遅れに効き、出力の減衰は100kHz
あたりまではあまり効いて来ません。実際にはスピーカーシステムのインピーダンスそのものも高域で大きく増加するので、減衰率はこれより少ないはずです。ということで、自己インダクタンスは超高域で微妙に影響を与える可能性は否定しませんが、少なくとも可聴周波数帯ではほとんど影響はないと言っていいと思います。なお、周波数が高周波領域に入ると、平行2芯線の場合いわゆるフィダー線効果
( 分布定数回路効果 ） で減衰はこの計算より少なくなります。この点についてはオーディオ雑学帳 8 分布定数回路を参照。ただし、ケーブル長が長くなると、例えば100 m とすると20kHz でも -3dB 程度の減衰が生じるので注意が必要です。自己インダクタンスを減らすため、4芯のスターカッド線というのもスピーカーケーブルに使われますが、定量的にどれ位減少するのかは簡単には計算できませんが、その原理から考え、それなりの効果は期待出来るでしょう。私自身もこのタイプのケーブルを使っています。
(5) 自己振動による損失：平行ケーブルに電流が流れると発生する磁場により、同方向電流の場合は吸引力、逆方向電流の場合は反撥力が働きます。従って、交流電流が流れているときは導線が振動し、位相遅れやエネルギー損失を生じる可能性があります。この現象によるエネルギー損失とその周波数依存性を理論的に見積もるのは、上記の(1) 、( 2) 、( 3)の場合に比べ難しく現時点では適当な理論式が見つかりません。最近のスピーカーケーブルの宣伝文句にこの現象をいかに抑えるかを強調したものも多いようですが、私の知る限り、実際にどの程度のロスがあり、それをどの程度抑えられるかを定量的に論じたり、測定で示したという例は見当たらず、測定不可能な微小効果だと思います
逆に、それだからこそ、耳で聞いて初めてわかるという神がかり的議論が横行する原因ともいえます。
この効果を抑えるには、コードの被覆材に出来るだけ強く （高弾性率の） 重い材料を使うとか、平行線の間隔を離してやるとかが考えられます。
追記 自己振動の効果をモデルを使って計算してみました。その結果、樹脂や合成ゴムなどの絶縁体にしっかり固定された平行2芯ケーブルの場合、自己振動によるエネルギー損失は多めに見積もっても、直流抵抗によるジュール熱損失のなんと1億分の一程度で、まったく問題にならないことがわかりました。詳しい計算はここ。
この他、磁場中で導線が、スピーカーからの音などの影響で、振動することによって発生する誘導起電力によるノイズあるいは混変調歪が考えられます。これは、自作アンプやスピーカーなどで、しっかり固定していない配線が、トランスやスピーカーからの磁力線の影響下で振動する場合、その線を含む閉回路内の磁束量が変化しマイクロフォニックノイズまたは混変調歪の原因となるものですが、スピーカーケーブルの場合、行き帰り2本の線が一体となって振動する場合は誘導起電流は打ち消しあって流れず問題になりません。2本の線の間隔が振動する場合は、上の計算のようにその振幅はきわめて小く、磁場も地球磁場くらいしか働かないので全く気にする必要はありません。
（大きめに見積もっても、これまた信号電流の1億分の１程度です）
( 6 ) その他 渦電流損失による高域の減衰なども考えられますが、可聴周波数帯では殆ど問題にならないはずです。
実際の測定値ですが、ネット検索で2例見つけました。
(1)（データはここをクリック） これを見ると、4ｍのケーブルでは100kHz まではほとんどフラットで、可聴周波数内では、スピーカーケーブルにトーンコントロール効果など期待できないことがわかります。また、高域の減衰はほとんど自己インダクタンスの影響として説明できる大きさです（ケーブルの電磁気学参照）。
( 2) データ（ｐｄｆ）はここ これ はPA （構内放送など） 用のプロ仕様のスターカッドケーブルです。肝心の測定条件が明記していないのですが、前後の関係から、長さが200ｍ、負荷
８Ω （一定） と思われます。長 さ が200ｍ くらいになっても可聴周波数帯では減衰はなく周波数特性はフラットです。ただし、100kHz付近にLC共振と思われるピークが観測され注意が必要です。
MHz以上の高周波信号、ディジタル信号を伝える同軸ケーブルの伝送特性は全く違う原理
( 分布定数回路） で考える必要があります 。
なお、以上の解析は正確にいうと、アンプの出力端子からスピーカーのターミナルまでをつなぐケーブルの信号伝達特性について述べたものであり、この他、アンプとの相性
（ちょっと漠然とした表現ですが） により音が変わるという話しがあります。これについては、やはりオーディオ雑学帳
6.アンプ・ケーブル・スピーカーの相性で取り上げています。
また、CDプレーヤーとアンプをつなぐコネクトケーブル、ＣＤのトランスポートとADCをつなぐディジタルケーブルの交換によっても音が変わるという話もあるようですが、これらの場合、回路のインピーダンス、信号の周波数が違うのでスピーカーケーブルとは別に論じなければなりません。これについては、オーディオ雑学帳
インターコネクトケーブルとディジタルケーブルを見てください。
また、電源ケーブルの交換によって音が変わるという話もあります。はなはだ怪しいですが、ケーブルの伝送特性に関する上記の解析については同じことがいえます。ただ、電源ケーブルの場合はノイズの混入なども問題になるようで別の要因も考える必要があるようです。電源ノイズの問題については我が家の例を調べた結果を雑学帳 10 電源とノイズに掲載してあります。
以上の解析から結論として言えることは、
i ) 低音域への影響として、直流抵抗による電磁制動力の低下を招かないために、出来るだけ直流抵抗が小さいことが望ましい。当然太い線を短く使うことが原則である。表皮効果を避けるため
細線を束ねた多芯線の方が望ましいがあまり効果はなく、むしろ柔らかく扱いやすいと言う観点から多芯線を選べばよい。もっとも、ダンピングの効いた音は嫌いという人は、その逆で細い線を使えばよい。また、真空管アンプを使っている人は、もともと真空管アンプはダンピングファクターが小さいので
（ 10 以下 ） 細い線でもかまわない。
ii） 高音域への影響としては、表皮効果、自己インダクタンスによる高域信号の減衰が考えられる。ただし、通常家庭で使用する5 m 以下の長さでは可聴周波数帶の上限20kHzでの減衰は0.1dB以下でとても人間の耳で聴き分け出来るような差は生じません。なお、10m以上の長いケーブルの場合については、ケーブルの電磁気学のページに詳しく書いているので参考にして下さい。
iii） 2線間の磁力による幅方向の振動の影響はごく微小で問題にならない。
iv） スピーカーケーブルの 信号伝達特性 は太さを含めた構造できまり、使用している材質には依存しない。普通の無酸素銅で十分で、タフピッチ銅でも問題ない。
このように見てくると、物理特性から見て必要にして十分な
（直流抵抗が小さく、100kHz くらいまでフラットな） 特性をもったケーブルは、最初の表のＡや、それに近い普通のＡＣケーブルでも容易に実現可能です。逆に、変に凝ったケーブルは、物理特性を悪くし、一見 （一聴？） 聴きやすい音にしている可能性があります。というわけで、ケーブル類については、信頼出来るメーカー
（主要なデータを公表していることが必要）
のこのあたりの価格帯で上記の物理特性の解析を参考に、合理的と思う製品を決め、後はあれこれ迷わず、本来の音楽を楽しむことをお勧めします。
左右のスピーカコードの長さについて、短かれば短いほどいいというのは直流抵抗がそれだけ小さくなるのでそのとおりです。アンプがスピーカの中央にないときはどうすべきか？やはり同じ長さにすることを推奨します。その理由は、ダンピング因子を左右スピーカーでそろえるためです。直流抵抗値の項で述べたようにケーブルの長さが異なると見掛けのダンピングファクターが結構変わります。もっともダンピングファクターは20程度あれば充分とも言われていますので気休め程度かもしれません。なお、超高域ではインダクタンスにより位相の回転角が少し変わりますが、これは聴く位置を１，２mmずらした位の差しか生じないので問題はありません。同じ長さにした場合の余ったコードの処理ですが、巻いておいても大丈夫です。リングにすると大きなインダクタンスになりそうな気がしますが、そもそも、コイルのインダクタンスとは電流が作る磁場の逆起電力が原因なので、行き帰りの並行2芯線をリング状にしてもリング内部の磁場は打ち消しあいインダクタンスとはなりません。
さらに忘れてはならないことは、ターミナルでの接触抵抗です。古いケーブルで素線の表面の金属光沢が失われている場合は、端を数センチ切断し被覆をはがすかサンドペーパーで磨くなどしてきれいにし、多芯線の場合は少し捩ってはみ出す素線がないように注意し、出来るだけ強く圧着するのが基本ですが、電気についての経験がないと以外と変なつなぎ方をしている場合もあるようです。自信がなければ、少し高くなると思いますが、必要な長さを予め計っておき、両端にターミナル接続用の金具などを装着したケーブルを使うのもいいかもしれません。
最後に一つ、あえて言いたいことは、抵抗の原因によって音質が変わる、つまり、OFC
（無酸素銅） の音だと かPCOCC （単結晶銅） の音 , さらには銀線の音などというものはあり得ません。それにもかかわらず、ケーブルの広告などで線材に何を使っているかが重視されているのはなぜか？
おそらく、純粋な材料を使えば純粋な音がする、銀を使えばいぶし銀のような音がするといえばイメージ的に訴える所があるからでしょう。それに対し、インダクタンスがどうのこうのといっても難し過ぎてピンとこないのではないでしょうか？
要するに、金属が持つイメージを利用して心理効果に訴える作戦なのでしょう。線材を変えた時の効果についてはオーディオ雑学帳 5.導線の材質でも取り上げています。
追記2 ：銅を超高純度にすると、どういう効果があるかについてはここをご覧下さい。
また、オーディオ雑学 帳 1.ケーブル線材についての３つの迷信でも取り上げています。
追記 Audio FAN という Webサイトの掲示板 （すでに閉鎖されています） にこのページとスピーカーケーブルについての要約を投稿したところ約2週間の間に200件近くの応答があり、この問題についての関心の深さを実感しました。その応答の一部を再録します。ここをクリックしてください。
それでも何故高価なケーブルを求める人がいるのか？ について、オーディオ雑学帳 ９ 心理効果とブラインドテスト でとりあげました。
右図はディジタルレコーディング （ CD ） の原理図です。横軸は時間、縦軸は音声に対応する電気信号の電圧を示します。黒い曲線が元の音声シグナルで、ディジタル化とは時間軸を1/44100秒に分割し
（サンプリング） 、その間の電圧値を16ビットの二進数 （0〜65536 ) で表し記録します （量子化） 。この場合、44100/2 Hz=22kHzより高い周波数の情報は記録されません。再生するときはD/Aコンバータで電圧に戻します。このときD/Aコンバータから直接出てくる電圧は 図の赤線 のようにギザギザの電圧でこれがこのままスピーカーで再現されたら『ギザギザ』した聞きづらい音になるはずです。
（ただし、右の図は極端に誇張して書いてあり
16ビットで量子化するとパソコン画面では完全になめらかな曲線となります。詳しいことはこちらを見て下さい） また音楽CD用に特化されたD/Aコンバータ （ DAC ) ではスムージング回路も内蔵されており、滑らかな変化になりますが元の信号に近づくわけではありません。このとき生じる原音との違いを量子化歪み （雑音） と言います。最近のディジタル信号処理技術の進歩により、CDのディジタル信号を横軸 , 縦軸ともに細分化し （図の青線） ディジタル段階で信号をより平滑にする方法がいろいろ開発されています。私の
DENON のプレーヤー もALPHA プロセッサと称する信号補間技術を使い8倍サンプリング20bit相当の精度で音を再現しているそうです。ただし、この場合でも、もちろんCD化する際にもともと失われていた、20kHz 以上の信号が復活するわけではありません。
これに対し、最近売りだされている、SACD
（ Super Audio CD ） 、 ネット配信で得られるハイレゾリューションソース （例え ば194kHz ,24bit） などは記録段階でハイサンプリング化を行っているので、高域再生能力や量子化歪は大幅に向上しています。
といっても、本来耳には聴こえない20kHz 以上の信号が改善されているだけなので、実際に聴いて違いがわかるかどうかは疑問です。 （詳しいことは 、オーディオ雑学帳 3『高域再生はどこまで必要か？』 に書いてあります。）
ところで、CDプレーヤーにもずいぶん高価な高級機があります。これらは、大体回転部分など機械的精度を高くし、重量も大きいものです。しかし、もしあなたがパソコンの使用者ならちょっと考えてみてください。パソコン付属のチャチなCDドライブで読み取ったデータでも殆どエラーなしで読み取れます。この場合、単にハード的に誤りが無いのではなく、誤り訂正機能によりエラーを訂正しています。実は音楽CDの場合も、かなり強力な誤り訂正機能があり、ディジタル信号を読み取る時のミスは殆ど考えなくてよく、実際、色々な実験でそのことは確かめられています。
（ オーディオ雑学帳2『CDの誤り訂正について』 参照） むしろ、読み取った信号を如何に処理するか、つまり電子回路技術
( 主 にDAコンバータの性能 ） が重要なわけです。もちろん、可動部がチャチだと故障しやすく、それに見合った電子回路部もチャチである可能性が高いのでお勧めできませんが。いずれにしても、CDプレーヤー選択のポイントは機械部でなく信号処理技術や電子回路技術で判断すべきです。
蛇足ながら、ＣＤも再生中は回転していますが、アナログレコード時代に問題になった回転むらも関係ありません。もしあなたが、CDの再生がアナログLPと同じように、読み取った瞬間瞬間のディジタルデータをアナログ電圧に変換しているものと理解しているならそれは全くの誤りです。ここに詳しく説明していますが、CDでは読み取ったデータは誤り訂正符号などと一緒に、一旦バッファーメモリに記憶して処理しこれを水晶発振器からのクロック信号に基づきＤＡ変換器に送っています。つまり、時間軸の管理は水晶発振器で正確に行っているのでディスクの回転むらは再生音に直接関係しません。また、水晶発振器の精度を上げるとディジタル信号の時間間隔が正確になり音質が改善されるという話もありますが、定量的に解析すると、実際に聴いて違いがわかるほどの効果は期待出来ません（ここを参考）。このように見ると、回転・読み取り部
（ CDトランスポート） とDAC部を分離したいわゆるセパレート型にするメリットはほとんど無くDAC部以降の性能がよいものであれば一体型のCDプレーヤで十分です。
i Pod 携帯音楽プレーヤーの元 祖 はSonyのウオークマンですが、デジタル化に出遅れ、現在はApple社製のiPodが主流となっています。私も、第二世代といわれるハードディスクタイプのiPod （ 20 GBタイプ ) から使い始め、現在は2012年モデルのiPod touch （ 32GB ) を愛用しています。通常はCDの音源を圧縮して使用します。標準圧縮方式は、下のディジタルBS放送にも使われている、MPEG-2 AACという方式で、CD数百枚分が詰め込める容量を持つ優れものです。あまりに大量のデータが入るので、聴きたい曲を探し出すのが大変ですが、アップル社が提供する
iTunes というソフトで分類やプレイリストを作って ( 自動 ) 転送する方式なので少し慣れると比較的簡単に聴きたい曲を選び出すことが出来ます。他機種と比較したことはないのですが、選択の要はコンピュータソフトを含めた使い勝手の良さにあると思います。音質の方はまずまずといったところです。
なお、iPodをいい音で聴くためには、イヤホンを少しいいのと取り替えることをお薦めします。
特に、最近のiPodに付属しているEarPodsというイヤホンはイヤパッドを使わないので耳とのフィットが調整出来ず、少なくとも私にとっては残念ながらいい音では聴けません。 現在 （ 2017年5月 ） 、私が使っているのは、Audio-
Technica 製 ATH - CKS990で、空気漏れが少なく重低音までよく再生し 、中高音がクリアで気に入っています。ただし、適当なイアパッドを付けないと空気漏れが激しく低音がほとんど聴こえなくなるので注意が必要です。
最近、家で音楽を聴く時の音源として、テレビの音楽番組のDVD録画を聴く （見る？） 時間がもっとも長いように思います。この場合も音声は、現有のステレオシステム （アンプはAVアンプ） で聴いています。映像付で音を聴くのはオーディオ道にとっては邪道だと言う人もいるようですが、本来音楽は演奏家を前にして聴衆とともに聴くもので、スタジオで部分録音したソースを編集したものが中心のCDのほうが邪道ではないでしょうか？
最近急激に普及しつつあるHDD&DVD
（またはBlu-rayDisk） レコーダーは以前のビデオテープによる録画にくらべ格段に便利で、かつ音質もCD並みと良く近い将来、家庭での音楽鑑賞はこの方法が主流になると思っています。すでに、我が家では数百枚のCDがLPレコードと同様過去の遺物になりつつあります。なお、BSテレビを録画して楽しむノーハウ「BSエアチェックの薦め」もご覧下さい。
ちなみに、現在のデジタルテレビの音声信号の規格は以下の通りです。
NHK のディジタル放送： かって のBモードステレオ （ 48kHz 16bit） に相当するディジタル信号を、MPEG-2 AAC方式で圧縮しているようです。 5.1chサラウンド放送もあり、その音質は気になるところですが、圧縮音の音質を決める伝送ビットレートなど、詳細はあまり知られていないようです。そこで、NHKへ直接問い合わせた結果を別ページに掲載しておきます。
結論的には、2chステレオ放送でも、5.1chサラウンド放送でも、BモードPCM放送に遜色ない音質を保っているということのようです。とはいっても、5.1chサラウンド放送を2chステレオで聴くと、多くの情報を失うことになるので、
AVアンプと組み合わせ5.1ch で聴くことをお薦めします。その方がより高い臨場感が得られるといってもいいでしょう。
ただし、CDにもいい録音とそうでないのがあるように、音楽番組も国内収録のクラシック番組はまず安心して聴けますが、海外収録のものはばらつきが多くベルリンフィルの演奏などもせっかくの良い演奏が音質がもう一つでがっかりさせられることもあります。
現在ではテレビ放送を録画するにはハードディスク+DVD （またはBlu-rayDisk） レコーダーを使うのが一般的ですが、これはそれ以前のビデオテープレコーダーに比べ、大変便利な機能を満載した『優れもの』です。その機能の一端を紹介しますと。
まず、一般的 にDVD録画/録音が従来のテープ方式に比べ優れている点は(1)収納スペースが大幅に節約できる。(2)再生の際瞬時に曲の頭出しが出来る。当然巻き戻し操作は不必要。(3)画質・音質の劣化がない。といったところでしょうか。かんじんの画質/音質はどうかというと、DVDレコーダーの場合、画像･音声の品位
（データ圧縮率） が任意に設定可能 で （ただし設定可能範囲は機種依存） 、目的によって色々な品位での録画/録音が可能です。音楽番組を録画する場合は音質重視で非圧縮リニアPCM録音が可能です。
さて、HDD内臓の機種が優れている点はその編集能力です。
多岐にわたるので私が音楽番組を現有の装置 （ TOSHIBA RD - S302 ) に録画編集する方法を紹介します。
まず、やるべきことは録画/録音の品質設定です。普通の音楽会は2時間強で休憩時間を除けば実質2時間以内になると思いますがこれを1枚のDVD-R ( 4.7GB ) に記録するために音声はリニアＰＣＭ、画像は4.0Mbｐs と音質優先の初期設定にしておきます。 ( 音声をリニアＰＣＭにすると画質も最高品位でしか録画できない機種が多いので注意！）
実際の録画はほとんどディジタルBSテレビ （ハイビジョン放送を含む） の録画予約でハードディスクに記録します。なお、その時見たいときは追っかけ再生が可能なので録画が始まって後、始めから見られます。
後で再生するとき、曲の区切り点や休憩時間の前後に印を付けておきます
（これをチャプター区切りをいっています） 。こうして録画した番組をDVD-R （又 はDVD-RAM ) に記録するときは編集機能を使って、メディアに記録可能な長さ範囲内で、必要な部分 （チャプター） を取り出しダビングします。この時少々面倒ですがタイトルなどを付けることも出来ます。
HDD ＆ブルーレイレコーダー
AVアンプのところで紹介したように、最近5.1ch サラウンド放送など多チャンネル音源が容易に手に入ります。これを録画・再生するにはDVDレコーダーでは役不足で、ブルーレイレコーダーが必要となります。といっても、最近のレコーダーはほとんどブルーレイディスク対応になっていますが、これを有効に使うにはAVアンプが必要なので、こちらも手に入れる必要があります。
オーディオラック Topへ
オーディオラックにも随分高価なものがあり、振動による悪影響を避けるため必要だといわれています。確かにアナログプレーヤーと真空管アンプを使っていた時代は振動に極めて敏感でありラックにも細心の注意を払う必要がありました。 しかし、CDプレーヤーと半導体アンプを使う場合、外部から伝わる振動がCDプレーヤーやアンプを通し音質に与える影響は極めて小さく、心配する必要はありません。これについては無音のCDを用いた実験を行なって確かめてみました。ただ、どんなラックでもいいかというとそうでなく、例えば側板や背板に薄いベニヤ板などが使ってあると共振を起こす可能性があり悪影響を与えます。したがって、オーディオラックは単純な棚形式の物がよく、強度や重量はそれほど気にすることはありません。
言い換えれば、ラックの影響は振動が電気系を通じて生じるのではなく、CDラックや一般の家具と同じように、それ自身の振動に注意すればよいいうことです。もちろん、オーディオラックはスピーカーに近い場合が多いのでより細心の注意が必要です。
現有オーディオ AV システム と選択理 由 Topへ
以上は各コンポーネントについて、なるべく具体的な数値を挙げ定量的な議論になるよう心がけてきましたが、実際にどのような製品を買ったらいいのかについては一切言及していません。それは、私自身それほど製品についての知識が豊富でなく、また肝心の試聴も行なっていませんので、やむ得ないことと思っています。
以下のシステムは、自分自身が使っているコンポーネントですから、当然自分の考えに沿ったものであり、スピーカーなどは試聴もしています。選択に当ってのプリンシプルは、各機器について、ある価格帯までは価格に比例した性能が期待できるがそれ以上になるとあまり画期的な向上は期待できない臨界価格というものがあると考えています。そこが狙い目になるわけですが、問題は、これがどれ位の価格になるかであり、私の感じでは、大雑把に、CDプレーヤー,アンプ,スピーカ （ 1本 ） が各10万位ではないかと思っています。また、スーパー （サブ） ウーファーをうまく使うことが臨場感ある音楽再生を得るコツではないかと思っています。
なお、このサイトを見て、私も殆んど同じようなシステムを使っているというメールをいくつか頂戴しました。皆さん、技術屋さんで、ここら辺が技術面からアプローチした場合の一つの解ではないかと密かに思っています。
また、ここに、時計の購入と比較してオーディオ製品の選択の基準を論じたコラムを掲載しています。
リスニングルーム： 約 10 畳 （約4.7W×3.7D×2.45
Hm ) の洋間。
床は板張りカーペット敷き、天井はボード張り、壁は竹組み土壁、壁面は板張りの上にクロスの壁紙張。
CDプレーヤ： DENON DCD - 1650AR
ALPHA プロセッサー搭載 2 Hz-20kHz 歪み率 0.0018 %( 1kHz ) SN 比 118 dB 11.9kg
(1)CDPについては昔から定評あるメーカーの製品
( 2) ALPHA ( Adaptive Line Pattern Harmonized Algorithm ) プロセッサーによるディジタル信号の量子化歪補正原理が理にかなっている。
( 3) 上位製品 DCD - S10 とは外装に違いのみ 。
プリメインアンプ： Accuphase E-306V
カレントフィードバック方式 120W / Ch ( 6Ω ) 高調波歪率 0.035 %
周波数特 性 20-20,000
Hz - 0.2dB 2-150,000 Hz - 3.0dB
ダンピング・ファクター：100 ( 8Ω 50Hz )
パワーメータ リモコン( 音量、入力切替） AC アウトレット 付
重量：20.5kg
( 1) リモコ ン （ヴォリュームおよび入力切替スイッチを駆動するモーターをコントロールする方式） 操作が可能
(2)メインスイッチ連動のACアウトレット装備
( 3)電流帰還方式は電圧帰還方式より原理的に優れているはず
このアンプは前書きの臨界価格を大きく超えて、少し贅沢な選択ですが、たまたま手に入る機会があったので現在のものに更新しました。
音質としては、以前使用してい たPionier A-717 と差は感じませんが、使い勝手が良く気に入っています。
AVアンプ ：YAMAHA RX - V477
5.1 ch 定格出力 ： 115W / ch 周波数特 性 20
Hz - 20 kHz 全高調波歪率 0.09 %
ダンピングファクター 120以 上 重量：8.0kg
5.1chサラウンド対応 FM / AMチューナー内蔵 自動音場補正機能 ( YPAO ) 付
各種出力モード ： 各種ホールの音響環境の再現 （ DSP 使用） 、 Straightモード （トーンコントロールのみ可能 ）、
ダイレクトモード （入力信号に１一切手を加えない ）
上位機種 （ RX- V577）との主な違いはチャネル数が5.1まで（577は7.1ch）、無線LAN非対応
スピーカー： DIATONE DS - 1000 ZA
方式：3 way 密閉式 27 cm ウーファー （アラミッドハニカム） 6 cmドームスコーカ ー ( B 4 C ) 2.3cmドームトウイター ( B 4 C )
周波数特性：35-60,000
Hz , クロスオーバー周波数： 600Hz 、5000
Hz , 定格入力 ：60W （最 大180W ) 音圧レベル：90dB/W/m
外形：360 ( W) ×690 ( H ) ×341( D ) 重量：31kg
(1)各音域における制動能力が高い
( 2) B 4 C は軽く、剛性が高く、かつ内部損失も大きいという振動板としては理想的な性質
スーパーウーファー ： YAMAHA YST - SW1000
方式 ：30 cmウーファー アクティブサーボ アン プ( 120W 内蔵)
周波数特 性 16 - 160 Hz ( - 10dB ) 24-120 Hz ( - 3dB )
外形：580×440×440 重量：48kg
HDD &ブルーレイレコーダー ：Sony BDZ - EW210
i Pod touch 32GB
・関連記 事
黒い肌と白い肌の双子が誕生 - GIGAZINE
女性が自分の体型で気にしているところは？ - GIGAZINE
結婚を意識し始めるの は
「1年以上お付き合いしてから」が1位で43％ - GIGAZINE
女性が求めるクールビズファッションは「清潔 」 「 さわやか 」 「 涼しげ 」 - GIGAZINE
働く若い女性の4割は冷房による「夏冷え」で、午後に多い - GIGAZINE
女性が結婚相手に求める条件は、もはや「経済力」だけではない - GIGAZINE
2006年08月06 日 01時09分00 秒 in 動画 , Posted by darkhorse_log
You can read the machine translated English article here .
Reddit Email 0 Shares
Another Fraud on Iran : No Legislation on Dress of Religious Minorities
Maurice Motamed , the representative of the Iranian Jewish community in Iran ’s parliament , has strongly denied the rumors started by Canada ’s National Post that the Iranian legislature has passed a law requiring members of religious communities to wear identifying badges .
The report was also denied on Montreal radio by Meir Javedanfar , Middle East Analyst and the Director for the Middle East Economic and Political Analysis Company .
The National Post was founded by Conrad Black and has been owned by CanWest since 2003 , * is not a repository of expertise about Iran .
It is typical of black psychological operations campaigns that they begin with a plant in an out of the way * newspaper that is then picked up by the mainstream press .
Once the Jerusalem Post picks it up , then reporters can source it there , even though the Post has done no original reporting and has just depended on the National Post article , which is extremely vague in its own sourcing ( to “ human rights groups ” ) .
The actual legislation passed by the Iranian parliament regulates women ’s fashion , and urges the establishment of a national fashion house that would make Islamically appropriate clothing .
There is a vogue for “ Islamic chic ” among many middle class Iranian women that involves , for instance , wearing expensive boots that cover the legs and so , it is argued , are permitted under Iranian law .
The scruffy , puritanical Ahmadinejad and his backers among the hardliners in parliament are waging a new and probably doomed struggle against the young Iranian fashionistas .
( The Khomeinists give the phrase “ fashion police ” a whole new meaning ) .
There is nothing in this legislation that prescribes a dress code or badges for Iranian religious minorities , and Maurice Motamed was present during its drafting and says nothing like that was even discussed .
The whole thing is a steaming crock .
In fact , Iranian Jewish expatriates themselves have come out against a bombing campaign by the US or Israel against Iran .
There are still tens of thousands of Jews in Iran , and expatriate Iranian Jews most often identify as Iranians and express Iranian patriotism .
I was in Los Angeles when tens of thousands of Iranians immigrated , fleeing the Khomeini regime .
I still remember Jewish Iranian families who suffered a year or two in what they thought of as the sterile social atmosphere of LA , and who shrugged and moved right back to Iran , where they said they felt more comfortable .
This affair is similar to the attribution to Iranian President Mahmoud Ahmadinejad of the statement that “ Israel must be wiped off the map . ”
No such idiom exists in Persian , and Ahmadinejad actually just quoted an old speech of Khomeini in which he said “ The occupation regime over Jerusalem must vanish from the page of time . ”
Of course Ahamdinejad does wish Israel would disappear , but he is not commander of the armed forces and could not attack it even if he wanted to , which he denies .
I had a very disturbing short email correspondence with a reporter of a major national newspaper who used the inaccurate “ wiped off the face of the map ” quote .
When challenged , he said it was “ carried by the news wires and is well known ” or words to that effect .
I pointed out that the “ quote ” was attributed to a specific speech and that the statement was inaccurately translated .
When challenged further he alleged that his trusted translator in Tehran affirmed that Ahmadinejad had said the phrase .
When that was challenged , he reported that the translator said that anyway he had said something like it .
When I pointed out that the translator was either lying or lazy , the reporter took offense that I had insulted a trusted colleague !
I conclude that this reporter is attached to the phrase .
He complained about being challenged by “ bloggers ” and said he was tempted to stop reading “ blogs . ”
So this is how we got mire in the Iraq morass .
Gullible and frankly lazy and very possibly highly biased reporters on the staffs of the newspapers in Washington DC and New York .
And they criticize bloggers .
On how Iran is not actually any sort of military threat to Israel , see the op-ed at the Star Ledger by Thomas Lippman and myself .
Lippman is a veteran Washington Post correspondent who covered the Iraq War .
Note : I had corrected the para in our op - ed that referred to the “ wiped off the map quote ” but somehow an earlier draft got sent out accidentally .
Since the article instances it as an unlikely hypothetical , no harm done , I think .
Antonia Zerbisias has more on the Benador connections of this story .
Same agency as got up the Iraq War .
See also Taylor Marsh .
—-
* Thanks to readers who corrected this assertion .
See comments for more .
It 's about time !
Reported a couple of hours ago on CherryFlava - Google Maps has switched on the light in darkest Africa .
Darkest , of course , because up till now we have been a fairly insubstantial white blob in the world 's most popular online mapping service
This is important why ?
Well , it 's free of course .
And Google Maps has this nifty little interface where you can plugin and geomap any point ... gratis .
Companies like MapIt and others who have been hoarding this service for a small fortune must be quaking in their map - making boots .
( Apologies for singling out MapIt , but last time I got a quote for some substantial geo-mapping , it worked out cheaper to hand - sketch my crinkly old Book of the Road ! )
Expect to see a proliferation of Google Maps chatter in the near future :
Companies will add buttons to their websites where you can autozoom to a GoogleMap .
Sales forces will start GooglePinning their customers .
Property websites will be scrambling for developers as consumers start route - planning their Sunday house shopping .
Car GPS manufacturers will be scrambling for sales people ( you did know Google Maps can display on your cellphone ? )
It 's opened a whole can of mashups ( check out the link to the left to be really impressed ) .
The world as we know it ...
It 's a big event in our fledgling Internet country .
Just how it rolls out will remain to be seen .
The detail is not quite there - Google seems to have got the main streets right , but nothing to the level of detail they have for the States .
We 'll get there ...
In the mean time ... start playing .
The robot will go on sale in mid-September
The one - metre tall humanoid Wakamaru robot is being marketed as a mechanical house - sitter and secretary .
Japanese manufacturer Mitsubishi Heavy Industries expects the first robots to go on sale in September .
" This is the opening of an era in which human beings and robots can co-exist , " the company said .
The company says the robot can watch over homes while the owners are away , alerting them to possible burglaries .
It can also apparently help monitor the condition of a sick person .
And according to Mitsubishi , the robot can act as a secretary , recording notes and appointments and reminding owners of them with well - timed announcement .
The Wakamaru weighs 30kg ( 66 lb ) and is expected to cost 1.58 m yen ( US $ 14,300 ) .
Mitsubishi Heavy
Industries says it is the first robot with communication ability to be sold for use in the house .
It is powered by rechargeable batteries and moves around on wheels , Japan 's Kyodo news agency reports .
This is the second stable release of Apache Hadoop 2.10 line .
It contains 218 bug fixes , improvements and enhancements since 2.10.0 .
Users are encouraged to read the overview of major changes since 2.10.0 .
For details of 218 bug fixes , improvements , and other enhancements since the previous 2.10.0 release , please check release notes and changelog detail the changes since 2.10.0 .
The Ethics of Scambaiting Most decent people who stumble across this site are initially amused by the antics but then start to feel some pangs of conscience - sure its funny but maybe its not very * nice * to string them along like that .
After all , surely they wouldnt be doing it unless they had to etc
Over time there have been some excellent answers to this question so it was decided to collate these together .
1 . Surely no one believes it when they get one of these letters ?
It often comes as a surprise when you hear of someone who actually believed that some ex-presidents son wanted their help to rescue the family fortune .
In February 2004 , Nigerian Finance Minister Ngozi Okonjo - Iweala said :  In Nigeria , we are always amazed that anyone could be so stupid as to respond to such an offer . 
The fact is that many people do believe these letters  enough to make 419 crime quite a lucrative money earner .
It has been estimated that there are well over 250,000 scammers involved in 419 scams worldwide and that they reap in over US $ 1.5 billion annually .
The average victim pays out US $ 20,000 .
People who already know that its a scam tend not to get taken in .
But there are so many variations from help me get this dead mans money out of the country before the nasty government confiscates it to  I m dieing .
Please look after my children when I m gone that it is quite easy for someone who does not know to get sucked in .
And of course once the scammers have their claws into their victim they use every trick they know to make them pay more and more until there is nothing left .
ScamPatrol comes across between 15 - 20 victims per week , many of who have already sent money at the time they were warned .
Sadly , many of those are already so convinced by the story that they refuse to believe the warnings and continue to contact the scammers .
2 . But only people who are greedy and a bit dishonest themselves would get sucked in .
After all most of the letters require you to pass yourself off as a relative on legal documents so they deserve what they get .
Many of the early letters did state either that person x ( usually a foreign national ) had died without relatives and the corrupt government would confiscate this money if person Y ( the victim ) doesnt impersonate a relative to claim the money .
Another variation was that the money had been obtained by over - invoicing oil contracts and they needed help to sneak it out of the country .
But usually these letters had a disclaimer to the effect of , " This is a completely legitimate transaction .
It will be carried out legally , and you will be protected from any breach of the law . "
This was to reassure more honest victims that everything was above board and legal .
Now letters come in hundreds of different formats  just check out the Surplus Letters Forum !
There are the well - known next - of - kin letters , the orphan scams , repentant dying sinner needs help giving fortune away to charity , tsunami victim donation appeals , fake cheque scams , wash - wash , anti-scam scams ( been a victim of 419 crime ?
Well get your money back for you  at a price ! ) and more .
Good , well - meaning people get tricked .
Consider this woman : From : XXX XXX Jennings < [ email protected ] >
To : Amanda Fairheart - Smythe
Date : Tue , 7 Dec 2004 12:09:16 - 0600 ( Central Standard Time ) Dear Amanda Fairheart - Smythe , I wish I had received this email over 3 years ago .
This man has stolen all that I had saved and money that I borrowed .
I heard from his Mother (? ) telling me a sad story that she was dying from Aids and wanted me to take her children as my own when she died .
She had set up an Inheritance account and put it in my name .
How stupid could I have been ?
What I sent was to cover legal fees , legal documents , etc ...
The money was never sent here .
I have heard in the last couple of days from the bank and have found out that Kwesi Bandermann and others are thieves .
Why did it take over 3 years to find this out ?
I would never put your informants life in danger .
My life is in danger now as well as my family .
I have received threats this week .
I am so afraid now and do n't know what to do .
How did you know that Kwesi Bandermann was expected to arrive here by plane ?
He did not arrive and I pray to God he does n't .
How did you get this email address ?
Only 2 people had it .
It was Mr. Richard Meddings and Kwesi Bandermann .
I can tell you the whole story if you need it .
Sincerely ,
XXX XXX Jennings
All she wanted to do was adopt some children whose mother had died of AIDS .
She was scammed over 3 years and lost vast amounts of money .
Greedy ?
I dont think so .
Also consider the vast number charity scams .
Less than 2 days after the tsunami killed over 200,000 people in Asia on Boxing Day 2004 , scam letters were being circulated .
People responded to these not because they were greedy but because they were generous and wanted to help those in trouble .
3 . People would n't send them money if they did n't have it to spare .
Again , this is false .
Those who fall for these scams believe they are about to get millions of dollars .
Compared to such huge sums what is $ 20 - 60,000 ?
They see it as a 100 % risk free investment that will pay off within days or weeks .
Many of the victims take out personal loans , re-mortgage their homes , sell possessions , borrow from family and friends , and more to send money to these scammers .
When the money is gone and the scam finishes they are left with crippling debt .
I am a pastor in United Arab Emirates and am also a victim of them .
I am poor and hardly feed my family with my meager earnings .
I received an email on 28 Feb 2001 from a person called " Shan Lee Shun " saying that he is the adopted son of a Japanese widow who left huge wealth .
He informed that this lady made a will to divide a part of her wealth to many humanitarian organizations and churches world wide and my name is also included in that .
My portion he said was $ 1.6 million .
He sent some documents to ' prove ' that and said that the money is invested with a GLOBAL SECURITIES AND COURIER COMPANY in Amsterdam and I was invited to visit Amsterdam to get this transaction done .
Foolishly believing this I went to Amsterdam but before going they said that a handling charge of $ 18,000 should be given but I had not even $ 500 with me .
When I told about this to a friend , trusting me , he gave this money by acquiring a loan from his bank on the promise that I would return this amount soon .
I sent this to them to transfer the money to account in UAE .
Then they informed me that in order to release the amount I should produce a Drug Clearance Certificate .
For that they said that $ 50000 was required .
Still believing this , I told another friend of mine and he offered to help me by acquiring a loan from the bank .
With this amount I went to Amsterdam where they took the money from me , gave me a ' certificate ' and sent me back along with some bank transfer ' receipts ' of money to my account .
Later on I came to know that this was fraud and I got cheated .
Since then I am in a very difficult situation that I cannot even feed my children well or send them properly to school .
I am paying back the amount every month with almost all of my earnings and still I need to pay a big amount which is left .
I just pray to God to settle my debt .
I have complained once to the Amsterdam Police and no action has been taken by them .
God bless you for all what you are doing to help these kind of victims .
Yours sincerely Pastor John C 04/12/03 4 .
They wouldnt send much .
After a couple of times they would realise that they re being duped before they lose too much money .
It would be nice if that was the case .
However , the most successful of these criminals are very good at what they do .
Plus , it gets to a point where the victim thinks  Ive come so far and paid so much , surely it this is the last payment .
The victim becomes trapped into a never - ending spiral of fees and setbacks each costing more and more money .
There are documented cases of victims from a number of different countries who have paid out millions to these scammers .
Some of them are still convinced that the money they were promised a share of exists .
Investors hit twice in scams , court told  over $ 2 million Nigerian Money Scammers Claim a Major Victim - $ 320,000 5 .
But the scammers are only trying to get ahead & feed their families .
If the West had n't raped their country of its wealth they would n't have to do this .
Funnily enough , this is the argument most often used by the Nigerian lads and their supporters .
Recent lad visits to the forum show that this is a prevailing justification for their scamming .
Basically the argument goes something like this : 1 . Nigeria was a happy and peaceful country until the west came along .
2. Western companies , such as Halliburton and Shell , bribed their way into the country and proceeded to strip Nigeria of its assets leaving the inhabitants poverty stricken and struggling to survive .
3 . Therefore the West is responsible and now it is payback time .
Lad to Janne Pekkala ( Baiter ) : Ok , I do n't realy call it cheating , most times the smart person become victorious .
Some body has to pay what we call retribution From what Africa went through during the Slave trade era
The west took all our resourses , Manpower , and our cultural and traditional wares Great acheivements
Some body will pay some how what your lineage owed
This fails to take into account several very basic facts and concepts : 
There is a culture in Nigeria that esteems those who can make money without working .
One moderator of our forum , Old Coaster , grew up in Nigeria and notes :
In the 18th century , European traders sat in hulks and trading posts at the mouths of the Oil Rivers , Badagry and other sites and were well used to the ridiculous amounts demanded by Nigerian traders for Palm Oil , Ivory and Slaves .
Serious negotiation was involved and people like John Holt are on record complaining about the difficulty of dealing with the locals I grew up in Nigeria long before oil was discovered in the Niger Delta .
The culture of Southern Nigeria has always admired those who can make money without working and I have scam letters going back to the 1950's .
Us Old Coasters became increasingly irritated with the outrageous prices demanded by traders for Nigerian Craft work as the tourist business increased and naive tourists ( usually Americans ) paid the initial prices asked which could be up to 20 times the going price elsewhere .
The somewhat " jack the lad " culture of southern Nigeria combined with the stupidity of foreigners showed how easy it was to make money from the white mugus and intelligent scammers soon developed the 419 scams , initially via fax and then via the internet .
Children raised in this culture soon learn that scamming is acceptable  especially if you are successful .
A Nigerian member of this forum wrote :
The attitude of the family is largely dependent on the degree of success their chum has with scamming , if the lads been on it for 3 yrs and only has a fairly used car to show , he 's a failure and no - good ... but if he 's built a couple of houses and cruises around in an X5 , all hail the king !
They even give him a chieftaincy title in his hometown !!! 
Using internet cafes costs money .
Those poor starving Nigerians who cant afford to feed their family also cant afford to use internet cafes . 
It is the better educated Nigerians who are able to speak some English .
While we may laugh at the way they mangle it ( how well can you write in another language ? ) they wouldnt be able to speak it at all if they werent somewhat better off than many of the rest of their countrymen .

Scams do not target Westerners .
They target anyone with money .
In this thread one of the 419eater moderators , Lew_Skannen replies to this claim with a list of some of the victims that he has personally spoken to :
1 . Thai women , catering assistant in Bangkok - lost about £ 20,000 of money borrowed from family and employer .
When she told the scammer she had no money he told her to go borrow some .
2. Saudi Arab - $ 130 K
3. Egyptian - sick wife - lost $ 10 K
4. Egyptian - $ 7 K
5. Black American woman - student - lost $ 2K
6. Black American woman - single mother - lost about $ 10 K but was saved from losing another $ 20 K by a timely phone call .
7. Korean guy - Lost $ 1000 +
8. Mexican woman - reasonably wealthy family I think - lost $ 120 K
9. Polynesian woman - $ 5 K
10 - Colombian man - $ 500 only .
 Successful scammers make a lot of money out of it .
If they were really doing this to right past wrongs then the money would be used to assist the poor .
But this money doesnt get distributed to the poor .
It goes straight into their own pockets .
The money that their victims have borrowed to fund this business deal and will spend years paying back goes on supporting a lifestyle that very few others in Nigeria can enjoy .
In the course of this business I have purchased several luxury cars and built many large houses which I rent out .
Believe you me my friend , an American sucker is born every hour .
Take you for instance if you had any money you would have lost it .
The only thing keeping you safe is your poverty .
You should thank God for that ! 
Many countries are poor and many countries have come off second best from colonialism but Nigeria has a huge amount of valuable natural resources .
There is more than enough to drag it out of poverty .
However corruption is a colossal problem - Nigeria is rated as the second most corrupt country in the world ( after Bangladesh ) and that corruption is right through the whole of the society  from the top down .
Nigeria will not be able to escape what some see as the legacy of colonialism until this problem is dealt with .
As long as it is tolerated , or worse encouraged , by the majority of people then they will continue to struggle as a poor nation , stigmatized by a reputation for corruption and scamming .
6 . Those pictures with the signs & poses are degrading .
How can you make them do that ?
They have a choice and they could ( and sometimes do ) choose not to send a picture .
There are no trunk boxes with $ 20 million that they must get out of the country .
They are simply doing it to extort money out of the victim .
If they believe that holding a silly sign or posing with a fish on their head is going to get them some easy money from a gullible victim then they will do what it takes .
They are criminals .
Actually there are a couple of benefits from asking for photos with signs .
One , of course , is the humor aspect .
Another excellent benefit is that now some scammers are becoming wary of any requests for signs and are dropping legitimate victims as soon as they ask for some kind of photograph .
This is always a good thing !
7 . Okay , so they are trying to get money out of people .
That s a crime but it not like its fatal !
Sorry guys , actually it can be .
Numerous victims of scammers have committed suicide or been murdered due to these scams .
One particularly nasty type of scam involves getting a victim to travel to the scammers country , usually Nigeria , South Africa or to Amsterdam , with large amounts of cash to finalize the transaction .
The victim is then kidnapped , often beaten and tortured and sometimes killed .
This is not a rare event .
It has happened numerous times .
At the time of writing this FAQ the latest known victim was a 29 year old Greek man , George Makronalli , who traveled to South Africa as part of a 419 scam .
He was then kidnapped and killed when his family refused to pay the ransom .
A day later , police found George 's body in Durban .
Both his legs and arms were broken and he had been set alight - probably while he was still alive .
More links to victims stories :
http://www.crimes-of-persuasion.com/Nigerian/nigerian_victims.htm
http://www.crimes-of-persuasion.com/Victims/victims.htm
- scroll halfway down the page to read the stories
Even if the scam does not cost the victim their life often it can strip them of everything they have worked for and hold dear .
Many victims end up losing their homes , retirement or education savings , businesses and jobs , and their professional or personal credibility .
All they are left with is large debts that they have no way of repaying .
The tangible cost of fraud crime is easily translated into dollar amounts .
Less easily measured , and perhaps the most exacting cost of all , is the severe emotional impact of fraud crime on many of its victims .
Fraud crime is a personal violation .
Although there is no serious physical injury many victims of con-men speak of the betrayal as the psychological equivalent of rape .
Their trust in their own judgment , and their trust in others , is often shattered .
They may have hesitated to tell family members , friends , or colleagues about their victimization for fear of criticism .
Family members and business associates may even have been financially exploited at their urging , resulting in increased feelings of guilt and blame .
The dread becomes immeasurable , unrelated to specifics , just an all encompassing blanket of depression .
Fraud often evokes the following feelings or emotional reactions among its victims : self - doubt , shock , disbelief
societal condemnation and indifference ( the attitude that victims of fraud deserve what they get as a result of their own greed and stupidity )
isolation ( when victims suffer their losses in silence rather than risking alienation and blame from family members , friends , and colleagues )
anger , resentment , and a sense of betrayal toward the offender for taking advantage of them especially if they were someone they knew
frustration with criminal justice professionals
shame , embarrassment , and guilt if they feel they contributed to their own or others ' victimization
fear for their financial security
increased concern about their personal safety and well - being or that of their family .
Some of the same physiological and long - term emotional effects experienced by victims of violent crimes are also experienced by fraud victims such as :  feeling of terror or helplessness
 rapid heart rate
 hyperventilation
 panic
 inability to eat or sleep
 loss of enjoyment of daily activities
 depression Short - term effects on victims include : preoccupation with the crime ( thinking about it a great deal , talking about it constantly , replaying the crime , wondering what they could have done differently , etc . )
inability to concentrate or perform simple mental tasks
concern that other people will blame them for what has happened
increased strain on personal relationships ( even to the extent of divorce or withdrawal of support )
In the extreme , fraud crimes have led some victims to attempt or succeed in committing suicide .
One of these was Leslie Fountain who committed suicide by setting himself alight after he was cheated by an internet scam .
Artists Against 419 dedicated the Worlds 2nd 419 Flashmob in his memory .
http://news.bbc.co.uk/1/hi/england/cambridgeshire/3444307.stm
http://www.telegraph.co.uk/news/main.jhtml?xml=/news/2004/01/31/ncon31.xml&sSheet=/news/2004/01/31/ixhome.html
http://www.aa419.org/2nd-419-flash-mob.shtml
As you can see , 419 scams are about more than just pick - pocketing a handful of small change from victims .
The scammers ruin lives .
They use every trick in the book to get as much money as possible out of their victims .
They do not care about the people they scam or the effect it has on them .
They dupe the generous and the greedy alike .
No matter what a persons motivation for answering a 419 letter nobody deserves to be put through the kind of hell that these scum have waiting for their victims .
And no scammer deserves to profit from lying and stealing .
That is why we have no problem with baiting .
Every scammer baited , every lad who poses with a sign for a baiter , every false form filled in , every fake bank taken down means that less victims are scammed .
We keep the scammers busy with safe targets .
We occupy them and waste their time .
Hopefully some will decide its not worth it and get an honest job .
Others may get caught in a sting .
Many of the members on the 419eater.com forum are also active on other forums that assist the victims , such as ScamPatrol.org
FraudAid.com
Scamwarners.com
These members have seen first hand the profound effects that are experienced by people who have been scammed .
Some of them deal with hundreds of victims a year .
They know all too well the suffering of the victims .
Any sympathy they might have once had for the criminals has evaporated when faced with the day to day grim reality of the suffering inflicted on innocent men and women who have had the misfortune to get caught up in a 419 scam .
Please dont offend them by siding with the scammers .
Posts that question the ethics of scam baiting , call baiters racists , try to justify the scams or call victims greedy will usually result in a polite request to use the search button before posting .
Continue to post and you may find their patience stretched .
8 . What can I do to help ?
There are a couple of key things you can do to help .

Make sure that your family and friends are 419 safe .
Nothing would be more gut - wrenching than to spend hours baiting and shutting down fake banks just to find out old Aunty Enid has fallen for a scam and sent her retirement savings off to Nigeria !  Bait !
The more baiters the better as it keeps the scammers busy .

Have fun when you bait .
The more you mess around with a lad the more likely hell be suspicious of the next new victim reply that lands in his in box .

Keep alert for scammers details .
Things such as account numbers , physical addresses , fake bank web addresses , ccd lists of other e-mail addresses and so on can be very helpful .
We have a team of dedicated fake bank killers who like to meet new fake banks .
9 . Is n't scambaiting and / or this site racist ?
Our guidelines clearly set out that racism is not permitted here .
For those who doubt our sincerity , heres some evidence to back it up :
* We bait the scammers that come to us .
Often that is via seeding a guestbook that has obviously been harvested by scammers before .
Some baiters pick up scammers from the surplus letters forum here at Eater , and some find them through publicly available lists of known scammers , such as urgentmessage.org or similar sites .
Some baiters choose to bait scammers that approach them on message boards , dating sites , or selling sites such as Ebay or Craigslist .
None of these sources differentiate between colour , race or ethnic origin , so we have no way of knowing what their characteristics are  the only thing we know for sure , or care about at all , is that they are scammers .
*
The scammers can choose to be whatever race , colour or ethnic origin they like , and baiters usually have no way of knowing whether they are telling the truth .
Scammers lie  its in their job description , and they have to be good at it or they dont make any money .
The scammers will rarely tell the truth about anything and will try to avoid sending a picture of themselves  they use magazines and image sites on the internet to harvest pictures of people to conceal their true identity .
We have no way of knowing whether the scammer is sending a picture of someone who shares their ethnic background or race , or whether they are telling the truth about any personal details .
*
Yes , a lot of the trophies and pictures you will see here are of people who are from , or claiming to be from , Nigeria .
There are a lot of Nigerian scammers , as 5 minutes  research on the internet will tell you .
As we often reitierate here , that does not mean that all scammers are Nigerian , nor that all Nigerians are scammers .
The vast majority of Nigerians are law - abiding citizens , and we know that a good many of them are appalled at the reputation that widespread scamming has inflicted on their country .
We share their disgust .
*
White scammers exist and we bait them .
Scammers claim to be from all over the world , and there are indeed scammers all over the world .
Many of the love / dating scammers purport to be white Russian women .
We have no idea whether they are , in the same way that we have no idea if someone claiming to be a black Nigerian actually is what he / she claims to be , but the chances are that we are baiting a significant number of white European , East European or Russian love scammers .
We also bait a number of cheque scammers who say they are from China , and charity scammers who purport to be from all over the world , including Asia , Indonesia ( especially after the tsunami ) , or the US ( after the Katriona hurricane notably ) .
We have no way of knowing their race , colour or ethnic origin , and it is immaterial to us .
*
We have long - standing members who are Nigerian , and also receive comments from Nigerian visitors to the site .
Not one of our long - standing Nigerian members has complained that the ethos of the site is racist .
One of our Nigerian members was a mod until recently  it defies belief to say that he would have agreed to moderate the site if he thought 419 Eater or scambaiting was racist .
*
We have an active moderation team who keep a close eye on posts , and will delete or edit any that infringe Eater policy .
Individual posts are reported for racism from time to time , and they are always acted on speedily .
The person posting it will be censured immediately .
We have banned people for using racist usernames , linking to racist sites , and in one instance we banned a member solely because we discovered that they also belonged to a white supremacist site .
They had not posted anything racist or linked their site , so it was not for show .
They were banned because they were a member of a racist site and therefore not someone we wanted on Eater .
Eaters anti-racism policy is sincere .
We are genuinely offended by the accusation that we are racist , hence this effort to persuade you that we are not .
If you have read this far , thank you , and we hope that you will take some time to read the site , and make up your own mind based on what you see .
This site has a lot of stuff that is fun and frivolous , but some things are serious  the efforts we make to hurt scammers and protect the innocent are testament to that , and just as serious is our intolerance of bigotry .
Article by The Cheshire Cat with additional information by Eight .
Studies show that you can bring about a dream in another person .
One way is by holding an open bottle of perfume under the sleeper 's nose .
Another is by whistling .
A third way is by blowing air across the sleeper 's face with a fan .
Someone else can also affect the content of a sleeper ’s dream .
For example , turning on a light produces happier dreams .
And darkening an already bright room can induce nightmares .
What would happen if I was prevented from dreaming ?
In a study conducted by Dr William Dement , a professor of psychiatry at Stanford University , it was found that dream deprivation produces anxiety , irritability , an inability to concentrate , paranoia , a ravenous appetite , depression , and even suicidal thoughts .
The study was very simple .
Volunteers were assigned beds in a laboratory .
Researchers observed them closely for five nights .
Each time a subject 's rapid eye movements indicated they were starting to dream ( REM sleep ) , the researchers would wake them up and keep them from dreaming .
It seems that it only takes a few days of dream deprivation before the symptoms begin to occur .
Why ca n’t I remember all of a dream ?
How much of a dream we remember depends upon how soon we awaken after the dream .
In one study , sleeping subjects were awakened while they were dreaming in REM sleep .
Other sleeping subjects were awakened 15 minutes after they were in REM sleep .
In 152 out of 191 cases , the subjects awakened during REM sleep remembered they were dreaming and could recall a great deal of content of their dreams .
Hardly any of the subjects awakened 15 minutes after their REM sleep could remember dreaming at all .
If you ’re awakened during or shortly after REM sleep , you ’re probably more likely to remember more of your dream .
Stephen Juan , Ph.D. is an anthropologist at the University of Sydney .
Email your Odd Body questions to s.juan@edfac.usyd.edu.au
The functional language that ’s right under your nose
Recently I ’ve been getting an itch to learn a functional programming language .
I ’ve made a couple attempts on Lisp over the years , with mixed results ; I can write fairly basic Common Lisp , and hack on Emacs a bit , but I ’ve never advanced much beyond that .
I ’d been looking at some of the trendy , popular functional languages ( well , popular among certain circles ) like Haskell , OCaml and Erlang , when I remembered that I already knew a functional language .
In fact , part of the reason why I was hired at my current job was to write in it .
And , as I browsed through a discussion of functional languages on reddit , it was literally right under my nose .
Yup , I ’m talking about JavaScript .
Digression : stupid things people say about languages
Programming languages tend to be a bit like religions : people get attached to them , develop unshakable faith in them and are all too willing to wish hellfire and damnation on heretics who wo n’t see the light .
As a result , they tend to spew out misconceptions about other programming languages in much the same way that a Protestant fundamentalist goes around saying Catholics are idolaters .
For example , a lot of folks who are n’t card - carrying members of the Church of Python ( blessed be Guido and all His works ) like to go around saying that Python is n’t “ really ” an object - oriented programming language , because you have to use self .
Now , this argument really does n’t make any sense ; when defining a method on a class , the first parameter to it is self , and inside the method you reference attributes of the class instance you ’re working with as self .
this and self .
that and so on and so forth .
The reason behind this is simple : it explicitly establishes variable scope ( think about it : take away the self , and you get things like foo = 3 — is that the attribute foo of the class instance , or is it a variable local to the method ?
Using self .
foo = 3 for the former case and foo = 3 for the latter does away with the ambiguity ) .
Plenty of other languages do this ; for example , Java uses this and Ruby uses @ .
Nobody tries to argue that Java or Ruby are n’t “ really ” object - oriented because of that ;
Python goes a little further and requires you to explicitly list self as an argument to the method , but Python people like being explicit .
If being explicit about scoping means Python is n’t really object - oriented , then being explicit about the types of variables and function return values means Java does n’t really have a type system .
A lot of people will also say horrible things about JavaScript , because despite being a really interesting language , lots of people do n’t like JavaScript ( well , to be perfectly honest , lots of people do n’t like the available implementations of JavaScript and , to be really honest , lots of people particularly do n’t like the available implementations of one API that ’s used a lot in JavaScript ) .
For example , I ’ve seen people try to argue that JavaScript is n’t “ really ” object - oriented because you do n’t define classes using a class keyword .
JavaScript uses prototype - based inheritance , rather than class - based inheritance , but it is still a thoroughly object - oriented language .
Anyway , the whole point of these examples is to show that lots of people say silly wrong things about programming languages all the time , and mostly it ’s got more to do with some agenda they ’re pushing than with anything remotely resembling reality .
One of the things people might tell you is that JavaScript is n’t a functional language .
They ’re right , but only for certain values of “ functional ” .
What makes functional programming ?
If we want to be pedantic about it ( and if you know me , you know I always want to be pedantic ) , there are a few things which characterize “ pure ” functional programming :
Obviously , everything is accomplished by calling functions .
There are no “ standalone ” lines of code — the program starts by calling a function , which calls a function , and so on .
Depending on what the program does , it may eventually terminate , or it may simply continue running indefinitely .
In any case , everything takes place inside a function body .
There is no global state and , to be perfectly pure , there are no global variables .
Values can be passed into functions , but those values come from other functions , either as return values or as arguments passed from one function to another .
But there is no “ global scope ” ; each function has only a local scope to work with ( even closures ; their scope is just a bit wider and more long - lived than everybody else ’s ) .
There are no “ side effects ” .
This is a consequence of the lack of global scope or state ; since a function ca n’t “ see ” much , if anything , beyond its local scope ( again , closures are a weird case ) , there is no way for a function to modify anything that is n’t handed to it .
This kind of pure functional style has some definite advantages :
It can be easier to debug , since you can just walk up the stack to see what was called and with what arguments ; this makes it simpler to pinpoint where bad data came from .
It can be easier to write unit tests for , since each function can be called on its own and requires only its argument set ; there ’s no need for fixtures or any other environment setup .
It can be easier to refactor , since you can muck about with the internals of a given function and , so long as you do n’t change its signature , be reasonably assured that you have n’t mysteriously broken something else .
It makes multi- threaded programming a little bit easier , because you do n’t have to worry about things in Thread A modifying bits of program state that Thread B needs to work with ( notice that I say “ a little bit easier ” and qualify “ state ” to “ program state ” — if the program is , say , doing database access , it ’s still possible that one thread could modify important data , it ’s just that the data is external to the program ) .
But a lot of this is academic ; there are n’t a whole lot of pure functional languages , and when people talk about doing “ functional programming ” in real - world situations they ’re rarely talking about pure functional programming .
Common Lisp , for example , is n’t a pure functional language , even though Lisp is the patriarch of the functional language family .
And OCaml , which is one of the darlings of the trendy functional programming world these days , also is n’t purely functional .
General mish - mash languages
Plenty of languages also support “ multi- paradigm ” programming ; Python and Ruby , for example , both allow you to bounce around between procedural programming , object - oriented programming and functional programming , using each style wherever it best suits what you need to do .
Generally these languages offer a few important features :
Functions are first - class objects and can be the return values of , or arguments to , other functions .
Not having this feature in a language makes functional programming of any sort diffcult , if not impossible ( Java and C# people : imagine a world where you could just get a real reference to a method instead of doing indirection with delegates ) .
The language supports closures .
This is a tricky topic to explain correctly , but the essence of closures is that you can , for example , have code which generates and returns a function , and which magically “ closes ” up certain values from the enclosing scope and keeps references to them for use by the returned function , even when they would normally go out of scope before the returned function is called .
The language usually — but not always — provides the ability to define “ anonymous ” functions .
These are functions which are not defined by name , but which can be conjured up “ on the fly ” whenever a function needs to be passed in somewhere .
JavaScript has all three of these features : it supports closures , functions are first - class objects and you can define anonymous functions .
This means that , in addition to doing procedural or object - oriented programming , you can easily do functional JavaScript programming .
The case for functional JavaScript
And there are a lot of times where you need JavaScript to be functional , even if you ’re not used to thinking of it in those terms .
Consider this example snippet of code , which — if you were using the YUI toolkit — would set up an event listener for clicks on an HTML element with an id of ‘ myelem ’ :
YAHOO . util .
Event .
addListener ( ' myelem ' , ' click ' , function ( e ) { alert ( " You clicked the ' myelem ' element . " ) ; } ) ;
This is obviously an extremely simple example , but notice three things :
This is a function call .
The final argument is a function .
Not only is it a function , it ’s an anonymous function .
If you ’ve ever done any serious JavaScript programming , you were probably slinging functions — both named and anonymous — around all the time .
Especially when you ’re setting up event listeners or specifying more general callbacks , it ’s just the most natural way to do things , but I ’ve noticed that very few people , even people who write JavaScript day in and day out , realize that what they ’re doing is a form of functional programming .
And that four - letter word that ’s on everybody ’s lips these days — you know the one I ’m talking about — certainly encourages a functional programming style .
For example , when making a remote call with the Dojo toolkit , a couple of the arguments to dojo.io. bind are functions , and a large number of useful examples use anonymous functions defined on the spot .
YUI ’s asyncRequest expects an object as one of its arguments , and several of the attributes of that object are , well , functions .
Prototype ’s Ajax .
Request ( damn , I had to say it ; why ’d they have to put “ AJAX ” in the name ? ) expects , among the other arguments to its constructor , an object , at least one of the attributes of which is a function .
And , of course , Prototype and JQuery are very heavily functional ( JQuery , from what I ’ve seen of it , much more so ) ; very nearly everything you do with them is a direct function call , and lots of the functions you ’re calling can take functions as arguments .
In other words , once you start looking for it , you ’ll start seeing functional programming everywhere in JavaScript .
So ?
You ’re probably wondering if there ’s a point to all of this , and I ’m not sure there is .
Based on what I ’ve been seeing on a few noteworthy programming - oriented news sites , functional programming is enjoying a bit of a renaissance right now , and I know I ’m not the only one with an itch to play around in a functional language .
But that itch often takes the form of working with an entirely new language , requiring you to spend time not only learning the concepts , syntax and standard library , but also getting a development environment set up for it : an IDE , any compilers , interpreters or runtime environments for the language , standard libraries … just getting the tools you need to play with the language can be a major time sink .
Excuse me ?
Someone , on behalf of FOX News , reportedly gave terrorist organizations $ 2 m that the terrorists now say they used to buy weapons to kill Israelis ?
FOX says " it 's possible " money was paid to terrorists ?
And the Bush administration , they were heavily involved in this effort to free the FOX reporters - were they aware that someone was paying off terrorists ?
Were they the ones who arranged the payment ?
This is abominable if true .
Palestinian terror groups and security organizations in the Gaza Strip received $ 2 million from a United States source in exchange for the release of Fox News employees Steve Centanni and Olag Wiig , who were kidnapped here last summer , a senior leader of one of the groups suspected of the abductions told WND .
The terror leader , from the Gaza - based Popular Resistance Committees , said his organization 's share of the money was used to purchase weapons , which he said would be utilized " to hit the Zionists . "
He said he expects the payments for Centanni and Wiig 's freedom will encourage Palestinian groups to carry out further kidnappings .
Officials associated with Palestinian Authority President Mahmoud Abbas ' Fatah party and its security organization , the Preventative Security Services , confirmed to WND money was paid for the release of the Fox News reporters .... the money was used to purchase weapons .
" We used 100 percent of the money for one precise goal – our war against the Zionists , " the Committees leader said .
He said weapons purchased included rockets .
" Regarding the others ( the Dugmash clan of the Committees ) who received the money , I can tell you one thing is very clear – this went also to be used against the Zionists .
I can't say every cent went to buy bombs , maybe it also went to pay for salaries , smuggling , buying shelter . " ....
A spokeswoman for Fox News Channel told WND she could not provide an official statement about whether Fox was aware of money paid to free its two employees .
A source at Fox told WND many parties were involved with the freedom of Centanni and Wiig , including the U.S. government , and that it was possible money was paid .
Ironically , this news comes on the heels of the leak of an internal FOX memo saying " Be On The Lookout For Any Statements From The Iraqi Insurgents ... Thrilled At The Prospect Of A Dem Controlled Congress . "
Funny , but I bet the terrorists will be even more thrilled at the prospect of FOX News having given them $ 2 m .
Part 1 introduced the myth and looked at the buzz behind Linux .
Here in Part 2 , I 'll take apart a second argument given for moving Mac OS X to a Linux kernel :
Linux ' Performance
Performance comes through optimization .
The fastest cars on the road have specialized tires , huge engines , and throw out every unnecessary pound of weight to make them light , fast and zippy .
They 're optimized , but only for speed .
If you 've ever driven a super elite sports car , you 'll probably remember how uncomfortably cramped they are , how few kids you can cram in the back seat , and how there 's no real stereo system or air conditioning .
One of Linux ' primary advantages is its flexibility in optimization .
You can build a tiny Linux or a supercomputer monster Linux .
You can tailor Linux to serving webpages or database requests , or to run a PVR , PBX , or a PDA .
The only thing Linux has had real trouble with is capturing the consumer desktop market .
No major hardware vendors are currently pushing Linux as a real Windows replacement ; few even offer a token product .
At least for now , Linux ' strengths have been applied elsewhere .
That makes it difficult to make clear and substantial comparisons between Mac OS X , which is sold almost exclusively as a friendly desktop , and Linux , which has been profitable , popular , and optimized for nearly everything but use a friendly desktop .
So what 's the basis for saying that Linux has a much faster kernel than Mac OS X's ?
According to Mark Stephens ( writing as Robert X Cringely ) :
" Why would Apple want a new kernel ?
Speed .
Quite simply , a monolithic kernel like the one used in Linux or most of the other Open Source Unix clones is inherently two to three times faster for integer calculations than the Mach microkernel presently used in OS X 10.4 .
That 's why the world has n't embraced xServes , for example , because for simple web or database service they are slower and serve fewer users . "
His sweeping generalization is wrong on many counts : he 's been duped by the Mac OS X Microkernel Myth , he makes a wild stab into fiction by referring to integer calculations , and he mismingles speculation about the Xserve 's mindshare with his unsupported assumptions about performance .
He does prove a great point however : speaking confidently from your gut can make what you say sound convincing even if you do n't have any facts .
It 's called truthiness .
Where did Cringely get his gut feeling that a different kernel would be , not just potentially somewhat faster , but " inherently " several times faster ?
No doubt from a couple of highly publicized benchmark tests comparing Mac OS X systems with Linux servers .
In each case , those doing the benchmarks had little understanding of how Mac OS X works or how to optimize its performance , but did use optimizations for Linux .
Sound suspicious ?
This calculator implements a normal - order evaluator for the untyped lambda - calculus with shortcuts .
Shortcuts are distinguished constants that represent terms .
An association between a shortcut symbol and a term must be declared before any term that contains the shortcut could be evaluated .
The declaration of a shortcut does not cause the corresponding term to be evaluated .
Therefore shortcut 's term may contain other shortcuts -- or even yet to be defined ones .
Shortcuts make programming in lambda - calculus remarkably more convenient .
Besides terms to reduce , this lambda - calculator accepts a set of commands , which add even more convenience .
Commands define new shortcuts , activate tracing of all reductions , compare terms modulo alpha - conversion , print all defined shortcuts and evaluation flags , etc .
Terms to evaluate and commands are entered at a read - eval - print - loop ( REPL ) " prompt " -- or " included " from a file by a special command .
Examples
First we define a few shortcuts : ( X Define %c0 ( L f ( L x x ) ) ) ; Church numeral 0 ( X Define % succ ( L c ( L f ( L x ( f ( c f x ) ) ) ) ) ) ; Successor ( X Define * %c1 ( % succ %c0 ) ) ( X Define * %c2 ( %succ %c1 ) ) ( X Define % add ( L c ( L d ( L f ( L x ( c f ( d f x ) ) ) ) ) ) ) ;
Add two numerals ( X Define % mul ( L c ( L d ( L f ( c ( d f ) ) ) ) ) ) ; Multiplication ( %add %c1 %c2 )
REPL reduces the term and prints the answer : ( L f ( L x ( f ( f ( f x ) ) ) ) ) .
( X equal ? ( % succ %c0 ) % c1 ) ( X equal ? * ( % succ %c0 ) % c1 )
The REPL executes the above commands and prints the answer : #f and #t , correspondingly .
The second command reduces the terms before comparing them .
This all looks suspiciously like Scheme .
However , try the following two terms : ( % mul % c1 e ) and ( % mul % c0 e ) .
The evaluator reduces the first term to e and the second one to ( L f ( L x x ) ) , which is % c0 .
It must be stressed that in both terms e is a free variable .
We can therefore take the evaluation result as a proof that a left - multiplication by 1 leaves a term e intact , while left - multiplication by zero yields zero -- for all terms !
This is an algebraic result , a clear illustration of usefulness of lambda - calculus in logic and theorem - proof systems .
On the other hand , try to evaluate (* 1 e ) in Scheme with e being an unbound variable !
The title comments to the source code of the calculator explain the differences between a call - by - value evaluator such as Scheme , an applicative - order lambda - calculator , a normal - order evaluator such as Scheme 's macro- expander , and the present normal - order lambda - calculator .
Politics Nov 7 , 2006 Mock the Vote
A month after we asked our readers to create and photograph political campaign signs of their own making , here are our favorites .
We announce the winners of our Encyclopedia Brown for District Attorney contest .
A few years ago I attended a talk given by Ira Glass , host of NPR’s This American Life .
There was no unifying theme — he just sort of rambled on about a variety of things , even going so far as to rattle off his favorite programs , on both radio and TV .
( Fun fact : Ira Glass is a huge fan of Howard Stern . )
At the time , The West Wing was one of the hottest shows on television , and Glass spoke of it with a note of astonishment : “ I just ca n’t believe we ’ve gotten to this point where we ’re so disgusted and frustrated with actual politics that we have to create a second , fictitious government , where presidents and congressmen act on principle and every disagreement is spirited but respectful . ”
Of course , fictional characters have an advantage over reality when it comes to our democratically elected leaders :
They do n’t actually have to run for office .
Jed Bartlet was the POTUS long before The West Wing pilot ; on 2005 ’s short - lived Commander in Chief , Mackenzie Allen was elevated to the Presidency after her predecessor died on the operating table ; and on Battlestar Galactica — easily the most political show currently airing —
Secretary of Education Laura Roslin vaults to the highest office after robots exterminate 99.99 percent of the human race , which included the government .
Even Aragorn got to skip the primaries and go straight to the coronation .
For most , the idea of slugging it out with the Cylons sounds preferable to running the election gauntlet , especially in an era where the smear , the negative ad , and the politics of personal destruction are the first resorts , not the last .
And , let ’s face it :
Our fictitious heroes would probably be just as disinclined to run as you or I .
Were they real , angry Bob Ewell would probably hold a seat on the city council and humble Atticus Finch would be more concerned with raising his precocious children .
But because it ’s fun to imagine , we asked Morning News readers to create and photograph campaign paraphernalia for fictitious characters .
Amazingly , many of you did .
Here are our favorites .
Runners Up
Susan Thomsen
Westport , Conn .
Miss Nelson , meanwhile , is campaigning with the slogan “ Accept no substitutes . ”
Jonathan Busch
Palatine Ill .
I can imagine the negative ad campaign against this incumbent : “ TK421 missed over 93 percent of the votes on the Imperial Senate .
TK421 , why were n’t you at your post ? ”
Josh Martinez
Córdoba , Argentina
First prize is a seat on the Foreign Relations Committee .
Second prize is a set of steak knives .
Third prize is you ’re fired .
Josh Martinez
Córdoba , Argentina
Of course , it does n’t really matter who wins — parties these days are just two manifestations of the same political body .
Pam Coughlan
Springfield , Va .
pol·i·tics
Pronunciation : ‘ pä -l& -” tiks
Function : noun plural but singular or plural in construction
Etymology : Greek politika
Definition : A series of unfortunate events .
Third Place
Patrick Flahie
Holt , Mich .
Writes Patrick : “ I swear to you : Drain Commissioner is an actual elected office here in Michigan . ”
Second Place
Phil Adams
Greenville , N.C .
I understand he ’s running neck and neck with his challenger Josef K. , who has campaigned on a platform of reducing judicial bureaucracy , and made no secret of his disdain for trial lawyers .
First Place
Adam Schweiss
Louisville , Ky .
Given recent political scandals , the revelation that a candidate killed his father and married his mother would barely rate the “ Lighter Side of News ” segment at the end of the local broadcast .
The top three winners will receive TMN Holiday 2006 T - shirts .
Big thank - yous and congratulations are in order for everyone who participated .
Now let ’s all get out there and vote .
Boston Globe editorial on RFID and privacy :
It ’s one of the cutest of those cute IBM Corp.
TV commercials , the ones that feature the ever - present help desk .
This time , the desk appears smack in the middle of a highway , blocking the path of a big rig .
” Why are you blocking the road ? ” the driver asks .
” Because you ’re going the wrong way , ” replies the cheerful Help Desk lady .
” Your cargo told me so . ”
It seems the cartons inside the truck contained IBM technology that alerted the company when the driver made a wrong turn .
It ’s clever , all right — and creepy .
Because the technology need n’t be applied only to cases of beer .
The trackers could be attached to every can of beer in the case , and allow marketers to track the boozing habits of the purchasers .
Or if the cargo is clothing , those little trackers could have been stitched inside every last sweater .
Then some high - tech busybody could keep those wearing them under surveillance .
If this sounds paranoid , take it up with IBM .
The company filed a patent application in 2001 which contemplates using this wireless snooping technology to track people as they roam through ” shopping malls , airports , train stations , bus stations , elevators , trains , airplanes , rest rooms , sports arenas , libraries , theaters , museums , etc . ”
An IBM spokeswoman insisted the company is n’t really prepared to go this far .
Patent applications are routinely written to include every possible use of a technology , even some the company does n’t intend to pursue .
Still , it ’s clear somebody at IBM has a pretty creepy imagination .
Python for iPod
and other tools
Some pictures of the python interactive interpreter on iPod mini :
Downloads :
Version : Python 4 ipod release candidate 3 ( uploaded June 28 , 2005 )
import sys sys.exit ( )
browser .c ( modifications ) ... static int is_script_type ( char * extension ) { return strcmp ( extension , " .sh " ) == 0 || strcmp ( extension , " . py " ) == 0 ; } ... static int is_binary_type( char * filename ) { ... fread ( header , sizeof ( char ) , 12 , fp ) ; fclose ( fp ) ; if ( ! strncmp ( header , " bFLT " , 4 ) || \ ! strncmp ( header , " #!/bin/sh " , 9 ) || \ ! strncmp ( header , " #!/bin/python " , 13 ) ) return 1 ; else return 0 ; } ... }
Python - ipod benchmarking ( done with the lastest kernel on April 1st 2006 ) Pystone ( 1.1 ) time for 50000 passes = 171.36
This machine benchmarks at 291.783 pystones / second
WARNING
NOTE
ipodgetty ( getty for iPod )
foo:bar : ipodgetty / bin/ Sash
For an idea to spread , it needs to be sent and received .
No one " sends " an idea unless :
a. they understand it
b. they want it to spread
c. they believe that spreading it will enhance their power ( reputation , income , friendships ) or their peace of mind
d. the effort necessary to send the idea is less than the benefits
No one " gets " an idea unless :
a. the first impression demands further investigation
b. they already understand the foundation ideas necessary to get the new idea
c. they trust or respect the sender enough to invest the time
This explains why online ideas spread so fast but why they ’re often shallow .
Nietzsche is hard to understand and risky to spread , so it moves slowly among people willing to invest the time .
Numa Numa , on the other hand , spread like a toxic waste spill because it was so transparent , reasonably funny and easy to share .
Notice that ideas never spread because they are important to the originator .
Notice too that a key dynamic in the spread of the idea is the capsule that contains it .
If it ’s easy to swallow , tempting and complete , it ’s a lot more likely to get a good start .
But that does n’t mean that there ’s no role for mystery or ideas that unfold over time .
In fact , the unmeasurable variable here is style .
Howard Dean ’s ideas spread at the beginning –not because of the economic ramifications of his immigration policy , but because of the factors above .
The way they were presented fit into the worldview of those that spread them .
A key element in the spread of ideas is their visual element .
iPods and visual styles spread faster in the real world than ephemeral concepts .
Pictures and short jokes spread faster online because the investment necessary to figure out if they ’re worth spreading is so tiny .
And of course , plenty of bad ideas spread .
Panic , for instance , is a superbad idea at all times , but it spreads faster than most .
That ’s because spreading an idea is rarely a thoughtful , voluntary act .
Instead , it is near the core of who we are , and we often do it without thinking much about the implications .
Colorize as : None Basic Lisp Scheme Emacs Lisp Common Lisp C C++ Java Objective C Erlang Python Haskell Unified Context Diff WebKit ( text or diff )
Show Line Numbers
( Update : Alexa platform is now live )
Every so often an idea comes along that has the potential to change the game .
When it does , you find yourself saying – " Sheesh , of course that was going to happen .
Why did n't I predict it ? "
Well , I did n't predict this happening , but …
( Update : Alexa platform is now live )
Every so often an idea comes along that has the potential to change the game .
When it does , you find yourself saying – “ Sheesh , of course that was going to happen .
Why did n’t I predict it ? ”
Well , I did n’t predict this happening , but here it is , happening anyway .
In short , Alexa , an Amazon - owned search company started by Bruce Gilliat and Brewster Kahle ( and the spider that fuels the Internet Archive ) , is going to offer its index up to anyone who wants it .
Alexa has about 5 billion documents in its index – about 100 terabytes of data .
It ’s best known for its toolbar - based traffic and site stats , which are much debated and , regardless , much used across the web .
OK , step back , and think about that .
Anyone can use Alexa ’s index , to build anything .
But wait , there ’s more .
Much more .
Anyone can also use Alexa ’s servers and processing power to mine its index to discover things – perhaps , to outsource the crawl needed to create a vertical search engine , for example .
Or maybe to build new kinds of search engines entirely , or … well , whatever creative folks can dream up .
And then , anyone can run that new service on Alexa ’s ( er…Amazon ’s ) platform , should they wish .
It ’s all done via web services .
It ’s all integrated with Amazon ’s fabled web services platform .
And there ’s no licensing fees .
Just “ consumption fees ” which , at my first glance , seem pretty reasonable .
( “ Consumption ” meaning consuming processor cycles , or storage , or bandwidth ) .
The fees ?
One dollar per CPU hour consumed .
$ 1 per gig of storage used .
$ 1 per 50 gigs of data processed .
$ 1 per gig of data uploaded ( if you are putting your new service up on their platform ) .
In other words , Alexa and Amazon are turning the index inside out , and offering it as a web service that anyone can mashup to their hearts content .
Entrepreneurs can use Alexa ’s crawl , Alexa ’s processors , Alexa ’s server farm … .
the whole nine yards .
Does this change the game ?
Because I was embargoed and could not really talk to anyone about this , I have not had a chance to talk to folks who are smarter than me about this .
So my analysis is limited to my imagination .
And that itself is limited by the pricing structure – I do not know if using this service will be cheaper for developers and entrepreneurs than rolling their own .
But I can only imagine that indeed it is , or Amazon would not be doing this .
So what has been a jealously guarded secret – the contents of the entire index – is now available to anyone who wants it ( of course , this assumes Alexa ’s index is comparable to the big guys – honestly , I have no idea ) .
The costs are modest – a few thousand bucks to process the entire web , Gilliat told me .
How might that change the game ?
You guys are smarter than me – what do you think ?
I am quite sure this means that Yahoo and Google will have to stare hard at their own ( somewhat limited ) search services and APIs , and think what they might do to compete , that much is certain .
And if this starts to gain traction , all of a sudden , Amazon is a major search player , right next to Yahoo , Google , MSN , and IAC .
A9 + Alexa+web services= hmmmm ….
Again , what do you think ?
Will this be like A9 , a groundbreaking development that fails to get traction with a wider audience ?
Or might this just start something ?
Wired News ( not up yet ) and the WSJ ( free link ) were also briefed on this news .
A giant python bit off more than it could chew when it tried to swallow a pregnant ewe .
It got stuck on a road this week after swallowing the ewe in the Malaysian village of Kampung Jabor , about 200 kilometres east of Kuala Lumpur .
The six - metre reptile weighing 90 kilograms was too laden to move , making it easy for firemen to capture it , said a local daily newspaper .
Want to start a startup ?
Get funded by Y Combinator .
October 2006
( This essay is derived from a talk at MIT . )
Till recently graduating seniors had two choices : get a job or go to grad school .
I think there will increasingly be a third option : to start your own startup .
But how common will that be ?
I 'm sure the default will always be to get a job , but starting a startup could well become as popular as grad school .
In the late 90s my professor friends used to complain that they could n't get grad students , because all the undergrads were going to work for startups .
I would n't be surprised if that situation returns , but with one difference : this time they 'll be starting their own instead of going to work for other people's .
The most ambitious students will at this point be asking :
Why wait till you graduate ?
Why not start a startup while you 're in college ?
In fact , why go to college at all ?
Why not start a startup instead ?
A year and a half ago I gave a talk where I said that the average age of the founders of Yahoo , Google , and Microsoft was 24 , and that if grad students could start startups , why not undergrads ?
I 'm glad I phrased that as a question , because now I can pretend it was n't merely a rhetorical one .
At the time I could n't imagine why there should be any lower limit for the age of startup founders .
Graduation is a bureaucratic change , not a biological one .
And certainly there are undergrads as competent technically as most grad students .
So why should n't undergrads be able to start startups as well as grad students ?
I now realize that something does change at graduation : you lose a huge excuse for failing .
Regardless of how complex your life is , you 'll find that everyone else , including your family and friends , will discard all the low bits and regard you as having a single occupation at any given time .
If you 're in college and have a summer job writing software , you still read as a student .
Whereas if you graduate and get a job programming , you 'll be instantly regarded by everyone as a programmer .
The problem with starting a startup while you 're still in school is that there 's a built - in escape hatch .
If you start a startup in the summer between your junior and senior year , it reads to everyone as a summer job .
So if it goes nowhere , big deal ; you return to school in the fall with all the other seniors ; no one regards you as a failure , because your occupation is student , and you did n't fail at that .
Whereas if you start a startup just one year later , after you graduate , as long as you 're not accepted to grad school in the fall the startup reads to everyone as your occupation .
You 're now a startup founder , so you have to do well at that .
For nearly everyone , the opinion of one 's peers is the most powerful motivator of all — more powerful even than the nominal goal of most startup founders , getting rich . [ 1 ]
About a month into each funding cycle we have an event called Prototype Day where each startup presents to the others what they 've got so far .
You might think they would n't need any more motivation .
They 're working on their cool new idea ; they have funding for the immediate future ; and they 're playing a game with only two outcomes : wealth or failure .
You 'd think that would be motivation enough .
And yet the prospect of a demo pushes most of them into a rush of activity .
Even if you start a startup explicitly to get rich , the money you might get seems pretty theoretical most of the time .
What drives you day to day is not wanting to look bad .
You probably can't change that .
Even if you could , I do n't think you 'd want to ; someone who really , truly does n't care what his peers think of him is probably a psychopath .
So the best you can do is consider this force like a wind , and set up your boat accordingly .
If you know your peers are going to push you in some direction , choose good peers , and position yourself so they push you in a direction you like .
Graduation changes the prevailing winds , and those make a difference .
Starting a startup is so hard that it's a close call even for the ones that succeed .
However high a startup may be flying now , it probably has a few leaves stuck in the landing gear from those trees it barely cleared at the end of the runway .
In such a close game , the smallest increase in the forces against you can be enough to flick you over the edge into failure .
When we first started Y Combinator we encouraged people to start startups while they were still in college .
That 's partly because Y Combinator began as a kind of summer program .
We 've kept the program shape — all of us having dinner together once a week turns out to be a good idea — but we 've decided now that the party line should be to tell people to wait till they graduate .
Does that mean you can't start a startup in college ?
Not at all .
Sam Altman , the co-founder of Loopt , had just finished his sophomore year when we funded them , and Loopt is probably the most promising of all the startups we 've funded so far .
But Sam Altman is a very unusual guy .
Within about three minutes of meeting him , I remember thinking " Ah , so this is what Bill Gates must have been like when he was 19 . "
If it can work to start a startup during college , why do we tell people not to ?
For the same reason that the probably apocryphal violinist , whenever he was asked to judge someone 's playing , would always say they did n't have enough talent to make it as a pro .
Succeeding as a musician takes determination as well as talent , so this answer works out to be the right advice for everyone .
The ones who are uncertain believe it and give up , and the ones who are sufficiently determined think " screw that , I 'll succeed anyway . "
So our official policy now is only to fund undergrads we can't talk out of it .
And frankly , if you 're not certain , you should wait .
It 's not as if all the opportunities to start companies are going to be gone if you do n't do it now .
Maybe the window will close on some idea you 're working on , but that wo n't be the last idea you 'll have .
For every idea that times out , new ones become feasible .
Historically the opportunities to start startups have only increased with time .
In that case , you might ask , why not wait longer ?
Why not go work for a while , or go to grad school , and then start a startup ?
And indeed , that might be a good idea .
If I had to pick the sweet spot for startup founders , based on who we 're most excited to see applications from , I 'd say it 's probably the mid-twenties .
Why ?
What advantages does someone in their mid-twenties have over someone who 's 21 ?
And why is n't it older ?
What can 25 year olds do that 32 year olds can't ?
Those turn out to be questions worth examining .
Plus
If you start a startup soon after college , you 'll be a young founder by present standards , so you should know what the relative advantages of young founders are .
They 're not what you might think .
As a young founder your strengths are : stamina , poverty , rootlessness , colleagues , and ignorance .
The importance of stamina should n't be surprising .
If you 've heard anything about startups you 've probably heard about the long hours .
As far as I can tell these are universal .
I can't think of any successful startups whose founders worked 9 to 5 .
And it 's particularly necessary for younger founders to work long hours because they 're probably not as efficient as they 'll be later .
Your second advantage , poverty , might not sound like an advantage , but it is a huge one .
Poverty implies you can live cheaply , and this is critically important for startups .
Nearly every startup that fails , fails by running out of money .
It 's a little misleading to put it this way , because there 's usually some other underlying cause .
But regardless of the source of your problems , a low burn rate gives you more opportunity to recover from them .
And since most startups make all kinds of mistakes at first , room to recover from mistakes is a valuable thing to have .
Most startups end up doing something different than they planned .
The way the successful ones find something that works is by trying things that do n't .
So the worst thing you can do in a startup is to have a rigid , pre-ordained plan and then start spending a lot of money to implement it .
Better to operate cheaply and give your ideas time to evolve .
Recent grads can live on practically nothing , and this gives you an edge over older founders , because the main cost in software startups is people .
The guys with kids and mortgages are at a real disadvantage .
This is one reason I 'd bet on the 25 year old over the 32 year old .
The 32 year old probably is a better programmer , but probably also has a much more expensive life .
Whereas a 25 year old has some work experience ( more on that later ) but can live as cheaply as an undergrad .
Robert Morris and I were 29 and 30 respectively when we started Viaweb , but fortunately we still lived like 23 year olds .
We both had roughly zero assets .
I would have loved to have a mortgage , since that would have meant I had a house .
But in retrospect having nothing turned out to be convenient .
I was n't tied down and I was used to living cheaply .
Even more important than living cheaply , though , is thinking cheaply .
One reason the Apple II was so popular was that it was cheap .
The computer itself was cheap , and it used cheap , off - the - shelf peripherals like a cassette tape recorder for data storage and a TV as a monitor .
And you know why ?
Because
Woz designed this computer for himself , and he could n't afford anything more .
We benefitted from the same phenomenon .
Our prices were daringly low for the time .
The top level of service was $ 300 a month , which was an order of magnitude below the norm .
In retrospect this was a smart move , but we did n't do it because we were smart .
$ 300 a month seemed like a lot of money to us .
Like Apple , we created something inexpensive , and therefore popular , simply because we were poor .
A lot of startups have that form : someone comes along and makes something for a tenth or a hundredth of what it used to cost , and the existing players can't follow because they do n't even want to think about a world in which that 's possible .
Traditional long distance carriers , for example , did n't even want to think about VoIP .
( It was coming , all the same . )
Being poor helps in this game , because your own personal bias points in the same direction technology evolves in .
The advantages of rootlessness are similar to those of poverty .
When you 're young you 're more mobile — not just because you do n't have a house or much stuff , but also because you 're less likely to have serious relationships .
This turns out to be important , because a lot of startups involve someone moving .
The founders of Kiko , for example , are now en route to the Bay Area to start their next startup .
It 's a better place for what they want to do .
And it was easy for them to decide to go , because neither as far as I know has a serious girlfriend , and everything they own will fit in one car — or more precisely , will either fit in one car or is crappy enough that they do n't mind leaving it behind .
They at least were in Boston .
What if they 'd been in Nebraska , like Evan Williams was at their age ?
Someone wrote recently that the drawback of Y Combinator was that you had to move to participate .
It could n't be any other way .
The kind of conversations we have with founders , we have to have in person .
We fund a dozen startups at a time , and we can't be in a dozen places at once .
But even if we could somehow magically save people from moving , we would n't .
We would n't be doing founders a favor by letting them stay in Nebraska .
Places that are n't startup hubs are toxic to startups .
You can tell that from indirect evidence .
You can tell how hard it must be to start a startup in Houston or Chicago or Miami from the microscopically small number , per capita , that succeed there .
I do n't know exactly what 's suppressing all the startups in these towns — probably a hundred subtle little things — but something must be . [ 2 ]
Maybe this will change .
Maybe the increasing cheapness of startups will mean they 'll be able to survive anywhere , instead of only in the most hospitable environments .
Maybe 37signals is the pattern for the future .
But maybe not .
Historically there have always been certain towns that were centers for certain industries , and if you were n't in one of them you were at a disadvantage .
So my guess is that 37 signals is an anomaly .
We 're looking at a pattern much older than " Web 2.0 " here .
Perhaps the reason more startups per capita happen in the Bay Area than Miami is simply that there are more founder - type people there .
Successful startups are almost never started by one person .
Usually they begin with a conversation in which someone mentions that something would be a good idea for a company , and his friend says , " Yeah , that is a good idea , let 's try it . "
If you 're missing that second person who says " let 's try it , " the startup never happens .
And that is another area where undergrads have an edge .
They 're surrounded by people willing to say that .
At a good college you 're concentrated together with a lot of other ambitious and technically minded people — probably more concentrated than you 'll ever be again .
If your nucleus spits out a neutron , there 's a good chance it will hit another nucleus .
The number one question people ask us at Y Combinator is :
Where can I find a co-founder ?
That 's the biggest problem for someone starting a startup at 30 .
When they were in school they knew a lot of good co-founders , but by 30 they 've either lost touch with them or these people are tied down by jobs they do n't want to leave .
Viaweb was an anomaly in this respect too .
Though we were comparatively old , we were n't tied down by impressive jobs .
I was trying to be an artist , which is not very constraining , and Robert , though 29 , was still in grad school due to a little interruption in his academic career back in 1988 .
So arguably the Worm made Viaweb possible .
Otherwise Robert would have been a junior professor at that age , and he would n't have had time to work on crazy speculative projects with me .
Most of the questions people ask Y Combinator we have some kind of answer for , but not the co-founder question .
There is no good answer .
Co-founders really should be people you already know .
And by far the best place to meet them is school .
You have a large sample of smart people ; you get to compare how they all perform on identical tasks ; and everyone 's life is pretty fluid .
A lot of startups grow out of schools for this reason .
Google , Yahoo , and Microsoft , among others , were all founded by people who met in school .
( In Microsoft 's case , it was high school . )
Many students feel they should wait and get a little more experience before they start a company .
All other things being equal , they should .
But all other things are not quite as equal as they look .
Most students do n't realize how rich they are in the scarcest ingredient in startups , co-founders .
If you wait too long , you may find that your friends are now involved in some project they do n't want to abandon .
The better they are , the more likely this is to happen .
One way to mitigate this problem might be to actively plan your startup while you 're getting those n years of experience .
Sure , go off and get jobs or go to grad school or whatever , but get together regularly to scheme , so the idea of starting a startup stays alive in everyone 's brain .
I do n't know if this works , but it can't hurt to try .
It would be helpful just to realize what an advantage you have as students .
Some of your classmates are probably going to be successful startup founders ; at a great technical university , that is a near certainty .
So which ones ?
If I were you I 'd look for the people who are not just smart , but incurable builders .
Look for the people who keep starting projects , and finish at least some of them .
That 's what we look for .
Above all else , above academic credentials and even the idea you apply with , we look for people who build things .
The other place co-founders meet is at work .
Fewer do than at school , but there are things you can do to improve the odds .
The most important , obviously , is to work somewhere that has a lot of smart , young people .
Another is to work for a company located in a startup hub .
It will be easier to talk a co-worker into quitting with you in a place where startups are happening all around you .
You might also want to look at the employment agreement you sign when you get hired .
Most will say that any ideas you think of while you 're employed by the company belong to them .
In practice it 's hard for anyone to prove what ideas you had when , so the line gets drawn at code .
If you 're going to start a startup , do n't write any of the code while you 're still employed .
Or at least discard any code you wrote while still employed and start over .
It 's not so much that your employer will find out and sue you .
It wo n't come to that ; investors or acquirers or ( if you 're so lucky ) underwriters will nail you first .
Between t = 0 and when you buy that yacht , someone is going to ask if any of your code legally belongs to anyone else , and you need to be able to say no . [ 3 ]
The most overreaching employee agreement I 've seen so far is Amazon's .
In addition to the usual clauses about owning your ideas , you also can't be a founder of a startup that has another founder who worked at Amazon — even if you did n't know them or even work there at the same time .
I suspect they'd have a hard time enforcing this , but it 's a bad sign they even try .
There are plenty of other places to work ; you may as well choose one that keeps more of your options open .
Speaking of cool places to work , there is of course Google .
But I notice something slightly frightening about Google : zero startups come out of there .
In that respect it 's a black hole .
People seem to like working at Google too much to leave .
So if you hope to start a startup one day , the evidence so far suggests you should n't work there .
I realize this seems odd advice .
If they make your life so good that you do n't want to leave , why not work there ?
Because , in effect , you 're probably getting a local maximum .
You need a certain activation energy to start a startup .
So an employer who 's fairly pleasant to work for can lull you into staying indefinitely , even if it would be a net win for you to leave . [ 4 ]
The best place to work , if you want to start a startup , is probably a startup .
In addition to being the right sort of experience , one way or another it will be over quickly .
You 'll either end up rich , in which case problem solved , or the startup will get bought , in which case it it will start to suck to work there and it will be easy to leave , or most likely , the thing will blow up and you 'll be free again .
Your final advantage , ignorance , may not sound very useful .
I deliberately used a controversial word for it ; you might equally call it innocence .
But it seems to be a powerful force .
My Y Combinator co-founder Jessica Livingston is just about to publish a book of interviews with startup founders , and I noticed a remarkable pattern in them .
One after another said that if they 'd known how hard it would be , they would have been too intimidated to start .
Ignorance can be useful when it's a counterweight to other forms of stupidity .
It 's useful in starting startups because you 're capable of more than you realize .
Starting startups is harder than you expect , but you 're also capable of more than you expect , so they balance out .
Most people look at a company like Apple and think , how could I ever make such a thing ?
Apple is an institution , and I 'm just a person .
But every institution was at one point just a handful of people in a room deciding to start something .
Institutions are made up , and made up by people no different from you .
I 'm not saying everyone could start a startup .
I 'm sure most people could n't ; I do n't know much about the population at large .
When you get to groups I know well , like hackers , I can say more precisely .
At the top schools , I 'd guess as many as a quarter of the CS majors could make it as startup founders if they wanted .
That " if they wanted " is an important qualification — so important that it 's almost cheating to append it like that — because once you get over a certain threshold of intelligence , which most CS majors at top schools are past , the deciding factor in whether you succeed as a founder is how much you want to .
You do n't have to be that smart .
If you 're not a genius , just start a startup in some unsexy field where you 'll have less competition , like software for human resources departments .
I picked that example at random , but I feel safe in predicting that whatever they have now , it would n't take genius to do better .
There are a lot of people out there working on boring stuff who are desperately in need of better software , so however short you think you fall of Larry and Sergey , you can ratchet down the coolness of the idea far enough to compensate .
As well as preventing you from being intimidated , ignorance can sometimes help you discover new ideas .
Steve Wozniak put this very strongly :
All the best things that I did at Apple came from ( a ) not having money and ( b ) not having done it before , ever .
Every single thing that we came out with that was really great , I 'd never once done that thing in my life .
When you know nothing , you have to reinvent stuff for yourself , and if you 're smart your reinventions may be better than what preceded them .
This is especially true in fields where the rules change .
All our ideas about software were developed in a time when processors were slow , and memories and disks were tiny .
Who knows what obsolete assumptions are embedded in the conventional wisdom ?
And the way these assumptions are going to get fixed is not by explicitly deallocating them , but by something more akin to garbage collection .
Someone ignorant but smart will come along and reinvent everything , and in the process simply fail to reproduce certain existing ideas .
Minus
So much for the advantages of young founders .
What about the disadvantages ?
I 'm going to start with what goes wrong and try to trace it back to the root causes .
What goes wrong with young founders is that they build stuff that looks like class projects .
It was only recently that we figured this out ourselves .
We noticed a lot of similarities between the startups that seemed to be falling behind , but we could n't figure out how to put it into words .
Then finally we realized what it was : they were building class projects .
But what does that really mean ?
What 's wrong with class projects ?
What 's the difference between a class project and a real startup ?
If we could answer that question it would be useful not just to would - be startup founders but to students in general , because we'd be a long way toward explaining the mystery of the so - called real world .
There seem to be two big things missing in class projects : ( 1 ) an iterative definition of a real problem and ( 2 ) intensity .
The first is probably unavoidable .
Class projects will inevitably solve fake problems .
For one thing , real problems are rare and valuable .
If a professor wanted to have students solve real problems , he'd face the same paradox as someone trying to give an example of whatever " paradigm " might succeed the Standard Model of physics .
There may well be something that does , but if you could think of an example you'd be entitled to the Nobel Prize .
Similarly , good new problems are not to be had for the asking .
In technology the difficulty is compounded by the fact that real startups tend to discover the problem they 're solving by a process of evolution .
Someone has an idea for something ; they build it ; and in doing so ( and probably only by doing so ) they realize the problem they should be solving is another one .
Even if the professor let you change your project description on the fly , there is n't time enough to do that in a college class , or a market to supply evolutionary pressures .
So class projects are mostly about implementation , which is the least of your problems in a startup .
It 's not just that in a startup you work on the idea as well as implementation .
The very implementation is different .
Its main purpose is to refine the idea .
Often the only value of most of the stuff you build in the first six months is that it proves your initial idea was mistaken .
And that 's extremely valuable .
If you 're free of a misconception that everyone else still shares , you 're in a powerful position .
But you 're not thinking that way about a class project .
Proving your initial plan was mistaken would just get you a bad grade .
Instead of building stuff to throw away , you tend to want every line of code to go toward that final goal of showing you did a lot of work .
That leads to our second difference : the way class projects are measured .
Professors will tend to judge you by the distance between the starting point and where you are now .
If someone has achieved a lot , they should get a good grade .
But customers will judge you from the other direction : the distance remaining between where you are now and the features they need .
The market does n't give a shit how hard you worked .
Users just want your software to do what they need , and you get a zero otherwise .
That is one of the most distinctive differences between school and the real world : there is no reward for putting in a good effort .
In fact , the whole concept of a " good effort " is a fake idea adults invented to encourage kids .
It is not found in nature .
Such lies seem to be helpful to kids .
But unfortunately when you graduate they do n't give you a list of all the lies they told you during your education .
You have to get them beaten out of you by contact with the real world .
And this is why so many jobs want work experience .
I could n't understand that when I was in college .
I knew how to program .
In fact , I could tell I knew how to program better than most people doing it for a living .
So what was this mysterious " work experience " and why did I need it ?
Now I know what it is , and part of the confusion is grammatical .
Describing it as " work experience " implies it 's like experience operating a certain kind of machine , or using a certain programming language .
But really what work experience refers to is not some specific expertise , but the elimination of certain habits left over from childhood .
One of the defining qualities of kids is that they flake .
When you 're a kid and you face some hard test , you can cry and say " I can 't " and they wo n't make you do it .
Of course , no one can make you do anything in the grownup world either .
What they do instead is fire you .
And when motivated by that you find you can do a lot more than you realized .
So one of the things employers expect from someone with " work experience " is the elimination of the flake reflex — the ability to get things done , with no excuses .
The other thing you get from work experience is an understanding of what work is , and in particular , how intrinsically horrible it is .
Fundamentally the equation is a brutal one : you have to spend most of your waking hours doing stuff someone else wants , or starve .
There are a few places where the work is so interesting that this is concealed , because what other people want done happens to coincide with what you want to work on .
But you only have to imagine what would happen if they diverged to see the underlying reality .
It 's not so much that adults lie to kids about this as never explain it .
They never explain what the deal is with money .
You know from an early age that you 'll have some sort of job , because everyone asks what you 're going to " be " when you grow up .
What they do n't tell you is that as a kid you 're sitting on the shoulders of someone else who 's treading water , and that starting working means you get thrown into the water on your own , and have to start treading water yourself or sink .
" Being " something is incidental ; the immediate problem is not to drown .
The relationship between work and money tends to dawn on you only gradually .
At least it did for me .
One 's first thought tends to be simply " This sucks .
I 'm in debt .
Plus I have to get up on monday and go to work . "
Gradually you realize that these two things are as tightly connected as only a market can make them .
So the most important advantage 24 year old founders have over 20 year old founders is that they know what they 're trying to avoid .
To the average undergrad the idea of getting rich translates into buying Ferraris , or being admired .
To someone who has learned from experience about the relationship between money and work , it translates to something way more important : it means you get to opt out of the brutal equation that governs the lives of 99.9 % of people .
Getting rich means you can stop treading water .
Someone who gets this will work much harder at making a startup succeed — with the proverbial energy of a drowning man , in fact .
But understanding the relationship between money and work also changes the way you work .
You do n't get money just for working , but for doing things other people want .
Someone who 's figured that out will automatically focus more on the user .
And that cures the other half of the class - project syndrome .
After you 've been working for a while , you yourself tend to measure what you 've done the same way the market does .
Of course , you do n't have to spend years working to learn this stuff .
If you 're sufficiently perceptive you can grasp these things while you 're still in school .
Sam Altman did .
He must have , because Loopt is no class project .
And as his example suggests , this can be valuable knowledge .
At a minimum , if you get this stuff , you already have most of what you gain from the " work experience " employers consider so desirable .
But of course if you really get it , you can use this information in a way that 's more valuable to you than that .
Now
So suppose you think you might start a startup at some point , either when you graduate or a few years after .
What should you do now ?
For both jobs and grad school , there are ways to prepare while you 're in college .
If you want to get a job when you graduate , you should get summer jobs at places you 'd like to work .
If you want to go to grad school , it will help to work on research projects as an undergrad .
What 's the equivalent for startups ?
How do you keep your options maximally open ?
One thing you can do while you 're still in school is to learn how startups work .
Unfortunately that 's not easy .
Few if any colleges have classes about startups .
There may be business school classes on entrepreneurship , as they call it over there , but these are likely to be a waste of time .
Business schools like to talk about startups , but philosophically they 're at the opposite end of the spectrum .
Most books on startups also seem to be useless .
I 've looked at a few and none get it right .
Books in most fields are written by people who know the subject from experience , but for startups there 's a unique problem : by definition the founders of successful startups do n't need to write books to make money .
As a result most books on the subject end up being written by people who do n't understand it .
So I 'd be skeptical of classes and books .
The way to learn about startups is by watching them in action , preferably by working at one .
How do you do that as an undergrad ?
Probably by sneaking in through the back door .
Just hang around a lot and gradually start doing things for them .
Most startups are ( or should be ) very cautious about hiring .
Every hire increases the burn rate , and bad hires early on are hard to recover from .
However , startups usually have a fairly informal atmosphere , and there 's always a lot that needs to be done .
If you just start doing stuff for them , many will be too busy to shoo you away .
You can thus gradually work your way into their confidence , and maybe turn it into an official job later , or not , whichever you prefer .
This wo n't work for all startups , but it would work for most I 've known .
Number two , make the most of the great advantage of school : the wealth of co-founders .
Look at the people around you and ask yourself which you 'd like to work with .
When you apply that test , you may find you get surprising results .
You may find you 'd prefer the quiet guy you 've mostly ignored to someone who seems impressive but has an attitude to match .
I 'm not suggesting you suck up to people you do n't really like because you think one day they 'll be successful .
Exactly the opposite , in fact : you should only start a startup with someone you like , because a startup will put your friendship through a stress test .
I 'm just saying you should think about who you really admire and hang out with them , instead of whoever circumstances throw you together with .
Another thing you can do is learn skills that will be useful to you in a startup .
These may be different from the skills you 'd learn to get a job .
For example , thinking about getting a job will make you want to learn programming languages you think employers want , like Java and C ++.
Whereas if you start a startup , you get to pick the language , so you have to think about which will actually let you get the most done .
If you use that test you might end up learning Ruby or Python instead .
But the most important skill for a startup founder is n't a programming technique .
It 's a knack for understanding users and figuring out how to give them what they want .
I know I repeat this , but that 's because it 's so important .
And it 's a skill you can learn , though perhaps habit might be a better word .
Get into the habit of thinking of software as having users .
What do those users want ?
What would make them say wow ?
This is particularly valuable for undergrads , because the concept of users is missing from most college programming classes .
The way you get taught programming in college would be like teaching writing as grammar , without mentioning that its purpose is to communicate something to an audience .
Fortunately an audience for software is now only an http request away .
So in addition to the programming you do for your classes , why not build some kind of website people will find useful ?
At the very least it will teach you how to write software with users .
In the best case , it might not just be preparation for a startup , but the startup itself , like it was for Yahoo and Google .
Notes
[ 1 ] Even the desire to protect one 's children seems weaker , judging from things people have historically done to their kids rather than risk their community 's disapproval .
( I assume we still do things that will be regarded in the future as barbaric , but historical abuses are easier for us to see . )
[ 2 ] Worrying that Y Combinator makes founders move for 3 months also suggests one underestimates how hard it is to start a startup .
You 're going to have to put up with much greater inconveniences than that .
[ 3 ] Most employee agreements say that any idea relating to the company 's present or potential future business belongs to them .
Often as not the second clause could include any possible startup , and anyone doing due diligence for an investor or acquirer will assume the worst .
To be safe either ( a ) do n't use code written while you were still employed in your previous job , or ( b ) get your employer to renounce , in writing , any claim to the code you write for your side project .
Many will consent to ( b ) rather than lose a prized employee .
The downside is that you 'll have to tell them exactly what your project does .
[ 4 ] Geshke and Warnock only founded Adobe because Xerox ignored them .
If Xerox had used what they built , they would probably never have left PARC .
Thanks to Jessica Livingston and Robert Morris for reading drafts of this , and to Jeff Arnold and the SIPB for inviting me to speak .
Comment on this essay .
Chinese Translation
[ Français ]
Sponsor List
MUTE protects your privacy by avoiding direct connections with your sharing partners in the network .
Most other file sharing programs use direct connections to download or upload , making your identity available to spies from the RIAA and other unscrupulous organizations .
Read more ...
Ants display collectively intelligent behavior when foraging for food or fighting off predators .
Each ant in the colony acts in a rather simple way , but together they end up doing something clever , like discovering the shortest path between their ant hill and a food source .
MUTE 's routing mechanism is inspired by ant behavior .
Read more ...
MUTE is based on research , and experiments show that it works quite well .
MUTE 's ant - inspired routing is light - weight , robust , and adaptive .
Results from experiments in real MUTE networks show that the collective behavior of MUTE nodes quickly finds the shortest ( or fastest ) routing path between two nodes on the network .
Read more ...
" The RIAA just started bullying Internet users , but they 've been bullying musicians for decades .
By refusing to pay for major label ( RIAA ) music , we can usher in a more fair music business and keep the Internet free ( as in freedom ) . "
-- Holmes Wilson Read more at Downhill Battle ...
How Ants Find Food
Many species of ants communicate with their nest - mates using chemical scents known as pheromones .
Pheromones can be used in many ways by ants and other animals ( including humans ) , but we are most interested in how ants use pheromones to direct each other through their environment --- this particular task is closely related to the problem of directing the flow of information through a network .
Consider a colony of ants that is searching for food .
Casual observation of an ant colony will reveal that ants often walk in a straight line between their anthill and the food source .
The concept of an " army " of ants marching in file has permeated popular culture , and most people who live in ant - friendly locations ( nearly every human - friendly place in the world ) have seen this particular behavior first - hand .
Marching in a straight line , which is usually the shortest route , seems like an obvious solution to the problem of efficient food transportation , and we might pass it off as uninteresting .
Photo by Harold Thimbleby --- used without permission
Of course , we humans would do the same thing , and in fact we do march in lines along direct routes when we travel in groups as caravans .
When we look down at a line of ants from above , we might simply think " so what ? "
But we have huge brains compared to ants , along with extraordinarily complicated visual systems ( over 25 % of the human brain is devoted to vision ) , and we also have a more elevated view of the terrain .
Even with these advantages , efficient route - finding , especially through an environment that is full of obstacles , is not an easy task for us .
Given ants ' comparatively simpler brains , we cannot pass their collectively intelligent route - finding off as trivial .
So how do they do it ?
Suppose that an ant colony starts out with no information about the location food in the environment .
The human strategy in this case would be to send out a " search party " to comb the surrounding area --- the scouts who find food can bring some back to the home - base and inform the others about where the food is .
Ants do search for food by walking randomly , which is similar to the human " combing " approach , but two issues prevent ants from implementing a human - style search party directly .
First , how can an ant - scout , upon discovering food , find its way back to the nest ?
Second , even if a scout makes it back to the nest , how can it inform the other ants about the food 's location ?
The answers lie in a clever use of pheromones .
To solve the " finding home " problem , each ant leaves a trail of pheromone as it looks for food .
In the following example pictures , the pheromone trail left by each wandering ant is shown in transparent red .
When an ant finds food , it can follow its own pheromone trail back to the nest --- this is similar to leaving a trail of bread crumbs through the woods to find your way back home .
On the way back to the nest , the ant solves the " telling others " problem by laying down more pheromone , creating a trail with an even stronger scent .
In the following picture , ant A reaches the food first and then follows its own trail back to the nest , while the other three ants keep wandering .
When other ants run into a trail of pheromone , they give up their own search and start following the trail .
In the following picture , ant D discovers the double - strength trail left by ant A and starts to follow it .
Ant C encounters the single - strength trail left by D and follows that trail , which will eventually lead to A 's trail as well .
Ant B eventually discovers its own route to the food source that is completely disconnected from the routed used by A .
If a pheromone trail leads an ant back to the nest with empty jaws , it turns around and follows the trail in the opposite direction .
Once an ant reaches the food , it grabs a piece and turns around , following the same trail back to the nest .
On the way back , an ant reinforces the trail by laying down more pheromone .
In the following picture , ant C joins A's trail but follows it it the wrong direction , reaching the nest empty - jawed .
Ant B follows its own trail back to the nest --- it never comes in contact with the more direct trail that the other ants are using .
A and D carry food back to the nest along the established route .
Once they reach the food , they grab a piece and turn around , following the same trail back to the nest .
On the way back , they reinforce the trail by laying down more pheromone .
We have explained how ants find food in the first place , but how do they find the shortest route to the food ?
One more detail helps to answer this question : ants prefer to follow the trails with the strongest pheromone scent .
Shorter routes between the nest and the food are completed faster by each ant that takes them .
For example , if ant X is traveling along a 10 - meter path to the food repeatedly , and ant Y is traveling along a different 20 - meter path repeatedly , ant X will make twice as many trips in an hour as ant Y .
Thus , ant X will lay twice as much pheromone on its trail as ant Y .
Given the choice , ants will prefer the strongly - scented 10 - meter path over the more weakly - scented 20 - meter path .
The following picture demonstrates this point .
When B deposits food at the nest and sets out for another trip , it discovers the strongly - scented path used by the other ants and abandons its own path .
At this point , all four ants are using the path discovered by ant A to carry food between the source and the nest .
Over time , many paths between the nest and the food are explored , but the scent on shortest path is reinforced more than the other paths , so it quickly becomes the most popular path , and soon all of the ants walk in file along it .
Simple Rules
The ant approach to route - finding is quite different from the way humans navigate their environment .
We would visually study the environment as a whole and try to " plan " the best route ahead of time .
Of course , the ant method has advantages over our " high level " approach .
For example , the ant method works fine in complete darkness .
When it comes to navigating without visual cues , humans are comparatively helpless .
The ant method can be distilled into simple rules followed by each member of the colony :
Condition : Action :
Not carrying food
not on pheromone trail walk randomly
lay pheromone
Not carrying food
on pheromone trail follow pheromone trail
lay more pheromone Reach home without food
on pheromone trail turn around
follow trail in opposite direction Reach food pick up food
turn around
follow trail in opposite direction Carrying food follow trail
lay more pheromone Reach home with food deposit food
turn around
follow trail in opposite direction More About Ants
As we go on to describe MUTE 's ant - inspired message routing scheme , we will leave real - world ant behavior behind us .
However , there is a wealth of information about natural ants and their behavior online , including : Optimal Behavior of Ants
Pheromone Biology
http://www.antnest.co.uk
http://www.antcam.com
Simplifying Nature
Though the table of " Simple Rules " above is relatively easy to understand , it still contains seven rules , which is not as simple as we might like .
Also , there is a bit of sub - optimal behavior lurking : an empty - jawed ant may follow a pheromone trail in the wrong direction , all the way back to the nest .
Of course , when an empty - jawed ant reaches the nest , it turns around and eventually makes its way back to the food , but this is still a wasted trip .
The problem seems to be the lack of directionality in the trail , and it is certainly difficult to represent direction when all you have to work with are spots of chemical scents .
In the world of networking programs , we are not limited to directionless trail markers .
By adding direction to the trail markers , we actually get a much simpler set of rules
Suppose that we augment the ants with two types of pheromone instead of just one , and suppose that we give these pheromones directionality .
The first pheromone can be thought of as a " this way home " marker , and we will call it a home - finding pheromone .
The second pheromone will be the food - finding pheromone , and it points in the direction of the food source .
When ants leave the nest in search of food , they walk randomly , leaving trails of home - finding pheromone as they go .
When an ant finds food , it picks up a piece and follows its home - finding trail back to the nest , leaving a trail of food - finding pheromone as it goes .
If a wandering ant ever encounters a food - finding trail , it follows that trail to the food source , leaving more home - finding pheromone as it goes .
This simple modification reduces the complexity of our rule set :
Condition : Walk : Mark Ground With : Not carrying food on food - direction trail , or randomly otherwise home - direction pheromone Carrying food on home - direction trail food - direction pheromone Painting Arrows in the Forest
This mechanism is similar to the way humans might navigate a forest by painting colored arrow markers on tree trunks .
For example , blue arrows might mean " this way to the lake , " and yellow arrows might mean " this way to the lodge . "
If you walk away from the lodge in search of the lake , you can paint backward yellow arrows as you go along .
On your way back from the lake , you can follow your yellow arrows home while painting backward blue arrows .
The key point here is that you always know how to get to where you are coming from , though you may not know how to get where you are going .
If you get to a tree trunk that has already been painted , you simply add your own arrow , even if it contradicts an existing arrow .
After many people have traveled between the lodge and the lake using this method , there will be many arrows painted throughout the forest --- many trees will bear multiple , contradictory arrows .
When trying to find your way back to the lodge , how do you interpret a tree trunk that bears ten yellow arrows ?
There are many possible strategies , but the simplest might be to just obey the majority of the arrows , since they probably point down the more direct paths ( recall that direct paths are faster , so they receive more traffic ) .
( This navigation technique was presented only as an example and not as a suggestion .
Please do not paint arrows in the forest . )
How MUTE Routes Messages
In a network , we do not have ants looking for food or hikers trying to find their way between the lodge and the lake .
Instead , we have messages that need to travel from a sender to a recipient .
Since MUTE users are anonymous , none of the nodes in the network know exactly where to find a particular recipient ( or , more precisely , which computer a particular recipient is using ) .
Like ants that are unaware of the overall environment layout , MUTE messages must be directed through the network using only local clues .
Each MUTE node maintains connections to several " neighbors " in the network , and these neighboring connections are used for message passing .
Suppose that MUTE node X receives a message from Alice to Bob through node Y , one of its neighbors .
X may have no information clues about where Bob is in the network .
However , upon receiving this message , node X learns something about Alice : it learns that messages from Alice come through node Y .
In the future , if node X ever receives a message to Alice , it can send it back through node Y using this clue .
Regardless of what X learns about Alice , it still has no information about Bob .
The best strategy here , using ants as inspiration , is to " send ants in all directions " , or to send a copy of the message on to each one of X's neighbors ( what we will call " broadcasting " the message ) .
One of the neighbors may have more information about which direction Bob is in .
If none of the nodes in the network have clues about Bob 's location , they will all broadcast the message to their neighbors .
If Bob exists in the network , this technique will eventually find him .
Notice that throughout the search for Bob , the message has been leaving a trail of clues about Alice .
If the message reaches Bob , and then Bob sends back a response , the response can follow these clues on a rather direct path back to Alice .
As the response is routed to Alice , it leaves a trail of clues that can be used to route future messages from Alice back to Bob .
Other nodes can make use of these clues too .
For example , if the owner of node X sends a message to Bob , the message will travel on a rather direct route using the existing clues .
Looking at these example diagrams , we can see that MUTE 's routing mechanism is quite similar to the technique of " Painting Arrows in the Forest " presented earlier .
Each node can be thought of as a tree , and each neighbor connection can be thought of as a path between neighboring trees .
Each node maintains a collection of arrows , and each arrow says something like " To get to Bob , use this path . "
In these diagrams , we follow the blue arrows backward to find Bob .
We can also think of each message leaving a " scent " as it travels through the network .
Messages from Alice leave Alice 's scent , and we can follow this scent when sending messages to Alice .
The darker arrows in these diagrams represent messages , while the faded arrows can be thought of as the scent left by messages .
For more information about how MUTE implements ant - inspired routing , see the MUTE Technical Details page .
Routing Clues and Privacy
In terms of anonymity , the notion of " clues about Alice " sounds scary .
Keep in mind that all of these " clues " are just local hints that will not enable anyone to directly pinpoint Alice in the network .
A node 's routing clue essentially tells it , " my neighbor knows more about Alice than I do . "
Of course , none of the nodes have a good measure of how much they know about Alice , so the fact that a particular neighbor knows more gives a node little extra information .
For example , none of the nodes along a path between Alice and Bob know enough to conclude that " my neighbor is Alice . "
The quality of the forecast provides information about the probability of the respective weather forecast arriving .
In general , our weather forecasts distinguish between the three categories of short - , medium - and long - term weather forecasts .
Forecast quality of short - term forecasts - weather forecast
Short - term forecasts or weather forecasts can be found here in the respective weather month .
The short - term forecasts are more detailed in the weather patterns such as wind , rainfall and center of gravity , temperature , sun or cover .
These weather forecasts range from 1 to 7 days , with the forecasting quality being very high for day 1 and lower for day 7 .
Things are different with stable weather conditions - here , too , a high forecasting quality can be given for day 1 , which , for example , does not drop as much until day 7 as it does in uncertain weather conditions .
Short - term forecasts are marked with the term weather forecast .
The following table explains by way of example how the progress of the forecasting quality can look .
Forecast quality of medium - term forecasts - weather forecasts
Medium - term weather forecasts are issued whenever a likely weather event is imminent but not yet certain - thus giving a rough trend beyond the 7th day which direction the weather is more likely to take .
In the medium - term weather forecast , the detailed forecasts are rather rough and mainly refer to which weather phenomena can occur .
The rough approach increases the forecasting quality compared to the detailed short - term forecast .
These medium - term forecasts are marked with weather forecasts .
The following table explains by way of example how the progress of the forecasting quality can look .
Forecasting quality of long - term forecasts - weather trend
Long - term weather trends are usually found in the season forecasts , or each month receives at the beginning of the long - term weather trend , which is updated at certain intervals .
Long - term forecasts or weather trends are controversial in meteorology , as the probability of arrival is often called into question .
Long - term forecasts are extremely crude and include only basic weather trends .
This rough grid again increases the forecasting quality compared to the medium and short - term forecasts .
These long - term weather forecasts are marked with weather trend .
The following table explains by way of example how the progress of the forecasting quality can look .
Weather trend
In addition , there are weather trends that can extend over a much longer period .
The weather trends deal exclusively with the temperature trend ( too warm / too cold ) and the possible precipitation behavior ( too wet / too dry ) .
The weather trend is part of our weather trends in the form of long - term forecasts of the respective weather models ( experimental basis ! ) .
Learn more about the reliability of a weather forecast on WeatherBonk
As a wise accountant once told me ( i.e. my CPA mother ) , all financial decisions should be first weighed against one thing : The Pillow Test .
What do bedding and money have in common you might be wondering at this point .
I had the same question , when I first heard it , but after many years of managing my own personal finances , I have come to fully understand and appreciate its simplicity .
The Pillow Test is a simple measure of a person ’s capacity for handling risk .
Plainly put , if a new financial transaction is going to cause a person to lose sleep , the investment or venture is most likely not worth the time , regardless of its potential .
This measure of one ’s tolerance for risk is not only a litmus test for going into new transactions ; it can also serve as a wake up call for getting out of transactions .
In other words , if money woes are creating sleepless nights , it might be time to consider unwinding some financial risk , because the best test is how well you rest .
With Ali al - Fadhily
BAGHDAD – Death squads from the Ministry of Interior posing as Iraqi police are killing more people than ever in the capital , emerging evidence shows .
The death toll is high  in all 1,536 bodies were brought to the Baghdad morgue in September .
The Health Ministry announced last month that it will build two new morgues in Baghdad to take their capacity to 250 bodies a day .
Many fear a government hand in more killings to come .
The U.S. military has revealed that the 8th Iraqi Police Unit was responsible for the Oct. 1 kidnapping of 26 Sunni food factory workers in the Amil quarter in southwest Baghdad .
The bodies of 10 of them were later found in Abu Chir neighborhood in the capital .
Interior Minister Jawad al - Bolani announced he is suspending the police unit from official duties and confining it to base until an investigation is completed .
But sections of the ministry appear responsible for the abductions and killing .
Ministry of Interior vehicles were used for the kidnapping in this case , and most men conducting the raid wore Iraqi police uniforms , except for a few who wore black death squad “ uniforms , ” witnesses told IPS .
The leader of the police unit is under house arrest and faces interrogation for this and other crimes , according to an official announcement .
“ It is for sure that they did it , ” one of the victim ’s neighbors told IPS on condition of anonymity .
“ The tortured bodies were found the second day .
They came in their official police cars ; it is not the first time that they did something like this .
They do it all over Baghdad , and we hope they will get proper punishment this time . ”
Men of the police unit , meanwhile , do not face imminent punishment .
“ They are going to be rehabilitated and brought back to service , ” director - general of the Iraqi police Adnan Thabit told IPS .
The Iraqi Islamic Party , the largest Sunni party , blamed militias with ties to the government and the U.S. military .
“ The Iraqi Islamic Party asks how could 26 people , women among them , have been transported from Amil to Abu Chir through all those Iraqi and U.S. Army checkpoints and patrols , ” it said in a statement .
The U.S. military has denied any involvement in the killings .
Gen .
Yassin al - Dulaimi , deputy minister for the interior , has said on Iraqi television several times that death squads are composed mainly of Iraqi police and army units .
His comments reflect differing allegiance and agendas even within the Shia bloc .
Dulaimi has been trying for long to expose the organized criminal gangs that have been controlling the ministry since its formation  a formation that was overseen by U.S. authorities .
Dulaimi says he does not believe that the Shia Badr organization , a large , well - armed and - funded militia , has complete control over his ministry .
But most residents of Baghdad believe that Badr has complete control over the Baghdad Order Maintenance police force , and use this force to carry out sectarian murders .
This force is one of several official security teams in Baghdad .
The force is led by Mehdi al - Gharrawi , who also led similar security units during the U.S. - led attack on Fallujah in November 2004 .
“ All criminals who survived the Fallujah crisis after committing genocide and other war crimes were granted higher ranks , ” Maj . Amir Jassim from the Ministry of Defense told IPS .
“ I and many of my colleagues were not rewarded because we disobeyed orders to set fire to people ’s houses [ in Fallujah ] after others looted them . ”
Jassim said the looting and burning of homes in Fallujah during the November siege was ordered from the Ministries of Interior and Defense .
“ Now they want to do the same things they did in Fallujah in all Sunni areas so that they ignite a civil war in Iraq , ” said Jassim , referring to the Shia - dominated ministries .
“ A civil war is the only guarantee for them to stay in power , looting such incredible amounts of money . ”
Another official with the Ministry of Defense , Muntather al - Samarraii , told IPS that both Iran and “ collaborators ” within the Ministry of Interior are to blame for the widespread sectarian killings .
“ I have lists of thousands of corruption cases from within my ministry , and other files to expose to the world , ” he said , “ but the world is not listening .
When it does , I am afraid it is going to be too late . ”
A police officer in Samarraii ’s office , speaking on condition of anonymity , told IPS that he believed that murderers would not be punished for their crimes .
“ They will reward them , believe me , and give them higher ranks , ” he said .
“ This is a country that will never stand back on its feet as long as these killers are in power .
And the Americans are supporting them by allowing their convoys to move during curfew hours . ”
While there is little evidence of direct U.S. involvement , questions have arisen over what the U.S. forces have done  or not done  to encourage such killings .
A UN human rights report released September last year held Interior Ministry forces responsible for an organized campaign of detentions , torture , and killings .
It reported that special police commando units accused of carrying out the killings were recruited from Shia Badr and Mahdi militias and trained by U.S. forces .
Retired Col. James Steele , who served as adviser on Iraqi security forces to then - U.S. ambassador John Negroponte , supervised the training of these forces .
Steele was commander of the U.S. military advisory group in El Salvador 1984 - 86 , while Negroponte was U.S. ambassador to nearby Honduras 1981 - 85 .
Negroponte was accused of widespread human rights violations by the Honduras Commission on Human Rights in 1994 .
The Commission reported the torture and disappearance of at least 184 political workers .
The violations Negroponte oversaw in Honduras were carried out by operatives trained by the CIA , according to a CIA working group set up in 1996 to look into the U.S. role in Honduras .
The CIA records document that his “ special intelligence units , ” better known as “ death squads , ” comprised CIA - trained Honduran armed units that kidnapped , tortured , and killed thousands of people suspected of supporting leftist guerrillas .
( Inter Press Service )
A note from the editors :
This article , a fascinating glimpse into the strange desires of mid-2000s web designers , is now obsolete .
A few weeks ago , while walking through the beautiful Sussex countryside , I decided I wanted to find a way to automate text - wrapping around images with irregular outlines .
Article Continues Below
Seriously , I need to get out more .
This article is the result of that ramble through the hills .
The concept#section2
The concept is simple .
We want to create a series of “ sandbag ” div s that we ’ll lay over our image ; it will be these sandbags and not the actual image that the text will flow around .
But we do n’t really want to do that ourselves : we want to get PHP to do it for us .
Step 1 : Working out the size of the sandbags #section3
We ’ll begin by creating an array with the sizes and positions of our “ perfect ” sandbags .
Our “ perfect ” sandbags would be only 1 px high to allow for the smoothest text flow ; working these out manually would be absurd , so let ’s find a technique that works !
Our sample image , which we want to right - align , currently looks like this :
Our sample image , with left - aligned text .
Looking at our image , I know how I ’d size up the sandbags by eye , and that ’s exactly what we ’re going to do with PHP .
We scan along from left to right , if we hit a transparent pixel we think “ ooh , let ’s go a bit further ; ” if we hit a solid pixel we say “ righto , that ’s where that sandbag needs to be . ”
Then we ’ll go down to the next row of pixels and repeat this process until we hit the bottom of the image .
To put it a tad more technically , we want a loop that scrolls through the Y axis , starting at 0 and finishing at the height of the image .
For each row , we ’ll scroll through the X axis , starting at 0 and ending at the width of the image .
Each time we hit a transparent pixel , we ’re going to add 1 to the array for that row .
When we hit a non-transparent pixel , we ’re going to break out of our X loop and go to the next row of pixels .
To put it even more technically , that translates to the following code ( line wraps marked » — Ed. ) :
<? php$image = imagecreatefrompng ( ' an_image.png ' ) ; $ width = imagesx ( $ image ) ; $ height = imagesy ( $ image ) ; for ( $ y=0 ; $y < $ height ; $ y++ ) { $ imagemap [ $y ] = 0 ; for ( $ x=0 ; $x < $ width ; $ x++ ) { $ c = imagecolorsforindex ( $ image , » imagecolorat ( $ image , $ x , $y ) ) ; if ( $ c [ ' alpha ' ] < 127 ) { break ; } else { $ imagemap [$y ] ++ ; } } } ?>
Phew — surely that ’s one of the hardest bits out of the way .
The imagecolorsforindex function here is great is n’t it ?
It returns an array of the red , green , blue , and alpha components .
If the alpha component of any given pixel is less than 127 , then the pixel is n’t fully transparent .
Positioning our bags#section4
The CSS we ’re using is pretty minimal .
However it turns out that Internet Explorer does n’t like having a div only 1 px high , so we need a little bit of trickery .
To keep IE happy with our 1 px high sandbags we use the following CSS :
. sandbag - right { border : 0 ; padding : 0 ; font - size : 0 ; margin : 0 0 - 1px 0 ; height : 2 px ; float : right ; clear : right ; background : red ; }
By setting the font - size to zero , we can achieve 2 px - high div s .
If we then throw in a negative bottom margin of 1px before IE really notices what ’s going on , we can make them appear to be 1 px high .
Bingo .
( The red background is just so we can see the sandbags at this stage ; we ’ll be removing this later . )
Laying down the sandbags #section5
We ’ve now got everything in place , so let ’s create those sandbags .
This requires a simple foreach loop through our $ imagemap array .
To get the width of our sandbag , we need to remember it ’s not the value we ’ve already calculated that we want , as that ’s actually the size of the empty space next to the sandbag .
The actual width of our sandbag is the width of the image minus the value in our array .
We ’re going to use the printf function to echo our sandbags into a template .
This will make things neater in the long run .
( line wraps marked » — Ed. )
<?php$sandbagTemplate = '
' ; foreach ( $ imagemap as $ position => $ blankPixels ) { $ sandbagWidth = $ width -$ blankPixels ; printf ( $ sandbagTemplate , $sandbagWidth ) ; }?>
Step 1 : The text - wrap so far .
You can check out the code for step one .
Step 2 : Too much of a good thing … #section6
Now we have an array that lets us generate a perfect series of sandbags .
After a bit of testing , we see , somewhat annoyingly , that Opera seems to be the only browser in which these “ perfect ” sandbags work as expected .
In most other browsers , we find that our text disobediently overlaps our sandbags .
I tried playing around with various margin sizes , but this just did n’t cut the mustard .
Finally , I reluctantly concluded that we needed less - perfect sandbags .
Bigger than 1 px .
But how big ?
Well , let ’s leave that up to the user .
I found that 10 px to 50 px seemed to work quite well , but it may well vary , so we ’ll leave it flexible in the function .
Although we ’ve found out how to trick IE into allowing us to have those 1 px - high sandbags , there ’s not really much point if they do n’t work , and our function becomes much neater if we enforce a 2 px - high minimum .
It was upsetting to lose this neat trick , but I took a deep breath and disallowed 1 px - high sandbags from the function .
( Do n’t be sad , this knowledge will come in handy later on . )
Less than perfect #section7
Now we want to loop through that “ perfect ” array we generated earlier .
If we have a sandbag height of 10 px , we would want to look at the array in clusters of 10 , taking the largest sandbag from each cluster and then outputting that value into a new array .
Of course , rather than using a constant number , we ’ll just use our variable $ sandbagHeight .
The largest sandbag from each section is actually the one with the smallest value in the array ( as the array represents the transparent dead space and not the actual sandbag ) , so we ’ll use the handy PHP function min to return the lowest value from the array .
The resulting loop looks like this :
for ( $ i=0 ; $i < count ( $imagemap ) ; $ i = $ i+$sandbagHeight ) { for ( $ x=0 ; $x < $ sandbagHeight ; $ x++ ) { $ b = $x + $ i ; if ( isset ( $ imagemap [ $ b ] ) ) { $ section [ $b ] = $ imagemap [ $b ] ; } } $ sandbag [ ] = min( $ section ) ; unset ( $ section ) ; }
We also need to set the height of each sandbag .
We ’ll do that by adding it to our sandbag template ( line wraps marked » — Ed. ) :
$ sandbagTemplate = '
';
We ’re going to want the possibility of adding some extra padding above the first sandbags and below the last sandbag , and we can easily isolate the first and last item of the array and append an additional style to these as required .
If we now use our $ sandbag array instead of our $ imagemap array to generate the sandbags we get the following :
Step 2 : Sandbags sans our sample image .
You can see how the code is looking in step two .
Step 3 : Placing the image behind the sandbag#section8
We ’re on the homestretch now .
We ’ve got the sandbags .
All we need to do now is stick the image behind them .
What could be simpler ?
All we do is … ur … no , wait … we just …
… oh .
Oh dear .
This was meant to be the easy bit , and looking at it now it turns out it ’s quite a big hill .
I ’d always just imagined I ’d either a ) be able to just give the surrounding div a background image or b ) actually use an img .
The problem is , the second we give the surrounding div a specific size in order to give it a background image , the text starts to wrap around the div .
It overpowers our sandbags .
The same goes for putting an img in there .
I tried playing around with z - index layers , but every time I thought it was going to work , it fell apart in one browser or another .
For the longest time , this had me utterly stumped .
We ’ve got our sandbags and they work … it ’s just we ca n’t seem to put anything else in front of our sandbags without destroying their functionality …
Using what we ’ve got#section9
… so let ’s not put anything else in front of the sandbags .
This is where some radical thinking comes in .
Let ’s use the actual sandbags themselves .
Why not just give each sandbag the same background image and position that background image relative to each sandbag ’s position .
Does it work ?
Oh yes it does .
Step 3 : Sandbags with the sample image in place .
Here ’s the code for step three .
Step 4 : Adding a pseudo alt attribute # section10
We ’ve now got a working function , but we have to accept that we ’ve lost a little bit of accessibility in doing this .
Fear not , we can add pseudo alt and title attributes to the image .
We ’ll set these from the function , and put this new variable in an outer div as a title .
We ’ll also throw it in there as a hidden span before the first sandbag .
That way if we turn off the stylesheet we get our alt text , and if we hover over anywhere on the image we get our title attribute .
We ’re also going to add a no-repeat to the background , which means we never get the top of the image repeating again in the final sandbag .
Our stylesheet now looks like this :
.sandbagImage span { display : none ; }.sandbagRight { border : 0 ; padding : 0 ; font - size : 0 ; margin : 0 0 0 25 px ; float : right ; clear : right ; background : no -repeat ; }</style >
When we create the outer div we ’re going to use the following code give us the option of including an alt attribute :
if ( $alt != '' ) { echo '
‘ ; } ‘ . $ alt . ” ; } else { echo ‘
( You do n’t need to see the code for this , as it ’s a minor tweak . )
Step 5 : Keeping Safari happy #section11
There ’s a fight brewing here between two browser “ constraints ” that face us here .
In Safari , that “ no - repeat ” we added does n’t work where there is negative background positioning , and so if the final sandbag is too big , we get the top of the image repeating in the final sandbag .
That ’s not good .
So what we can do is calculate the size of each sandbag as we add it to the array .
The final time the variable is set will be the size of the final sandbag .
We do that by adding a simple “ count ” to our second loop :
for ( $ i=0 ; $i < count ( $ imagemap ) ; $ i = $ i+$sandbagHeight ) { for ( $ x=0 ; $x < $ sandbagHeight ; $ x++ ) { $ b = $x + $ i ; if ( isset ( $ imagemap [ $ b ] ) ) { $ section [ $b ] = $ imagemap [ $b ] ; } } $ sandbag [ ] = min( $ section ) ; $ finalSectionSize = count ( $ section ) - 1 ; unset ( $ section ) ; }
Step 4 : Safari - friendly sandbags .
Take a look at the code for step four .
Keeping IE happy # section12
But we still can’t drop that no -repeat .
Why not ?
Well …
Let ’s suppose we have an image that is 121 px high , split into 10 px - high sandbags .
Our final sandbag is going to be 1 px high .
But as we know , in Internet Explorer we can’t have 1 px high div s without some CSS hacking .
If we give the final sandbag a negative bottom margin , we ’re then going to have to go through a palaver of adding an extra “ fake ” sandbag to re-establish our bottom margin if required .
We do n’t want to do this .
That no -repeat still needs to be there because in this situation it could result in the top row of pixels in the image being repeated at the bottom .
Aaaand the code for step five .
Step 6 : Allowing for left - alignment #section13
The function as I ’ve explained it only allows for right aligning .
To left - align , we have to keep a few simple things in mind :
The CSS for our sandbags should float and clear left , not right .
When looping through our initial array we work from right to left , so we start at the width of the image and end at 0 , subtracting from x each time instead of adding to it .
The x axis of the background position is always 0 px .
I wo n’t walk through these steps , but …
Our final function # section14
… we can combine everything together into one final glorious function including the option for left - alignment , our last few bits of cross - browser fixing , and some error checking .
The final function is simple to call ( line wraps marked » — Ed. ) :
<?php alignedImage ( ' an_image.png ' , ' right ' , » ' A right aligned blob ',30 ) ; ?>
You can see the code for the final function : step six .
Yay !
Concept programming is about finding good representations of concepts .
One important consequence for tools is that you need extensible programming languages , because there is no fixed set of concepts .
Discussions about the design of XL highlight this extensibility a lot , because this is what distinguishes XL from languages such as C++ or Ada .
Several Lisp programmers pointed out that Lisp was already an extensible language , and concluded that I was merely reinventing the wheel .
More precisely , I got the following comments , which I think deserve some better answer than the previous one I wrote :
Anyone writing a language today who is n't familiar with Scheme , Haskell , and ML may as well throw in the towel right now .
LISP runs as fast as C++ , and has extensive support of programmed transformation of code .
Those that do not use LISP are condemned to reinvent it .
Badly .
I would advise any person who wants to develop their own language to take a good look at LISP first .
You may not need a new language , but even if you do -- you will have a bunch of great ideas to start with .
You can bend Lisp to be what you want it to be , which is largely why we Lispers well love it .
I suggest you catch up a bit on what Common Lisp can actually do , rather that spouting stuff that sounds like it's based on a CS101 class taught in Scheme that did n't even cover macros .
You know what 's better than Lisp ?
A better Lisp .
Be sure to explain exactly what you mean when you say that XL is " more extensible than Lisp " .
Hey , why reinvent the wheel ?
A dog might not be able to walk past a tree without pissing on it , but I would hope that a software developer could do better than that ...
Reinventing the wheel is not a bad thing
To a large extent , designing a programming language and methodology today , like most of engineering , involves a lot of wheel reinvention .
This is not a bad thing .
Most people would be vastly unhappy if the designers of the Boeing 747 had said : " Let 's not reinvent the wheel , we 'll use the same old trusted design Romans used for their charriots " .
A similar line of reasoning is " Lisp ( or some other language ) can do it , so why bother ? "
Well , assembly language can do everything .
The reason we invent higher language designs is because we can't write large programs in assembly without making mistakes , or within a reasonable amount of time .
The limit is not the language , it is the programmer .
That is what concept programming focuses on .
Concept programming in Lisp
Concept programming is not restricted to a particular language .
The first demonstration of a concept - programming tool was Moka , which is Java - based .
Similarly , you can do concept programming in Lisp .
Furthermore , Lisp already has all the attributes it takes to build concept representations at various levels of abstraction .
Of all existing programming languages , Lisp might be one of the closest to the ideal .
In particular , Lisp programmers are used to not mixing levels of abstraction ( like having pointers in the middle of a high - level algorithm ) , and are used to using multiple methods to extend the language ( like modifying the parser , adding macros , doing program rewriting , etc ) .
All of this is good for concept programming .
For instance , integrating new concepts such as objects in Lisp ( CLOS ) was much easier than in C ( C++ or Objective - C ) .
To me , Lisp is an important validation of the idea that language extensibility is a key to long - term survival .
If past history is any indication , 20 years down the road , people are likely consider Java a language of the past , and to have replaced it with fancier languages .
But they will probably still use something they call Lisp .
However , that Lisp might be as remote from today 's Lisp as Common Lisp is from a 1970 's implementation .
The point here is that Lisp is a language that evolves , whereas most other languages die a slow death .
Yet Lisp is far from perfect .
At its most fundamental level , it is full of tiny concept casts .
For instance , the names " car " and " cdr " ( and I realize there are more modern names for the first element or tail of a list ) are taken from the name of registers on some long forgotten computer model .
Fundamentally , an addition in Lisp is represented as (+ 1 2 ) ; this is the output of the infix parsers .
Similarly , Prolog extensions to Lisp such as Schelog or Poplog require the use of a Lispish syntax which only a mother or Lisp user could love :-)
A different approach to reflexion
For Lisp programmers , the main differences between XL and Lisp will not be extensibility .
It will be day to day syntax and concepts .
On the extensibility front , XL implements reflection very differently than Lisp .
Lisp has a very simple yet effective reflective model :
Programs are represented by a single data type , lists .
There is a direct , 1 - to - 1 relationship between internal program representation and standard program syntax : (+ 1 2 ) is the syntax for a program segment adding integers 1 and 2 , as well as the syntax for a list representing that program .
is the syntax for a program segment adding integers 1 and 2 , as well as the syntax for a list representing that program .
Lists are directly executable , without a programmer - visible translation step .
Meta - programming is achieved by generating lists and then executing them immediately , so meta - programs are generally embedded in the program itself .
XL has a more convoluted , but more powerful and user - friendly meta- programming scheme :
Programs are represented by an object - oriented parse - tree ..
The user - visible syntax hides the structure of the parse tree , and looks much like most Algol - derived languages .
Meta -programming occurs as part of an explicit translation process .
Meta -programs are distinct from the programs they manipulate , and behave as reusable language extensions .
The XL model is slightly more complicated conceptually , but has a few benefits :
Untitled Document
If you ever wanted to see how badly ' conservatives ' have been shaking the silver out of our pockets in the past six years , this list is it .
Had enough of ' conservative ' rip - off artists in Washington ?
Here 's a list of the worst offenses we 've seen since 2001 .
1 ) The Bush administration has created the biggest budget deficit , debt , and trade imbalance ever while cutting funding for domestic needs like education , Medicare , and Medicaid .
2 ) The administration ’s tax cuts favor the rich , no matter how you look at it .
About 87 percent of tax benefits go to the 14 percent of households with incomes above $ 100,000 .
Households with incomes below $ 75,000 -- three - quarters of all households -- get just 5 percent of those benefits .
3 ) Bush signed the largest corporate tax break package in two decades , $ 136 billion .
After World War II , corporations paid half the cost of running the federal government .
Today , they pay 7 % .
4 ) The price of gas doubled under Bush .
The top oil companies earned $ 25 billion during the quarter that Hurricane Katrina struck compared to $ 50 billion for all of 2004 .
Former Exxon - Mobil , CEO , Lee Raymond got a $ 400 million exit package .
5 ) The Republican Congress has voted against every minimum wage increase , except the one linked to getting rid of the estate tax for the rich .
The real income of the average American household has fallen five years in a row .
6 ) House Republicans chopped education programs by $ 14.3 billion -- the highest cuts ever .
College tuition has increased 34 percent since Bush took office .
7 ) Since 2001 , average monthly health care premiums have risen from $ 342 to $ 603 .
Annual deductibles have doubled .
Today 46 million Americans ( including 8.4 million children ) have no health insurance , an increase of 6 million since Bush took office .
8 ) The Senate approved the biggest bankruptcy law in a quarter of a century .
Republicans voted AGAINST protecting senior citizens , the seriously ill , military members , veterans , and employees .
9 ) In 1983 , the Greenspan Commission put Social Security measures in place that created a $ 1.7 trillion surplus in the system .
This administration borrowed against and cut that to $ 153 billion while blaming citizens for not dying young enough .
10 ) In 2005 , Americans paid $ 4.3 billion in withdrawal fees at ATM ’s and $ 16 billion to credit card companies in late fees alone .
Republicans have suggested no remedies .
Nomi Prins is a senior fellow at the public policy center Demos and author of Other People 's Money and Jacked : How " Conservatives " are Picking your Pocket ( Whether you voted for them or not ) .
HALF a billion dollars spent buying back hundreds of thousands of guns after the Port Arthur massacre had no effect on the homicide rate , says a study published in an influential British journal .
The report by two Australian academics , published in the British Journal of Criminology , said statistics gathered in the decade since Port Arthur showed gun deaths had been declining well before 1996 and the buyback of more than 600,000 mainly semi-automatic rifles and pump-action shotguns had made no difference in the rate of decline .
The only area where the package of Commonwealth and State laws , known as the National Firearms Agreement ( NFA ) may have had some impact was on the rate of suicide , but the study said the evidence was not clear and any reductions attributable to the new gun rules were slight .
Yours , Mine and Ours
For the last couple of years , I have been managing my weblog with a desktop content management tool called CityDesk , made by Fog Creek Software .
This fine product has suited me very well .
Most blogs serve their content with a scripting language , dynamically generating pages from a database , with all article editing taking place in a web browser .
That approach does n't work so well for me .
First of all , I prefer to serve my content as static HTML .
More importantly , I tend to write full - length articles , so I prefer to write my content in something stronger than an HTML textarea .
So for me , CityDesk is a good piece of software .
It has templates and a basic scripting language and a simple built - in word processor and tools to manage my links .
However , I stopped using CityDesk a couple of months ago ( Sorry Joel ! ) .
Sometime later in this article I intend to make some sort of a point , but for now I want to tell the story of the tool I now use to manage my weblog .
ESBMA
Like I said , CityDesk is great , but a few things about it kept bugging me :
CityDesk 's built - in text editing facilities are n't quite strong enough for me .
I want to write my articles in a full - featured word processor .
CityDesk stores all content in a Jet database .
I work at SourceGear , a vendor of version control tools .
I want my content stored in a version control system .
So I decided to write my own content management tool .
I call it ESBMA , which stands for " Eric Sink 's Blog Management App " .
( The astute reader will realize now that this is not an article about how to choose cool names for products . )
ESBMA is 8,469 lines of C# code designed to manage a weblog exactly the way I want , including the following features :
Static HTML output :
When publishing my site , ESBMA generates static HTML pages .
Templates ( based on the old " pages with holes " concept ) make it easy to change the general layout of the site .
: When publishing my site , ESBMA generates static HTML pages .
Templates ( based on the old " pages with holes " concept ) make it easy to change the general layout of the site .
Integration with Microsoft Word : ESBMA has no built - in facilities for editing articles .
Instead , all my writing takes place in Microsoft Word .
When I double - click an article for editing , it launches Word with the proper document open .
When I publish my site , it uses the scriptability features of Word to save each article as HTML .
Then it cleans that resulting HTML and processes it as necessary to generate the pages of my weblog .
: ESBMA has no built - in facilities for editing articles .
Instead , all my writing takes place in Microsoft Word .
When I double - click an article for editing , it launches Word with the proper document open .
When I publish my site , it uses the scriptability features of Word to save each article as HTML .
Then it cleans that resulting HTML and processes it as necessary to generate the pages of my weblog .
Integration with SourceGear Vault : ESBMA stores all my content under version control .
Naturally , I used my own product .
Since the Vault client libraries are in C# , this was pretty simple .
: ESBMA stores all my content under version control .
Naturally , I used my own product .
Since the Vault client libraries are in C# , this was pretty simple .
Management and pseudo - scripting : Like CityDesk , ESBMA the ability to manage links ( even when things move ) .
It also has very basic facilities for variables , loops and conditionals .
: Like CityDesk , ESBMA the ability to manage links ( even when things move ) .
It also has very basic facilities for variables , loops and conditionals .
Integration with Amazon :
When I want to recommend a book , ESBMA can use web services calls to retrieve information from Amazon .
It can automatically insert my Amazon Affiliate ID into product links .
: When I want to recommend a book , ESBMA can use web services calls to retrieve information from Amazon .
It can automatically insert my Amazon Affiliate ID into product links .
Integration with Haloscan :
For articles where I want to allow comments , I can easily tell ESBMA to add Haloscan links at the bottom of an item .
: For articles where I want to allow comments , I can easily tell ESBMA to add Haloscan links at the bottom of an item .
CityDesk import :
A utility program was used to read all the content from my CityDesk file and convert everything to ESBMA 's formats , keeping all the paths the same .
: A utility program was used to read all the content from my CityDesk file and convert everything to ESBMA 's formats , keeping all the paths the same .
Easy publish : I click one button and type a password and ESBMA uploads all new content to my web server .
The connection is tunneled through ssh for security .
For me , this is the best blogging tool in the world .
A different perspective
For anybody other than me , ESBMA is one of the worst pieces of software ever written :
ESBMA has no installer .
It has never been run by anyone but me .
It has never been run outside the Visual Studio debugger .
Every time I want to work on my blog , I open ESBMA.sln and hit F5 .
ESBMA has no documentation .
When I forget how to do something , I look up the answer in the source code .
Until quite recently , the only way to change the title of an article was to exit the app and manually edit an XML file .
One day I got tired of doing that so I added a dialog box with a text field .
The CityDesk importer is n't even close to being usable for other people .
It handles only the CityScript features that I needed and ignores the rest .
It has hard - coded stuff that doctors the imported content in ways that make sense only for me .
ESBMA publishes to my web server by invoking rsync tunneled through ssh .
Cygwin ( with the rsync and ssh packages , of course ) must be installed , and it must be installed in a specific path , because that path is hard - coded somewhere in the ESBMA source code .
ESBMA communicates with Microsoft Office ( just Word , actually ) in a couple of different ways .
It requires Office 2003 .
It will not work with any other word processor .
It will not work with any previous version of Microsoft Office .
It will [ almost certainly ] not work with any future version of Microsoft Office unless I change the code .
Oh yeah , and ESBMA crashes if the Primary Interop Assemblies for Word are not installed .
The same basic story applies for integration with Vault .
ESBMA works with Vault 3.1 .
It wo n't work with Vault 3.0 and it's not gonna work with Vault 4.0 without extra effort .
It does n't work with any other source control tool .
ESBMA sometimes crashes when I delete an article .
I 'm not sure why .
I just do n't worry about it .
ESBMA supports HTML templates , but there is no built - in facility for managing or editing them .
When I want to tweak the template for my site , I usually do something like this :
Open a Cygwin bash shell
cd /cygdrive/c/Documents and Settings / Eric Sink / Local Settings / Application Data/ESBMA/working/wf_0
vi template.
html
Oh , and ESBMA does n't create a default template .
When I create a new site , I have to manually create template .
html in the right place .
If I do n't , ESBMA will crash .
When ESBMA is performing a long operation , it does n't show a progress bar .
Or a wait cursor .
It does n't even repaint the window .
Until the operation is done , the app looks like it is hung .
So ESBMA has lots of problems , but they do n't really bother me very much .
Every once in a while I fix a bug .
Mostly I just avoid them , since I know where they all are .
Actually , this is my third attempt to write my own blogging tool .
The first two attempts failed because I took the time to consider the needs of other people .
Instead of building the perfect tool just for ME , I got distracted thinking about how I could turn my blogging tool into a business venture .
This time I succeeded .
I built a blogging tool which works perfectly for me .
It wo n't work for anybody else .
For other people , it is not merely " user unfriendly " , it is " user hostile " .
My blogging tool is an example of " MeWare " .
Yours , Mine and Ours
I claim here that there are three categories of software :
MeWare :
The developer creates software .
The developer uses it .
Nobody else does .
: The developer creates software .
The developer uses it .
Nobody else does .
ThemWare :
The developer creates software .
Other people use it .
The developer does not .
: The developer creates software .
Other people use it .
The developer does not .
UsWare : The developer creates software .
Other people use it .
The developer uses it too .
For completeness , I suppose I should probably mention the obvious fourth category :
NobodyWare : The developer creates software .
Nobody uses it .
Coming up with examples of NobodyWare will be left as an exercise for the reader . :-)
Observations about ESBMA and CityDesk
As I said , ESBMA is an example of MeWare .
I wrote it " just for me " .
I have no other users , therefore I have none of the challenges which arise when developing software for other people .
I consider the concept of MeWare to be somewhat new .
Simply put , MeWare happens today because today 's developer tools are so amazing .
I would never have written ESBMA if I had to do it in C against the Win32 API .
Software development is really expensive .
Typically , the costs of developing software are recovered by convincing lots of people to use it and collecting money from [ or through ] those users [ directly or indirectly ] .
When software is developed for a single user , the opportunities to recover the development costs are dramatically reduced .
So MeWare only makes sense when the development costs are very low .
I was able to create ESBMA for myself because coding with C# and Visual Studio is an extremely productive experience .
In contrast to ESBMA , its predecessor CityDesk is an example of UsWare .
CityDesk is a shrinkwrap product of Fog Creek .
It was developed by Joel Spolsky .
He uses it to maintain his website .
Other people use it too .
To any objective eye , the difference between CityDesk and ESBMA is obvious .
CityDesk is polished and easy to use .
ESBMA is user hostile , sometimes gratuitously so .
At this point some reader who is familiar with CityDesk is screaming , " Wait !
You ca n't use CityDesk as an example of a good product .
CityDesk is a failed product .
Joel has n't released a new version in 42 years and he never responds to questions about it anymore ! "
OK , fine .
Joel himself seems to admit that CityDesk has n't been the big seller he hoped it might be .
However , the success or failure of CityDesk is n't relevant to my point .
Which reminds me , I promised you I would make a point , did n't I ?
OK , here it is :
The gap between developer and user can be enormous .
It 's a canyon , and it takes serious effort to cross it .
If in fact CityDesk is to be considered an unsuccessful product , I claim that its failure is an issue of marketing , not an issue of product quality .
People who use CityDesk love it .
It is elegant and extremely easy to use .
I daresay it is the leading application in its market niche .
The problem is that there just are n't very many people in that niche .
In the world of content management , the war between Web - based solutions and thick clients is over -- the Web apps won .
There just are n't many people like me who want a single user desktop content management system that generates static HTML .
In other words , CityDesk did a great job crossing the canyon , only to find out that there were n't very many people standing over there .
Consider what would happen if I decided to take ESBMA up to the next level , across the canyon , from MeWare to UsWare .
I would have to make it work as well for other people as it works for me .
I would have to fix all the problems described above , plus dozens more I did n't even mention .
Off the cuff , I estimate that an UsWare version of my blogging app would be ten times more effort than the MeWare version I have now .
And of course , it would be marketing suicide , since I would be competing with the well established CityDesk for the affections of the six remaining people on earth who care about apps like this .
It 's All about the Users
So let 's face it -- MeWare is n't actually very interesting .
Aside from the occasional outlier like myself , nobody is developing MeWare .
All of us are developing software on behalf of other people .
Whether your software is commercial or open source , it 's all about the users .
Why do we develop software for other people ?
Because they need software , and they are not developing it for themselves , for only two reasons I can think of :
They do n't develop their own software because they simply do n't know how .
They do n't develop their own software because they are too busy doing other things .
In either case , the users are expecting us to create software on their behalf .
They expect us to see things from their perspective , to value the things that they think are important .
This is hard .
The Challenges of ThemWare
The detachment between developer and user is greatest in the case of ThemWare .
I create software .
Somebody else uses it .
I do not .
This creates three challenges that I want to highlight :
1. Maybe I do n't even know how to use my software .
In this situation , I work all day creating dialog boxes and toolbars , but I do n't actually know what to do with them .
Several years ago I worked as a developer of data visualization tools for scientists .
Our software could take data and create pretty pictures like contour plots and line graphs and colorized grids .
I took physics and chemistry in college , but that does n't make me a scientist .
I really never knew how to use the software I was developing .
I could tell you the arcane details of how our macro language worked , but I could n't tell you what a Fast Fourier Transform is .
I still can't .
So I could never make our software do anything interesting , but our customers could make amazing pictures with it .
2. Maybe I do n't understand the people who use my software .
The people who use my software are not like me .
They 're in another field .
I'm a software programmer , but those people were trained in auto mechanics or interior decorating or dentistry .
I do n't know how they see the world .
Understanding their perspective does n't come naturally for me at all .
I can illustrate this situation with a real - life example that I face quite regularly .
The SourceGear web site has a " store " which allows our customers to purchase licenses for our products .
This store is a piece of software , and I am the developer responsible for it .
However , I never actually use it .
Obviously I never buy a copy of my own software .
( I was tempted to once .
It was the last day of the month and our sales were about a hundred bucks shy of our monthly goal .
I was so tempted to whip out my credit card and place an order for one copy of Vault . )
Anyway , this store is ThemWare , and I do n't think I understand Them .
We sell our products to developers , and I understand developers just fine .
But many companies funnel all purchasing through a department which is dedicated to that purpose .
Apparently there is some sort of impedance mismatch between me and the folks in those purchasing departments , because people keep coming to our store and buying the wrong thing .
One of our products is called SourceOffSite .
The current version is 4.1 , but we do still continue to sell the 3.5 version for people who prefer not to upgrade .
( Starting with version 4.0 , the SourceOffSite requires the .NET Framework , and not everybody wants to install it . )
Anyway , version 4.1 and version 3.5 require different kind of serial numbers .
When you come to our store , it 's important that you buy the correct version .
So the store tries very hard explain the situation .
The information is at the top of the order form .
In red .
After you fill out the order form , you are reminded again , just to be sure .
But so far , the canyon between me and Them still looks big .
We get email basically every day from somebody who just bought SourceOffSite and then discovered that their newly purchased 4.1 serial number will not work with their 3.5 server .
It is only a slight exaggeration to say that everybody who comes to buy 3.5 licenses does it wrong .
My next version of the SourceGear store needs to have an additional verification step for people in purchasing departments who are trying to buy SourceOffSite .
When the purchaser places an order for SourceOffSite , they will see a message like this :
Please go ask the developer to confirm which version they want .
To prove that you actually spoke with a developer , ask them for the answer to the following question :
â€¢ " Virtual memory " is :
1 . An upcoming technology for recording TV shows
2 . A feature of your computer
3 . A piece of jargon from Star Trek
3 . Maybe I do n't even like the people who use my software .
There are six billion people on the planet .
I can't be expected to be fond of all of them .
I am one of the few software developers in central Illinois who does not work for State Farm Insurance .
State Farm is one of the largest insurance companies in the world .
Their headquarters is in Bloomington , just an hour or so down the road from us here in Champaign .
The sheer size of State Farm is simply amazing .
This company is monstrous , like the Borg from Star Trek , assimilating every IT resource in the area .
They employ thousands upon thousands of programmers , all of whom are busily working on software which will be distributed to countless insurance agent drones scattered all over the nation .
Even though Bloomington is a small city of perhaps 100,000 people , Microsoft has an office in Bloomington because State Farm is their largest non-government customer .
I can't imagine working at State Farm .
I do n't even like insurance agents .
Every day I would go to the office and build software to help insurance agents be more efficient in their ongoing efforts to annoy me .
The temptation for sabotage would be overwhelming .
The Consequences of ThemWare
In terms of the size of the canyon , ThemWare is probably the worst possible scenario .
If I am building software that I do n't use and do n't know how to use for people I do n't understand or even like , how good is my software going to be ?
I probably see every feature in terms of how difficult it will be to implement , rather than how valuable it will be for my users .
I probably find myself wanting to label or document the features using my jargon instead of theirs .
I probably create features that are tedious or unintuitive for my users .
I can't imagine why the user interface I designed does n't make sense to them .
ThemWare is hard .
The Challenges of UsWare
The situation with UsWare is n't quite as bad .
I create software .
Other people use it .
So do I .
Unlike the situation with ThemWare , I as a developer actually have at least one thing in common with my users :
We both use my software .
This suggests that we probably have even more things in common .
Perhaps we can even understand each other .
The Best Dogfooding Story Ever
The common expression for using your own software is " eating your own dogfood " .
Sometimes this term gets verbed by simply calling it " dogfooding " .
If you 'll indulge me briefly , I 'd like to tell you what I think is the best dogfooding story ever .
However , it 's not a software story .
It 's a woodworking story .
The primary machine tool in any well - equipped woodshop is a table saw .
Basically , it 's a polished cast iron table with a slot through which protrudes a circular saw blade , ten inches in diameter .
Wood is cut by sliding it across the table into the spinning blade .
A table saw is an extremely dangerous tool .
My saw can cut a 2 - inch thick piece of hard maple with no effort at all .
Frankly , it 's a tool which should only be used by someone who is a little bit afraid of it .
It should be obvious what would happen if a finger ever came in contact with the spinning blade .
Over 3,000 people each year lose a finger in an accident with a table saw .
A guy named Stephen Gass has come up with an amazing solution to this problem .
He is a woodworker , but he also has a PhD in physics .
His technology is called Sawstop .
It consists of two basic inventions :
He has a sensor which can detect the difference in capacitance between a finger and a piece of wood .
He has a way to stop a spinning table saw blade within 1/100 of a second , less than a quarter turn of rotation .
The videos of this product are amazing .
Slide a piece of wood into the spinning blade , and it cuts the board just like it should .
Slide a hot dog into the spinning blade , and it stops instantly , leaving the frankfurter with nothing more than a nick .
Here 's the spooky part : Stephen Gass tested his product on his own finger !
This is a guy who really wanted to close the distance between him and his customers .
No matter how much I believed in my product , I think I would find it incredibly difficult to stick my finger in a spinning table saw blade .
Unbelievable !
Back to the problems with UsWare ...
I think dogfooding is one of the most important things a developer can do .
Nothing gets you closer to the perspective of your users than becoming one of them .
But UsWare still has challenges .
Your users are still probably not exactly like you .
Recently , this very issue has been discussed with respect to Microsoft 's dogfooding of Team System .
People wonder if Microsoft is going to end up creating a set of developer tools that are useful only for software companies .
This is a valid concern .
There are far more companies out there that produce software simply as a means toward producing something else , like jets or laundry detergent .
Those companies probably do n't work exactly the way software companies do .
SourceGear DiffMerge
With UsWare , there is a tendency to get stuck in the following path of logic :
I use the software .
I understand it .
So everyone else understands it too , right ?
I have this problem with the SourceGear DiffMerge tool that comes bundled with Vault .
This app can be used to help perform a three - way merge .
The basic operation is fairly complex , so the tool needs to do a great job presenting a user interface which is easy to understand .
Apparently , it does not .
I helped designed the tool , so it always makes perfect sense to me .
So , when users have trouble understanding it , I have a tendency to suddenly become Basil Fawlty , the rude English hotel manager played by John Cleese :
User : I do n't get it .
Basil Fawlty :
It 's perfectly simple .
There are three files being displayed on your screen and we should n't have to label which one is which because it seems perfectly obvious to us and so it is not the software which is defective here but rather , its user .
Thank you so much , good day .
Unfortunately , very shortly after this happened the first time , one of SourceGear 's developers walked into my office :
SourceGear Developer : Hey Eric , you know that DiffMerge tool we ship ?
I do n't get it .
Basil Fawlty : Right !
Apparently I 'm the one who is defective here then .
Manuel !
It is more or less impossible for me to design a user interface that I do n't understand , but it is all too simple for me to design one that other people do n't understand .
Rant : Flagged messages in Mozilla Thunderbird
Another problem with UsWare is the case where I the developer design and optimize features for the way I use them , forgetting the my users might be using them differently .
For an example of this , I 'm going to switch places and cite a case where I am the user .
My favorite email client is Mozilla Thunderbird .
I like it very much , except I wish that flagged messages would work the way they do in Outlook .
Every time I see a new release , I have high hopes that flagged messages will finally work the way I expect .
Last week I upgraded to the new 1.5 release , and once again , I was disappointed .
Thunderbird supports flags , but it cannot search for flagged messages or filter views with flag as one of the criteria .
Bottom line : Thunderbird has flags , but they seem to be mostly for show .
They look nice , but they are n't very useful .
I assume that Thunderbird is UsWare .
In other words , I assume that all Thunderbird developers actually use Thunderbird as their mail client .
I am forced to conclude that the Thunderbird developers just do n't use flags the way I do .
My Blindspot about Visual Studio integration with Vault
Let me tell you about another UsWare problem we 've experienced at SourceGear .
First , a little background :
Oversimplifying , there are basically two ways to use a version control system .
You can use a standalone application , or , you can integrate the features directly into the Visual Studio IDE .
Here 's the problem :
You see , I hate using source control integration within Visual Studio .
Our product does include this feature , but I never use it .
In fact , right now most of the people at SourceGear do n't use it .
However , a clear majority of our customers do .
This little canyon causes problems .
Sometime in the last year or so , the painfully obvious truth hit me like a ton of bricks :
Our users want integration .
We have always explained things to our customers somewhat like this :
Our standalone client application is the primary way to access the Vault server .
Our Visual Studio integration client is available , but it offers fewer features and somewhat lower performance .
But this is exactly the opposite of what they want .
Most people do n't want a standalone source control application .
Some of our customers have never even launched it .
They just want source control features to show up in all the right places in their IDE .
The key thing to notice is that IDE stands for Integrated Development Environment .
If you are reading this and wondering how I could miss something so obvious , then perhaps I have convinced you how easy it is to find a canyon between you and your users .
Here at SourceGear , most of us are software developers , and we use Visual Studio .
We build version control tools for software developers , most of whom are using Visual Studio .
Obviously , we eat our own dogfood by using our own product as our version control system for the entire team .
Nobody could possibly be more similar to their customers than we are , right ? :-)
I have known all along that most of our users want integration .
But I guess I never let it really sink in .
Sometimes my thoughts about our product strategy have been better aligned with the way I use the product , rather than with the way our customers use it .
Anyway , integration is getting a lot more air time among the developers at SourceGear .
On several occasions , we have changed our plans to allow us to give a higher priority to integration .
We are trying to cross the canyon between us and people who only use our product within Visual Studio , and other IDEs as well :
Several months ago we released a very early preview of an Eclipse plugin for Vault .
Work on this project is continuing and will be available later this year .
On January 30 th , we released the first preview of support for integration with Dreamweaver .
, we released the first preview of support for integration with Dreamweaver .
Vault 4.0 will include an all new Visual Studio integration client for use with Visual Studio 2005 .
We get it .
A lot of our attention right now is being spent trying to make sure that people can enjoyably use Vault in the IDE they prefer .
And by the way , once we get the new Visual Studio integration client working , I will be using it . :-)
Meeting these Challenges
So ThemWare is hard is because our users are nothing like us .
And UsWare is hard because we keep assuming our users are exactly like us when they 're not .
This is the point in the article when you are expecting me to suddenly reveal a pearl of great wisdom on how to solve these canyon problems .
Sorry , but our time is up . :-)
You see , this article is the essay version of a talk I am presenting to the Jacksonville .NET User Group .
Right about now is the point where I will be out of time .
If I had left time for a really good answer to this problem then I would n't have had time to for my John Cleese imitation , which I can assure you was far more effective in person than it was in print .
However , although I can't offer give a good answer to this problem , I have just enough time for something flippant and trite :
Listen to your users
And be transparent .
Let yourself be accountable for listening to your users .
The main reason SourceGear did a Dreamweaver plugin is because we have a public support forum where dozens of people asked us to do one .
This is one of our most common feature requests .
How could we ignore them ?
Your users have things to say .
Stop telling them how great your software is and listen to them tell you how to make it better .
The members of Hawthorne Heights have no business being rock stars .
They play a strain of punk that has consigned innumerable bands to the obscurity of dive bars and pirate radio .
For the past three decades , a devotion to this stripped - down , anticommercial music has meant never quitting your day job .
This article has been reproduced in a new format and may be missing content or contain faulty links .
Contact wiredlabs@wired.com to report an issue .
And yet here they are on a dusty summer day in Pomona , California , playing for thousands of adoring fans .
Hawthorne Heights is a big draw at this year 's Warped Tour , a movable punk feast featuring more than 300 bands on 48 North American stops .
The kids in the audience – a multiracial mix of teens from across Southern California – appear transported , pushing toward the front of the stage where slam dancers crash against each other like pinballs .
Those in the front rows chant the lyrics with red-faced intensity .
They 've memorized the entire set .
Hawthorne Heights is touring the country in a plush bus .
The quintet 's debut album , The Silence in Black and White , has sold more than 500,000 copies since its release last year , and the group has appeared on ABC's Jimmy Kimmel Live and been on MTV's TRL .
The five young men from Dayton , Ohio , are living the rock - and - roll dream – but they took a highly unconventional path to get there .
The band achieved its popularity without any real radio or TV airplay , a feat unheard - of a few years ago .
They are n't signed to a major label , and they do n't want to be .
They do n't need industrial - strength marketing campaigns or heavy rotation .
What they have is MySpace , a community Web site that converts electronic word of mouth into the hottest marketing strategy since the advent of MTV .
Massively popular , MySpace is nominally a social networking site like Friendster , but nearly 400,000 of the site 's roughly 30 million user pages belong to bands .
The rest belong mostly to teens and twentysomethings who attend the groups ' shows , download their songs , read their blogs , send them fan mail , and enthusiastically spread the word .
As it happens , the man behind this phenomenon is working his way through the Warped Tour crowd like a rock star himself .
Everyone seems to know Tom Anderson .
A laid - back 29 - year - old in a plaid shirt and baseball hat , he can hardly take three paces before he 's asked to autograph a shoe , a T - shirt , or in one case a naked back .
No wonder :
His photo shows up at the top of every MySpace user 's " friends " list .
As the first friend of every MySpace member , Anderson may be one of the most popular humans on the planet .
And in the entertainment universe that MySpace is helping to create , friends count .
" This generation is growing up without having ever watched programmed media , " says Courtney Holt , head of new media and strategic marketing at Interscope , one of the first labels to embrace MySpace .
" They do n't think in terms of the album , and they do n't think in terms of a TV schedule .
They think in terms of TiVo , P2P , AOL , and of course MySpace .
We 're just going to have to adapt . "
To focus on corporate finances , though , is to miss a larger point .
The real economic beneficiaries of MySpace are the ambitious young musicians in Pomona and around the country who are creating a new , life - size kind of stardom .
Over the past couple years , MySpace and other community sites , like purevolume.com , have launched a number of acts : Fall Out Boy , My Chemical Romance , Relient K , and Silverstein , among others .
Relient K , which plays earnest pop punk with an understated Christian message , has sold more than 500,000 albums in 12 months .
My Chemical Romance 's last album sold more than 1 million copies .
These artists have discovered what could be the first serious business model for music in the post - Napster era .
The old way of doing things , which counted on a few blockbusters to finance dozens of expensive failures , is yielding little besides a decline in major label revenue .
By contrast , " MySpace bands , " as the site 's publicist refers to them , keep production and promotion costs as low as possible .
They give away their best two or three songs as downloads or streams and use social networking and email blasts to reach an audience hungry for new music .
Converts become zealots , more than making up for any lost CD revenue through sales of concert tickets , T - shirts , messenger bags , hoodies , posters , and bumper stickers .
With little fanfare , these groups are creating a new middle class of popular music : acts that can make a full - time living selling only a modest number of discs , on the order of 50,000 to 500,000 per release .
For this generation of musicians , the mass market and the hit - making apparatus it supports are relics of a bygone age .
The new reality is that their audience is n't listening to radio or vegging out in front of MTV .
The audience is online .
Tom Anderson was n't much interested in the Web when he graduated from UC Berkeley in 1997 with a double major in English and rhetoric .
He moved to San Francisco and started an alternative rock band called Swank .
It barely lasted a year , and hardly anyone noticed when it broke up .
Still , the experience left a deep mark on Anderson .
There was a stark division between rock haves and have - nots .
Bands were either on magazine covers and all over the radio or completely invisible .
" I saw how hard it was for even really talented bands to reach an audience , " he says .
At the time he was standing right in the middle of the dotcom boom .
Like a lot of people , he thought the Internet could change the way bands connected with their fans .
" I just did n't know how , " he says .
But Anderson 's interests extended beyond the Internet or music .
After a long trip to Taiwan , he returned to California in 1999 to pick up a master 's in film studies at UCLA .
During his first week at school , he was in the computer lab checking his class schedule when he saw an ad for Matchmaker.com .
" I logged on to find a girl , " he says .
" But I wound up being more intrigued by the idea that people could connect over the Net for all kinds of reasons . "
Anderson finished the two - year UCLA program in a year .
After graduating , he intended to return to Asia .
But first he needed money .
Walking through his Los Angeles neighborhood one day , he saw a flyer promising $ 20 to anyone who answered the ad .
A week later , he showed up at a nondescript office building in Santa Monica for what turned out to be a one - on - one focus group .
The interviewer , who worked for an online storage startup called Xdrive Technologies , was so impressed with her subject that she hired him as a copywriter .
Anderson figured he'd be at Xdrive for three weeks , just long enough to earn plane fare to Singapore .
It did n't work out that way .
Anderson hit it off with Chris DeWolfe , Xdrive 's VP of sales and marketing .
" Tom was so obviously full of smart ideas , I wanted to work more closely with him , " says DeWolfe , now CEO of MySpace .
By mid-2001 , the two had left Xdrive to form their own marketing company , Response Base Marketing .
The next year , they sold the business to eUniverse for $ 3.3 million .
They continued to run the company , but they were already looking for a new challenge .
In the spring of 2003 , Anderson started thinking about online connections again , particularly social networking sites .
He believed that services like Friendster , which was just beginning to catch on , were stifling creativity when they could be encouraging it .
Users ' homepages all looked alike ; Anderson imagined something much more fluid and customizable .
He also realized that social networking needed to accommodate groups as well as individuals – teams looking for players , professionals looking for work , filmmakers looking for a crew , bands looking for an audience .
Finally , Anderson decided to broach the subject with DeWolfe .
He barged into his office : " Dude , we 've got to talk .
I 've been thinking about Friendster . "
For Eron Bucciarelli , the earnest , mop-headed drummer of Hawthorne Heights , a degree in communications from Ohio's University of Dayton seemed like a dead end .
His heart was in punk rock : first grunge , then hardcore and death metal .
In 2001 , he took a job with the local cable company and joined an unsigned pop punk quintet called A Day in the Life , after the Beatles song of the same name .
The members devoted themselves to the band , playing at every opportunity .
It was grueling : lousy venues , seedy hotels , and long road trips .
" We went on tour every weekend , " Bucciarelli explains .
" We 'd pack up the van right after work on Friday , play a show that night in Pittsburgh , play the next night in Philly , wind up in Delaware somewhere on Sunday , and then drive all night to get back to Dayton by Monday morning . "
Before long , the punishing regime of day jobs and weekend tours took its toll .
A brief flirtation with the indie label Drive - Thru Records fizzled .
The band 's lead singer , J. T. Woodruff , was disenchanted and exhausted ; he had two jobs and attended night school .
When the bassist quit , the other members were ready to follow his lead .
But Bucciarelli would n't let go .
He convinced his bandmates to hire another bass player , and they continued under a new name : Hawthorne Heights .
" We used to tellpeople it was because we liked Nathaniel Hawthorne , " he laughs , " but that 's bullshit .
We just thought it sounded cool . "
The band decided to reinvent itself along more commercially viable lines .
" We agreed this would be our last shot , " he says .
" We did n't want to be in our late 20s playing some Elks hall .
We 'd be geezers . "
The first element in need of overhaul , they decided , was the music .
A Day in the Life played pop punk built on catchy guitar riffs .
" We dropped the classic rock influence and added breakdowns and screaming , " he says .
It pushed their sound closer to the post - punk genre known as screamo .
Bucciarelli saw the potential of online communities to build an audience for the new band .
" I knew that Web sites like purevolume.com , which had just started , would be better than radio at introducing us to the kind of people who might listen to our music . "
He took the band into a jerry - built studio and recorded a two - song demo .
When he posted the tracks on purevolume.com , they got thousands of downloads before Hawthorne Heights had even played in front of a live audience .
Then , following advice from Getsigned.com , Bucciarelli started pitching labels with their new sound .
It was n't clear that his hard work would pay off .
Drive - Thru did n't like the new direction .
A few other companies asked them to come out to California to play a showcase , but they could n't afford the trip .
Victory Records , a thriving indie label known for successfully marketing marginal acts , sent a form letter .
" It basically said , ' Do n't call us , we 'll call you , ' " he says .
Bucciarelli was n't so easily put off .
He guessed the email address of Victory president Tony Brummel and sent a message reminding him that Hawthorne Heights was available .
" I basically told him Drive - Thru was interested and he should move fast , " he says .
The tactic worked .
Brummel called the next day and asked the band to come to Chicago to play for him and some other people at the label .
" We were in heaven , " Bucciarelli recalls .
They arrived at Victory 's office several hours early on one of the coldest days of the year .
" The back window on our van was broken , " Bucciarelli recalls , " so we sat huddled together for warmth until Tony showed up to let us into the Victory studio . "
They set up , and 20 or so people from the label trickled in .
" The studio was big , " Bucciarelli says .
" It could have fit 100 people , but they all stood in back . "
They played five songs .
Guitarist Casey Calvert was so nervous he nearly puked into the microphone .
When they finished , Brummel thanked them .
He said he'd be in touch and left the room .
The band drove the six hours back to Dayton in anguished silence .
" We thought they hated us , " Bucciarelli says .
" Then Tony called the next day and told us to get ready to sign a contract . "
Hawthorne Heights could now record an album .
But who would buy it ?
When Anderson laid out his ideas for DeWolfe in the spring of 2003 , he described an online service unlike anything on the Web .
It would , he said , be the ultimate social hub : part Friendster , part Blogger , part MP3.com , part craigslist .
" The idea was that if it was a cool thing to do online , you should be able to do it on MySpace , " he says .
That summer , he and DeWolfe pitched the idea to eUniverse ( later renamed Intermix Media ) , which agreed to provide startup capital in exchange for majority interest .
The pair hired a team of five programmers and set to work .
DeWolfe , who had a lot of connections to the Los Angeles creative community , solicited suggestions from bands , artists , and other creative types .
At first , growth was slow .
A small but fervent community of musicians and club kids , many from the LA area , latched onto the site as a way to promote their music and stay in touch with fans .
The site encouraged creativity to the point of chaos .
For MySpace 's mostly young demographic , their pages were multimedia outgrowths of their jackets , lockers , and notebooks – a place for band stickers , poems , personality quizzes , R-rated photos , and anything else HTML allows .
In September , around the time Hawthorne Heights was sending its demo to Victory , MySpace exploded .
The magnitude of the growth hit Anderson when he flew to San Francisco to see a late - season baseball game .
The night before , Anderson had indulged in his obsessive habit of checking the rankings for MySpace .
" Over the course of just a few days we 'd gone from the 30,000th most popular site to the 3,000th , " he says .
Sitting in SBC Park watching the Giants beat the Dodgers , he looked around the stadium , taking in the 40,000 cheering fans .
It struck him that approximately that many people were now signed up on MySpace .
" Until then , we were getting maybe 500 new users a day , " he says .
By October they were getting 10,000 new users a day .
The Victory contract was a morale boost for Hawthorne Heights , but it did n't do much to improve the group 's financial situation .
" We cut a very , very different deal than we would have gotten with a major , " Bucciarelli says .
In fact , the band received a paltry advance .
" We got about $ 5,000 , and that immediately went to pay off our minivan . "
But Bucciarelli was n't looking for a big check .
" We could have gotten a million dollars up front and all lived large for a while , " he says , " but we 'd have spent the rest of our careers trying to recoup . "
That 's the way many contracts work :
Any label 's outlay associated with a band – from studio time to radio promotions – is billed against the band 's advance .
Hawthorne Heights kept costs low from the beginning .
They spent around $ 20,000 on recording and another $ 5,000 on a video .
And because Victory budgets a fraction of what the majors do on marketing and promotion , Hawthorne Heights needed a cheap way to build demand for their June 2004 album release .
So that spring they began posting a few songs on MySpace , which was becoming a hub for the indie music community .
Fans began to find them .
By the time the album came out , " we had 20,000 friends in our MySpace network , " Bucciarelli says .
But the bandmates were lavishing attention on them .
On tour , each musician would spend four to five hours online every day , answering emails and " adding " new friends .
( MySpace users must approve each person who requests to be added as a friend . )
The fans loved it .
" They can't believe they 're actually getting a response .
You 've got a fan for life . "
MySpace is also overflowing with devoted fans .
Since mid-2004 , the number of unique visitors has grown from 2 million a month to roughly 22 million .
Keeping up with that rate of expansion has n't been easy .
Bandwidth costs are enormous , as are the programming challenges posed by scaling the site 's features to accommodate the growing traffic .
At last count , the company had 125 employees .
" It 's crazy , " Anderson says .
" It seems like we 're always moving into larger office spaces . "
Anderson and DeWolfe will roll out a wireless version of the site by the end of the year , and they recently launched a video service that hosts some 2,000 clips – for starters .
The operation is also expanding overseas .
" We have 700,000 members in the UK alone , and that 's without a British domain , " Anderson notes .
After England , he has his sights set on Australia , New Zealand , and Scandinavia .
Even as MySpace has emerged as a platform for small - time bands to make a living , it is gaining credibility as a promotional venue for larger acts as well .
Last spring , Interscope used the site to debut new albums by established artists including Beck , the Black Eyed Peas , and Nine Inch Nails .
All three had the biggest first - week sales of their careers .
For the moment , artists like Kanye West and Coldplay have fewer friends on their MySpace pages than Hawthorne Heights .
" But that does n't mean we do n't have pages , " says Ted Mico , VP of strategic marketing at Capitol , Coldplay 's label .
" We ca n't afford not to , " Mico says , noting that , by maintaining a presence on the site , artists can use MySpace to stay in the public eye between major releases .
Today the record business – tomorrow the rest of the entertainment industry .
Network television is catching on ; NBC debuted The Office , its docu-comedy series , as a Web cast on MySpace in March , and a group devoted to the Fox series The O.C. boasts nearly 90,000 members .
The latest Cameron Crowe movie , Elizabethtown , has its own page , and a fan group for the Filipino super - featherweight boxer Manny Pacquiao has more than 23,000 members , some of whom can be counted on to show up at his bouts .
Going mainstream has its downside , of course .
MySpace thrives on a sense of immediacy and community .
The spirit is independent , even rebellious .
Maybe that 's why there was a noticeable backlash when the deal with News Corp. was announced .
How cool can a Web site owned by Rupert Murdoch be ?
Parody profiles of Murdoch have sprung up , and conspiracy theories abound , such as the false rumor posted on Slashdot that News Corp. would own the copyrights to songs hosted on the site .
Meanwhile , public ownership is likely to impinge on the service 's laissez - faire culture .
For instance , a surprisingly brazen market in illicit goods and services flourishes in the " groups " section of the site ( " sex for drugs anyone ? … san fernando valley … " ) .
And while Anderson and DeWolfe ban profiles posted by users under the age of 14 , they can't sift through millions of new pages every month – or keep users from lying about their ages .
But whether MySpace ultimately succeeds or fails is beside the point .
Its dramatic emergence is the first conclusive evidence of a new era in which the distance between audience and artist is greatly diminished .
Companies that flourish will be those that can navigate the changed topography .
J. T. Woodruff does n't need a road map .
At a recent Warped stop in Cleveland , Hawthorne Heights lead singer is sitting on a cooler at the band 's merchandise table , hawking bumper stickers , pins , and a dozen different T - shirt designs .
" Best deal on the tour ! " he cries .
" Five bucks for five stickers ! "
His girlfriend hands up products from behind the table while Woodruff bargains with a blond kid in a T - shirt that reads Kiss me : I 'm punk .
It 's a living .
And there 's not a bodyguard in sight .
« The Clueless Manifesto | Main | John Seely Brown is hot »
Brain death by dull cubicle
You always knew that dull , boring cubicles could suck the joy out of work , but now there 's evidence that they can change your brain .
Not mentally or emotionally , no , we 're talking physical structural changes .
You could almost say , " Dull , lifeless work environments cause brain damage . "
I said " almost " , because it depends on your definition of brain damage .
What the research suggests is that in unstimulating , unenriched , stressful environments , the brain STOPS producing new neurons ( more on that later ) .
But it 's only been the last few years that scientists have finally realized that the human brain can build new neurons .
For most of the previous century , it was believed that we were born with all the neurons we 'd ever have .
Scientists who believed in and studied the idea of " neurogenesis " were dismissed , criticized , ignored .
But Princeton 's Elizabeth Gould has picked up the neurogenesis ball and run with it .
She is almost single - handedly changing the face of neuroscience and psychology .
From a fascinating article in the new print issue of Seed Magazine ( my new favorite ) :
" Eight years after Gould defied the dogma of her field and proved that the primate brain creates new cells , she has gone on to demonstrate that the structure of the brain is incredibly influenced by one 's surroundings . "
One of the most interesting ( and , in hindsight , " doh ! " ) discoveries was that one of the main reasons researchers kept finding NO evidence of new neuron development in their test primates is because they kept them in an environment which shut that process down .
In other words , it was the caged - living that stopped the neurogenesis process .
By giving her animals a rich , natural enviornment , Gould " flipped the switch " back on , allowing their brains to work normally , and sure enough -- the happier , more stimulated animals showed a DRAMATIC increase in neurogenesis as well as dendrite density .
One summary :
" Complex surroundings create a complex brain . "
[ One interesting and beautiful back story - - researcher Fernando Nottebohm had showed earlier that neurogenesis was necessary for bird songs .
" To sing their complex melodies , male birds needed new brain cells .
In fact , up to 1 % of the neurons in the bird 's song center were created anew , every day . "
Of course , his work was dissed as irrelevant .
I mean , come on , these are bird brains .
" Avian neurogenesis was explained away as an exotic adaptation ... " ]
So , back to cubicles .
The key to Gould 's demonstration of neurogenesis ( where virtually all other primate studies had failed ) was the stimulating environment .
Cages stopped neurgenesis , which she describes as " The neurons stop investing in themselves . "
She links caged environments with stress , and stimulating natural environments as less stressful , so there is a big assumption here that a dull , boring , unstimulating cube life is also stressful ( for the brain , anyway - - it does n't mean the work itself is stressful ) .
But she did n't just throw them in a natural environment ... she also made sure they had a lot of opportunities for play .
And perhaps very importantly -- frequent rotation and introduction of new toys .
I 've always wondered why in every game company I worked for ( or anyplace with " creatives " ) , it was assumed and encouraged that people made elaborate virtual worlds out of their workspace , but in non -game / creative workplaces , not so much .
While this is often allowed in the cubes of non -game programmers , for the most part it 's only the young hipster startups that consider this a primary , essential element of their corporate culture .
[ Apparently those ping - pong tables and games in those web startups were more than just examples of bubble / VC excess . ]
With Gould 's work , it would seem , we should not only be allowing employees to , say , decorate their cube , but we should be encouraging it at every turn AND take steps to make frequent changes to the area .
( And by " changes " , I do n't mean rotating demotivation posters ) .
For too many places I 've worked , a new " official policy poster " or some new HR thing is about all the stimulating change we got .
( That , and the increasingly emphatic signs posted in the coffee / kitchen area about " your mother does n't work here , it 's up to US to keep it clean !!! " )
It would appear that blowing your own mind on a regular basis is not just a good idea , it 's a key part of neurogenesis .
One of the conclusions she came to is that " learning heals the brain . "
And again , we are n't talking emotionally or psychologically , we 're talking physical structures .
She believes that even those who have been in a stressful environment can undo much of the damage by not just removing the stress , but actively introducing enriching and stimulating things .
Experiencing and learning new things is literally exercise for the brain !
That 's so cool .
The implications of her work are of course much deeper and more significant than just " dull and / or stressful work environments with low stimulation suppress neurogenesis , which means less or no new brain cells . "
There are all kinds of social implications as well , although she points out that like most scientists , she does not want to see her work " twisted for political purposes " .
But it does mean that the work we are all doing to help our users learn and grow and develop ( and kick ass ; ) is a lot more meaningful than just good customer support .
Remember , when WE say " passionate users " , we mean the kind of passion that inspires people to spend time learning and getting better at whatever it is they 're passionate about .
So it would seem that it might not be a huge stretch to say :
Passionate users grow more brain cells !
Apparently all work and no play makes Jack not just dull , but dumber .
So do n't forget to have fun ...
Posted by Kathy on February 20 , 2006 | Permalink
TrackBack
TrackBack URL for this entry :
https://www.typepad.com/services/trackback/6a00d83451b44369e200d8345b345069e2
Listed below are links to weblogs that reference Brain death by dull cubicle :
» " Corporate Boring " and hindering innovation from Putting the Fun into FunkWorks
Something that reminded me of that today was Kathy Sierra 's Brain death by dull cubicle blog entry , which is a typical Corporate Boring , near impossible to circumvent standardized policy often instituted for what is thought to be for our own good .
I ... [ Read More ]
Tracked on Feb 20 , 2006 4:32:29 PM
» Cubicles cause brain damage from All over the map ...
Since I started working in cubicles , when I moved to the Silicon Valley a few years back , I had the impression I was also becoming dumber .
Until now I have been blaming it on age .
As it turns out , its those damn cubes that are do ... [ Read More ]
Tracked on Feb 20 , 2006 7:25:07 PM
» Yet Another Good Reason to Work From Home from
Out of my mind ...
I was reading this article on Creating Passionate Users , and I realized that this was yet another good reason to work from home rather than to work from the office .
At work , all of the offices look the same .
Even those with windows .
Sure , people do decora [ Read More ]
Tracked on Feb 20 , 2006 9:45:30 PM
» Cubicles Can Kill ! from Office Freaks || Office Supplies Make Me Hot !
Over at Creating Passionate Users , Kathy Sierra has written a wonderful post about cubicle life and death .
Its called Brain Death By Dull Cubicle and I want you to click thru and read it .
Its that good and you will thank me later .
... [ Read More ]
Tracked on Feb 20 , 2006 10:36:12 PM
» Cubicle Death from Pragmatic Entropy
[ Read More ]
Tracked on Feb 21 , 2006 8:10:08 AM
» The Curse of Dullness from The Scientific Indian
The curse of dullness is this :
If you do n't surprise yourself , you will be brain dead very soon .
This is n't a rhetorical statement .
It really happens .
Read this fantastic post by Kathy Sierra at the Creating Passionate Users blog .
While there follow the l [ Read More ]
Tracked on Feb 21 , 2006 11:20:45 AM
» Lifeless cubes create lifeless brains !
from Jeff Horton
At Creating Passionate Users there is a story about some new research that implicates dull , boring cubes with a stoppage in creation of new neurons .
[ Read More ]
Tracked on Feb 21 , 2006 1:45:20 PM
» Brain death by dull cubicle from Startup Fever
Kathy Sierra finds one more reason to leave the day job to start a business , brain death by dull cubicle :
You always knew that dull , boring cubicles could suck the joy out of work , but now theres evidence that they can change your brain .
Not m... [ Read More ]
Tracked on Feb 21 , 2006 6:04:07 PM
» My Dad was right : cubicles are bad for your health from Escape from Cubicle Nation
When I first started writing this blog and came up with the title Escape from Cubicle Nation , my Dad told me the story of one of his first run-ins with cubicles in the late 1980's .
He was working as [ Read More ]
Tracked on Feb 21 , 2006 10:12:22 PM
» Cubicle culture from Beer and Speech
I read with interest this article by Kathy Sierra titled " Brain death by dull cubicle " See - I really do n't get this American fascination with cubes - are they somehow legally required in the US ?
( I 've never been to a US work environment )
The whole con [ Read More ]
Tracked on Feb 22 , 2006 2:37:36 AM
» Cubicles Cause Brain Damage from Coaching4Lesbians
You always knew there was a reason you felt like hell after a day at the corporate office .
Now scientists have evidence that cublicle living is bad for your brain ( the ergonomics folks have known it is bad for your body for years ) .
I stumbled upon Kat ... [ Read More ]
Tracked on Feb 23 , 2006 7:04:57 AM
» Brain Death By Cubicle from Business Opportunities Weblog
Creating Passionate Users :
You always knew that dull , boring cubicles could suck the joy out of work , but now theres evidence that they can change your brain .
Not mentally or emotionally , no , were talking physical structural changes .
Y... [ Read More ]
Tracked on Feb 23 , 2006 7:08:28 AM
» Time for the 1 O'clock linkfest from jamtronix
Brain death by dull cubicle - Dull , lifeless work environments cause brain damage .
Things we 've learned - Solve problems you have .... [ Read More ]
Tracked on Feb 23 , 2006 7:30:42 PM
» Creating Passionate Users : Brain death by dull cubicle from fuzzyLizard
I always knew cubicles were bad , but now I have proof .
Check this article out by Kathy Sierra called Brain death by dull cubicle .
In it she states that a scientist has found that if people are placed in stimulating environments and are learning , then t... [ Read More ]
Tracked on Feb 23 , 2006 10:16:47 PM
» Cubes Considered Harmful from ntschutta.com
My apologies to Edsger W. Dijkstra but its not like Im the first to play off his classic Go To Statement Considered Harmful .
Now , I doubt
Ill ever have the pleasure of offices like Joels , but when you consider how little w... [ Read More ]
Tracked on Feb 24 , 2006 9:12:17 PM
» Kathy Sierra : Complex surroundings create from Jiri's Notepad
Kathy Sierra : Complex surroundings create a complex brain .... [ Read More ]
Tracked on Feb 25 , 2006 1:54:08 PM
» Cubicleville and brain chemistry from Mike Bowler
Kathy Sierra has a fascinating blog entry where she talks about the negative effects of boring work environments on your actual brain chemistry .
You always knew that dull , boring cubicles could suck the joy out of work , but now there 's evidence that th [ Read More ]
Tracked on Mar 4 , 2006 6:00:27 PM
» assorted sweets : 2006.02.22 from angiemckaig.com
Why Submit Your Site to Internet Directories ?
Some good , if basic , background info for those of you who were n't around learning Internet Marketing in ' 96 .
Brain death by dull cubicleAll I can say is that I 'm glad I 've always managed to stay " turned on " ... [ Read More ]
Tracked on Mar 4 , 2006 8:25:37 PM
» Beginners from Watermark
Via Lifehacker , I 've found a great new blog ( as if I could keep up with those I 've already found ) : Creating Passionate Users .
It was a post there -- How to be an expert -- that gave me just that little push I needed to jump into the 30 Day Photo Chall ... [ Read More ]
Tracked on Mar 7 , 2006 4:17:09 PM
» Cubile Hell and Brain Damage from simonb.com
According to this passionate users there is a link between brain development and your surroundings .
Dull surrounding == no brain growth .
Interesting and changing surroundings == new neurons .
This has long been held for baby development .
But now it a ... [ Read More ]
Tracked on Mar 9 , 2006 7:38:30 PM
» キュービクルの仕業だった ! : Caged in Cubes from Long Tail World
What Propst invented in 1968 at Herman Miller was the cubicle , which now dominates the largest share of office furniture sales -- about $ 3 billion a year .
--- Gould lately found that the animals provided with stimulating environment showed a dramatic in ... [ Read More ]
Tracked on Mar 14 , 2006 2:38:53 PM
» Your Brain Will Die! Unless from Life Coaches Blog
Haha , I know I know , the title is over - the - board - cheese , but I couldnt resist :P
What greater motivation do you need to stretch yourself , physically , mentally , emotionally , socially , spiritually , than the fact that if you dont , your brai ... [ Read More ]
Tracked on Mar 15 , 2006 10:02:39 AM
» You Can't Fix Stupid , but You - Can - Grow New Brain Cells from metaVitae
Churchill would paint , Einstein played the violin ; Stalin had nude ballet .
- On a personal note , I 'll ... [ Read More ]
Tracked on Jul 30 , 2006 8:33:37 PM
» ThoughtBomb Issue 4 from davemorin.com / blog
1 ) For all of my boomer readers .
Why do kids like hanging out on MySpace so much ?
Well , its because you took away every other public space they could hang out in out in the physical world ( Harsh , I know .
But true . ) .
Heres ho ... [ Read More ]
Tracked on Jul 31 , 2006 3:18:55 AM
Comments
As an alternative to cubicles housing induhviduals , my employer has , in a sort of development hot - house they call an ADC , these hexagonal pods which house 6 developers per pod .
On the walls there are whiteboards you can draw on , and in the middle is a smallish round table useful for quick meetings .
Initially people seemed to greet the pods with suspicion , but quickly people have ended up personalising their individual corners , and each pod takes on a character that defines the team that works there .
It 's a sort of happy medium between the isolation of the individual pod and the exposure of an open - plan office .
Compared to an open - plan office , it 's a great idea .
I actually suffer from over - exposure in an open - plan .
I can't think when people are looking over my shoulder .
Posted by : Matt Moran | Feb 20 , 2006 2:02:45 PM
Check out Paul Williams ' Idea Sandbox blog .
His latest post mentions similar finding from a different article / reasearch :
http://www.idea-sandbox.com/blog/2006/02/einsteins_parents_would_approv.html
Paul is all about creative space .
You can see samples here :
http://www.idea-sandbox.com/blog/2006/02/creativitylab_a_space_to_innov_1.html
Posted by : DUST!N | Feb 20 , 2006 4:02:54 PM
And what does this say about retirement villages and nursing homes and long hospital stays and ...
Posted by : Doug | Feb 20 , 2006 5:12:26 PM
Finally , some justification for people to look for more to do in their cubicle than work .
Hopefully our blog will be a resource for Cubies .
Posted by : Mike | Feb 20 , 2006 10:27:35 PM
Similar research apparently found growth in the hippocampus of London taxi drivers , learning " The Knowledge " ( all the streets ) has an observable effect on memory structures .
Re. the cubicle , PeopleWare is a good read on the negative effects of interuptions : oddly I find that pair programming focuses attention on the task in hand , shutting out the background noise , a little like the cocktail party effect ?
And cubicle conversations , in the words of Mr. Bateson , reminds me of a story :)
Imagine an experiment in which rats are being raised in a series of five boxes .
In the first box , you have a single rat , raised the usual ( sterile ) way .
In box two , you have a rat raised the same way , except that it is given toys to * play * with ( my emphasis ) .
In box three , same idea , except that the rat 's toys are changed every week .
Box four , same idea , changed toys , but there are several rats growing up together .
In box five , you have several rats , rich toys , but each rat is removed from the cage every day and lovingly stroked for 15 minutes .
Posted by : ken | Feb 21 , 2006 12:21:27 AM
The more I read about the toxicity / productivity - drain of cubicles ... makes me wonder what office planner has been taking all the crazy pills ?!?
Is there any evidence * for* cubes , besides cost / space savings ?
Ken - how about a sixth set of rats , that get to choose their most ideal / productive environment possible ?
( home , net cafe , office , etc ) * stroking optional *
Posted by : Shanti | Feb 21 , 2006 3:07:58 AM
Rats ?
How about people ?
Take a peek here :
http://colayer.com/PAGE_culture
Yes , it is a shameless semi-self - plug .
But , it qould please you to know this : Open Spaces really do open minds .
As far as people looking over my shoulder while I am working , I never have to worry about that .
All of us understand our responsibilities .
And yes , there are occasions when one or the other digresses , but then it is just restricted to that .
A digress .
I believe open - plan spaces help keep a check on such digressions .
Plus , if I need to talk to someone , I do n't need to look across cubicles , they are simply there for me . :)
Regards ,
Shri .
Posted by : Shrikant Joshi | Feb 21 , 2006 3:48:01 AM
What freakish timing !
In about 30 minutes , I 'll be heading into my office for the last time .
We 're moving to a new space today ... one full of plain white walls and no foosball tables .
We 'll have to see what we can do to spruce it up right away !
Ca n't have our brains rotting away , now can we ?
Posted by : Dave Wood | Feb 21 , 2006 8:13:21 AM
Could explain why autocratic , bureaucratic , dictatorial , communistic societies , companies , and countries ultimately fail and creative , open , and entrepreneurial endeavors thrive .
It explains a lot about history , evolution , and society in general .
Posted by : kris | Feb 21 , 2006 8:31:52 AM
So true !
I used to think that making my work - space " pretty " was just frivolous and showed lack of focus ... but since I prettifed my desk , my focus has actually been enhanced !
( By the way , all I did was add a plant , and get colourful stationary and organising tools )
Posted by : Dave Duarte | Feb 21 , 2006 9:05:32 AM
You 've healed MY brain this morning .
Posted by : greenup | Feb 21 , 2006 9:40:11 AM
I think good preschool teachers have known this for a long time : a good preschool never looks dull .
And rotating toys is such a simple thing to do , yet it inspires great play from the kids .
Posted by : Wendy | Feb 21 , 2006 12:27:00 PM
Great post !
Now I 'll have a new excuse to buy cool toys :D
Posted by : Michael G. R. | Feb 21 , 2006 1:46:00 PM
Another great posting Kathy !
More cannon fodder for the cube wars !
Posted by : Steve Sherlock | Feb 21 , 2006 3:57:17 PM
Brain damage -- I knew it !
Now I understand the lack of intelligent life in the dull , bureaucratic government office venue .
Posted by : I Gallop On | Feb 21 , 2006 5:42:54 PM
This is one of the reasons I feel I love living abroad ( currently in Japan , but have been elsewhere ) .
When back in the states , usually , a trip to the grocery store or post office wo n't do anything to blow my mind .
However , when living abroad , even the most routine tasks can be filled with mind blowing unexpected first experiences .
Just the fact that everything is conducted in a foreign language alone is enough to keep my brain happy !
If I was back in my hometown I 'm sure I would need to seek outside stimulation more proactively !
Good stuff .
- Harvey
Posted by : Harvey | Feb 21 , 2006 9:53:00 PM
I was thinking about this more yesterday and I started wondering what a study on the opposite extreme would look like : is there a point at which too much stuff ( clutter ) becomes mind - numbing ?
It would be really interesting to know if there was an optimum amount of stimulation for growing brain cells -- honestly , I think my home office is probably across the line .
There are a lot of toys in this room !
Posted by : Wendy | Feb 22 , 2006 9:59:11 AM
This reminds me of how my current programming environment is .
A colleague and I program for hours at a time , and we used to play Worms 3D to wind down a bit but we have been slacking with this lately .
After reading this article , I think we are going to see a resurgence of Worms :) .
Posted by : Mujtaba Talebi | Feb 22 , 2006 10:02:01 AM
* boom *
Yep , another blown mind .
Get the mop .
This is astonishing stuff .
I'm a techie and an activist , and weird as this sounds I think this might have some pretty profound political implications .
I wrote about the interaction between people 's built environment and their political views last year ...
http://speakoutca.org/archives/2005/10/if_youre_still.php
... but I had no idea that the changes might be happening on the freaking neurophysical level .
Complicated social and built environments like cities giving rise to complicated brains giving rise to complicated worldviews .
Woah .
Kathy , this is a great blog .
Thank you for thinking .
Posted by : Dan Ancona | Feb 23 , 2006 7:07:04 PM
Ground - breaking !
Makes you want to climb on the rooftops and scream until everyone hears you : " Learning is healing ! "
This is one of the best posts I 've ever read !
Posted by : Alex Bunardzic | Feb 24 , 2006 1:46:29 PM
I wonder if this can be expanded to cover a company 's " brain " i.e. in the beginning as a startup the environment is stimulating , but as the company matures and gains the systems and processes to service its customers , the company 's environment becomes stale , lifeless and bureaucratic .
Posted by : Paul Moen | Feb 24 , 2006 7:01:21 PM
Just as plants need food , water and sun to grow and regenerate ... So do us as human beings .
Our brains yes , but our 5 senses need the additional stimuli to help jump - start / signal our connected brains to regenerate / create additional cells .
Colors , sounds , shapes and so much more play an important role in our continuing development until we expire .
Great subject matter and I totally agree with the articles that followed ...
Posted by : BobCat33 | Feb 26 , 2006 9:03:09 AM
After years and years of working in a cubicle - I now have a cubicle window feel free to check it out , www.WindowSane.com, the perfect window for your cube .
Posted by : Russ Abrams | Feb 28 , 2006 8:21:55 AM
As a middle school teacher , I 'm aware of the principles you 're talking about .
The amount people learn and retain is roughly proportional to the degree of their participation in the learning process .
That 's one reason why I think reading blogs and articles like yours can help us all keep our minds fresh .
Posted by : Plagiarism Checker creator | Mar 9 , 2006 12:01:08 AM
" ... I realized that this was yet another good reason to work from home rather than to work from the office .
At work , all of the offices look the same .
Even those with windows ... "
100 % !!
True !
That is why i work from home .
Posted by : Mike | Apr 19 , 2006 6:16:07 PM
The comments to this entry are closed .
QR Code Link to This Post
Some years have passed , so I can talk about this now .
Many many moons ago , I started dating this very cool girl .
We hit it off right away , had lots in common , she was smart , agressive , cool and funny .
And hot .
Really hot .
So we dated for a while , which became a year , then nearly two .
I figured she was it .
We worked together on decisions , but I followed my passions and she followed hers - both career professionals , both creative , and both ready to kick this town for a Carribean cottage if the thought ever struck us .
Adventure .
Romance .
Lots of Sex .
All was right with my world .
So I did what I figured I should do - I went out shopping for a diamond ring .
That was the biggest mistake I ever made .
I can't really put my finger on the exact change , but over the years , I 've cometo summarize it this way : I went from being the guy she loved and wanted to marry to the guy who did n't match up with her fantasy about getting married , in about 24 hours .
She started acting as if I was completely incapable of making any decisons on my own , in spite of the evidence to the contrary .
She criticized everything I did .
She tried to make me look like some idiot , Homer Simpson type .
Now , I 'm not splitting atoms in the basement or anything , but I was Fulbright kid for a year and graduated cum laude , and I have a tendency to avoid dumb shit like telemarking scams , computer viruses , STD 's and , well , white slavery rings .
Let 's just say I 'm no Homer .
Then the wedding planning started , and HO LEE SHIT .
We were doing alright , for sure , but she had put together about a 45 K day for us in a matter of a week or two .
When I objected to some ridiculous expense ( bunting ? WTF ? ) , I was told I was wrong , or " did n't know what I was talking about " and , unless I wanted a big fight , I shut up right there .
Trust me , when I balked at the cost of flowers , I was nearly decapitated .
Nearly all of this , I was told , was " What she always wanted " .
Well , I always wanted 15 playboy bunnies oiled up on a water bed in the horniest state known to womankind , which I think might have actually cost LESS , but I was pretty sure it was n't going to happen .
I hit the ceiling when I saw the guestlist .
225 . I barely know 225 people , let alone want to feed them and watch them get drunk while my savings account cries to me over the phone " You have ZERO dollars and 22 cents " .
Who is this ?
That ?
A bartender you know ?
I do n't even LIKE that girl !
One night , I told her this :
You know what , you 're going to have about as much fun , possibly more , if I do n't show up at this thing .
She laughed .
So I bailed .
Yup , I packed my shit and hit the door , a good 4 months prior to the date of my pre-planned , ever - priced , heavily adorned demise .
I called it off , packed my shit and left .
And I have never looked back .
Oh , we had a big talk .
It was about as much fun as you 'd expect .
I got my hair blown back for an hour or so , but I was already numb .
She 'd been yelling at me about this and that for so long , I could n't tell anymore when she was mad or not .
Maybe the hardest part was that I was having incredible sucess , in lots of things , while all this was happening .
Musically , professionaly - things were really coming together for me .
And she could n't be pleased .
In the end , it 's her loss , but I 've always wondered what the fuck she was thinking .
The moral to this story ?
Engagement Ring - $ 3800.00 ( never got it back ) Non-Refundable Deposits - $ 5200.00 ( all my money ) Moving Expenses - $ 750.00 Being Single again - Priceless .
Every Wednesday is Tip Day .
This Wednesday : Tips …for using Ziploc bags .
For years , I hesitated to use Ziploc bags .
I ’ve always loved them , but it seemed very wasteful to buy a bunch of plastic bags , especially because so often they 'd just be thrown away .
( I knew I would never be one of those people who will wash and re-use Ziploc bags . )
Then , when we moved , we made a big run to a discount store to stock up on all sorts of supplies : cleaners , trash bags , light - bulbs , and Ziploc bags .
We bought all sizes : the prototypical “ sandwich ” size , the cunning , small “ snack ” size , the gallon , and my favorite , the two - gallon .
With all those Ziploc bags in the house , I caved .
I could n’t resist all that handiness .
Now I use Ziploc bags all the time .
Some suggestions :
1 . Whenever I get a new electronic gizmo , I start a special Ziploc bag for it .
I label the bag with the name of the device ( “ Vaio laptop , " “ digital camera ” ) and the date .
Inside the bag , I put all wires , disks , manuals — all the paraphernalia that come with a new piece of equipment .
I keep all these bags in one large box in a closet .
I rarely need this stuff , but when I do , I know exactly where to find it .
Also , if I get rid of the device , I can also get rid of the associated equipment .
No more mysterious power cords that I 'm scared to toss .
2 . I kept messing up travel toiletry bags , because bottles of sunscreen or saline solution would explode and coat the inside with goo .
Now I use Ziploc bags when I travel .
Not very elegant , but they do the job , and if something spills , I can just get a new bag instead of trying to scrub toothpaste off the interior of a proper toiletry bag .
3 . My pet peeve is toys that do n’t come with their own container .
The loose pieces fly everywhere and drive me crazy .
Now , I swoop down the moment a new toy is opened and make a labeled Ziploc bag to keep together the many pieces of the Barbie hairdressing set , the Legos that build a hospital , the puzzling yet clearly highly educational set of scarves and clips that my parents gave us .
4 . Anything that scatters needs a Ziploc bag .
Open packages of picture - hanging nails ; magic markers , Q - Tips after I stepped on the Q - Tip container and crushed it …anything .
5 . I made a “ fun bag ” for the Little Girl — a Ziploc bag filled with small toys to grab whenever we head out the door to a restaurant , a friend ’s house , a car trip .
That way , we always have a bunch of interesting things to divert her .
Now , as it happens , someone recently gave the Big Girl a zippy , clear backpack , so I ’ve transferred the fun bag from a Ziploc into the backpack ; it looks so much more fun .
But the Ziploc bag worked just as well .
6 . I have a bunch of labeled little Ziploc bags filled with keys : “ spare keys to my office , ” “ key to turn off the alarm , ” etc .
There ’s nothing more aggravating than an unidentified key , and I was having trouble figuring out a simple way to keep them labeled and organized .
7 . It may seem redundant to have several grades of Ziploc bags , but it ’s far more satisfying to use them when the size is right ( and I know that I , at least , am far more likely to keep up an organizational system that feels satisfying ) .
Nothing ’s worse than an overstuffed plastic bag that wo n’t seal properly , or a big plastic bag that takes up far more room than needed , for the handful of binder clips or thumbtacks it holds .
No , I ’m not in the pay of Ziploc .
And I have to admit , using the bags still feels illicit — especially the fancy ones with the zip - top .
But I imagine that the sense of indulgence is part of the reason I love them so much .
Ditch the ' Experts '
Grading pundits and prognosticators :
More famous = less accurate .
( FORTUNE Magazine ) -
You have been a world - class sap for years .
Why ?
For listening to the economic and political forecasts of experts .
We in the media have been irresponsible fools for reporting those forecasts .
And the experts themselves ?
Delusional egomaniacs -- and maybe even con artists .
I did n't always think this way .
But I 've been reading a book that marshals powerful evidence to make this case .
For all of us in the world of business , economics , and capital markets -- a world that often turns on the judgments of experts -- the question is whether we 're brave enough to face these uncomfortable facts .
The book is Expert Political Judgment : How Good Is It ? How Can We Know ? by Philip E. Tetlock , a professor at the University of California at Berkeley .
It summarizes the results of a truly amazing research project :
Over seven years Tetlock got a wide range of experts and nonexperts to answer carefully constructed questions about the likelihood of specific future events .
He ended up with a staggering 82,361 forecasts , expressed in quantifiable form and thus able to be analyzed deeply .
His definition of " political judgment " included plenty of topics that you and I would call economic , such as government spending and national economic performance .
Tetlock then cranked all those numbers through every kind of statistical thresher , flail , and grinder you can imagine , and the result was clear : Experts do n't actually exist .
Specifically , experts were no better than nonexperts at predicting the future .
They were n't even as good as computer programs that merely extrapolate the past .
The best experts could not explain more than 20 % of the variability in outcomes , but crude algorithms could explain 25 % to 30 % , and sophisticated algorithms could explain 47 % .
Consider what this means .
On all sorts of questions you care about -- Where will the Dow be in two years ?
Will the federal deficit balloon as baby - boomers retire ?-- your judgment is as good as the experts ' .
Not almost as good .
Every bit as good .
Which is not to say that experts are no different from you and me .
They 're very different .
For example , they 're much more confident in their predictions than nonexperts are , though they obviously have no reason to be .
For example , the members of the American Political Science Association predicted in August 2000 that a Gore victory was a slam dunk .
Experts can also give far more reasons for their predictions than nonexperts can .
Their vast erudition lets them explain at daunting length why something will or wo n't happen .
Not that all those reasons make the forecasts one bit better .
The question that screams out from the data is why the world keeps believing that " experts " exist at all .
In large part , the answer is human nature .
We desperately want to believe the world is not just a big game of dice , that things happen for good reasons and wise people can figure it all out .
It may not be so ; a school of researchers known as radical skeptics presents impressive evidence that the world is totally random , or at least that we humans are eternally unable to figure it out .
But most of us can't bear to believe that , so we cling to the notion of experts .
Another part of the answer is especially troubling for the media .
The awfulness of Tetlock 's experts was almost uniform whether they had doctorates or bachelor 's degrees , lots of experience or little , access to classified data or none .
He found but one consistent differentiator : fame .
The more famous the experts , the worse they performed .
And of course it 's those of us in TV , radio , newspapers , magazines , and on the web who bestow that fame .
We 're now reaching a deeper answer to the question of why experts persist .
The media like experts , the more confident the better , though Tetlock found that more confident means less reliable .
The media like them because you , the consumers of media , like them .
Experts like to appear in the media because it pays .
Tetlock 's conclusion : " The three principals -- authoritative - sounding experts , the ratings - conscious media , and the attentive public -- may thus be locked in a symbiotic triangle . "
It 's never too late for a good New Year 's resolution , so I propose that in the coming year , whenever any of us read or hear an expert opinion , or publish one , or issue one , we ask ourselves whether Tetlock might be onto something with this quietly withering conclusion about all of us in that triangle : " It is tempting to say they need each other too much to terminate a relationship merely because it is based on an illusion . "
FEEDBACK gcolvin@fortunemail.com
Previously I wrote about 14 Reasons to Become More Conscious .
Now let ’s explore the how .
What does it mean to become more conscious ?
It is the progressive realization of conscious mastery over your mind .
The challenge is that it takes consciousness to grow consciousness .
But you need n’t worry about this because you already have the seed .
Think of it like fire .
You have a flame , and you want to turn that flame into a huge blaze .
How do you do it ?
You add fuel .
The following list includes examples of how you can add fuel to your flame of consciousness to become a raging inferno of consciousness .
Well , OK , the analogy sort of falls apart there , but you get the idea .
So here are 10 ways to raise your consciousness :
1. Truth
Truth raises your consciousness .
Falsehood lowers it .
First , accept the truth .
Whatever you ’re afraid to know lowers your consciousness .
Step on the scale to see how much you weigh .
Have a long talk with your spouse about the status of your relationship .
Take a deep look at your career .
In every case accept the outcome .
Do n’t just acknowledge the current status and dismiss it .
Really accept it as the truth .
Think about what it means for this to be true .
Also accept your feelings about the truth , whether you like them or not .
Secondly , speak the truth .
If honesty is a challenge for you , it ’s because you are n’t being honest enough with yourself .
Lies you tell others are shadowed by lies you tell yourself .
Take note of those areas where you feel incapable of genuine honesty , and dig deep enough to find out why .
You ’ll find that you uncover a part of yourself you ’ve been unwilling to accept .
You do n’t lie about the parts of yourself you accept 100 % .
The more you ’re able to accept and speak the truth , the more conscious you become .
Raise your consciousness by uncovering and dumping all traces of falsehood from your life .
Allow this to be a gradual process .
As your consciousness increases , genuine honesty will come more easily to you .
Yes , there may be consequences when you switch from lies and half - truths to the full truth , but highly conscious people know that crossing that bridge is well worth the effect .
A short - term adjustment is nothing compared to the joys of living honestly and openly .
It ’s so much easier and less stressful to be yourself and allow others to do the same .
Not everyone will appreciate the real you , especially if they ’ve grown accustomed to a false version , but that wo n’t matter once you accept and appreciate yourself .
2. Courage
Courage raises your consciousness .
Cowardice lowers it .
Courage is the gatekeeper between unconscious growth and conscious growth .
As long as you remain on the unconscious side , life will keep throwing problems at you until you step up and take charge .
When you face your fear , the fear vanishes , and problems transform into opportunities .
But when you run from your problems , your fear only grows .
A powerful guiding principle to adopt is , “ Whatever I fear , I must face . ”
The more fears you face down , the more conscious you become .
As you master this lesson , eventually courage becomes less necessary .
Once you develop the courage to face any fear life throws at you , you stop attracting so many fear - based experiences into your life .
This is why courage is the dividing line between unconscious growth and conscious growth .
The mastery of courage gives you the power to decide how you ’ll grow instead of being a victim of the whims of fate .
3. Compassion
Compassion raises your consciousness .
Cruelty lowers it .
A great way to become more conscious is to search for signs of unconscious cruelty and disconnection in your life .
This can be very difficult to do since it also requires courage .
We naturally resist facing our own cruelty , but it ’s there just waiting to be uncovered .
Compassion is the root of unconditional love , a feeling of connectedness with everything that exists .
Do you feel connected to yourself ?
To others ?
To animals ?
To all living things ?
To everything that exists ?
The more you develop this connection , the more conscious and aware you become .
4. Desire
Desire raises your consciousness .
Apathy lowers it .
When you get clear about what you want , such as by setting a goal , you raise your consciousness .
Clarity focuses your mind and gives you the power to think and act intelligently .
You can feel this effect whenever you think about something you definitely want .
On the other hand , when your desire is unclear , your consciousness is muddled .
Your thoughts lack focus and direction , and you merely spin your wheels .
Strive to become more clear about what you truly desire most , and your consciousness will expand .
5. Attention
Attention raises your consciousness .
Distraction lowers it .
Improving your ability to concentrate will make you more conscious .
Pick up a rock and give it your full and complete attention , and notice what happens .
But allow your mind to be riddled with distractions , and your consciousness will sink .
A distracted mind is a powerless mind .
Meditation is a great way to practice attention and concentration .
Sit quietly , breathe deeply , and focus your mind as you do your best to tune out distracting thoughts .
This is simple to learn , but it can take a lifetime to master .
6. Knowledge
Knowledge raises your consciousness .
Ignorance lowers it .
First and foremost , know thyself .
Think deeply about your life , and keep a journal to record your thoughts .
Ask questions to which you do n’t know the answer , and then search for those answers .
Look around you as well , and soak up knowledge like a sponge .
Interact with your environment with a sense of curiosity and wonder .
Study it .
Learn from it .
Experiment with it .
Strive to understand reality , including your role in it , as accurately as possible .
The more accurate your beliefs about reality are , the more conscious you become .
7. Reason
Reason raises your consciousness .
Irrationality lowers it .
Logic is a powerful tool of consciousness when used correctly .
It lends structure and substance to thought .
However , the great challenge of logic is the avoidance of false assumptions .
A single false assumption can throw off a lifetime of otherwise logical conclusions .
So challenge all of your beliefs , and never have too much certainty about those that rest on clouds .
8. Conscious people
Conscious people raise your consciousness .
Unconscious people lower it .
Seek out others you perceive to be at a higher level of consciousness than you are .
Talk to them , ask questions , and enjoy their presence .
Allow their ideas and awareness to infect you , and you ’ll find yourself expanding in all directions .
You ’ll become more honest , more courageous , more compassionate , and so on .
But spend time with people at a lower level of consciousness , and you ’ll gradually sink to their level .
Their thoughts will infect you as well , causing you to become more dishonest , more fearful , more apathetic , etc .
Strive to find a balance between spending time with those who raise your consciousness vs. spending time with those you can help .
Learn from those who are a little more conscious , and help those who are a little less conscious than you .
In this manner you serve the highest good of all , expanding consciousness everywhere .
9. Energy
Energy raises your consciousness .
Disease lowers it .
Take care of your physical body , for it is your primary means of interacting with the world .
Energy gives you an ongoing flow of vital life experiences .
But without energy you starve your consciousness .
Eat with an awareness of what you ’re consuming .
Exercise with an awareness of how you ’re affecting your body and mind .
Before putting anything in your body , consider its effect on your energy , not just in the short term but in the long term as well .
Always ask yourself , “ Will this produce energy or disease ? ”
10 . Intention
The intention to raise your consciousness raises it .
The intention to lower your consciousness lowers it .
Consciousness has the capacity to self - expand or self - contract , just as you have the capacity to grow or to commit suicide .
In any given moment , you have the freedom of choice .
By genuinely voicing the intention ( or by offering the prayer ) , “ I intend to become more conscious and aware , ” you will initiate the expansion of your consciousness .
Holding the intention to improve in any of the previous nine areas will yield a similar effect .
Alternatively , you are perfectly free to lower your consciousness at any time .
While it ’s unlikely you would choose to do so directly , you can achieve the same effect indirectly by lowering your performance in any of the previous nine areas .
By choosing to lie , to succumb to fear , to commit acts of cruelty , to remain ignorant , and so on , you put out the intention to lower your consciousness .
And in so doing , you initiate a process that will attract more falsehood , fear , cruelty , ignorance , etc. into your life .
Every thought you hold serves to either expand or contract your consciousness .
There is no neutral .
So choose wisely .
This is the new NewsCloud interface !
Try clicking on a tag , and you 'll see related links here .
You can also open clouds in a new tab and save URLs for direct access .
Right now , you can choose between US and Brasil news .
But other countries are joining in !
Meanwhile , enjoy the news !
( Feeling melancholic ?
You can check the old page )
An Introduction to Using Patterns in Web Design by Ryan Singer , October 5 2004
The biggest challenge for web designers is the unthinkably huge number of possible ways to solve any given problem .
We usually do n't think of this because we have our habits and traditions to fall back on , but there are literally billions of possible pixel combinations for each page we make .
There is a better way to manage this vast complexity than by making big decisions up front and hoping for the best .
To make better sites — sites that are functional , beautiful , and " usable " — we have to break our design problems up into small independent chunks based on the real issues within our requirements .
Christopher Alexander , who came up with this stuff , calls these chunks patterns .
I 'm going to show you how to sidestep your habits and assumptions and use patterns to make better design decisions .
A lot of fancy stuff has been written about patterns .
To be simple and clear in this introduction , I 'll just call them chunks .
Step one : List your bits
Start by making a list of all the specific bits that must fit together for the web page to succeed as a whole .
By " bits " I mean any kind of design consideration .
So this includes what info the page should get across , what actions it should support , important attitudes of the users , and so on .
Do not prioritize , group , or categorize .
If you start by grouping and organizing you 'll just end up with your original habits and preferences in the end .
Here are the bits for a " My Account " page that I recently designed :
Company info Insurance info for company My ( current user ) info Other users on this account My sales rep contact info Current account plan Link to change search preferences Date account was created People rarely view or change insurance info Any user can edit anything except other users ' info Changing password is the most likely action People might come here to change search preferences ( which are on a separate page )
Do this on paper if you 're working on your own .
It 's faster .
Step two :
Figure out which bits relate to each other
Some bits affect each other ( like 7 and 12 ) while others are pretty independent ( 1 and 9 ) .
Some bits will work out better if you think of them together and some bits will be the same regardless of the others .
Put the bits into chunks based on whether they impact each other — not based on any conceptual or graphic ideas .
A : 1 , 10
B : 2 , 9 , 10
C : 3 , 10 , 11
D : 4 , 10
E: 5
F : 6 , 10
G : 7 , 12
H : 8
Let 's look at C for example :
3 . My ( current user ) info
10 .
Any user can edit anything except other user 's info
11 . Changing password is most likely action
The password ( 11 ) is part of the user info ( 3 ) and this can all be edited ( 10 ) .
Notice we 're not building down from our assumptions .
We 're building up from what we know for sure .
Step three : Prioritize
Decide which chunks are most important from a functional perspective .
In other words , decide which chunks matter most to people .
It is n't necessary to reorder the whole list .
Just figure out which chunks are the most important and group them loosely :
Most important : C , A , G , E
Necessary : B , D , F
Nice to have : H
Step four : Design each chunk
Since we grouped all the directly related bits into chunks , we can design the chunks independently without worrying about conflicts .
This idea is the heart of Alexander 's patterns ( which I 'm calling chunks ) .
You can get them right on their own and then fuse them together .
Start with the high priority chunks and move down :
Sketch C Sketch A Sketch G
The blinky lines around G satisfy 12 by showing that it should stand out .
( " 12 . People might come here to change search preferences " ) .
Sketch E Sketch B
In my shorthand I 've indicated that the link " Show / hide insurance info " will show or hide the block below it with Javascript .
This satisfies 9 ( " People rarely view or change insurance info " ) .
Sketch D
This chunk can be duplicated for each additional user .
Sketch F Sketch H
Notice how the above sketches use scale and weight to show priority .
These decisions will guide you in the next step .
Step five :
Put the chunks together
After the chunks are sketched , piece them together into a whole .
Think about the constraints that went into the sketches .
Think about priority .
Think about balance .
Do your design thing .
Here I did two phases .
First the rough layout :
Does this remind you of a wireframe ?
Next I did a loose sketch to guide my HTML prototype :
Step six :
Make it real
When you build the real thing you sometimes see that what worked on paper just is n't quite right on screen .
In the final design I shifted the Company data ( A ) around for better balance and switched the sidebar ( E , F , H ) from the left to the right .
I could tweak these chunks independently because they were designed independently .
Have a look at the result :
So much for chunks
In this article I treated patterns in a very simplified way , as chunks .
You might be wondering well what are patterns then ?
Patterns play a significant role in architecture , urban planning , and recently software design .
In all of these cases a pattern is a way of dealing with a system of interacting forces .
When you find that you often design a sidebar for helpful notes , details and references , you 're using a pattern .
The interacting forces are the requirements of those little bits and how they relate to the main content , and the sidebar is the best way to deal with them .
For more on design patterns , see the links below or Google away .
Related books
Related links
What do you think ?
Discuss this article on Signal vs. Noise .
Following various comments
I 've made about deficiencies in technology marketing and my disagreement with Doc Searl 's provocations , I 've been rightly harassed into prescribing some solutions to my complaints .
So I give you Geek Marketing 101 .
It is so named because I see amongst many geeks a pervasive misunderstanding and consequent distrust of what marketing is , and a failure to recognise that much technology marketing is no longer geek to geek since complex products are increasingly being bought by non-geeks .
Of course , these observations are equally applicable to geek to geek and non -geek businesses .
Marketing is a combination of elements that creates the environment in which it is possible to meet a customer need ( starting right back at product development ) .
Promotion and sales are just sub-sets of marketing .
Successful technology marketing must translate the creations of the uncommunicative into the needs of the untechnical .
Spin is not good marketing .
Lucid two - way communication is .
Reductive marketing that simplifies ideas does not undersell your complex creation .
It facilitates an entree to your world .
You can't have passionate users until they start using
Think of the " product " in terms of what it does , not how it does it .
You may be interested in the latter , but your users generally are n't .
Portable computer memory is not a difficult concept to enunciate , yet flash drive and USB drive nomenclature is predicated on technological aspects not the actual function .
Long words confuse , do n't they ?
Think of the " product " in terms of what most people will be happy doing with it and not in the myriad possibilities it offers .
You may think speed and multiple settings are hot , but outside the lab such attributes may not provide the greatest satisfaction .
Simple , intuitive interfaces will .
Regular people do n't read the manual .
It 's too big ( see 5 ) , too complicated ( see 3 ) and thus incomprehensible .
It 's not that people are averse to science and technology - they 're averse to being made to feel helpless .
The demand for books that simplify science is huge the world over .
Your manual is marketing .
In the absence of all of the above , your users inevitably need help .
A technical support department speaking in non-technical , hand - holding language transforms their purchase from waste of money to life - enhancing boon and is the greatest marketing tool you have .
Do n't allow your misguided prejudices about advertising and snake - oil to infect your approach and damage sales .
People hate hype , spin and unfulfilled expectations .
They do not hate having their needs met ( see 1 ) .
They 're not Luddites , but nor are they geeks - that 's what you 're paid to be .
However , they often hate how technology products make them feel because blinding with science is as bad as baffling with bullshit .
As the conversations develop , the users comprehend your products better and you better understand their needs .
With increased confidence , they utilise more and more of your geekiness and , with increased awareness , you are better able to adapt to their behaviours .
They feel more warmly about geeks and you may get the chance to buy them a drink .
That does n't sound so bad , does it ?
Embrace Obscurity Jason 58 comments
Latest by articleworld
At SxSW a few weeks ago I spoke about starting a side business instead of quitting your job ( audio in MP3 ) .
Build something on the side .
Give it a go and see what happens .
The constraint of less time will help you focus on what ’s important .
If there ’s something there , then take it to the next step .
It ’s hard to point to a business that launched huge and has been successful .
Most of the big winners in our industry started really small and grew big over time .
eBay , Craigslist , Yahoo , Google — these were all started on the side .
They were n’t funded up , hyped up , and launched huge .
They started really small and grew organically .
One of the real benefits of starting a side business is obscurity .
To be more specific , failing in obscurity .
When people talk about business they do n’t like to talk about failure .
But in business you ’ll fail more than you ’ll succeed .
So it ’s worth talking about .
The beauty of starting a side business is that you can fail in obscurity .
Many people worry that they ’ll languish in obscurity .
Do n’t worry about having a great idea that no one knows about .
Worry about having a bad idea that everyone knows about .
When no one knows about you you can make mistakes quietly .
Learn at your own pace .
Fail without the fear of failure .
Failing in obscurity helps protect your ego and you ’ll need your ego later on when you are successful .
Confidence is vital to success and if you fail big on your first try it ’s going to take years for your ego to recover .
Fail small now so you can succeed big later .
So embrace obscurity .
It ’s your friend .
Launch small , make mistakes in the shadows , get better , and then seek out the spotlight when you ’re ready .
My jaw dropped when I heard that presidential candidate Clinton dismissed the unified opinion of every economist on the planet and supported the gas tax rebate .
The rebate is John McCain ’s proposal .
I think that proves both of them are unqualified to be president .
Obama is n’t much better when it comes to sorting out economic policy from pandering , although he did avoid that particular landmine .
So I decided to start my own political party .
I call it the Economics Party .
There ’s no paperwork involved , and you do n’t even have to stop being a Democrat or Republican or whatever to join .
The Economics Party wo n’t have its own candidates .
All we ’ll do is agree to vote for the candidate with the best long term economic policy , according to the consensus of leading economists .
The Economics Party would ignore superstition in its decisions .
Here are a few things I think would end up on the platform , assuming most leading economists agree :
- Withdraw from Iraq
- More aggressive energy policy ( back off on ethanol )
- More sane tax policies
- Limited government
- Legalize doctor assisted suicide
- Keep abortion legal
- Decriminalize marijuana
- Strong education policy
We ’d make some exceptions for humanitarian reasons .
For example , if a natural disaster hits a poor part of the country , it might be cheaper to let everyone die , but you have to put life ahead of money at some point .
The platform might look Libertarian , but it has differences .
For example , a Libertarian might be opposed to the government making people wear motorcycle helmets .
The Economics Party would just look at the likely higher cost of insurance in a helmet - free world and decide on that basis .
I do n’t know which way it would come out .
The Economics Party would be committed to changing its policy recommendation whenever the facts warranted .
We ’re pro flip - flop when it makes sense .
In other words , our brains function properly .
If thirty or forty million people join the Economics Party , all major candidates would have to start paying attention to the consensus of economists .
At the very least , voters would become more aware of what the leading economists think makes sense .
That seems like a good thing .
Are you in ?
But the country ’s G.D.P. grew 8 percent in 2005 , according to the International Monetary Fund , and is predicted to increase by 12 percent this year .
Cotton and other agricultural products have traditionally been the engines of the economy here , but the new growth comes largely because Sudan has substantially increased its crude oil production to 512,000 barrels a day — a drop compared with Saudi Arabia ’s or Iran ’s , but enough to bring billions of dollars to a country that until recently was one of the poorest on earth .
“ Oil and real estate investment , primarily in urban areas , is really what ’s driving the economy , ” said Michael Kevane , an associate professor of economics at Santa Clara University .
“ There ’s no doubt about that . ”
The boom is also strengthening the government ’s hand at home .
Over the past few years , Mr. Bashir has been on an infrastructure binge , pouring hundreds of millions of dollars into roads , bridges , power plants , hospitals and schools , projects that tend to boost any government ’s popularity .
Mr. Bashir seems to desperately need it , with many people across the country , not just in Darfur , openly rebelling against his rule .
Mr. Bashir , an army general , seized power in 1989 through a military coup , and among the biggest beneficiaries of these boom times have been his troops .
Ms. Mahdi said more than 70 percent of the government ’s share of oil profits is spent on defense .
A government priority is to manufacture guns and ammunition domestically , in case external supplies are cut off .
Despite all the new materialism , Sudan still marches to a martial tune .
Army officers enjoy special status , foreign visitors must register with the police and schoolchildren are required to wear camouflage uniforms to class .
But the boom is changing much about society , from the careers people pursue , to the music they listen to , even what they eat .
The traditional meal of ful , a bean stew eaten for breakfast and lunch , is giving way to kebabs , yogurt , hamburgers and hot dogs .
According to polls , tens of millions of Americans believe that the government was behind the 9/11 attacks .
But 2 more conspiracy theories were pretty well debunked recently .
(1) That the government shot down United Flight 93 .
(2) That the air force was ordered to “ stand down ” on 9/11 .
Michael Bronner , a producer of the movie United 93 , asked for the NORAD 9/11/01 transcripts , & published excerpts in Vanity Fair .
He actually provides sound clips — here .
It seems that NORAD was unable to track or intercept any of the planes before they crashed .
At one point they believed that the White House was targeted , and , incredibly , the air force planes were unable to find the White House :
Nasypany : “ Goddammit !
I ca n’t even protect my N.C.A. [ National Capital Area ] . ”
[ A ] dramatic chase towards the White House continues .
Two more problems emerge : the controllers canâ€™t find the White House on their dated equipment , and they have trouble communicating with the Langley fighters .
CITINO : 15 miles .
One - five â€¦ noise level please â€ ¦
It ’s got to be low .
Quit 2 - 6 , when able say altitude of the aircraft.â€ ¦
Did we get a Z - track [ coordinates ] up for the White House ?
HUCKABONE : They ’re workin’ on it .
CITINO : Okay .
Hey , what ’s this Bravo 0 - 0 - 5 [ unidentified target ] ?
FOX : We ’re trying to get the Z - point .
Weâ€ ™re trying to find it .
HUCKABONE : I do n’t even know where the White House is .
Conspiracy theorists still have some material to work with , though .
On 9/11/01 there was a NORAD hijacking exercise , which seems to have caused some confusion when the real hijackings occurred :
BOSTON CENTER : Hi. Boston Center T.M.U. [ Traffic Management Unit ] , we have a problem here .
We have a hijacked aircraft headed towards New York , and we need you guys to , we need someone to scramble some F - 16s or something up there , help us out .
POWELL : Is this real - world or exercise ?
BOSTON CENTER : No , this is not an exercise , not a test .
WATSON : What ?
DOOLEY : Whoa !
WATSON : What was that ?
ROUNTREE : Is that real - world ?
DOOLEY : Real - world hijack .
WATSON : Cool !
FOX : I ’ve never seen so much real - world stuff happen during an exercise .
NASYPANY : This is what I got .
Possible news that a 737 just hit the World Trade Center .
This is a real - world .
â €” Is this explosion part of that that we ’re lookin’ at now on TV ?
â €” Yes .
â €” Jesus â€ ¦
â €” And thereâ€™s a possible second hijack alsoâ€ ” a United Airlines â€ ¦
â €” Two planes ?â€ ¦
â €” Get the f*ck out â€ ¦
â € ” I think this is a damn input , to be honest .
The last line â€ ” “ I think this is a damn input ” â€ ” is a reference to the exercise , meaning a simulations input .
Also surprising is ( 1 ) that the terrorists knew to turn off the planes ’ transponders , and ( 2 ) that this succeeded in making the planes invisible to NORAD .
The Vanity Fair article suggests that civilian air traffic controllers had a better understanding of what was going on than did NORAD ; even talking to each - other on the phone might have cleared up the confusion , but this did n’t happen .
No conspiracy theory is necessary to make the anti-imperial argument : Â ethics aside , a government that can’t find the president ’s house during an attack should n’t be abroad shaking up hornets ’ nests .
( Readers might be interested in checking out the Peace section of my science blog . )
" The Saudis are very happy with oil at $ 55 per barrel , but they 're also nervous , " a Western diplomat in Riyadh told me in May , referring to the price that prevailed then .
( Like all the diplomats I spoke to , he insisted on speaking anonymously because of the sensitivities of relations with Saudi Arabia . )
" They do n't know where this magic line has moved to .
Is it now $ 65 ?
Is it $ 75 ?
Is it $ 80 ?
They do n't want to find out , because if you did have oil move that far north . . . the chain reaction can come back to a price collapse again . "
High prices can have another unfortunate effect for producers .
When crude costs $ 10 a barrel or even $ 30 a barrel , alternative fuels are prohibitively expensive .
For example , Canada has vast amounts of tar sands that can be rendered into heavy oil , but the cost of doing so is quite high .
Yet those tar sands and other alternatives , like bioethanol , hydrogen fuel cells and liquid fuel from natural gas or coal , become economically viable as the going rate for a barrel rises past , say , $ 40 or more , especially if consuming governments choose to offer their own incentives or subsidies .
So even if high prices do n't cause a recession , the Saudis risk losing market share to rivals into whose nonfundamentalist hands Americans would much prefer to channel their energy dollars .
A concerted push for greater energy conservation in the United States , which consumes one - quarter of the world 's oil ( mostly to fuel our cars , as gasoline ) , would hurt producing nations , too .
Basically , any significant reduction in the demand for oil would be ruinous for OPEC members , who have little to offer the world but oil ; if a substitute can be found , their future is bleak .
Another Western diplomat explained the problem facing the Saudis : " You want to have the price as high as possible without sending the consuming nations into a recession and at the same time not have the price so high that it encourages alternative technologies . "
From the American standpoint , one argument in favor of conservation and a switch to alternative fuels is that by limiting oil imports , the United States and its Western allies would reduce their dependence on a potentially unstable region .
( In fact , in an effort to offset the risks of relying on the Saudis , America 's top oil suppliers are Canada and Mexico . )
In addition , sending less money to Saudi Arabia would mean less money in the hands of a regime that has spent the past few decades doling out huge amounts of its oil revenue to mosques , madrassas and other institutions that have fanned the fires of Islamic radicalism .
The oil money has been dispensed not just by the Saudi royal family but by private individuals who benefited from the oil boom -- like Osama bin Laden , whose ample funds , probably eroded now , came from his father , a construction magnate .
Without its oil windfall , Saudi Arabia would have had a hard time financing radical Islamists across the globe .
For the Saudis , the political ramifications of reduced demand for its oil would not be negligible .
The royal family has amassed vast personal wealth from the country 's oil revenues .
If , suddenly , Saudis became aware that the royal family had also failed to protect the value of the country 's treasured resource , the response could be severe .
The mere admission that Saudi reserves are not as impressively inexhaustible as the royal family has claimed could lead to hard questions about why the country , and the world , had been misled .
With the death earlier this month of the long - ailing King Fahd , the royal family is undergoing another period of scrutiny ; the new king , Abdullah , is in his 80's , and the crown prince , his half - brother Sultan , is in his 70's , so the issue of generational change remains to be settled .
As long as the country is swimming in petro - dollars -- even as it is paying off debt accrued during its lean years -- everyone is relatively happy , but that can change .
One diplomat I spoke to recalled a comment from Sheik Ahmed Zaki Yamani , the larger - than - life Saudi oil minister during the 1970's : " The Stone Age did n't end for lack of stone , and the oil age will end long before the world runs out of oil . "
Until now , the Saudis had an excess of production capacity that allowed them , when necessary , to flood the market to drive prices down .
They did that in 1990 , when the Iraqi invasion of Kuwait eliminated not only Kuwait 's supply of oil but also Iraq's .
The Saudis functioned , as they always had , as the central bank of oil , releasing supply to the market when it was needed and withdrawing supply to keep prices from going lower than the cartel would have liked .
In other words , they controlled not only the price of oil but their own destiny as well .
" That is what the world has called on them to do before -- turn on the taps to produce more and get prices down , " a senior Western diplomat in Riyadh told me recently .
" Decreasing prices used to keep out alternative fuels .
I do n't see how they 're able to do that anymore .
This is a huge change , and it is a big step in the move to whatever is coming next .
That 's what 's really happening . "
Without the ability to flood the markets with oil , the Saudis are resorting to flooding the market with promises ; it is a sort of petro- jawboning .
That 's why Ali al - Naimi , the oil minister , told his Washington audience that Saudi Arabia has embarked on a crash program to raise its capacity to 12.5 million barrels a day by 2009 and even higher in the years after that .
Naimi is not unlike a factory manager who needs to promise the moon to his valuable clients , for fear of losing or alarming them .
He has no choice .
The moment he says anything bracing , the touchy energy markets will probably panic , pushing prices even higher and thereby hastening the onset of recession , a switch to alternative fuels or new conservation efforts -- or all three .
Just a few words of honest caution could move the markets ; Naimi 's speeches are followed nearly as closely in the financial world as those of Alan Greenspan .
I journeyed to Saudi Arabia to interview Naimi and other senior officials , to get as far beyond their prepared remarks as might be possible .
Although I was allowed to see Ras Tanura , my interview requests were denied .
I was invited to visit Aramco 's oil museum in Dhahran , but that is something a Saudi schoolchild can do on a field trip .
It was a " show but do n't tell " policy .
I was able to speak about production issues only with Ibrahim al - Muhanna , the oil ministry spokesman , who reluctantly met me over coffee in the lobby of my hotel in Riyadh .
He defended Saudi Arabia 's refusal to share more data , noting that the Saudis are no different from most oil producers .
EPA
THE ugly little mid-summer war that has just ended in Lebanon spilled over into the parliaments , streets , television studios and dinner parties of Europe .
By and large , Israel got the worst of it .
The Council of Europe said that Israel 's response to Hizbullah 's cross- border attacks was “ disproportionate ” and accused Israel of “ indiscriminate attacks on civilian targets ” .
Romano Prodi , Italy 's prime minister , called Israel 's reaction “ excessive ” .
In Norway , Jostein Gaarder , the author of “ Sophie 's World ” , accused Israel of ethnic cleansing and murdering children , and said that the Jewish state had forfeited its right to exist .
In many capitals , anti-war protesters marched under Hizbullah flags .
When Britain 's Tony Blair tried to explain things from Israel 's point of view — and failed to call for an immediate ceasefire — his political stock took another tumble .
Mr Gaarder was prodded into a half - hearted apology .
But the truth is that , far from being extreme , these criticisms of Israel convey the mood of millions of Europeans , rooted in what polls suggest is a hardening attitude .
A YouGov poll in Britain , taken in the first two weeks of the conflict , found 63 % of respondents saying that the Israeli response to Hizbullah 's attack was “ disproportionate ” ; a similar German poll had 75 % saying so .
Such reactions reflect a wider European view of Israel that contrasts sharply with America's .
In a Pew Global Attitudes survey earlier this year , far more Europeans sympathised with the Palestinians than with Israel ( see chart ) .
These findings come on top of a European Union poll in 2003 that had 59 % of Europeans considering Israel as a greater menace to world peace than Iran , North Korea and Pakistan .
Why has Europe become so reflexively anti-Israel , just when America has become so reflexively pro-Israel ?
Europe has no equivalent of America 's powerful AIPAC Israeli lobby , and it also has a disgruntled ( and growing ) Muslim population .
But neither is enough to explain all the difference in attitude .
Indeed , many Muslims in Europe now feel beleaguered and can only dream of wielding AIPAC 's clout .
Some Americans blame rising anti-Semitism in Europe , which they also attribute in part to its growing Muslim population .
But there is a difference between being anti-Semitic and being anti-Israel .
And in any case , it is not obvious that anti-Semitism is a big factor .
In central Europe , for example , there seems to be both greater anti-Semitism and more support for Israel .
And some polls suggest that more Americans think Jews have “ too much influence ” in their country than do Europeans .
It is also often the right in Europe , linked with anti-Semitism in the past , that is most supportive of Israel today .
Britain 's Conservative Party , for instance , not always known for its admiration of Jews or Israel , is now the most pro-Israel party .
In Italy , which invented fascism , Silvio Berlusconi's Forza Italia and Gianfranco Fini 's formerly neo-fascist National Alliance , are more pro-Israel than the government .
In Spain , the centre - right opposition was highly critical of José Luis Rodríguez Zapatero , the Socialist prime minister , when he donned an Arab headscarf to show solidarity during the Lebanon war .
Countries that were most culpable in the Holocaust tend to be stauncher supporters of Israel — especially Germany .
What was then West Germany became the main financial backer of the new Jewish state six decades ago , with a first payment of $ 865 m in 1952 .
Aid continued throughout the 1960s , long before America became Israel 's main source of outside support .
This week 's decision to commit German troops to the peacekeeping force in Lebanon also reflects past guilt .
If the right ( and the Germans ) are doing penance , the left , which now controls many of Europe 's chanceries , and certainly much of its media , feels a sense of betrayal — which is why many now attack Israel with all the zeal of the convert .
Until the 1960s European socialists championed the cause of the Jews and Israel .
Mid-century socialists saw anti-Semitism and fascism as products of the right , so they became instinctively pro-Israel .
In the 1950s it was left - wing French governments that provided Israel with nuclear power and a modern air force .
This changed with the six - day war in 1967 , when Israel launched a pre-emptive strike to defeat the Jordanian , Egyptian and Syrian forces that seemed about to invade .
It was a stunning victory , but it led to the occupation of the West Bank , Gaza and Sinai .
To European socialists , who had rallied to the underdog Israel in 1967 , the Palestinians were now the oppressed and displaced .
Israel came to be seen as a neo - colonial regional superpower , not the plucky survivor of the Holocaust keeping powerful neighbours at bay .
In the decades after 1967 Israeli politics also changed .
The Labour Party , which had largely ruled Israel since 1948 , began to lose ground to right - wing parties , notably Likud .
European left - wingers , who had idealised Golda Meir 's Israel as a pioneering socialist collective of happy kibbutzniks , were shocked by what they saw as the militarisation and racism of Menachem Begin 's Israel — and they began a romance with the Palestinians instead .
This change can be chronicled over nearly a century in such liberal papers as Britain 's Guardian .
Chaim Weizmann , the first president of Israel , played a vital role in fostering the Guardian 's early advocacy of Zionism and Israel , but the paper is now one of Israel 's harshest critics .
The BBC , a bastion of the soft left establishment , has also been criticised for its bias against Israel , not least during the latest war .
Attitudes to America have also clouded European views , especially on the left .
As Israel has drawn closer to America in the past few decades , the left 's antipathy towards the behemoth of capitalism has spilled into dislike of Israel .
Public opinion in Turkey , the one Muslim country that was once pro-Israel , has turned against it in parallel with its turn against America , especially over the war in Iraq .
Emanuele Ottolenghi , an expert on Israel and Europe at Oxford University , argues that “ Europeans see Israel as the embodiment of the demons of their own past . ”
The European Union is supposed to have traded in war , nationalism and conflict for love , peace and federalism .
But Israel now reminds Europeans of darker forces and darker days .
Could attitudes change ?
It seems unlikely , not least because Israel is now so stridently critical of the Europeans , especially of their media .
In this area , at least , the transatlantic gap is widening .
SHANGHAI , Oct. 12 — China is planning to adopt a new law that seeks to crack down on sweatshops and protect workers ’ rights by giving labor unions real power for the first time since it introduced market forces in the 1980’s .
The move , which underscores the government ’s growing concern about the widening income gap and threats of social unrest , is setting off a battle with American and other foreign corporations that have lobbied against it by hinting that they may build fewer factories here .
The proposed rules are being considered after the Chinese Communist Party endorsed a new doctrine that will put greater emphasis on tackling the severe side effects of the country ’s remarkable growth .
Whether the foreign corporations will follow through on their warnings is unclear because of the many advantages of being in China — even with restrictions and higher costs that may stem from the new law .
It could go into effect as early as next May .
The COVID - 19 pandemic is affecting the lives of people around the world , but those in developing countries are likely to suffer the most in the face of this global crisis .
At the Center for International Development ( CID@Harvard ) , we see this as a call to action .
We are responding quickly in the following ways to implement solutions : we are collecting funding information ; we are connecting researchers , foundations , and policymakers to channel our resources ; and we are sharing the most up - to - date work of our experts to ensure it is reaching those who need it most .
SCIENTISTS have confirmed what fans of John Travolta in Saturday Night Fever have known all along : men with the best dance moves have the most sex appeal .
The finding lends support to the idea that dancing is a way to show off high quality genes and good health - both indicators of a top quality mate .
Charles Darwin was the first to suggest that dance was a courtship signal in animals , but there had been no studies of the relation of dance and genetic or physical quality in humans until now .
Alex Selby and Oliver Riordan , two mathematicians , with the help of a couple of computers , have shared a £ 1 m prize by solving the " Eternity " puzzle .
The puzzle was like an enormously difficult jigsaw .
There were 209 pieces , all different , but all made from equilateral triangles and half - triangles , as in the example on the left .
( All the pieces had the same total area as 6 triangles . )
The puzzle was to fit them together into the almost - regular 12 - sided figure aligned to a triangular grid , shown on the right .
An example piece The board
The prize was announced when the puzzle hit the market in June 1999 .
It would go to the first correct solution submitted .
However , no solutions would be opened until September 2000 .
Until then , no - one would know for sure whether a winning solution had already been sent in .
In July 1999 , Alex was given a copy for his birthday by his brother .
" I did n't really think about it until November , " he says .
At that point , two friends came round , sneakily typed the pieces into his computer while he was out , and got him interested in it .
Oliver was then in the US , but when he returned in January , Alex recruited him to help with the puzzle .
It seemed that , putting pieces in by hand , one was likely to get stuck after about 150 pieces .
They found an internet discussion group on Eternity , where some people had already found ways of placing 206 or 207 of the 209 pieces .
" That was interesting , because it suggested the puzzle might be both doable and not yet done , " says Alex .
Of course , there was no guarantee that someone else had n't already solved it without posting to the group .
By 1 February , someone on the group announced a 208 - piece partial solution .
" Not only that - it had a piece - shaped hole , though not the right piece , of course .
If he could repeat that 1000 times , he would probably get a solution . "
By now it seemed that other solvers were getting close to a solution .
In fact , it turned out much later that one puzzler , Guenter Stertenbrink , had had a 208 - piece partial solution by September 1999 !
Alex and Oliver submitted their tiling on May 15th , but had to wait until September before they knew that it was the first .
Guenter is the only other puzzler known to have found a solution .
The puzzle 's inventor , Christopher Monckton , had created the puzzle by starting with a much larger set of pieces , and fitting them into the grid until it was full .
" Of course , this made it easy for him to find a tiling , since he had so many extra pieces to choose from , " says Alex .
" Effectively he 's planting a solution .
When he had filled up the shape , he threw away the pieces he had n't used , and the ones that were left formed the puzzle . "
Monckton had thought the money safe for a long time : " He thought the sheer size of Eternity would make it intractable . "
Indeed , exhaustively searching all possibilities would take so long that the fastest computer would have taken many millions of years to find a solution this way .
Yet Alex and Oliver took less than seven months to solve it , using mathematical analysis and computer searching .
So how did they do it ?
Unexpected bonus
They calculated that the large number of pieces would , suprprisingly , make the puzzle easier to solve rather than harder .
Monckton had run computer searches on much smaller versions of the puzzle , which convinced him that it would get harder as it got bigger .
For the cases he examined this was true , but Alex and Oliver realised that as the puzzle grew , it would get harder up to some critical size , after which it would start to get easier again .
Why does the critical size arise ?
Let 's see first why one should expect a large enough puzzle to have solutions at all .
Suppose there are N pieces in all .
We can imagine dividing the board into N rough areas and trying to put one piece in each , but not worrying if they overlap a bit .
We know the number of ways of choosing which piece to put in which area : it 's ( 1 × 2 × 3 × ... × N ) , usually written N !
For each piece , there is a number of triangles round its edge where it might overlap with another piece .
Indeed , the probability of it not overlapping might be some very small number , say p .
And we have a complete solution only if none of the tiles overlap , whose probability is a tiny pN .
On average , therefore , the number of solutions will be N ! ( pN ) .
When N is fairly small , N ! ( pN ) will be small - far less than 1 - and there are probably no solutions , other than the one planted by the inventor .
But N ! is a function that grows faster than kN for any fixed k ( in fact , nearly as fast as NN ) .
This means that however small p is , as N grows large enough N ! ( pN ) will grow above 1 and more and more solutions will appear .
The critical size happens when the expected ( average ) number of solutions is 1 .
This explanation by reference to probabilities may seem a little unsatisfactory at first .
Surely there either is a solution or there is n't ?
But the same comment applies in any situation we think of as probabilistic ( either the coin will come down heads or it wo n't ) .
Probability is just a measure of our lack of knowledge .
There might be some systematic reason why some tilings will be impossible , but if there is n't , the probabilistic estimate of how many solutions exist will ( probably ! ) be a reasonable one .
Bigger means easier
They calculated the critical size was about 70 pieces .
An Eternity puzzle this size would be essentially impossible to solve , so it is not surprising that Monckton 's searches did not get this far .
The actual puzzle , with 209 pieces , was far beyond this critical size .
Its level of difficulty would be critically determined by how well - behaved the shapes of the pieces turned out to be .
" It seemed it would be just possible to solve , with a lot of work , " says Oliver .
" We thought the pieces must have been carefully designed to make it very , very difficult , without being impossible .
But it turns out the inventor was just lucky - or perhaps unlucky . "
The pair estimate that there are probably about 1095 solutions , more than the number of subatomic particles in the universe .
" That might sound like a lot of solutions , but there are far , far more non-solutions , " says Oliver .
In other words , the puzzle is much too large to solve by an exhaustive search .
The fastest computer would take millions of years to find even one solution by this method .
This would still be true even if there were many more solutions , as there may well be .
" Our estimate was on the low side compared with some others , which were more like 10120 . "
Why , then , does the problem get easier as the size grows ?
Alex explains : " For a region of the critical size , c say , we expect one solution .
That 's an average : some regions will have more solutions and be easier to tile , others will have none .
If the number of pieces N is bigger than c , we are free to put in the first ( N - c ) pieces in many different ways .
Some of the resulting tiling problems will be much easier than average .
If we can identify the easy ones , we only have to look at those . "
Why did Monckton miss this idea ?
" He was n't looking at it in a mathematical way at all .
In fact , he said he did n't expect a mathematician to solve it . "
Unhelpful hints
At the same time as Eternity , Monckton released various smaller puzzles .
Solving any of these allowed one to send off for one of various " hints " , showing where on the Eternity grid particular pieces were in Monckton 's solution .
Alex points out that these would not have been any help at all .
" Suppose you 're going fishing , and you know that in the Atlantic there is one fish per cubic mile , and in the Pacific there are two fish per cubic mile .
Then you 'll fish in the Pacific rather than the Atlantic .
If someone throws one extra fish into the Atlantic , it wo n't make any difference .
With total fish stocks of 1095 or more , one fish more or less is neither here nor there . "
In fact , if solvers had been required to use the hints , the puzzle would have become much harder .
If you are building up a solution by carefully slotting in pieces one by one , small holes in the middle of the region to be tiled will enormously increase the number of constraints .
" Having to fit in with pieces in the middle of the board would be crippling . "
Good and bad pieces
Knowing there are lots of solutions does n't give us much idea where to look for them , but we did get one clue : the approach must be to try to identify what kinds of positions are easier to tile when only a few pieces are left .
Then we will try to find a way to generate such positions , and whenever we get one , we will do an exhaustive search from it for a complete solution .
You can compare trying to fit the pieces into the grid with loading packages into the boot of a car .
Some of the packages are awkwardly shaped , and you usually put those ones in first , keeping the nicer shapes till later when you have less room for manoeuvre .
In the same way , some Eternity pieces will be better than others when you 've placed most of the pieces and want to fill up the space that 's left .
Unlike the car - packing case , though , it 's not easy to tell which pieces are good just by looking at them .
One might expect that the pieces with the most convex , least knobbly shape will be best , and indeed it turns out that this is mainly true .
But to get a handle on such a vast problem , Alex and Oliver needed much more accurate information about just how valuable different pieces were .
Their plan was to collect this information by running exhaustive searches to tile small regions of the board with subsets of the Eternity pieces .
Using the knowledge gained from this , they would try to build up a tiling piece by piece , always trying to leave themselves with as good a collection of pieces in hand as possible .
Going back to the car - boot analogy : as you put things in , you 're not only trying to keep the nice packages till last ; you 're also trying to ensure that , at each stage , the space that 's left is as sensible a shape as you can arrange .
Similarly , some shapes of Eternity region will be easier to tile than others , but again , it 's not always obvious which ones .
At the same time as identifying good and bad pieces , Alex and Oliver intended to try to identify good and bad regions .
Of course , they could not examine all possible region shapes , but they collected data about what features made a region good or bad .
For example , they looked at how many corners a region 's boundary had , and tried to work out how much harder each corner made it to tile .
Exhausting work
Since they were going to have to run many exhaustive searches of small regions , the first challenge was to write a fast and efficient solver program that would find all tilings of a given region of a moderate size with a given set of pieces .
One useful idea in writing the solver was the idea of always branching on the most constrained site first .
This can be explained by yet another reference to packing a car boot .
If , at a particular point , you have an awkward - shaped corner to fill up , you will probably look first for a package that will make efficient use of that corner .
The solver used a similar principle : at each stage , it scanned the whole region to find which site could be tiled in the fewest ways .
Then it would try all the possibilities for that site .
Another important feature of a good solver is the ability to discard as many untilable positions as possible at an early stage .
Of course the search will find that the position is impossible , but that takes time .
If a large number of positions can be eliminated early on , it will make the solver much faster .
Their innovation here was to look at the shape of the boundary .
Oliver expands :
" We looked at all possible shapes of path in the triangular grid of length 11 , and for each one checked if it could occur as part of a tiling - roughly , if it could be tiled on both sides .
We stored that information in a table , and when we examined a position , the first thing we did was to check every subpath of its boundary of length 11 against our table . "
Suppose you start tiling by fitting pieces together in the grid , until all but , say , 24 of the pieces have been used .
The position that remains consists of two things : the region that has yet to be tiled , whose size is that of 24 pieces - note that all the pieces have the same area - and the particular 24 pieces still available .
We 'll refer to these together as an endgame position .
The resulting puzzle is small enough to search exhaustively , but unfortunately is extremely unlikely to have any solutions .
( If it does , you 've solved the puzzle and you can go home ! )
A different , random selection of 24 pieces is no more likely to be able to tile the region .
Oliver and Alex generated a large number of such size - 24 endgame positions , using the computer to put tiles down using their solver 's boundary checker and a small amount of look - ahead to make sure it did n't get stuck too early .
They kept the regions from these positions , but ignored the pieces .
Instead of the actual 24 pieces left in each case , they asked the solver to tile the region using a random subset of 90 of the original 209 Eternity pieces .
In each case , they then did an exhaustive search to find all tilings of the region using any 24 of the 90 pieces .
" By giving yourself extra pieces , you make the problem easier , so that you can begin to find some solutions " , says Oliver .
" The expected number of solutions is multiplied by 90 choose 24 , which is a huge factor , for a much smaller increase in the amount of work . "
Getting the parameters
From the results of these searches , they planned to find just how useful each piece was , and how much a tiling problem was affected by features of the boundary such as corners .
To do this they had to make a priori assumptions about what kinds of effects they were looking for .
For example , they assumed that the probability of being able to tile a region with a particular set of pieces varied independently with each piece in the set .
Each piece would have an associated probability , and to get the overall probability you simply multiply together all the individual probabilities .
Similarly , the probability would depend exponentially on the number of corners in the region 's boundary ( and on certain other properties of the boundary ) .
The problem now was to estimate values for the probabilities ( for the pieces ) , and the exponential factor for boundary corners ( and similarly for other boundary features ) , using the data from the exhaustive searches of the size - 24 regions .
They proceeded as follows :
Obviously , if we knew the probabilities for the pieces and boundary features , then given a particular set of pieces , we could calculate the probability of tiling a given region .
What we need at the moment , though , is the opposite : for a fairly large data set we know how often we succeeded in tiling a number of regions ; from this we want the piece probabilities .
A well - known theorem in probability theory , Bayes 's Theorem , gives a formula for the probability - of - A - given - B in terms of the probability - of - B - given - A .
If we assume that , in the absence of any data , all models ( i.e. guesses about the piece probabilities ) are , in some sense , " equally likely " , then Bayes 's Theorem allows us to find how any model 's probability is affected by the data .
The formula given by Bayes 's Theorem might not be easy to apply in practice .
The pair had to adjust their probabilistic model to make the calculations more tractable .
Of course , the trick is to choose adjustments which make only a negligibly small difference to the result , but give a big payoff in computation time .
This part of the procedure - finding a likelihood that could actually be calculated - was the most challenging and interesting , because in principle , calculating each likelihood depended on adding a huge and impracticable number of terms .
They circumvented this problem by arranging for this sum to be calculable by a far more manageable short - cut .
Finally , when we can calculate how likely any set of piece probabilities is , we have to maximise this likelihood over all possible sets of probabilities !
This may seem even more implausible : when one could invent an unbounded number of trial sets of probabilities , how do we find the likeliest one ?
In general this would indeed be a sticky ( though not necessarily impossible ) problem .
However , for a certain class of functions , called convex functions , this maximisation problem can be solved efficiently .
The likelihood function of the piece probabilities that Alex and Oliver obtained was thoroughly nice and convex , so they were able to use standard methods to find the set of piece probabilities that was likeliest to be correct .
If they had done their calculation with too small a data set , the results would have been fairly random .
How would they know when they had looked at enough positions that the resulting parameters could be trusted ?
They took a simple approach to this : they divided their searches into two sets , and did separate calculations for each .
Only when the two calculations gave similar answers for most or all of the 209 pieces were they satisfied that the sample was big enough .
Putting the data to work
They now had a set of probabilities expressing how useful each piece was in tiling a region the size of 24 pieces .
Unfortunately , using exactly the same values on larger regions was not likely to work , so they needed similar values for tiling larger regions .
( They could not use the same method as for size 24 , since the exhaustive searches would take too long . )
They modified the size - 24 values for tiling progressively larger and larger regions .
For example , for a size - 25 region , they tried to arrange that the parameters gave the same predicted chance of a tiling as placing a piece and calculating the probability using the parameters they already had for size - 24 regions .
" Our procedure for this step was n't very good , " admits Alex .
" That was one of the things we were trying to improve when we were so rudely interrupted by the computer announcing that it had found a solution . "
Having decided on the model parameters for sizes up to 209 , they had a score for every position .
They used these scores to do a version of a standard " breadth - first search " which remembered good positions and investigated them further .
" To start with , you find the most constrained site , and find all the ways to tile it .
You keep the best , say , 1000 positions at time 1 , and throw the rest away .
Then you look at all the children of those positions : that 's to say , in each one , you find the most constrained site and look at all the ways to tile that site .
Of the resulting positions at time 2 , you again keep the best 1000 and throw the rest away . "
As well as calculating the score for the position , they used the length - 11 boundary information that they had calculated for the solver to avoid keeping provably untilable positions , and used a little lookahead .
" This is a really nice search method , " says Alex .
" It 's a standard method in computer science , called beam search , but all the same I was surprised how well it worked for this problem . "
The performance is improved by increasing the number of positions kept ( the " width " ) from 1000 to a much larger number .
" We were using a width of about 10,000 on the run that found the solution , although we have since tried widths up to 1,000,000 and they seem to be better . "
A lucky break
By this point they were confident of finding a solution ; it was just a matter of when .
When the computer announced that it had found one , though , Alex at first suspected a mistake .
" From our estimate of the number of solutions , we did n't think the program had much chance as it stood .
On average , it would have needed to run for years before it found a solution .
Of course , there might be more solutions than we thought , but even so , extensive runs since for longer periods have n't found any more solutions .
It looks as if we were lucky . "
Oliver was away for the weekend when the solution came up : " Alex came round and told me it had found a solution while I was away .
I did n't believe him - I thought he was having me on . "
Without such a piece of luck , how much longer would it have taken them to find a solution ?
Alex says it is difficult to estimate : " The algorithm was constantly improving .
For example , we were working on improving our scoring method for regions larger than 24 pieces .
And the main speed - up would have come from using more computers : we were near the point of enlisting more computers when the solution appeared .
If I had to make a guess , I 'd say it would have been about two months . "
Would this have been in time to claim the prize ?
" Nope .
Guenter Stertenbrink sent in his solution just six weeks after ours . "
Finally , how do the pair intend to use their new - found wealth ?
Oliver will use his share to buy a house , " but I do n't know where or when " .
At present he is a research fellow in Cambridge while his girlfriend lives in Germany , " which is a long commute " .
Alex has no definite plans .
" But I 'm sure the money will come in handy . "
Monckton is already planning a successor puzzle , Eternity 2 , with another headline - grabbing prize for the first solution , but Alex and Oliver have no plans to compete this time .
" A second time round , it would n't be interesting enough to spend another six months on , " Alex says .
That sounds like good news for other would - be solvers .
About the author
Mark Wainwright is an assistant editor of Plus .
This page is devoted to various tips and tricks that help improve the performance of your Python programs .
Wherever the information comes from someone else , I 've tried to identify the source .
Python has changed in some significant ways since I first wrote my " fast python " page in about 1996 , which means that some of the orderings will have changed .
I migrated it to the Python wiki in hopes others will help maintain it .
You should always test these tips with your application and the specific version of the Python implementation you intend to use and not just blindly accept that one method is faster than another .
See the profiling section for more details .
Also new since this was originally written are packages like Cython , Pyrex , Psyco , Weave , Shed Skin and PyInline , which can dramatically improve your application 's performance by making it easier to push performance - critical code into C or machine language .
Other Versions
Overview : Optimize what needs optimizing
You can only know what makes your program slow after first getting the program to give correct results , then running it to see if the correct program is slow .
When found to be slow , profiling can show what parts of the program are consuming most of the time .
A comprehensive but quick - to - run test suite can then ensure that future optimizations do n't change the correctness of your program .
In short :
Get it right .
Test it 's right .
Profile if slow .
Optimise .
Repeat from 2 .
Certain optimizations amount to good programming style and so should be learned as you learn the language .
An example would be moving the calculation of values that do n't change within a loop , outside of the loop .
Choose the Right Data Structure
TBD .
Sorting
Sorting lists of basic Python objects is generally pretty efficient .
The sort method for lists takes an optional comparison function as an argument that can be used to change the sorting behavior .
This is quite convenient , though it can significantly slow down your sorts , as the comparison function will be called many times .
In Python 2.4 , you should use the key argument to the built - in sort instead , which should be the fastest way to sort .
Only if you are using older versions of Python ( before 2.4 ) does the following advice from Guido van Rossum apply :
An alternative way to speed up sorts is to construct a list of tuples whose first element is a sort key that will sort properly using the default comparison , and whose second element is the original list element .
This is the so - called Schwartzian Transform , also known as DecorateSortUndecorate ( DSU ) .
Suppose , for example , you have a list of tuples that you want to sort by the n-th field of each tuple .
The following function will do that .
def sortby ( somelist , n ) : nlist = [ ( x[n ] , x ) for x in somelist ] nlist. sort ( ) return [ val for ( key , val ) in nlist ]
Matching the behavior of the current list sort method ( sorting in place ) is easily achieved as well :
def sortby_inplace ( somelist , n ) : somelist [ : ] = [ ( x[n ] , x ) for x in somelist ] somelist. sort ( ) somelist [ :] = [ val for ( key , val ) in somelist ] return
Here 's an example use :
>>> somelist = [ ( 1 , 2 , ' def ' ) , ( 2 , - 4 , ' ghi ' ) , ( 3 , 6 , ' abc ' ) ] >>> somelist.sort ( ) >>> somelist [ ( 1 , 2 , ' def ' ) , ( 2 , - 4 , ' ghi ' ) , ( 3 , 6 , ' abc ' ) ] >>> nlist = sortby ( somelist , 2 ) >>> sortby_inplace( somelist , 2 ) >>> nlist == somelist True >>> nlist = sortby ( somelist , 1 ) >>> sortby_inplace(somelist , 1 ) >>> nlist == somelist True
From Tim Delaney
From Python 2.3 sort is guaranteed to be stable .
( to be precise , it 's stable in CPython 2.3 , and guaranteed to be stable in Python 2.4 )
Python 2.4 adds an optional key parameter which makes the transform a lot easier to use :
# E.g. n = 1 n = 1 import operator nlist.sort( key=operator.itemgetter(n ) ) # use sorted ( ) if you do n't want to sort in - place : # sortedlist = sorted ( nlist , key=operator.itemgetter (n ) )
Note that the original item is never used for sorting , only the returned key - this is equivalent to doing :
# E.g. n = 1 n = 1 nlist = [ ( x[n ] , i , x ) for ( i , x ) in enumerate ( nlist ) ] nlist.sort ( ) nlist = [ val for ( key , index , val ) in nlist ]
String Concatenation
The accuracy of this section is disputed with respect to later versions of Python .
In CPython 2.5 , string concatenation is fairly fast , although this may not apply likewise to other Python implementations .
See ConcatenationTestCode for a discussion .
Strings in Python are immutable .
This fact frequently sneaks up and bites novice Python programmers on the rump .
Immutability confers some advantages and disadvantages .
In the plus column , strings can be used as keys in dictionaries and individual copies can be shared among multiple variable bindings .
( Python automatically shares one - and two - character strings . )
In the minus column , you can't say something like , " change all the 'a 's to ' b 's " in any given string .
Instead , you have to create a new string with the desired properties .
This continual copying can lead to significant inefficiencies in Python programs .
Avoid this :
s = " " for substring in list : s += substring
Use s = " " . join ( list ) instead .
The former is a very common and catastrophic mistake when building large strings .
Similarly , if you are generating bits of a string sequentially instead of :
s = " " for x in list : s += some_function ( x )
use
slist = [ some_function ( elt ) for elt in somelist ] s = " " .join ( slist )
Avoid :
out = " < html > " + head + prologue + query + tail + " < /html > "
Instead , use
out = " < html > %s%s%s%s</html > " % ( head , prologue , query , tail )
Even better , for readability ( this has nothing to do with efficiency other than yours as a programmer ) , use dictionary substitution :
out = " < html > % ( head ) s % ( prologue ) s %( query ) s % ( tail ) s</html > " % locals ( )
This last two are going to be much faster , especially when piled up over many CGI script executions , and easier to modify to boot .
In addition , the slow way of doing things got slower in Python 2.0 with the addition of rich comparisons to the language .
It now takes the Python virtual machine a lot longer to figure out how to concatenate two strings .
( Do n't forget that Python does all method lookup at runtime . )
Loops
Python supports a couple of looping constructs .
The for statement is most commonly used .
It loops over the elements of a sequence , assigning each to the loop variable .
If the body of your loop is simple , the interpreter overhead of the for loop itself can be a substantial amount of the overhead .
This is where the map function is handy .
You can think of map as a for moved into C code .
The only restriction is that the " loop body " of map must be a function call .
Besides the syntactic benefit of list comprehensions , they are often as fast or faster than equivalent use of map .
Here 's a straightforward example .
Instead of looping over a list of words and converting them to upper case :
newlist = [ ] for word in oldlist : newlist.append(word.upper ( ) )
you can use map to push the loop from the interpreter into compiled C code :
newlist = map ( str.upper , oldlist )
List comprehensions were added to Python in version 2.0 as well .
They provide a syntactically more compact and more efficient way of writing the above for loop :
newlist = [ s.upper ( ) for s in oldlist ]
Generator expressions were added to Python in version 2.4 .
They function more - or - less like list comprehensions or map but avoid the overhead of generating the entire list at once .
Instead , they return a generator object which can be iterated over bit - by - bit :
iterator = ( s.upper ( ) for s in oldlist )
Which method is appropriate will depend on what version of Python you 're using and the characteristics of the data you are manipulating .
Guido van Rossum wrote a much more detailed ( and succinct ) examination of loop optimization that is definitely worth reading .
Avoiding dots ...
Suppose you can't use map or a list comprehension ?
You may be stuck with the for loop .
The for loop example has another inefficiency .
Both newlist . append and word .upper are function references that are reevaluated each time through the loop .
The original loop can be replaced with :
upper = str.upper newlist = [ ] append = newlist .
append for word in oldlist : append ( upper ( word ) )
This technique should be used with caution .
It gets more difficult to maintain if the loop is large .
Unless you are intimately familiar with that piece of code you will find yourself scanning up to check the definitions of append and upper .
Local Variables
The final speedup available to us for the non- map version of the for loop is to use local variables wherever possible .
If the above loop is cast as a function , append and upper become local variables .
Python accesses local variables much more efficiently than global variables .
def func ( ) : upper = str.upper newlist = [ ] append = newlist .
append for word in oldlist : append ( upper ( word ) ) return newlist
At the time I originally wrote this I was using a 100MHz Pentium running BSDI .
I got the following times for converting the list of words in /usr / share / dict / words ( 38,470 words at that time ) to upper case :
Version Time ( seconds ) Basic loop 3.47 Eliminate dots 2.45 Local variable & no dots 1.79 Using map function 0.54
Initializing Dictionary Elements
Suppose you are building a dictionary of word frequencies and you 've already broken your text up into a list of words .
You might execute something like :
wdict = {} for word in words : if word not in wdict : wdict [ word ] = 0 wdict [ word ] += 1
Except for the first time , each time a word is seen the if statement 's test fails .
If you are counting a large number of words , many will probably occur multiple times .
In a situation where the initialization of a value is only going to occur once and the augmentation of that value will occur many times it is cheaper to use a try statement :
wdict = {} for word in words : try : wdict [ word ] += 1 except KeyError : wdict [ word ] = 1
It 's important to catch the expected KeyError exception , and not have a default except clause to avoid trying to recover from an exception you really can't handle by the statement ( s ) in the try clause .
A third alternative became available with the release of Python 2.x. Dictionaries now have a get ( ) method which will return a default value if the desired key is n't found in the dictionary .
This simplifies the loop :
wdict = {} get = wdict .
get for word in words : wdict [ word ] = get ( word , 0 ) + 1
When I originally wrote this section , there were clear situations where one of the first two approaches was faster .
It seems that all three approaches now exhibit similar performance ( within about 10 % of each other ) , more or less independent of the properties of the list of words .
Also , if the value stored in the dictionary is an object or a ( mutable ) list , you could also use the dict .
setdefault method , e.g .
4 wdict.setdefault(key , [ ] ).append( new_element )
You might think that this avoids having to look up the key twice .
It actually does n't ( even in python 3.0 ) , but at least the double lookup is performed in C .
Another option is to use the defaultdict class :
from collections import defaultdict wdict = defaultdict ( int ) for word in words : wdict [ word ] += 1
Import Statement Overhead
import statements can be executed just about anywhere .
It 's often useful to place them inside functions to restrict their visibility and / or reduce initial startup time .
Although Python 's interpreter is optimized to not import the same module multiple times , repeatedly executing an import statement can seriously affect performance in some circumstances .
Consider the following two snippets of code ( originally from Greg McFarlane , I believe - I found it unattributed in a comp.lang .
python python-list@python.org posting and later attributed to him in another source ) :
def doit1 ( ) : import string #### ## import statement inside function string .
lower ( ' Python ' ) for num in range ( 100000 ) : doit1 ( )
or :
import string ###### import statement outside function def doit2 ( ) : string.lower ( ' Python ' ) for num in range ( 100000 ) : doit2 ( )
doit2 will run much faster than doit1 , even though the reference to the string module is global in doit2 .
Here 's a Python interpreter session run using Python 2.3 and the new timeit module , which shows how much faster the second is than the first :
>>> def doit1 ( ) : ... import string ... string.lower ( ' Python ' ) ... >>> import string >>> def doit2 ( ) : ... string.lower ( ' Python ' ) ... >>> import timeit >>> t = timeit . Timer ( setup= ' from __main__ import doit1 ' , stmt='doit1 ( ) ' ) >>> t.timeit( ) 11.479144930839539 >>> t = timeit . Timer ( setup= ' from __main__ import doit2 ' , stmt='doit2 ( ) ' ) >>> t.timeit( ) 4.6661689281463623
String methods were introduced to the language in Python 2.0 .
These provide a version that avoids the import completely and runs even faster :
def doit3 ( ) : ' Python'.lower ( ) for num in range ( 100000 ) : doit3 ( )
Here 's the proof from timeit :
>>> def doit3 ( ) : ... ' Python'.lower ( ) ... >>> t = timeit . Timer ( setup= ' from __main__ import doit3 ' , stmt=' doit3 ( ) ' ) >>> t.timeit( ) 2.5606080293655396
The above example is obviously a bit contrived , but the general principle holds .
Note that putting an import in a function can speed up the initial loading of the module , especially if the imported module might not be required .
This is generally a case of a " lazy " optimization -- avoiding work ( importing a module , which can be very expensive ) until you are sure it is required .
This is only a significant saving in cases where the module would n't have been imported at all ( from any module ) -- if the module is already loaded ( as will be the case for many standard modules , like string or re ) , avoiding an import does n't save you anything .
To see what modules are loaded in the system look in sys.modules .
A good way to do lazy imports is :
email = None def parse_email ( ) : global email if email is None : import email ...
This way the email module will only be imported once , on the first invocation of parse_email ( ) .
Data Aggregation
Function call overhead in Python is relatively high , especially compared with the execution speed of a builtin function .
This strongly suggests that where appropriate , functions should handle data aggregates .
Here 's a contrived example written in Python .
import time x = 0 def doit1 ( i ) : global x x = x + i list = range ( 100000 ) t = time .
time ( ) for i in list : doit1 ( i ) print " %.3f " % ( time.time ( ) - t )
vs .
import time x = 0 def doit2 ( list ) : global x for i in list : x = x + i list = range ( 100000 ) t = time .
time ( ) doit2 ( list ) print " %.3f " % ( time.time ( ) - t )
Here 's the proof in the pudding using an interactive session :
>>> t = time . time ( ) >>> for i in list : ... doit1 ( i ) ... >>> print " %.3f " % ( time.time ( ) - t ) 0.758 >>> t = time . time ( ) >>> doit2 ( list ) >>> print " %.3f " % ( time.time ( ) - t ) 0.204
Even written in Python , the second example runs about four times faster than the first .
Had doit been written in C the difference would likely have been even greater ( exchanging a Python for loop for a C for loop as well as removing most of the function calls ) .
Doing Stuff Less Often
The Python interpreter performs some periodic checks .
In particular , it decides whether or not to let another thread run and whether or not to run a pending call ( typically a call established by a signal handler ) .
Most of the time there 's nothing to do , so performing these checks each pass around the interpreter loop can slow things down .
There is a function in the sys module , setcheckinterval , which you can call to tell the interpreter how often to perform these periodic checks .
Prior to the release of Python 2.3 it defaulted to 10 .
In 2.3 this was raised to 100 .
If you are n't running with threads and you do n't expect to be catching many signals , setting this to a larger value can improve the interpreter 's performance , sometimes substantially .
Python is not C
It is also not Perl , Java , C++ or Haskell .
Be careful when transferring your knowledge of how other languages perform to Python .
A simple example serves to demonstrate :
% timeit.py -s 'x = 47 ' 'x * 2 ' loops , best of 3 : 0.574 usec per loop % timeit.py -s 'x = 47 ' 'x << 1 ' loops , best of 3 : 0.524 usec per loop % timeit. py -s 'x = 47 ' 'x + x ' loops , best of 3 : 0.382 usec per loop
Now consider the similar C programs ( only the add version is shown ) :
#include < stdio.h > int main ( int argc , char * argv [ ] ) { int i = 47 ; int loop ; for ( loop=0 ; loop < 500000000 ; loop ++ ) i + i ; return 0 ; }
and the execution times :
% for prog in mult add shift ; do < for i in 1 2 3 ; do < echo -n " $ prog : " < /usr / bin / time ./$ prog < done < echo < done mult : 6.12 real 5.64 user 0.01 sys mult : 6.08 real 5.50 user 0.04 sys mult : 6.10 real 5.45 user 0.03 sys add : 6.07 real 5.54 user 0.00 sys add : 6.08 real 5.60 user 0.00 sys add : 6.07 real 5.58 user 0.01 sys shift : 6.09 real 5.55 user 0.01 sys shift : 6.10 real 5.62 user 0.01 sys shift : 6.06 real 5.50 user 0.01 sys
Note that there is a significant advantage in Python to adding a number to itself instead of multiplying it by two or shifting it left by one bit .
In C on all modern computer architectures , each of the three arithmetic operations are translated into a single machine instruction which executes in one cycle , so it does n't really matter which one you choose .
A common " test " new Python programmers often perform is to translate the common Perl idiom
while ( <>) { print ; }
into Python code that looks something like
import fileinput for line in fileinput.input ( ) : print line ,
and use it to conclude that Python must be much slower than Perl .
As others have pointed out numerous times , Python is slower than Perl for some things and faster for others .
Relative performance also often depends on your experience with the two languages .
Use xrange instead of range
This section no longer applies if you 're using Python 3 , where range now provides an iterator over ranges of arbitrary size , and where xrange no longer exists .
Python has two ways to get a range of numbers : range and xrange .
Most people know about range , because of its obvious name .
xrange , being way down near the end of the alphabet , is much less well - known .
xrange is a generator object , basically equivalent to the following Python 2.3 code :
def xrange ( start , stop=None , step=1 ) : if stop is None : stop = start start = 0 else : stop = int ( stop ) start = int( start ) step = int ( step ) while start < stop : yield start start += step
Except that it is implemented in pure C .
xrange does have limitations .
Specifically , it only works with int s ; you cannot use long s or float s ( they will be converted to int s , as shown above ) .
It does , however , save gobs of memory , and unless you store the yielded objects somewhere , only one yielded object will exist at a time .
The difference is thus :
When you call range , it creates a list containing so many number ( int , long , or float ) objects .
All of those objects are created at once , and all of them exist at the same time .
This can be a pain when the number of numbers is large .
xrange , on the other hand , creates no numbers immediately - only the range object itself .
Number objects are created only when you pull on the generator , e.g. by looping through it .
For example :
xrange(sys.maxint ) #
No loop , and no call to .next , so no numbers are instantiated
And for this reason , the code runs instantly .
If you substitute range there , Python will lock up ; it will be too busy allocating sys. maxint number objects ( about 2.1 billion on the typical PC ) to do anything else .
Eventually , it will run out of memory and exit .
In Python versions before 2.2 , xrange objects also supported optimizations such as fast membership testing ( i in xrange ( n ) ) .
These features were removed in 2.2 due to lack of use .
Re-map Functions at runtime
Say you have a function
class Test : def check ( self , a , b , c ) : if a == 0 : self.str = b*100 else : self.str = c *100 a = Test ( ) def example ( ) : for i in xrange ( 0,100000 ) : a.check ( i , " b " , " c " ) import profile profile.run ( " example ( ) " )
And suppose this function gets called from somewhere else many times .
Well , your check will have an if statement slowing you down all the time except the first time , so you can do this :
class Test2 : def check ( self , a , b , c ) : self.str = b*100 self.
check = self.check_post def check_post ( self , a , b , c ) : self.str = c *100 a = Test2( ) def example2 ( ) : for i in xrange ( 0,100000 ) : a.check ( i , " b " , " c " ) import profile profile.run ( " example2 ( ) " )
Well , this example is fairly inadequate , but if the ' if ' statement is a pretty complicated expression ( or something with lots of dots ) , you can save yourself evaluating it , if you know it will only be true the first time .
Profiling Code
The first step to speeding up your program is learning where the bottlenecks lie .
It hardly makes sense to optimize code that is never executed or that already runs fast .
I use two modules to help locate the hotspots in my code , profile and trace .
In later examples I also use the timeit module , which is new in Python 2.3 .
The advice in this section is out of date .
See the separate profiling document for alternatives to the approaches given below .
Profiling
There are a number of profiling modules included in the Python distribution .
Using one of these to profile the execution of a set of functions is quite easy .
Suppose your main function is called main , takes no arguments and you want to execute it under the control of the profile module .
In its simplest form you just execute
import profile profile.run ( ' main ( ) ' )
When main ( ) returns , the profile module will print a table of function calls and execution times .
The output can be tweaked using the Stats class included with the module .
From Python 2.4 , profile has permitted the time consumed by Python builtins and functions in extension modules to be profiled as well .
A slightly longer description of profiling using the profile and pstats modules can be found here ( archived version ) :
http://web.archive.org/web/20060506162444/http://wingware.com/doc/howtos/performance-profiling-python-code
The cProfile Module
The `cProfile` module is an alternative to profile written in C that generally runs much faster .
It uses the same interface .
Trace Module
The trace module is a spin - off of the profile module I wrote originally to perform some crude statement level test coverage .
It 's been heavily modified by several other people since I released my initial crude effort .
As of Python 2.0 you should find trace .py in the Tools / scripts directory of the Python distribution .
Starting with Python 2.3 it's in the standard library ( the Lib directory ) .
You can copy it to your local bin directory and set the execute permission , then execute it directly .
It 's easy to run from the command line to trace execution of whole scripts :
% trace .py -t spam .py eggs
In Python 2.4 it 's even easier to run .
Just execute python -m trace .
There 's no separate documentation , but you can execute " pydoc trace " to view the inline documentation .
Visualizing Profiling Results
RunSnakeRun is a GUI tool by Mike Fletcher which visualizes profile dumps from cProfile using square maps .
Function / method calls may be sorted according to various criteria , and source code may be displayed alongside the visualization and call statistics .
Currently ( April 2016 ) RunSnakeRun supports Python 2.x only - thus it cannot load profile data generated by Python 3 programs .
An example usage :
runsnake some_profile_dump.prof
Gprof2
Dot is a python based tool that can transform profiling results output into a graph that can be converted into a PNG image or SVG .
A typical profiling session with python 2.5 looks like this ( on older platforms you will need to use actual script instead of the - m option ) :
python -m cProfile -o stat.prof MYSCRIPY .PY [ ARGS ...] python -m pbp.scripts.gprof2dot -f pstats -o stat . dot stat.prof dot - ostat.png - Tpng stat.dot
PyCallGraph pycallgraph is a Python module that creates call graphs for Python programs .
It generates a PNG file showing an modules 's function calls and their link to other function calls , the amount of times a function was called and the time spent in that function .
Typical usage :
pycallgraph scriptname.py
PyProf2CallTree is a script to help visualize profiling data collected with the cProfile python module with the kcachegrind graphical calltree analyser .
Typical usage :
python -m cProfile -o stat.prof MYSCRIPY .PY [ ARGS ...] python pyprof2calltree.py - i stat.prof -k
ProfileEye is a browser - based frontend to gprof2dot using d3.js for decluttering visual information .
Typical usage :
python -m profile -o output . pstats path / to / your / script arg1 arg2 gprof2dot -f pstats output.pstats | profile_eye --file-colon_line-colon-label - format > profile_output.html
SnakeViz is a browser - based visualizer for profile data .
Typical usage :
python -m profile -o output . pstats path / to / your / script arg1 arg2 snakeviz output.
pstats
CategoryDocumentation
Our mission
We bring the best of Google to help solve some of humanity ’s biggest challenges — combining funding , innovation , and technical expertise to support underserved communities and provide opportunity for everyone .
When I am talking on forums or to some of my students , from time to time I realize that I have gotten so used to expecting a certain vocabulary and certain concepts to be known to others that it is n’t even funny .
In German we call this being betriebsblind , which basically means nothing more than expecting everyone to know what you know ( at least to a certain extent ) , because the knowledge is so essential for what you do every day .
The concept of Thread - Safety definitely belongs into this category for me , as I usually have to force myself to explain it and its implications to my students new to parallel programming , because it seems so trivial .
Unfortunately , it is not .
Therefore , I will spend the rest of this article trying to explain what Thread - Safety means , why it is important and also highlight some ways to achieve it without throwing your performance out of the window .
I would also like to issue the usual warning to my more advanced readers : the beginning of this article is most definitely not for you , the end may be worth checking out as well :P .
What is Thread - Safety ?
One of the defining properties of threads is , that multiple threads have access to the same address space .
Therefore , they are able to write to the exact same memory location at the same time .
I have explained why this is a problem in one of my earlier articles about mutual exclusion , therefore I can use the short version here :
Writing to the same memory location from multiple threads at the same time without any form of protection is like playing Russian Roulette : you may survive at first , but sooner or later you run out of luck and the results are disastrous .
You may quote me on that 8 ) .
For a more thorough explanation , please read the former article .
Now that we have this part established , the rest is easy :
Thread - safe code is basically any code that can be called from multiple threads concurrently without breaking .
Or phrased differently : if your code does not access the same memory location from multiple threads without protection , it is most likely thread - safe .
We can have thread - safe functions , thread - safe objects or thread - safe programs , although the usage of the term is most common when talking about functions .
So much for the easy part .
The difficult part is actually spotting these accesses to the same memory location in your code and fixing them without loosing too much performance .
But contrary to what some message - passing fans may want you to believe , this is not impossible .
My students usually get it right after we have shown it to them in their programs once or twice .
And with experience you will notice the little voice in the back of your head that warns you about it every time you want to write to a shared variable or call a function that may not be thread - safe .
And if you do n’t want to bet your career on little voices ( probably a smart move on your part ) , let ’s not forget about the high quality tools that are available to help you with this as well , e.g. the Intel Thread - Checker or the Sun Data Race Detection Tool .
I have had very good experiences with the former tool and as soon as I find some time I will also try out the second one ( especially since it is free – on the other hand the Intel tool is very reasonably priced as well , especially for universities ) .
How - to Achieve Thread - Safety
OK , so there are ways to reliably find the dangerous spots in your code .
What do we do , once we have found them ?
Lets say we have isolated a function that is not thread - safe because it was written at a time when parallelism was not an issue .
We have multiple ways to deal with it , some of which are highlighted in the following list :
Put a big , fat lock right at the start of the function and unlock it at the end of the function .
This is the easy solution , because it is doable in every threading system I know and it always works .
Unfortunately , it is also the one which may cost you the most performance , since only one thread can carry out the function at the same time now .
On the other hand , I have written the magic word may in the last sentence not without a reason : if the function is only rarely called , that big , fat lock may not be a problem for performance at all .
Your profiler will tell you , especially if it knows about parallelism .
Put one or many smaller locks in the function around the data that actually need protection .
This finer grained approach may work better than the one sketched above , especially when there are only a few places in the function that actually need protection and there are larger areas that are thread - safe and can be carried out concurrently .
It may also turn out to be a bad idea ( TM ) , because setting and unsetting the locks also takes some time , even when there is no contention .
As you can see by my repeated usage of the fine word may , there is no way to know which technique is better without taking a look at the actual code , all I am telling you here are just ideas which may or may not work .
Protect the data instead of the code .
No , I am not senile ( yet ) , this is actually a different advice than the one I just gave you .
Instead of protecting a small region of code with a lock where critical data is accessed , associate a lock with the critical data in question .
This may allow you to use two different locks for the same region of code but when working on different data , allowing concurrent execution by multiple threads .
An example :
When you have written a function that multiplies each element of an array by two , you can associate a different lock to different arrays , allowing two threads to carry out the function concurrently when working on two different arrays .
Use atomic operations to change the data that need protection .
The availability of these operations varies from system to system , e.g. POSIX Threads does not have them at all , OpenMP gives you the possibility to mark certain simple operations on plain old data - types as atomic via the atomic - directive and in Java you can declare certain variables as atomic and all operations involving that variable will be carried out atomically .
Check the documentation of your parallel programming system of choice and if you have atomic operations , it is most likely a good idea to use them ( gosh , I cannot believe I wrote that whole bullet point without using may even once ! :) )
Change your functions to only work on thread - private data .
This may sound harder than it actually is , but many times shared data are not really necessary .
Even if they may seem necessary , there is little trick that can change this quite often : delegate the shared data to the caller of the function , which passes it in as a parameter ( most likely a pointer or a reference in C++ ) and document that the caller is responsible for protecting that data before the function is called .
This may sound not like a solution , but rather like a delegation of the whole problem .
But considering that the caller may have more knowledge about the present state of the program and its data , it makes a whole lot of sense .
As an example , the caller may know , that no other thread presently calls that function with the same data and therefore no protection from concurrent access is necessary .
Of course , the moment you employ this last technique , the function is not thread - safe anymore , so make really sure to document this properly !
It also changes the interface of the function , which may not be doable for your particular case .
Further Reading
If you want to know more about thread - safety and related topics , I wholeheartedly recommend what I like to call the POSIX Threads Bible by David Butenhof – Programming with POSIX Threads .
Or if you are more into Java , I hear Java Concurrency in Practice is a very good read .
I have not really found a great book on Thread - Programming with C# – the best one appears to be Programming C# , although it contains only a single chapter on threaded programming .
If you find a better one , please let me know .
All of them contain useful information on Thread - Safety as well .
Summary
This closes my little trip into the world of Thread - Safety .
I hope to have brought across , that Thread - Safety is a challenging problem , but can be managed with a little experience and the right tools .
I also tried to show you some techniques , that may ( that was the last time I used that verb for today , I promise : P ) be useful to achieve Thread - Safety for your code .
The name - patron of my old high - school Wilhelm Ostwald had a famous maxim , which can be ( roughly ) translated into English like this :
Good theory must soon become practical .
That is how its value can be seen .
Following this spirit , I am planning on writing a followup article on this topic , explaining how the techniques introduced here may ( guess I lied : twisted : ) be used to make the rand ( ) - function thread - safe ( and explain in the process , why its performance often sucks in multi- threaded code ) .
P.S. : This essay was sponsored by the word may , thanks for listening ! 😉
They mugged Jack Murtha , and the voters , Thursday morning .
As the House Democratic caucus voted to install Rep. Steny Hoyer in the number - two leadership spot , over at the liberal Huffington Post they were running a large picture of Speaker Nancy and Hoyer making nice for the cameras , in a let ’s - join - hands photo - op veritably oozing with phoniness .
The headline cited Pelosi ’s message : " We Made History Now Let ’s Make Progress for the American People . "
It ’s like reading the front page of Pravda , circa 1936 : " Ten - Year Plan Over - Fulfilled ! " over a photo of the Soviet hierarchy posed against the backdrop of the Kremlin .
Back in the half - forgotten days of the Cold War era , Kremlinologists  remember them ?
 used to carefully monitor the subtleties of these joint appearances : where one official stood , and in relation to whom , supposedly revealed the hidden struggle for power among the inner leadership .
Published photos in particular signaled the rise and fall of political fortunes : which is why the Soviets went to the extraordinary lengths of altering photographic evidence that gave comfort to their ideological enemies , literally airbrushing Leon Trotsky and other prominent heretics out of existence .
In this spirit , then , examine the CNN photo of Nancy ’s coronation and notice its composition : Rahm Emanuel to the left of her , Hoyer to her right  a veritable Praetorian Guard that is little short of menacing .
The former torpedoed antiwar candidates in the primary and snubbed them in the general election , while the latter defeated antiwar leader Jack Murtha  frowning in the background  for majority leader on the strength of a smear campaign of extraordinary proportions .
Are the men surrounding Madam Speaker an honor guard , or a police escort ?
Who ’s in charge here ?
Arrayed against Murtha was a united front of the Democratic Party establishment , from a George Soros - backed " liberal " consumer - complainer group to an anonymously run YouDontKnowJack.org , featuring replays of the infamous Abscam tapes .
In the video , Murtha rejects an offer of a bribe while FBI agents disguised as wealthy Arabs  the Borat - style mustaches are a riot  try to lure him into a compromising position , without much success .
Murtha was completely exonerated in a subsequent investigation  but that did n’t stop the smear brigade from surfacing this age - old sludge .
To hear some Democrats , adherents of an ideology that revolves around the pork barrel , denounce Murtha as " corrupt " is the ultimate in unintentional humor .
Aside from the hypocrisy , however , there is the rather more interesting aspect of this contest as a clash of political cultures .
The gruff , regular - guy congressman from Pennsylvania , a longtime friend of the military ( and especially veterans ) , is a typical bring - home - the - bacon congressman of the Democratic breed ; not everyone can be Ron Paul .
Hammered for calling the " anti-corruption " rules favored by Pelosi " crap , " Murtha might have answered that Hoyer calls for a relaxation of the rules involving foreign junkets sponsored by " nonprofit " " educational " organizations  i.e. , foreign lobbyists .
Go here for a fascinating breakdown of their respective campaign contributors , which seems to debunk the popular idea that the War Party is simply the voice of the armaments industry .
And I would note an intriguing detail : Hoyer has an unusually high total contribution coming from " ideological " and " single - issue " groups .
Unfortunately , there was n’t time to debunk the smears and engage the Hoyerites in a full - fledged debate : the knifing of Murtha was done quickly , in the dark  a secret ballot of the Democratic caucus , and then that phony photo - op .
As their mandate lies bleeding on the floor
The Great Realignment of 2006 lasted a little over a week before it turned into the Great Sellout .
It is a perfect illustration of how the War Party controls the leadership of both major parties and maintains its grip on the levers of power .
Given near - monopoly status on account of repressive ballot access laws in most states , the parties can thwart the popular will .
Given a mandate for peace , the Democratic Party leadership has effectively rejected it and reversed the election results .
Americans voted for peace , and they ’re going to get more war .
That ’s how our Bizarro democracy works , and all I can say is God bless Bizarro America , land of the duped and home of the cowed .
Back when the Democrats were AWOL on the Iraq issue , Murtha changed the debate over the war by coming out for a rapid American withdrawal .
His stance caused a sensation : here was a conservative Democrat , a veteran Marine , whose campaign chest is heavy with cash from the defense sector , surely no Dennis Kucinich  and he wants us out now !
Close to the military establishment , Murtha is seen to reflect opinion in the senior ranks that this war is unwinnable and likely to spread , stretching the fighting capacity of the world ’s last superpower to the breaking point .
His high - profile stance represented a threat and had to be smashed  as it was .
It is instructive to observe how readily supposedly " liberal " groups stabbed the antiwar movement in the back by fueling the " Murtha = corruption " meme : they caviled that the conservative Catholic congressman is anti-abortion and not exactly a San Francisco Democrat , either in style or substance .
With his blue - collar demeanor , Murtha is the exact opposite of the white - wine - and - brie crowd  i.e. , big business and the " labor " aristocracy  that mobilized around Hoyer .
As support for a quick exit from Iraq gathers strength among the public , the Washington elite draws closer together in defense of a failed policy , and the differences between the Democrats and Republicans begin to meet and merge .
In the face of a popular rebellion against the madness of our foreign policy , both wings of the War Party present a united front against the electoral onslaught .
Faced with the " choice " of John McCain versus Hillary Clinton in 2008 , both pro-war and avidly interventionist , where does the antiwar majority go ?
The choice between Hoyer and Murtha was clear .
While the loser is a hero to the antiwar movement , the victor was characterized by the Washington Monthly as follows :
" Hoyer has always advocated a more hawkish approach to national security than many Democrats .
In 1985 , he broke with his party to support funding for Reagan ’s MX missile , and in the 1990s pressured President Clinton to lift the arms embargo against Bosnian Muslims , and to intervene more aggressively in the Balkans .
Unlike Pelosi , he voted to authorize Bush to invade Iraq .
Then , last November , after Murtha  a longtime Pelosi ally who had run her whip campaign in 2000  called for an immediate withdrawal , Hoyer and Rep. Rahm Emanuel ( D - Ill. ) urged Pelosi not to join Murtha , arguing that doing so would hurt Democrats politically . "
I warned that this sellout would earn something of a record for swiftness , and I deeply regret being right .
Believe me , nothing would be better if we could hand the job over to the newly installed Democratic Congress and relax as they extricate us from the Iraqi quagmire .
Yet that clearly is not happening : instead , the Democrats , content with purely symbolic measures , are abstaining when it comes to Iraq , neither challenging the present policy of " stay the course " nor erecting any roadblocks to possible future escalation of the war .
Now we hear talk of a " final push , " a sudden increase in the number of troops to leave some sort of semi-permanent imprint on the chaos .
How many more have to die in order to save the face of the Washington know - it - alls ?
This once again underlines the basic principle at the heart of any peace movement worthy of the name : put not your trust in politicians .
The people voted to get us out of Iraq , and instead the Democrats will stand idly by  at best  while we get in deeper .
They can concentrate on extending the welfare state and wait for the Baker Commission to somehow magically come up with a comfortably " bipartisan " solution .
It is n’t going to happen .
The sellout continues apace , and you ca n’t say you were n’t warned .
Antiwar.com has n’t hesitated to say what is n’t popular and speak truth to power , especially when it comes to the complicity of both parties in taking us down the road to war .
We cannot rely on anything but a mass movement from below to end the war , and the mugging of Jack Murtha confirms it .
That ’s why the continuity of Antiwar.com is so important  and why you should join with hundreds of others in ensuring that we are able to carry on our work .
The response to our fundraising effort this week has been frankly atrocious , and I do n’t think I ’m amiss in thinking that this has much to do with the Democratic victory .
Many of our readers and supporters apparently believed this would inaugurate a new era of peace , the neocons would be driven out of the temple of democracy , and the troops would come home shortly afterward .
Now that they are beginning to realize this is nothing more than a pipe dream , they have a chance to redeem themselves .
We frankly cannot continue to operate Antiwar.com with the present level of contributions .
Unless you , our readers and supporters , come through with a massive show of support , we ’ll be forced to make huge cutbacks : more than half the staff will have to go , and we ’ll be left with a skeleton budget and the looming possibility of imminent closure .
It is n’t a pretty picture .
The complete defeat of the antiwar Democrats at the hands of the War Party contains a lesson that needs to be absorbed , but surely it implies that bedrock institutions like Antiwar.com are essential to the cause of peace .
We do n’t have any illusions of a quick victory in the battle to change American foreign policy .
We have been fighting the War Party since 1995 , so we have no inflated expectations in that regard .
It is a long , hard slog , and that ’s what this fundraising campaign has turned into : we ’re fighting the illusion that we can let the politicians take care of our problems all on their own , without any impetus or pressure from below .
Now , perhaps , that illusion has been shattered .
The fate of Jack Murtha and the public pronouncements of Democratic party leaders bode ill for congressional action to end the war .
You ’ll be needing Antiwar.com around for quite a bit longer , but we ca n’t do it without your contribution .
Help save Antiwar.com  contribute today .
The Constitution is the supreme law of the land , and any statutes inconsistent with the Constitution must yield .
The basic principle of our system of government means that no President , merely by assenting to a piece of legislation , can diminish the scope of the President 's constitutional power .
. . .
Just as one President may not , through signing legislation , eliminate the Executive Branch 's inherent constitutional powers , Congress may not renounce inherent presidential authority .
The Constitution grants the President the inherent power to protect the nation from foreign attack , and Congress may not impede the President 's ability to perform his constitutional duty . “ ( citations omitted ) .
When President Bush signed the reauthorization of the USA Patriot
Act this month , he included an addendum saying that he did not feel obliged to obey requirements that he inform Congress about how the FBI was using the act 's expanded police powers .
In order to execute the laws and defend the Constitution , the President must be able to interpret them .
The interpretation of law , both statutory and constitutional , is therefore an indispensable and well established government function .
. . .
The President 's power to interpret the law is particularly important when he is engaged in a task -- such as the direction of the operations of an armed conflict -- that falls within the special and unique competence of the Executive Branch .
From these facts , by which Montesquieu was guided , it may clearly be inferred that , in saying " There can be no liberty where the legislative and executive powers are united in the same person , or body of magistrates , " or , " if the power of judging be not separated from the legislative and executive powers , " he did not mean that these departments ought to have no partial agency in , or no control over , the acts of each other .
His meaning , as his own words import , and still more conclusively as illustrated by the example in his eye , can amount to no more than this , that where the whole power of one department is exercised by the same hands which possess the whole power of another department , the fundamental principles of a free constitution are subverted .
This would have been the case in the constitution examined by him , if the king , who is the sole executive magistrate , had possessed also the complete legislative power , or the supreme administration of justice ; or if the entire legislative body had possessed the supreme judiciary , or the supreme executive authority .
The Republicans and Democrats on the House Judiciary Committee submitted detailed questions to the Bush Administration regarding the NSA program , and the DoJ 's responses to both the Democrats ' questions and its responses to the Republicans ' are now available .
There are numerous noteworthy items , but the most significant , by far , is that the DoJ made clear to Congress that even if Congress passes some sort of newly amended FISA of the type which Sen .
DeWine introduced , and even if the President " agrees " to it and signs it into law , the President still has the power to violate that law if he wants to .
Put another way , the Administration is telling the Congress -- again -- that they can go and pass all the laws they want which purport to liberalize or restrict the President 's powers , and it does not matter , because the President has and intends to preserve the power to do whatever he wants regardless of what those laws provide .
Question number ( 5 ) from the Committee Republicans asked " whether President Carter 's signature on FISA in 1978 , together with his signing statement , " meant that the Executive had agreed to be bound by the restrictions placed by FISA on the President 's powers to eavesdrop on Americans .
This is how the DoJ responded , in relevant part : Can that be any clearer for you - Congressmen , Senators , journalists ?
The President is bestowed by the Constitution with the unlimited and un-limitable power to do anything that he believes is necessary to " protect the nation . "
Thus , even if Congress passes laws which seek to limit that power in any way , and even if the President agrees to those restrictions and signs that bill into law , he still retains the power to violate it whenever he wants .
Thus , Sen. DeWine can pass his cute little bill purporting to require oversight , or Sen .
Specter can pass his , or they can do nothing and leave FISA in place .
None of that matters , because no matter what Congress or even the President do with regard to the law , the law does not restrict what the President can do in any way .
They are telling the Congress to its face that all of the grand debates it is having and the negotiations it is conducting are all irrelevant farces , because no matter what happens , the President retains unlimited power and nothing that Congress does can affect that power in any way .
The reality is that the Administration has been making clear for quite some time that they have unlimited power and that nothing -- not even the law -- can restrict it .
But here , they are specifically telling Congress that even if Congress amends FISA and the President agrees to abide by those amendments , they still have the power to break the law whenever they want .
As I have documented more times than I can count , we have a President who has seized unlimited power , including the power to break the law , and the Administration -- somewhat commendably -- is quite candid and straightforward about that fact .
I believe that even people who are aware of these facts have not really ingested or accepted the reality that we have an Administration that has embraced this ideology of lawlessness .
Yesterday , I received numerous e-mails from people asking why I had not written about this report from the Boston Globe , which reported :
The reason I did n't was because , as extraordinary as this signing statement is in one sense , it really reveals nothing new .
We really do have an Administration which believes it has the power to break all laws relating , however broadly , to defending the country .
It has said this repeatedly in numerous contexts and acted on those beliefs by breaking the law -- repeatedly and deliberately .
They are still breaking the law by , for instance , continuing to eavesdrop on Americans without the warrants required by FISA .
This is not theory .
The Administration is not saying these things as a joke .
We really do live in a country where we have a President who has seized the unlimited power to break the law .
That 's not hyperbole in any way .
It is reality .
And the Patriot Act signing statement only re-iterates that fact .
In response to the Republicans ' question ( number 27 ) about whether President is exceeding his power by not just executing the laws but also interpreting them , the DoJ said this :
The " unique competence of the Executive Branch , " to them , encompasses pretty much everything of any real significance , including what can be done to U.S. citizens on U.S. soil .
With regard to all such matters , the President not only executes the law , but interprets it , and Congress is without power to do anything to restrict the power in any way .
Here they are -- saying exactly this , again .
Put another way , the Administration has seized the power of Congress to make the laws , they have seized the power of the judiciary to interpret the laws , and they execute them as well .
They have consolidated within themselves all of the powers of the government , particularly with regard to national security .
This situation is , of course , exactly what Madison warned about in Federalist 47 ; it really is the very opposite of everything our Government is intended to be :
As usual , the most amazing aspect of all of this is not that the Administration is claiming these powers .
It is that even as it claims them as expressly and clearly as can be , the Congress continues to ignore it and pretend that it still retains power to restrict the Administration by the laws it passes .
And the media continues to fail in its duty to inform the country about the powers the Administration has seized , likely because they are so extreme that people still do not really believe that the Administration means what they are saying .
What else do they need to do in order to demonstrate their sincerity ?
DAMASCUS , Syria , Oct. 7 ( Reuters ) 
Swiss researchers have discovered the 100,000 - year - old remains of a previously unknown giant camel species in central Syria .
“ This is a big discovery , a revolution in science , ” said Jean - Marie Le Tensorer , a prehistory professor at the University of Basel .
“ It was not known that the dromedary was present in the Middle East more than 10,000 years ago . ”
He said it was about 12 feet tall , “ as big as a giraffe or an elephant . ”
Professor Tensorer , who has been excavating at the desert site in Kowm since 1999 , said the first large bones were found some years ago but were only confirmed as belonging to a camel after more bones from several parts of the same animal were recently discovered .
“ We found the first traces of a big animal in 2003 , but we were not sure it was a giant camel , ” he said .
GM , DaimlerChrysler , BMW Premiere Unprecedented Hybrid Technology
Technology , News , DaimlerChrysler
on 04/27/2006
Filed under :on
04/27/2006
The state - of - the - art full hybrid system , whose components are being co-developed by General Motors Corp. , DaimlerChrysler and the BMW Group for production beginning next year , represents a major automotive industry milestone due to the unprecedented fully integrated combination of electric motors with a fixed - gear transmission .
As a result of its low - and high - speed electric continuously variable transmission ( ECVT ) modes , the system is commonly referred to as the 2 - mode hybrid .
However , the sophisticated fuel - saving system also incorporates four fixed gear ratios for high efficiency and power - handling capabilities in a broad variety of vehicle applications .
During the two ECVT modes and four fixed gear operations , the hybrid system can use the electric motors for boosting and regenerative braking .
In summary , the four fixed gears overlay two ECVT modes for a total of six operating functions :
- Input - split ECVT mode , or continuously variable Mode 1 , operates from vehicle launch through the second fixed gear ratio .
- Compound - split ECVT mode , or continuously variable Mode 2 , operates after the second fixed gear ratio .
- First fixed - gear ratio with both electric motors available to boost the internal combustion engine or capture and store energy from regenerative braking , deceleration and coasting .
- Second fixed - gear ratio with one electric motor available for boost / braking ,
- Third fixed - gear ratio with two electric motors available for boost / braking .
- Fourth fixed - gear ratio with one electric motor available for boost / braking .
- The result is trend - setting hybrid technology that provides superior fuel economy , performance and load carrying capability .
The full hybrid system being co-developed by General Motors , DaimlerChrysler and the BMW Group has an overall mechanical content and size similar to a conventional automatic transmission , yet this full hybrid transmission can operate in infinitely variable gear ratios or one of the four fixed - gear ratios .
A sophisticated electronic control module constantly optimizes the entire hybrid powertrain system to select the most efficient operation point for the power level demanded by the driver .
Key Advantages
When compared to conventional hybrid systems , this avant - garde hybrid technology , relying on both the ECVT modes and the four fixed gear ratios , provides advantages in combined ( city and highway ) fuel economy , dynamics and towing capability .
Traditional hybrid systems typically have only one torque - splitting arrangement and no fixed mechanical ratios .
These systems are often called " one- mode " hybrids .
Due to their less capable mechanical content , one - mode hybrids need to transmit a significant amount of power through an electrical path that is 20 percent less efficient than a mechanical path .
This requires usually substantial compromise in vehicle capability or reliance on larger electrical motors , which can create cost , weight and packaging issues .
General Motors , DaimlerChrysler and the BMW Group have conceived a full hybrid system featuring four fixed mechanical ratios , within the two ECVT modes , to reduce power transmission through the less efficient electrical path .
Consequently , the electric motors are more compact and less dependent on engine size .
This combination of two ECVT modes and four fixed gear ratios eliminates the drawbacks of one - mode hybrid systems to allow for efficient operation throughout a vehicle 's operating range , at low and high speeds .
It also allows for application across a broader variety of vehicles .
It is particularly beneficial in demanding applications that require larger engines , such as towing , hill climbing or carrying heavy loads .
Existing internal combustion engines can be used with relatively minimal alteration because the full hybrid system imposes no significant limitation on the size or type of engine .
It enables the three global automakers to package internal combustion engines with the full hybrid transmissions more cost - effectively and offer the fuel - saving technology across a wider range of vehicles .
Initial applications are suitable for front - engine , rear - and four - wheel - drive vehicle architectures , but the full hybrid system has the flexibility to be used in front - engine , front - wheel - drive architectures in the future as well .
Share with : Delicious reddit Facebook StumbleUpon
Prev : Chrysler 300 Driving Chrysler Brand Success Next : GM Makes a Return to the 2006 Tribeca Film Festival
Your Comments
Mr. Buford , a telecommunications analyst at Kraft Foods who works in the Chicago area , said he decided on a hybrid because he wanted to " go green , " although he added , " I was n't willing to make any of the trade - offs normally associated with a hybrid . "
He said he liked the way that the electric motor on his new car kicked in early during acceleration , at a speed range in which the V - 6 gasoline engine is relatively weak .
And its emissions of smog - forming pollutants are low , he said .
( The Environmental Protection Agency puts the hybrid and nonhybrid Accords in the same emissions category ) .
If sold at list price , the hybrid costs about $ 3,300 more than the V - 6 with no hybrid .
Mr. Buford said he was not sure if the gas savings would ever pay for the difference .
But in that price range -- about $ 30,000 -- many buyers are not looking for a car that is the cheapest to buy or to operate .
Mr. Buford said he expected that when he files his taxes next April , the purchase will cut his tax bill by about $ 600 .
The tax credit will begin to be phased out in 2006 .
The Accord hybrid is not alone in using technology for power ; the Toyota Highlander and the Lexus RX330 , two premium vehicles , both gained horsepower when they were produced as hybrids .
When Lexus created a hybrid version of the RX330 it kept the same 3.3 - liter engine , but to get across the idea that the hybrid had as much power as a vehicle with a 4 - liter engine it named it the RX400h .
In the Accord , the mechanism was simple .
Honda took the model with the 3.0 - liter V - 6 engine , which generates 240 horsepower , and added a 16 - horsepower electric system .
That is in contrast to the Civic , in which Honda pulled out the standard 1.7 - liter engine and replaced it with a 1.3 - liter engine when it made a hybrid version of the car .
Combined with the electric drive , the car 's horsepower remained roughly constant .
Consumer Reports called the hybrid portion of the Accord a " green turbocharger . "
The main benefit is in getting from zero to 60 miles per hour in 6.9 seconds , compared with 9.0 seconds for the basic four - cylinder model .
A Honda spokesman , Andrew Boyd , said the company already had hybrids that minimize fuel use , notably the Insight , for customers whose top priority was to save gasoline , and the Civic for customers who wanted a car that performs the same but uses less fuel .
Performance in the Civic hybrid is slightly lower than the original model , Mr. Boyd said , and as a result it gets 36 miles per gallon instead of 29 .
Most expensive movie is – “ Titanic ” For his filming they spent more than 200 million dollarsMost expensive advertising campaign is for – “ Pepsi” In the year 2002 , “ Pepsi ” hired Britney Spears to advertise its products .
Commercial that was 90 seconds long , was paid 7.53 million dollarsMost expensive election campaign is for – Mayor of New York That record was set by Michael Bloomberg , while he was running for mayor of New York City in 2001 .
Each of 744757 votes for him cost 92 dollars 60 cents .
The whole election campaign cost Blumberg 62 millions dollars .
Most expensive city in the world is – TokyoLife is nowhere that expensive as in Tokyo .
Most expensive car in the world in serial production is – “ Maybach 62 ” Everything that you need is in this car .
Such luxury has a price , and that is 360000 euros .
Most expensive shoes are – high heel shoesThat was created by Stuart Weitzman , famous designer of the internationally famous , high - end shoe company , Stuart Weitzman Inc .
They have 642 carat rubies on them , and theur price is 1.6 million Euros .
Most expensive lunch is - a lunch with billionaireAnd it was paid by David Einhorn of “ Greenlight Capital ” .
On an auction he paid 250100 dollars for a lunch with his idol Warren Buffett .
Most expensive painting is - Slaughter of the Innocents by RubensIn 2002 it was bought for 75.3 million euros .
Most expensive cigarettes in are – “ Treasurer ” One pack of this brand is approximately 24 euros .
It is sold only in specialized stores .
Most expensive potato is – “ La Bonnotte ” Sort " La Bonnotte " from France , 1 kg costs about 500 euro .
Most expensive coffee is - " Kopi Luwak " Sort " Kopi Luwak " from Sumatra .
A quarter of a pound costs about 75 dollars .
An unusual small animal lives on Java and Sumatra coffee plantation – its name Luwak ( Paradoxurus hermaphroditus ) .
It eats only ripe coffee - beans .
Luwak cannot digest a coffee seed and gets rid of it naturally .
Local aborigines gather such coffee seeds carefully and the most expensive coffee in the world is prepared of them .
This drink ’s rich taste is explained by special qualities of an animal ’s digestive juices .
Most expensive suit is - American astronaut costumeIt costs 9 million dollars and is at the same time the most expensive piece of clothing in the world .
Most expensive stock share is - " Berkshire Hathaway " One share of an American investment company " Berkshire Hathaway " costs more than 64 thousands Euro .
" Berkshire Hathaway " controls lots of companies , working in different branches of traditional economics , including financial services , candy manufacture , publishing industry , jewellery business , manufacture of furniture and carpets , manufacture of building materials and many others .
" Berkshire Hathaway " holds large share holding of « Coca - Cola " , " American Express " , " Gillette " , " The Washington Post " companies .
Most expensive hotel is - " Burj Al Arab " 7 stars hotel " Burj Al Arab " in Dubai .
You will have to pay 770 Euro for the most modest room , and royal apartments will cost you 7700 Euro .
Most expensive stadium is - " Stade de France " " Stade de France " near Paris .
In 1998 a national French team won world Championship here .
Its construction cost 460 millions Euro .
Most expensive footballer is - Zinedine ZidaneIn 2001 a French player passed to from “ Juventus ” to “ Real Madrid ” for a record sum of 68.7 million Euros .
Most expensive bra is - Victoria 's Secret
It costs 15 million dollars .
A German cover girl Heidi Klum showed it on one of fashion shows in New York .
Most expensive comic is – about Tim and his dogComics about a boy named Tim and his dog .
One collector paid 100 thousands Euro for an original of a title picture of “ Black Island ” edition .
Most expensive brand is – “ Coca - Cola ” Its value is 68.9 billion dollars , what is almost 60 % of the whole company ’s value .
Most expensive doll is – “ Barbie ” Price is 100 thousands Euro .
She wears a dress , decorated by real diamonds .
Most expensive book is - “ Codex Leicester ” By Leonardo da Vinci , written in mirror writing on expensive paper with lawn finish .
Bill Gates bought it for 24 millions dollars .
Most expensive travel is to – SpaceAmerican businessman , Dennis Tito , and computer millionaire from South Africa , Mark Shuttleworth , paid 20 million dollars to be on International Space Station .
Western Philosophy
This section contains texts by the most important writers who have defined the philosophy of modern Western society .
Texts here discuss ethics , metaphysics , epistemology , and political philosophy .
NOTE : most of these are large text files , which may take a while to download on a slow connection .
George Berkeley
Three Dialogues Between Hylas and Philonous 1713 ]
A Treatise Concerning the Principles of Human Knowledge 1710 ]
Rene Descartes
Meditations on First Philosophy 1641 ]
Ralph Waldo Emerson
Epictetus
The Discourses 101 CE ] CE ]
Epicurus
Thomas Hobbes
Leviathan 1651 ]
David Hume
Of Superstition and Enthusiasm 1741 ]
Of the Delicacy of Taste and Passion 1741 ]
Of the Liberty of the Press 1741 ]
Of Essay Writing 1742 ]
Of the Rise and Progress of the Arts and Sciences 1742 ]
An Enquiry Concerning Human Understanding 1748 ]
A Letter from a Gentleman 1754 ]
Essays on Suicide and the Immortality of the Soul 1755 ]
The Natural History of Religion 1757 ]
Of Tragedy 1757 ]
Of the Standard of Taste 1757 ]
My Own Life 1777 ]
Dialogues Concerning Natural Religion 1779 ]
Immanuel Kant
The Critique of Judgement 1790 ]
The Critique of Practical Reason 1788 ]
The Critique of Pure Reason 1781 ]
Fundamental Principles of the Metaphysic of Morals 1785 ]
Introduction to the Metaphysic of Morals 1785 ]
The Metaphysical Elements of Ethics 1780 ]
Prolegomena to Any Future Metaphysics 1783 ]
The Science of Right 1790 ]
Gottfried Wilhelm Leibniz
The Monadology 1898 ]
John Stuart Mill
On Liberty 1859 ]
Representative Government 1861 ]
Utilitarianism 1863 ]
Friedrich Nietzsche
Thus Spake Zarathustra 1891 ]
Blaise Pascal
The Provincial Letters 1657 ]
Pensees 1660 ]
Plato
NOTE : These file are in the Plato section under Classics .
Cratylus 360 BCE ] BCE ]
Critias 360 BCE ] BCE ]
Crito 360 BCE ] BCE ]
Euthydemus 380 BCE ] BCE ]
Euthyphro 380 BCE ] BCE ]
Gorgias 380 BCE ] BCE ]
Ion 380 BCE ] BCE ]
Laws 360 BCE ] BCE ]
Meno 380 BCE ] BCE ]
Parmenides 370 BCE ] BCE ]
Phaedo 360 BCE ] BCE ]
Phaedrus 360 BCE ] BCE ]
Philebus 360 BCE ] BCE ]
GCC - Inline - Assembly - HOWTO
Copyright ( C)2003 Sandeep S .
This document is free ; you can redistribute and / or modify this under the terms of the GNU General Public License as published by the Free Software Foundation ; either version 2 of the License , or ( at your option ) any later version .
This document is distributed in the hope that it will be useful , but WITHOUT ANY WARRANTY ; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE .
See the GNU General Public License for more details .
Kindly forward feedback and criticism to Sandeep .S.
I will be indebted to anybody who points out errors and inaccuracies in this document ; I shall rectify them as soon as I am informed .
I express my sincere appreciation to GNU people for providing such a great feature .
Thanks to Mr. Pramode C E for all the helps he did .
Thanks to friends at the Govt Engineering College , Trichur for their moral - support and cooperation , especially to Nisha Kurur and Sakeeb S. Thanks to my dear teachers at Govt Engineering College , Trichur for their cooperation .
Additionally , thanks to Phillip , Brennan Underwood and colin@nyx.net ;
Many things here are shamelessly stolen from their works .
We are here to learn about GCC inline assembly .
What this inline stands for ?
We can instruct the compiler to insert the code of a function into the code of its callers , to the point where actually the call is to be made .
Such functions are inline functions .
Sounds similar to a Macro ?
Indeed there are similarities .
What is the benefit of inline functions ?
This method of inlining reduces the function - call overhead .
And if any of the actual argument values are constant , their known values may permit simplifications at compile time so that not all of the inline function ’s code needs to be included .
The effect on code size is less predictable , it depends on the particular case .
To declare an inline function , we ’ve to use the keyword inline in its declaration .
Now we are in a position to guess what is inline assembly .
Its just some assembly routines written as inline functions .
They are handy , speedy and very much useful in system programming .
Our main focus is to study the basic format and usage of ( GCC ) inline assembly functions .
To declare inline assembly functions , we use the keyword asm .
Inline assembly is important primarily because of its ability to operate and make its output visible on C variables .
Because of this capability , " asm " works as an interface between the assembly instructions and the " C " program that contains it .
GCC , the GNU C Compiler for Linux , uses AT&T / UNIX assembly syntax .
Here we ’ll be using AT&T syntax for assembly coding .
Do n’t worry if you are not familiar with AT&T syntax , I will teach you .
This is quite different from Intel syntax .
I shall give the major differences .
Source - Destination Ordering .
The direction of the operands in AT&T syntax is opposite to that of Intel .
In Intel syntax the first operand is the destination , and the second operand is the source whereas in AT&T syntax the first operand is the source and the second operand is the destination .
ie , " Op - code dst src " in Intel syntax changes to " Op - code src dst " in AT&T syntax .
Register Naming .
Register names are prefixed by % ie , if eax is to be used , write %eax .
Immediate Operand .
AT&T immediate operands are preceded by ’$ ’.
For static " C " variables also prefix a ’$ ’ .
In Intel syntax , for hexadecimal constants an ’h’ is suffixed , instead of that , here we prefix ’ 0 x ’ to the constant .
So , for hexadecimals , we first see a ’ $’ , then ’ 0 x ’ and finally the constants .
Operand Size .
In AT&T syntax the size of memory operands is determined from the last character of the op - code name .
Op - code suffixes of ’ b ’ , ’w’ , and ’l’ specify byte ( 8 - bit ) , word ( 16 - bit ) , and long ( 32 - bit ) memory references .
Intel syntax accomplishes this by prefixing memory operands ( not the op - codes ) with ’ byte ptr ’ , ’ word ptr ’ , and ’ dword ptr ’ .
Thus , Intel " mov al , byte ptr foo " is " movb foo , %al " in AT&T syntax .
Memory Operands .
In Intel syntax the base register is enclosed in ’ [ ’ and ’ ] ’ where as in AT&T they change to ’(’ and ’ ) ’.
Additionally , in Intel syntax an indirect memory reference is like section : [ base + index * scale + disp ] , which changes to section : disp ( base , index , scale ) in AT&T .
One point to bear in mind is that , when a constant is used for disp / scale , ’ $ ’ should n’t be prefixed .
Now we saw some of the major differences between Intel syntax and AT&T syntax .
I ’ve wrote only a few of them .
For a complete information , refer to GNU Assembler documentations .
Now we ’ll look at some examples for better understanding .
+------------------------------+------------------------------------+ | Intel Code | AT&T Code | +------------------------------+------------------------------------+
| mov eax , 1 | movl $ 1 , %eax | | mov ebx ,0 ffh | movl $ 0xff , %ebx | | int 80h | int $ 0x80 | | mov ebx , eax | movl %eax , % ebx | | mov eax , [ ecx ] | movl ( %ecx ) , %eax | | mov eax , [ ebx +3 ] | movl 3 ( %ebx ) , %eax | | mov eax , [ ebx +20h ] | movl 0x20 ( % ebx ) , %eax | | add eax , [ ebx+ecx * 2h ] | addl ( %ebx , %ecx,0x2 ) , %eax | | lea eax , [ ebx+ecx ] | leal ( %ebx , %ecx ) , %eax | | sub eax , [ ebx+ecx * 4h - 20h ] | subl - 0x20 ( % ebx , %ecx,0x4 ) , %eax | +------------------------------+------------------------------------+
The format of basic inline assembly is very much straight forward .
Its basic form is
asm ( " assembly code " ) ;
Example .
asm ( " movl %ecx %eax " ) ; /* moves the contents of ecx to eax */ __asm__ ( " movb %bh ( %eax ) " ) ; /* moves the byte from bh to the memory pointed by eax */
You might have noticed that here I ’ve used asm and __asm__ .
Both are valid .
We can use __asm__ if the keyword asm conflicts with something in our program .
If we have more than one instructions , we write one per line in double quotes , and also suffix a ’
’ and ’\t ’ to the instruction .
This is because gcc sends each instruction as a string to as ( GAS ) and by using the newline / tab we send correctly formatted lines to the assembler .
Example .
__asm__ ( " movl %eax , %ebx
\t " " movl $ 56 , %esi
\t " " movl %ecx , $ label ( %edx , %ebx , $4 )
\t " " movb %ah , ( %ebx ) " ) ;
If in our code we touch ( ie , change the contents ) some registers and return from asm without fixing those changes , something bad is going to happen .
This is because GCC have no idea about the changes in the register contents and this leads us to trouble , especially when compiler makes some optimizations .
It will suppose that some register contains the value of some variable that we might have changed without informing GCC , and it continues like nothing happened .
What we can do is either use those instructions having no side effects or fix things when we quit or wait for something to crash .
This is where we want some extended functionality .
Extended asm provides us with that functionality .
In basic inline assembly , we had only instructions .
In extended assembly , we can also specify the operands .
It allows us to specify the input registers , output registers and a list of clobbered registers .
It is not mandatory to specify the registers to use , we can leave that head ache to GCC and that probably fit into GCC ’s optimization scheme better .
Anyway the basic format is :
asm ( assembler template : output operands /* optional */ : input operands /* optional */ : list of clobbered registers /* optional */ ) ;
The assembler template consists of assembly instructions .
Each operand is described by an operand - constraint string followed by the C expression in parentheses .
A colon separates the assembler template from the first output operand and another separates the last output operand from the first input , if any .
Commas separate the operands within each group .
The total number of operands is limited to ten or to the maximum number of operands in any instruction pattern in the machine description , whichever is greater .
If there are no output operands but there are input operands , you must place two consecutive colons surrounding the place where the output operands would go .
Example :
asm ( " cld
\t " " rep
\t " " stosl " : /* no output registers */ : " c " ( count ) , " a " ( fill_value ) , " D " ( dest ) : " %ecx " , " %edi " ) ;
Now , what does this code do ?
The above inline fills the fill_value count times to the location pointed to by the register edi .
It also says to gcc that , the contents of registers eax and edi are no longer valid .
Let us see one more example to make things more clearer .
int a=10 , b ; asm ( " movl % 1 , % %eax ; movl % %eax , %0 ; " :" =r " ( b ) /* output */ :" r " ( a ) /* input */ :" %eax " /* clobbered register */ ) ;
Here what we did is we made the value of ’ b ’ equal to that of ’a ’ using assembly instructions .
Some points of interest are :
" b " is the output operand , referred to by %0 and " a " is the input operand , referred to by %1 .
" r " is a constraint on the operands .
We ’ll see constraints in detail later .
For the time being , " r " says to GCC to use any register for storing the operands .
output operand constraint should have a constraint modifier " = " .
And this modifier says that it is the output operand and is write - only .
There are two % ’s prefixed to the register name .
This helps GCC to distinguish between the operands and registers .
operands have a single % as prefix .
The clobbered register %eax after the third colon tells GCC that the value of %eax is to be modified inside " asm " , so GCC wo n’t use this register to store any other value .
When the execution of " asm " is complete , " b " will reflect the updated value , as it is specified as an output operand .
In other words , the change made to " b " inside " asm " is supposed to be reflected outside the " asm " .
Now we may look each field in detail .
The assembler template contains the set of assembly instructions that gets inserted inside the C program .
The format is like : either each instruction should be enclosed within double quotes , or the entire group of instructions should be within double quotes .
Each instruction should also end with a delimiter .
The valid delimiters are newline (
) and semicolon ( ; ) . ’
’ may be followed by a tab ( \t ) .
We know the reason of newline / tab , right ?.
Operands corresponding to the C expressions are represented by %0 , % 1 ... etc .
C expressions serve as operands for the assembly instructions inside " asm " .
Each operand is written as first an operand constraint in double quotes .
For output operands , there ’ll be a constraint modifier also within the quotes and then follows the C expression which stands for the operand .
ie ,
" constraint " ( C expression ) is the general form .
For output operands an additional modifier will be there .
Constraints are primarily used to decide the addressing modes for operands .
They are also used in specifying the registers to be used .
If we use more than one operand , they are separated by comma .
In the assembler template , each operand is referenced by numbers .
Numbering is done as follows .
If there are a total of n operands ( both input and output inclusive ) , then the first output operand is numbered 0 , continuing in increasing order , and the last input operand is numbered n - 1 .
The maximum number of operands is as we saw in the previous section .
Output operand expressions must be lvalues .
The input operands are not restricted like this .
They may be expressions .
The extended asm feature is most often used for machine instructions the compiler itself does not know as existing ;-) .
If the output expression cannot be directly addressed ( for example , it is a bit - field ) , our constraint must allow a register .
In that case , GCC will use the register as the output of the asm , and then store that register contents into the output .
As stated above , ordinary output operands must be write - only ; GCC will assume that the values in these operands before the instruction are dead and need not be generated .
Extended asm also supports input - output or read - write operands .
So now we concentrate on some examples .
We want to multiply a number by 5 .
For that we use the instruction lea .
asm ( " leal ( % 1 , % 1,4 ) , % 0 " : " =r " ( five_times_x ) : " r " ( x ) ) ;
Here our input is in ’x ’ .
We did n’t specify the register to be used .
GCC will choose some register for input , one for output and does what we desired .
If we want the input and output to reside in the same register , we can instruct GCC to do so .
Here we use those types of read - write operands .
By specifying proper constraints , here we do it .
asm ( " leal ( %0 , %0,4 ) , % 0 " : " =r " ( five_times_x ) : " 0 " ( x ) ) ;
Now the input and output operands are in the same register .
But we do n’t know which register .
Now if we want to specify that also , there is a way .
asm ( " leal ( % %ecx , %%ecx , 4 ) , % %ecx " : " =c " ( x ) : " c " ( x ) ) ;
In all the three examples above , we did n’t put any register to the clobber list .
why ?
In the first two examples , GCC decides the registers and it knows what changes happen .
In the last one , we do n’t have to put ecx on the c lobberlist , gcc knows it goes into x .
Therefore , since it can know the value of ecx , it is n’t considered clobbered .
Some instructions clobber some hardware registers .
We have to list those registers in the clobber - list , ie the field after the third ’ :’ in the asm function .
This is to inform gcc that we will use and modify them ourselves .
So gcc will not assume that the values it loads into these registers will be valid .
We shoud n’t list the input and output registers in this list .
Because , gcc knows that " asm " uses them ( because they are specified explicitly as constraints ) .
If the instructions use any other registers , implicitly or explicitly ( and the registers are not present either in input or in the output constraint list ) , then those registers have to be specified in the clobbered list .
If our instruction can alter the condition code register , we have to add " cc " to the list of clobbered registers .
If our instruction modifies memory in an unpredictable fashion , add " memory " to the list of clobbered registers .
This will cause GCC to not keep memory values cached in registers across the assembler instruction .
We also have to add the volatile keyword if the memory affected is not listed in the inputs or outputs of the asm .
We can read and write the clobbered registers as many times as we like .
Consider the example of multiple instructions in a template ; it assumes the subroutine _foo accepts arguments in registers eax and ecx .
asm ( " movl %0 , % %eax ; movl % 1 , % %ecx ; call _foo " : /* no outputs */ : " g " ( from ) , " g " ( to ) : " eax " , " ecx " ) ;
If you are familiar with kernel sources or some beautiful code like that , you must have seen many functions declared as volatile or __volatile__ which follows an asm or __asm__ .
I mentioned earlier about the keywords asm and __asm__ .
So what is this volatile ?
If our assembly statement must execute where we put it , ( i.e. must not be moved out of a loop as an optimization ) , put the keyword volatile after asm and before the ( ) ’s .
So to keep it from moving , deleting and all , we declare it as
asm volatile ( ... : ... : ... : ... ) ;
Use __volatile__ when we have to be verymuch careful .
If our assembly is just for doing some calculations and does n’t have any side effects , it ’s better not to use the keyword volatile .
Avoiding it helps gcc in optimizing the code and making it more beautiful .
In the section Some Useful Recipes , I have provided many examples for inline asm functions .
There we can see the clobber - list in detail .
By this time , you might have understood that constraints have got a lot to do with inline assembly .
But we ’ve said little about constraints .
Constraints can say whether an operand may be in a register , and which kinds of register ; whether the operand can be a memory reference , and which kinds of address ; whether the operand may be an immediate constant , and which possible values ( ie range of values ) it may have .... etc .
There are a number of constraints of which only a few are used frequently .
We ’ll have a look at those constraints .
Register operand constraint(r )
When operands are specified using this constraint , they get stored in General Purpose Registers ( GPR ) .
Take the following example : asm ( " movl % %eax , %0
" :" =r " ( myval ) ) ;
Here the variable myval is kept in a register , the value in register eax is copied onto that register , and the value of myval is updated into the memory from this register .
When the " r " constraint is specified , gcc may keep the variable in any of the available GPRs .
To specify the register , you must directly specify the register names by using specific register constraints .
They are : +---+--------------------+ | r | Register(s ) | +---+--------------------+ | a | %eax , %ax , %al | | b | %ebx , %bx , %bl | | c | %ecx , %cx , %cl | | d | %edx , %dx , %dl | | S | %esi , % si | | D | %edi , % di | +---+--------------------+
Memory operand constraint(m )
When the operands are in the memory , any operations performed on them will occur directly in the memory location , as opposed to register constraints , which first store the value in a register to be modified and then write it back to the memory location .
But register constraints are usually used only when they are absolutely necessary for an instruction or they significantly speed up the process .
Memory constraints can be used most efficiently in cases where a C variable needs to be updated inside " asm " and you really do n’t want to use a register to hold its value .
For example , the value of idtr is stored in the memory location loc : asm ( " sidt %0
" : :" m " ( loc ) ) ; Matching ( Digit ) constraints
In some cases , a single variable may serve as both the input and the output operand .
Such cases may be specified in " asm " by using matching constraints .
asm ( " incl % 0 " :" =a " ( var ) : " 0 " ( var ) ) ;
We saw similar examples in operands subsection also .
In this example for matching constraints , the register %eax is used as both the input and the output variable .
var input is read to %eax and updated %eax is stored in var again after increment .
" 0 " here specifies the same constraint as the 0th output variable .
That is , it specifies that the output instance of var should be stored in %eax only .
This constraint can be used :
In cases where input is read from a variable or the variable is modified and modification is written back to the same variable .
In cases where separate instances of input and output operands are not necessary .
The most important effect of using matching restraints is that they lead to the efficient use of available registers .
Some other constraints used are :
" m " : A memory operand is allowed , with any kind of address that the machine supports in general . " o " :
A memory operand is allowed , but only if the address is offsettable .
ie , adding a small offset to the address gives a valid address . " V " : A memory operand that is not offsettable .
In other words , anything that would fit the `m ’ constraint but not the `o’constraint .
" i " :
An immediate integer operand ( one with constant value ) is allowed .
This includes symbolic constants whose values will be known only at assembly time . " n " :
An immediate integer operand with a known numeric value is allowed .
Many systems cannot support assembly - time constants for operands less than a word wide .
Constraints for these operands should use ’ n ’ rather than ’ i ’. " g " :
Any register , memory or immediate integer operand is allowed , except for registers that are not general registers .
Following constraints are x86 specific .
" r " : Register operand constraint , look table given above . " q " : Registers a , b , c or d .
" I " : Constant in range 0 to 31 ( for 32 - bit shifts ) .
" J " : Constant in range 0 to 63 ( for 64 - bit shifts ) .
" K " : 0xff. " L " : 0 xffff. " M " : 0 , 1 , 2 , or 3 ( shifts for lea instruction ) .
" N " : Constant in range 0 to 255 ( for out instruction ) . " f " : Floating point register " t " : First ( top of stack ) floating point register " u " : Second floating point register " A " : Specifies the `a ’ or `d ’ registers .
This is primarily useful for 64 - bit integer values intended to be returned with the `d ’ register holding the most significant bits and the `a ’ register holding the least significant bits .
While using constraints , for more precise control over the effects of constraints , GCC provides us with constraint modifiers .
Mostly used constraint modifiers are
" = " : Means that this operand is write - only for this instruction ; the previous value is discarded and replaced by output data .
" & " : Means that this operand is an earlyclobber operand , which is modified before the instruction is finished using the input operands .
Therefore , this operand may not lie in a register that is used as an input operand or as part of any memory address .
An input operand can be tied to an earlyclobber operand if its only use as an input occurs before the early result is written .
The list and explanation of constraints is by no means complete .
Examples can give a better understanding of the use and usage of inline asm .
In the next section we ’ll see some examples , there we ’ll find more about clobber - lists and constraints .
Now we have covered the basic theory about GCC inline assembly , now we shall concentrate on some simple examples .
It is always handy to write inline asm functions as MACRO’s .
We can see many asm functions in the kernel code .
( /usr/src/linux/include/asm/*.h ) .
First we start with a simple example .
We ’ll write a program to add two numbers .
int main ( void ) { int foo = 10 , bar = 15 ; __asm__ __volatile__ ( " addl % %ebx , %%eax " :" =a " ( foo ) :" a" ( foo ) , " b" ( bar ) ) ; printf ( " foo + bar=%d
" , foo ) ; return 0 ; } Here we insist GCC to store foo in %eax , bar in %ebx and we also want the result in %eax .
The ’= ’ sign shows that it is an output register .
Now we can add an integer to a variable in some other way .
__asm__ __volatile__ ( " lock ;
" " addl %1,%0 ;
" : " =m " ( my_var ) : " ir " ( my_int ) , " m " ( my_var ) : /* no clobber - list */ ) ;
This is an atomic addition .
We can remove the instruction ’ lock ’ to remove the atomicity .
In the output field , " =m " says that my_var is an output and it is in memory .
Similarly , " ir " says that , my_int is an integer and should reside in some register ( recall the table we saw above ) .
No registers are in the clobber list .
Now we ’ll perform some action on some registers / variables and compare the value .
__asm__ __volatile__( " decl %0 ; sete % 1 " : " =m " ( my_var ) , " =q " ( cond ) : " m " ( my_var ) : " memory " ) ;
Here , the value of my_var is decremented by one and if the resulting value is 0 then , the variable cond is set .
We can add atomicity by adding an instruction " lock ;
\t " as the first instruction in assembler template .
In a similar way we can use " incl %0 " instead of " decl %0 " , so as to increment my_var .
Points to note here are that ( i ) my_var is a variable residing in memory .
( ii ) cond is in any of the registers eax , ebx , ecx and edx .
The constraint " =q " guarantees it .
( iii )
And we can see that memory is there in the clobber list .
ie , the code is changing the contents of memory .
How to set / clear a bit in a register ?
As next recipe , we are going to see it .
__asm__ __volatile__( " btsl % 1 , %0 " : " =m " ( ADDR ) : " Ir " ( pos ) : " cc " ) ;
Here , the bit at the position ’ pos ’ of variable at ADDR ( a memory variable ) is set to 1 We can use ’ btrl ’ for ’ btsl ’ to clear the bit .
The constraint " Ir " of pos says that , pos is in a register , and it ’s value ranges from 0 - 31 ( x86 dependant constraint ) .
ie , we can set / clear any bit from 0th to 31st of the variable at ADDR .
As the condition codes will be changed , we are adding " cc " to clobberlist .
Now we look at some more complicated but useful function .
String copy .
static inline char * strcpy ( char * dest , const char * src ) { int d0 , d1 , d2 ; __asm__ __volatile__ ( " 1:\tlodsb
\t " " stosb
\t " " testb % %al , % %al
\t " " jne 1b " : " =&S " ( d0 ) , " =&D " ( d1 ) , " =&a " ( d2 ) : " 0 " ( src ) , " 1 " ( dest ) : " memory " ) ; return dest ; }
The source address is stored in esi , destination in edi , and then starts the copy , when we reach at 0 , copying is complete .
Constraints " &S " , " &D " , " &a " say that the registers esi , edi and eax are early clobber registers , ie , their contents will change before the completion of the function .
Here also it ’s clear that why memory is in clobberlist .
We can see a similar function which moves a block of double words .
Notice that the function is declared as a macro .
# define mov_blk ( src , dest , numwords ) \ __asm__ __volatile__ ( \ " cld
\t " \ " rep
\t " \ " movsl " \ : \ : " S " ( src ) , " D " ( dest ) , " c " ( numwords ) \ : " %ecx " , " %esi " , " %edi " \ )
Here we have no outputs , so the changes that happen to the contents of the registers ecx , esi and edi are side effects of the block movement .
So we have to add them to the clobber list .
In Linux , system calls are implemented using GCC inline assembly .
Let us look how a system call is implemented .
All the system calls are written as macros ( linux/unistd.h ) .
For example , a system call with three arguments is defined as a macro as shown below .
# define _syscall3 ( type , name , type1,arg1, type2,arg2,type3,arg3 ) \ type name ( type1 arg1 , type2 arg2 , type3 arg3 ) \ { \ long __res ; \ __asm__ volatile ( " int $ 0x80 " \ : " =a " ( __res ) \ : " 0 " ( __NR_##name ) , " b " ( ( long ) ( arg1 ) ) , " c " ( ( long ) ( arg2 ) ) , \ " d " ( ( long ) ( arg3 ) ) ) ; \ __syscall_return ( type , __res ) ; \ } Whenever a system call with three arguments is made , the macro shown above is used to make the call .
The syscall number is placed in eax , then each parameters in ebx , ecx , edx .
And finally " int 0x80 " is the instruction which makes the system call work .
The return value can be collected from eax .
Every system calls are implemented in a similar way .
Exit is a single parameter syscall and let ’s see how it ’s code will look like .
It is as shown below .
{ asm ( " movl $ 1 , % %eax ; /* SYS_exit is 1 */ xorl % %ebx , % %ebx ; /* Argument is in ebx , it is 0 */ int $ 0x80 " /*
Enter kernel mode */ ) ; }
The number of exit is " 1 " and here , it ’s parameter is 0 .
So we arrange eax to contain 1 and ebx to contain 0 and by int $ 0x80 , the exit ( 0 ) is executed .
This is how exit works .
This document has gone through the basics of GCC Inline Assembly .
Once you have understood the basic concept it is not difficult to take steps by your own .
We saw some examples which are helpful in understanding the frequently used features of GCC Inline Assembly .
GCC Inlining is a vast subject and this article is by no means complete .
More details about the syntax ’s we discussed about is available in the official documentation for GNU Assembler .
Similarly , for a complete list of the constraints refer to the official documentation of GCC .
And of - course , the Linux kernel use GCC Inline in a large scale .
So we can find many examples of various kinds in the kernel sources .
They can help us a lot .
If you have found any glaring typos , or outdated info in this document , please let us know .
Einstein and Buddhism
I have begun suspecting that Einstein had either studdied Buddhism , or independantly arrived at many Buddhist conclusions on his own , or most probably both ( like me ) .
The following quotes of his tend to lead me to believe this :
A human being is part of the whole , called by us ' Universe ' ; a part limited in time and space .
He experiences himself , his thoughts and feelings as something separated from the rest -- a kind of optical delusion of his consciousness .
This delusion is a kind of prison for us , restricting us to our personal desires and affection for a few persons nearest us .
Our task must be to free ourselves from this prison by widening our circle of compasion to embrace all living creatures and the whole nature in its beauty .
Nobody is able to achieve this completely but striving for such achievement is , in itself , a part of the liberation and a foundation for inner security .
This is almost exactly the foundation of Buddhist thought .
And of course :
The religion of the future will be a cosmic religion .
The religion which is based on experience , which refuses dogmatism .
If there 's any religion that would cope the scientific needs it will be Buddhism �
What is it about viruses that engenders so much hair tearing ?
Are you sick of hearing about how we 're — the whole world of us — not prepared for the avian flu ?
A resurgence of Spanish Flu ?
This winter 's flu - of - the - month ( just four easy payments of $ 19.95 ! )
The next Mac virus ?
PANIC !!!!!!!!!!
So says the Mac mag - of - mags Macworld .
Now , we 're all supposed to run — not walk — out and buy anti-virus software because it 's so necessary .
I mean , six proof of concept viruses have been found since February .
An outbreak of the Mac flu that will slice , dice , and cobblerify your Mac is imminent .
After all , we 're panicking .
Remember when Mac virus software was actually necessary ?
I remember the last time that one of my computers got infested with a virus .
It was n't actually my computer .
It was the instructor 's computer in the CMU Intro to Programming lab ( yes , Wean 5419 for fellow alums ) .
It was the MPEG — no , wait , the MVOX — oh DARN , I do n't remember the name because it was frickin ' 1991 !
Since I do n't recall , I looked it up .
It was the MDEF A virus .
I got it from a pirate copy of PipeDream ( an early but VERY cool Mac game from Lucas Film Inc ) .
Remember MDEF ?
WDEF ?
Scores ?
No ?
The point is , it was 19 - frickin ' - 91 the last time anyone I knew had a Mac virus .
So what exactly are we supposed to be panicking about ?
Is OSX .
Macarena prevalent in the wild ?
Nope .
There are fewer than 49 infections worldwide .
Just like the other dangerous Mac viruses reported in the last 6 months .
Has OSX .
Macarena actually done any damage ?
Nope .
It was a " proof of concept " exploit .
Just like the others .
And it does n't do any damage , just propagates itself .
Is it hard to contain or remove ?
Nope .
Remind me why we are panicking again ?
We 're not .
The people who have anti-virus software already have it .
Any large installation should have it , without a doubt .
But you and me ?
I 'll wait for an actual threat , thanks .
It sounds too much like Symantec — and everyone else who can't assess actual risk — has a bad case of hyper - ventilating hypochondriac hysteria .
Either that , or they just want to sell more anti-virus software .
Seriously .
They ’re a shitty ad network that triggers popups , alert messages , and forced redirects on mobile devices .
Disgusting practices .
If you ’re getting redirected from ads on adnxs.com , that ’s them .
May 3 , 2011 at 11:05 pm | Posted in General | Comments Off on A Simple Math Problem
So recently a meme has been running around regarding a relatively simple math problem that confuses people due to a lot of mistaken teaching and mistaken remembering out there . 🙂
Further harming the issue is so - called “ learning ” sites like Purplemath which have incorrect information on them , and refuse to change in spite of the mistake being contrary to all basic rules of math , and not agreeing with the answers that Google and Wolfram Alpha generate .
Even more , some older graphing calculators are incorrectly programmed , and generate an answer of 1 , which many proponents of the 1 answer take as proof that they ’re right , even though far more advanced tools as linked above say otherwise .
( Not to mention , yet again , the basic rules of mathematics )
The recent problem in question is the following : 6/2( 1+2 ) , or 6 ÷ 2 ( 1+2 ) , depending on your symbol choice .
The correct answer is 9 .
Not 1 , not 7 , not anything else anyone comes up with when they make mistakes .
There are several sources of confusion with this problem – some teachers taught the order of operations incorrectly , while some students simply remember it wrong .
Others try to distribute the 2 inside the parentheses , thinking back to algebra , while others assume that implied multiplication is somehow stronger than regular multiplication1 .
I was taught PEMDAS , which stands for Parentheses , Exponents , Multiplication & Division , Addition & Subtraction .
However , some have taught or remember it as Multiplication and THEN Division , and Addition THEN Subtraction , which is wrong .
You do the M/D and A/S left to right , whichever comes first .
Wrong way :
6/2( 1+2 )
6/2*3
6/6
1
The distributing crowd is actually similar to the previous error as well .
They try to distribute , but they take only the 2 , instead of the entire 6/2 , or resulting 3 .
Wrong way :
6/2( 1+2 )
6/( 2+4 )
6/6
1
The final group start off fine , doing the parentheses first , but then leave it as 2 ( 3 ) , which is the same as 2*3 , and assume that somehow makes it stronger , when in fact they are identical .
Wrong way :
6/2( 1+2 )
6/2(3 )
6/6
1
If you fix all these issues , you get only one possible answer , 9 .
Right way :
6/2( 1+2 )
6/2*( 1+2 ) Remember , implied multiplication is still just multiplication !
6/2*3
3*3
9
If you distribute correctly , you can do this :
6/2( 1+2 )
3( 1+2 )
3*1 + 3*2
3 + 6
9
No matter how you do it , if you actually follow the rules correctly , you get 9 .
Random related images that have come up during discussions of this :
http://i.imgur.com/qiK3V.jpg
http://i.imgur.com/STMJT.jpg
http://i.imgur.com/zrxGL.jpg
http://i.imgur.com/Xvf6s.jpg
Craigslist.org owner Craig Newmark is n’t tempted to sell off his popular community classifieds site any time soon .
Even if it means billions of dollars are sitting on the table .
He seems keen to stay true to the not - for - profit - but - for - community “ not - solely - for - profit - but - for - community ” model he has used with the site .
I love Craigslist .
I have n’t paid for a classified ad in the past two years .
You can read his comments below or go to the original article link .
AMSTERDAM , Netherlands ( Reuters ) —
The founder of Craigslist.org , the free social networking and classifieds Web site , said on Thursday he is not interested in selling out , a few hours after social networking site MySpace was valued at $ 15 billion .
“ Who needs the money ?
We do n’t really care , ” Craig Newmark said in an interview at the Picnic ’06 Cross Media Week conference here .
“ If you ’re living comfortably , what ’s the point of having more ? ” Newmark said .
Just a few hours earlier , RBC Capital analyst Jordan Rohan said MySpace could be worth around $ 15 billion within three years , measured in terms of the value created for shareholders of its parent company , News Corp .
MySpace was acquired by Rupert Murdoch ’s News Corp. for $ 580 million less than a year ago .
It now boasts more than 90 million active users , against 10 million monthly users of craigslist .
Craigslist , despite its no - frills layout , gets more than four billion page views per month with just 22 employees .
Measured as a proportion of the number of employees , it claims to rank seventh amongst English language sites , behind Yahoo , AOL Time Warner , Microsoft , Google , eBay and News Corp .
Newmark said raising the money to subsequently give it away to good causes also did not interest him .
“ Finding a good cause is incredibly hard and time - consuming , ” he said , adding that he and Chief Executive Jim Buckmaster agree on not cashing in .
“ We both know some people who own more than a billion ( dollars ) and they ’re not any the happier .
They also need bodyguards , ” he said .
Craigslist is 25 percent owned by eBay after one of the shareholders who helped to set up the site in the 1990s sold his stake in 2004 .
Newmark declines to specify exactly who owns the remaining shares .
Go to original article
FAITH AND RELIGION IN THE USA FAITH AND RELIGION IN THE USA Politics : Will Romney 's Mormon faith hurt bid for presidency ?
| View of God can predict person 's voting values Women : New bishop , ' new dawn ' for Episcopals ? |
Modesty gets modern twist |
Moms form faith club Jews : Rabbi's legacy of activism is a guide | Nazi hunters pick up the trail online Evangelicals : Can the ' E - word ' be saved ?
| Haggard ' completely heterosexual ' Amish : Forgiving killer was ' most inspiring '
Trends : Christian retail rallies | ' U2 - charist ' = song + service | Beliefnet a spiritual melting pot More View of God can predict values , politics The United States calls itself one nation under God , but Americans do n't all have the same image of the Almighty in mind .
A new survey of religion in the USA finds four very different images of God — from a wrathful deity thundering at sinful humanity to a distant power uninvolved in mankind 's affairs .
Forget denominational brands or doctrines or even once - salient terms like " Religious Right . "
Even the oft - used " Evangelical " appears to be losing ground .
AMERICANS AND FAITH :
How we view God Believers just do n't see themselves the way the media and politicians — or even their pastors — do , according to the national survey of 1,721 Americans , by far the most comprehensive national religion survey to date .
Written and analyzed by sociologists from Baylor University 's Institute for Studies of Religion , in Waco , Texas , and conducted by Gallup , the survey asked 77 questions with nearly 400 answer choices that burrowed deeply into beliefs , practices and religious ties and turned up some surprising findings : • Though 91.8 % say they believe in God , a higher power or a cosmic force , they had four distinct views of God 's personality and engagement in human affairs .
These Four Gods — dubbed by researchers Authoritarian , Benevolent , Critical or Distant — tell more about people 's social , moral and political views and personal piety than the familiar categories of Protestant / Catholic / Jew or even red state / blue state .
For example : 45.6 % of all Americans say the federal government " should advocate Christian values , " but 74.5 % of believers in an authoritarian God do .
Sociologist Paul Froese says the survey finds the stereotype that conservatives are religious and liberals are secular is " simply not true .
Political liberals and conservative are both religious .
They just have different religious views . "
•
About one in nine ( 10.8 % ) respondents have no religious ties at all ; previous national surveys found 14 % .
The Baylor survey , unlike others , asked people to write in the names and addresses of where they worship , and many who said " none " or " do n't know " when asked about their religious identity named a church they occasionally attend .
•
The paranormal — beliefs outside conventional organized religion — is immensely popular .
Most people said they believe in prophetic dreams ; four in 10 say there were once " ancient advanced civilizations " such as Atlantis .
• " Evangelical " may be losing favor as a way Americans describe themselves .
About one in three Americans say they belong to denominations that theologians consider evangelical , but only 14 % of all respondents in the survey say this is one way they would describe themselves .
Only 2.2 % called it the single best term .
Top choices overall : " Bible - believing " ( 20.5 % ) or " born - again " ( 18.6 % ) .
" Any politician who really wants to connect with Christians should be looking at those terms , not vague abstractions like evangelical .
...
They need to tap into labels that have salience , " Baylor sociologist Kevin Dougherty says .
• Most Americans think their nearest and dearest are going to heaven .
The pearly gates open widest for family ( 75.3 % say they 'll get in ) and personal friends ( 69.3 % ) .
The survey did not ask whether people expect to go to heaven themselves .
• Religion - themed movies and books have a vast reach : 44.3 % of those polled saw Mel Gibson 's film The Passion of the Christ .
More than one in 10 of all surveyed say they spent $ 50 or more in the past month on items such as religious books , music and jewelry .
A closer look at what people read finds that 28.5 % of Americans say they 've read The Da Vinci Code .
Baylor also found 19 % , including 25 % of all U.S. women , have read the Rev. Rick Warren 's Christian handbook The Purpose - Driven Life , and 19 % overall have read at least one of the novels in the Left Behind apocalyptic fiction series .
These are part of the first wave of results from the random survey of Americans who completed and mailed in a 16 - page questionnaire .
Conducted in the fall of 2005 , the survey is a statistically representative sampling of the USA by age , gender and race .
The Baylor team will spend two years digging through the findings and releasing reports on subtopics such as civic involvement and volunteerism , then repeat the core questions in fall 2007 to track trends .
The research is funded by the John Templeton Foundation .
Frank Newport , editor in chief of the Gallup Poll , calls the analysis " intriguing .
Baylor was able to ask many more probing questions than the usual surveys . "
Others agree .
The Four Gods breakdown is helpful " if you are trying to understand religion 's impact on society by how people see themselves from the inside , not by observations from outsiders , " says John Green , a senior fellow at the Pew Forum on Religion & Public Life .
God 's ' personality '
Baylor researchers determined the Four Gods breakdown by analyzing questions about God 's personality and engagement .
The survey asked respondents to agree or disagree with any of 10 descriptions of their " personal understanding of what God is like , " including phrases such as " angered by my sins " or " removed from worldly affairs . "
They could check off 16 adjectives they believe describe God , including words such as " absolute , " " wrathful , " " forgiving , " " friendly " or " distant . "
When USA TODAY asked people similar questions , it found views as varied as those of self - described fundamentalist Brian Snider of Madison , Ala. , and Marilyn McGuire , who says she sees God in every sunrise and sunset , flower and kitten at her home on Orcas Island near Seattle .
Snider , 46 , says God is " involved in the affairs of men at all times and he does judge us .
...
We still believe he is angry at sin . "
McGuire , in her late 60s and once an active Episcopalian , now rejects all dogma .
" I have my own system of what I think is true and sacred .
I try to keep myself peaceful and keep myself in a loving state . "
The four visions of God outlined in the Baylor research are n't mutually exclusive .
And they do n't include 5.2 % of Americans who say they are atheists .
( Although 91.8 % said they believe in God , some did n't answer or were n't sure . )
Still , says Baylor 's Christopher Bader , " you learn more about people 's moral and political behavior if you know their image of God than almost any other measure .
It turns out to be more powerful a predictor of social and political views than the usual markers of church attendance or belief in the Bible . "
Though 12.2 % overall say abortion is wrong in all circumstances , the number nearly doubles to 23.4 % for those who see an authoritarian God and slides to 1.5 % for followers of a distant God .
The four categories Highlights of Baylor 's analysis : • The Authoritarian God ( 31.4 % of Americans overall , 43.3 % in the South ) is angry at humanity 's sins and engaged in every creature 's life and world affairs .
He is ready to throw the thunderbolt of judgment down on " the unfaithful or ungodly , " Bader says .
Those who envision
God this way " are religiously and politically conservative people , more often black Protestants and white evangelicals , " Bader says .
" ( They ) want an active , Christian - values - based government with federal funding for faith - based social services and prayer in the schools . "
They 're also the most inclined to say God favors the USA in world affairs ( 32.1 % vs. 18.6 % overall ) .
• The Benevolent God ( 23 % overall , 28.7 % in the Midwest ) still sets absolute standards for mankind in the Bible .
More than half ( 54.8 % ) want the government to advocate Christian values .
But this group , which draws more from mainline Protestants , Catholics and Jews , sees primarily a forgiving God , more like the father who embraces his repentant prodigal son in the Bible , Froese says .
They 're inclined ( 68.1 % ) to say caring for the sick and needy ranks highest on the list of what it means to be a good person .
This is the group in which the Rev. Jeremy Johnston , executive pastor and communications director for his father 's 5,000 - member Southern Baptist congregation in Overland Park , Kan. , places himself .
" God is in control of everything .
He 's grieved by the sin of the world , by any created person who does n't follow him .
But I see ( a ) God ... who loves us , who sees us for who we really are .
We serve a God of the second , third , fourth and fifth chance , " Johnston says .
• The Critical God ( 16 % overall , 21.3 % in the East ) has his judgmental eye on the world , but he 's not going to intervene , either to punish or to comfort .
" This group is more paradoxical , " Bader says .
" They have very traditional beliefs , picturing God as the classic bearded old man on high .
Yet they 're less inclined to go to church or affiliate seriously with religious groups .
They are less inclined to see God as active in the world .
Their politics are definitely not liberal , but they 're not quite conservative , either . "
Those who picture a critical God are significantly less likely to draw absolute moral lines on hot - button issues such as abortion , gay marriage or embryonic stem cell research .
For example , 57 % overall say gay marriage is always wrong compared with 80.6 % for those who see an authoritarian God , and 65.8 % for those who see God as benevolent .
For those who believe in a critical God , it was 54.7 % .
• The Distant God ( 24.4 % overall , 30.3 % in the West ) is " no bearded old man in the sky raining down his opinions on us , " Bader says .
Followers of this God see a cosmic force that launched the world , then left it spinning on its own .
This has strongest appeal for Catholics , mainline Protestants and Jews .
It 's also strong among " moral relativists , " those least likely to say any moral choice is always wrong , and among those who do n't attend church , Bader says .
Only 3.8 % of this group say embryonic stem cell research is always wrong , compared with 38.5 % of those who see an authoritarian God , 22.7 % for those who see God as benevolent and 13.2 % who see God as critical but disengaged .
' God is the universe ' " I still believe in God , " says Joanne Meehl , 56 , of Barre , Mass. , who wrote a book in the mid-'90s called Recovering Catholics .
" But to me God is the universe , not as small as a ' He ' or a ' She ' but bigger than all of that . "
Humanity is on its own , she says .
" People who do wrong are punished in this world , not in the next .
This world is it . "
Some might question whether a survey by Baptist - affiliated Baylor has a conservative Protestant tilt .
For example , there 's no mention of communion or saints — central to Catholic believers .
Also , questions often used " church , " with no mention of synagogues or mosques .
But Baylor researchers say their testing finds people view the word as generic for " house of worship . "
" This work was done by well - respected sociologists of religion , " Green says .
" Baylor is becoming a leading evangelical university in the same way Notre Dame is a leading Catholic university , by doing first - rate objective social science . "
Rodney Stark , former president of the Society for the Scientific Study of Religion and part of the Baylor team , says : " We wanted to break from the past 30 years of narrow questions . " ' Do you believe in God ? '
Everyone says yes .
" If you ask ' Are you a Protestant , Catholic or Jew ? ' people do n't even know what denomination they are today or what the label means . "
A look at religious affiliations across the USA : Baylor sociologists broke down religious affiliation by region , gender , race and age ( percentages ) : Gender Race Age Education West Midwest South East Total Male Female White Black 18-30 31-44 45-64 65 +
High school or less Some college or more Black Protestant 1.3 5.6 7.2 5.0 5.0 2.8 6.9 0 62.5 3.8 5.4 3.9 7.3 5.0 3.0 Evangelical Protestant 31.7 33.7 50.3 13.1 33.6 30.0 36.7 35.4 9.5 39.0 34.9 31.3 33.1 45.4 23.5 Mainline Protestant 17.7 26.0 19.3 26.0 22.1 22.1 22.1 24.1 7.7 20.1 17.6 22.5 28.1 18.0 29.0 Catholic 19.2 22.1 11.5 35.1 21.2 23.8 18.9 22.8 5.0 10.1 23.0 23.7 19.9 22.0 21.4 Jewish 2.2 1.4 1.9 4.7 2.5 2.5 2.4 2.6 3.7 2.7 1.9 2.7 2.9 2.3 3.6 Other 10.3 3.0 2.7 4.6 4.9 6.0 3.9 4.3 6.0 5.7 5.8 4.8 3.5 2.1 6.7 Unaffiliated 17.6 8.3 7.1 11.6 10.8 12.8 9.0 10.8 5.7 18.6 11.4 11.1 5.4 5.2 12.8 Source : Baylor Religion Survey , margin of error +/- 4 percentage points
How the Baylor Religion Survey was done :
The Gallup Organization contacted 3,702 potential respondents on behalf of Baylor University in fall 2005 and asked them to complete a 16 - page bookleton The Values and Beliefs of the American Public — A National Study .
The English - only survey included 77 questions with more than 350 possibleanswers .
More than 46 % of the surveys ( 1,721 ) were completed and returned .
The survey has a margin of error of plus or minus 4 percentage points .
Michelangelo's fresco " La Creazione " depicts the making of man on the ceiling of the Sistine Chapel .
But Americans have their own picture of God .
The most comprehensive national religion surveyto date , written and analyzed by sociologistsat Baylor University and conducted by Gallup , finds that Americans don?t see themselvesthe way the media , politicians or even religionexperts do .
AP 1999 file photo
Genetic trophy hunters , beware .
From Friday next week it will be illegal in the UK to covertly analyse someone ’s DNA .
The Human Genetics Commission ( HGC ) , which advises the UK government , says that such an act constitutes a “ gross intrusion ” on their privacy .
“ Until now there was nothing to stop an unscrupulous journalist from secretly taking an everyday object used by a public figure – for example , a coffee mug – get a DNA sample from it , have it analysed and then publish their genetic information , ” says Helena Kennedy , who chairs the HGC .
When former US president Bill Clinton visited a pub in …
Explore More Topics
Ready to brush up on something new ?
We 've got more to read right this way .
Spending more than we make
If you 're like most people , you 'll be giving your credit cards a healthy workout over the next few weeks .
So this is as good a time as any to consider a few harsh realities .
First off , the Center for American Progress , a liberal - minded think tank , has crunched data from the Federal Reserve and found that Americans for the first time owe more money than they make .
According to the center , average household debt levels topped average after - tax income by more than 29 percent as of this summer .
Moreover , the average family is now spending 14.4 percent of its disposable income on debt repayments -- the largest share since the Fed began collecting such data in 1980 .
" This is an unsustainable trend , " said Christian Weller , senior economist at the center .
" People simply can't borrow at the same rate they 've borrowed in the past . "
According to the Fed , total consumer credit debt , excluding mortgages , hit a record $ 2.4 trillion in September .
Factoring in mortgages , outstanding household debt soars to about $ 12.3 trillion .
MBA BY THE BAY : See how an MBA could change your life with SFGATE 's interactive directory of Bay Area programs .
Average credit card interest rates were running about 13 percent last week .
But you never know .
That 's because credit cards are the only consumer product for which the terms of sale can change after you sign a contract .
Virtually all card agreements include language stipulating that the card provider can change the terms of the deal , including interest rates , " at any time for any reason . "
And as if that did n't seem sufficiently unfair for consumers , do n't forget the universal default provision .
This is an element of many card agreements that allows an issuer to jack up your rates if you miss a payment to another creditor -- even if you 've never been tardy with payments to the issuer in question .
" I think even a lot of the credit card companies find this indefensible , " said Linda Sherry , a spokeswoman for San Francisco 's Consumer Action .
" They just want to get more money out of you whenever they can . "
The American Bankers Association says such " risk - based pricing " allows more people to get credit .
" Outlawing this risk - management tool would have the effect of either restricting credit or raising the cost of credit for everyone , and we would oppose it , " the association said in a statement last year .
And then there are fees .
Card issuers will ding you for almost anything , from paying by phone to using your plastic overseas .
And if you 're ever late with a payment , forget it .
Late fees can run as high as $ 39 .
The federal Government Accountability Office said in a report last month that late fees averaged almost $ 34 last year , up more than 160 percent from $ 13 a decade ago .
The fee for exceeding your credit limit averaged about $ 31 in 2005 , up nearly 140 percent from $ 13 in 1995 .
The GAO also warned that mandatory disclosures by card issuers " have serious weaknesses that likely reduced consumers ' ability to understand the costs of using credit cards . "
It said card issuers ' disclosures are often " poorly organized , burying important information in text or scattering information about a single topic in numerous places . "
Moreover , " the design of the disclosures often made them hard to read , with large amounts of text in small , condensed typefaces and poor , ineffective headings to distinguish important topics from the surrounding text . "
All in all , the world of plastic is an uneven playing field .
This is something that should never be far from mind as you spend the next month or so probably running up your biggest credit card bills of the year .
" Every step of the way , the card companies are looking at you , " Sherry said .
" And they 're looking for ways they can charge you . "
Shifting gears : AAA mailed copies of its privacy policy this month to about 40,000 members in Northern California , Nevada and Utah .
They went to people who do n't get the association 's monthly magazine , which this summer presented readers with a published version of the policy .
Turns out the two versions are slightly but significantly different .
Both the new brochure and the magazine 's privacy policy say AAA routinely collects people 's names , addresses and phone numbers when they become members .
It also gathers more data , such as your driving record and property info , when you apply for insurance or submit a claim .
Both versions say AAA shares members ' data " with companies we have retained to provide services for us " and " as authorized by law . "
( Troubling as that may sound , the association says it does n't in fact share any data with marketers . )
The magazine version goes on to say that if you do n't want to receive marketing pitches from AAA , you can mail in an attached form or make your preference known online at AAA.com .
" This will apply to phone , mail and e-mail , " it says .
However , the newer brochure says that if you want to block phone and mail solicitations , you have to send a letter to AAA .
Going online will allow you to halt only electronic pitches , it says .
The reality is that it can all be done easily online , and you do n't have to send in a letter , which most consumers would n't bother doing .
Cynthia Harris , a AAA spokeswoman , acknowledged that all AAA members can opt out online .
But she said the association 's Web site is undergoing some changes , and no mention of the online opt - out was included in this month 's brochure because AAA did n't want there to be any confusion .
" It 's possible there might be some downtime when the opt - out feature would n't be available , " Harris explained .
It 's just as likely , though , that the online opt - out will be readily available .
Go there first .
I 've had several folks ask me what I think of Google Finance .
There 's already a fair amount of good commentary out there on the topic ( Bambi , TBAiT , Charlene , Matt , Publishing 2.0 , Blodget , and others ) , so I 'm going to answer this in a different way .
Warning :
This is long and not terribly flattering stuff that 's been under mild pressure for a few years now .
You see , I started at Yahoo ! back in 1999 as an engineer working on Yahoo !
Finance .
It was one of the sites I used most often back then , so it was a privilege to get my hands on it and really contribute in a meaningful way .
I spent roughly the next three years working with the good folks in our group , including Katie Stanton , who announced Google Finance a few days ago .
Katie was one of the best people we had in Yahoo !
Finance .
I was disappointed when she left Yahoo a few years back .
I remember chatting with her a few times when she decided to go back to work .
Trying to choose between Yahoo and Google , she asked for opinions .
How time flies ...
Last year I teased her a few times about Google Finance .
Of course , she denied that any such thing was in the works .
Since I knew it was in the works , I was n't surprised when it finally came out .
Nor was I surprised to see her affiliated with the product .
It clearly has a Yahoo !
Finance feel in several areas but with a distinctly Google flavor to it .
I have minor complaints about it , but I think it 's a good start aside from the fixed width home page .
Sadness
So why does this make Jeremy sad ?
It makes me sad because I end up thinking about how Yahoo !
Finance has stagnated for a long time .
It never really recovered from the pain of the dotcom crash .
So many of my old Finance coworkers have either left the company or moved on to other groups ( several moved into Search last year ) .
Heck , I encouraged many of them to get out !
There was a lack of leadership and , even more importantly , a serious LACK OF VISION .
It really disappointed me .
It makes me sad because virtually all of the new / innovative / cool features in Google Finance are things we talked about YEARS ago .
Many of them I 'd lobbied for repeatedly .
Some were even prototyped .
A ticker search that does n't suck .
Charts with overlays for news events .
Blog integration .
Featuring discussions more prominently .
RSS support .
Who 's gonna get " credit " for all that now ?
I 'm not gonna name names ( virtually none of them are around anymore anyway ) , but there was a real lack of leadership in Finance for long time and it really sucked the life out of the group .
Users noticed .
Finance employees noticed .
Other Yahoos noticed .
We all knew it .
And , frankly , I was glad to be out when I moved on ( and the next time and the time after that ) .
Over the years since leaving , I 've made pleas to numerous people in the Finance organization : engineers , product managers , engineering managers , editorial , and so on -- veteran employees and newbies alike .
Push into community more .
Get more into personal finance , not just the high - end Wall Street stuff .
Adopt blogging and syndication .
Get around to those chart improvements we 'd talked about .
Fix up the message boards .
( Remind me to tell the story of how they freaked out when I snuck RSS feeds out back in 2002 .
It took another TWO YEARS before someone re-did that work and finally shipped it .
But the RSS train had already left the station by that time . )
Radio silence .
Last year I started talking about Google Finance and they got a little excited .
They talked more about all the stuff they could maybe do .
Asked for some input ( again ) .
My hope was renewed for a while .
During all that time , I purposely did n't write anything here about my frustration and disappointment .
I 've been accused of using my writing in public as a instrument to instigate internal change at Yahoo .
I 've been accused of complaining in public before talking to folks internally .
So I tried to be a good Yahoo and give my suggestions to anyone who 'd listen .
On the other hand , people tell me they like reading my stuff because it's not sanitized corporate PR speak and I 'm not always painting a rosy picture of what goes on .
Instead , I tell it like it is -- from my point of view , of course .
Well , here we are .
As a company , we need to get better about facing this stuff , dealing with it , and get back to kicking ass .
But I have no idea how to make that happen .
Maybe this will result in some useful discussion somewhere .
There 's a light at the end of the tunnel .
All hope is not lost .
Unlike a small number of Google product launches , this one did n't blow the doors off .
It 's no Gmail or Google Maps .
Yahoo !
Finance is n't out of the game .
But I sure as hell hope this is a wake - up call !
On the flip side , Katie 's a kick - ass product manager and knows the Finance world very well .
I can only imagine what else they 're cooking up .
The clock is ticking .
See Also
Josh Woodward 's take ( he and I worked together for a few years on Y! Finance )
( Remember : I 'm not speaking for my employer ... yada , yada , yada .
See the disclaimer at the bottom of the page . )
Posted by jzawodn at March 22 , 2006 09:20 PM
2006 -09 - 18 Iraq A Marine Intel Officer in Al Anbar Shares Some Thoughts A Marine Intel Officer in Al Anbar Shares Some Thoughts
( Courtesy of former Cpl Denny Argall , USMC )
Via e-mail from a retired Army Colonel friend of mine .
I LOVED " The Best Chuck Norris Moment " but all of it is interesting .
Classification : UNCLASSIFIED
All : I havent written very much from Iraq .
There s really not much to write about .
More exactly , theres not much I can write about because practically everything I do , read or hear is classified military information or is depressing to the point that Id rather just forget about it , never mind write about it .
The gaps in between all of that are filled with the pure tedium of daily life in an armed camp .
So its a bit of a struggle to think of anything to put into a letter that s worth reading .
Worse , this place just consumes you .
I work 18 - 20 - hour days , every day .
The quest to draw a clear picture of what the insurgents are up to never ends .
Problems and frictions crop up faster than solutions .
Every challenge demands a response .
It s like this every day .
Before I know it , I cant see straight , because its 0400 and Ive been at work for twenty hours straight , somehow missing dinner again in the process .
And once again I havent written to anyone .
It starts all over again four hours later .
It s not really like Ground Hog Day , it s more like a level from Dantes Inferno .
Rather than attempting to sum up the last seven months , I figured Id just hit the record setting highlights of 2006 in Iraq .
These are among the events and experiences Ill remember best .
Continued from Page 4
Worst Case of Deja Vu -
I thought I was familiar with the feeling of deja vu until I arrived back here in Fallujah in February .
The moment I stepped off of the helicopter , just as dawn broke , and saw the camp just as I had left it ten months before - that was deja vu .
Kind of unnerving .
It was as if I had never left .
Same work area , same busted desk , same chair , same computer , same room , same creaky rack , same . . . everything .
Same everything for the next year .
It was like entering a parallel universe .
Home wasnt 10,000 miles away , it was a different lifetime .
Most Surreal Moment - Watching Marines arrive at my detention facility and unload a truck load of flex - cuffed midgets .
26 to be exact .
I had put the word out earlier in the day to the Marines in Fallujah that we were looking for Bad Guy X , who was described as a midget .
Little did I know that Fallujah was home to a small community of midgets , who banded together for support since they were considered as social outcasts .
The Marines were anxious to get back to the midget colony to bring in the rest of the midget suspects , but I called off the search , figuring Bad Guy X was long gone on his short legs after seeing his companions rounded up by the giant infidels .
Most Profound Man in Iraq - an unidentified farmer in a fairly remote area who , after being asked by Reconnaissance Marines ( searching for Syrians ) if he had seen any foreign fighters in the area replied  Yes , you . 
Worst City in al - Anbar Province - Ramadi , hands down .
The provincial capital of 400,000 people .
Killed over 1,000 insurgents in there since we arrived in February .
Every day is a nasty gun battle .
They blast us with giant bombs in the road , snipers , mortars and small arms .
We blast them with tanks , attack helicopters , artillery , our snipers ( much better than theirs ) , and every weapon that an infantryman can carry .
Every day .
Incredibly , I rarely see Ramadi in the news .
We have as many attacks out here in the west as Baghdad .
Yet , Baghdad has 7 million people , we have just 1.2 million .
Per capita , al - Anbar province is the most violent place in Iraq by several orders of magnitude .
I suppose it was no accident that the Marines were assigned this area in 2003 .
Bravest Guy in al - Anbar Province - Any Explosive Ordnance Disposal Technician ( EOD Tech ) .
Howd you like a job that required you to defuse bombs in a hole in the middle of the road that very likely are booby - trapped or connected by wire to a bad guy whos just waiting for you to get close to the bomb before he clicks the detonator ?
Every day .
Sanitation workers in New York City get paid more than these guys .
Talk about courage and commitment .
Second Bravest Guy in al - Anbar Province 
It s a 20,000 way tie among all the Marines and Soldiers who venture out on the highways and through the towns of al - Anbar every day , not knowing if it will be their last - and for a couple of them , it will be .
Best Piece of U.S. Gear - new , bullet - proof flak jackets .
O.K. , they weigh 40 lbs and arent exactly comfortable in 120 degree heat , but theyve saved countless lives out here .
Best Piece of Bad Guy Gear - Armor Piercing ammunition that goes right through the new flak jackets and the Marines inside them .
Worst E- Mail Message   The Walking Blood Bank is Activated .
We need blood type A+ stat . 
I always head down to the surgical unit as soon as I get these messages , but I never give blood  theres always about 80 Marines in line , night or day .
Biggest Surprise - Iraqi Police .
All local guys .
I never figured that wed get a police force established in the cities in al - Anbar .
I estimated that insurgents would kill the first few , scaring off the rest .
Well , insurgents did kill the first few , but the cops kept on coming .
The insurgents continue to target the police , killing them in their homes and on the streets , but the cops wont give up .
Absolutely incredible tenacity .
The insurgents know that the police are far better at finding them than we are .
- and they are finding them .
Now , if we could just get them out of the habit of beating prisoners to a pulp . . .
Greatest Vindication - Stocking up on outrageous quantities of Diet Coke from the chow hall in spite of the derision from my men on such hoarding , then having a 122 mm rocket blast apart the giant shipping container that held all of the soda for the chow hall .
Yep , you cant buy experience .
Biggest Mystery -
How some people can gain weight out here .
I m down to 165 lbs .
Who has time to eat ?
Second Biggest Mystery - if theres no atheists in foxholes , then why arent there more people at Mass every Sunday ?
Favorite Iraqi TV Show - Oprah .
I have no idea .
They all have satellite TV .
Coolest Insurgent Act -
Stealing almost $ 7 million from the main bank in Ramadi in broad daylight , then , upon exiting , waving to the Marines in the combat outpost right next to the bank , who had no clue of what was going on .
The Marines waved back .
Too cool .
Most Memorable Scene -
In the middle of the night , on a dusty airfield , watching the better part of a battalion of Marines packed up and ready to go home after six months in al - Anbar , the relief etched in their young faces even in the moonlight .
Then watching these same Marines exchange glances with a similar number of grunts loaded down with gear file past - their replacements .
Nothing was said .
Nothing needed to be said .
Highest Unit Re-enlistment Rate -
Any outfit that has been in Iraq recently .
All the danger , all the hardship , all the time away from home , all the horror , all the frustrations with the fight here - all are outweighed by the desire for young men to be part of a ' Band of Brothers ' who will die for one another .
They found what they were looking for when they enlisted out of high school .
Man for man , they now have more combat experience than any Marines in the history of our Corps .
Most Surprising Thing I Dont Miss - Beer .
Perhaps being half - stunned by lack of sleep makes up for it .
Worst Smell - Porta - johns in 120 degree heat - and that s 120 degrees outside of the porta - john .
Highest Temperature - I dont know exactly , but it was in the porta - johns .
Needed to re-hydrate after each trip to the loo .
Biggest Hassle - High - ranking visitors .
More disruptive to work than a rocket attack .
VIPs demand briefs and battlefield  tours ( we take them to quiet sections of Fallujah , which is plenty scary for them ) .
Our briefs and commentary seem to have no affect on their preconceived notions of whats going on in Iraq .
Their trips allow them to say that theyve been to Fallujah , which gives them an unfortunate degree of credibility in perpetuating their fantasies about the insurgency here .
Biggest Outrage - Practically anything said by talking heads on TV about the war in Iraq , not that I get to watch much TV .
Their thoughts are consistently both grossly simplistic and politically slanted .
Biggest offender - Bill OReilly - what a buffoon .
Best Intel Work - Finding Jill Carrolls kidnappers - all of them .
I was mighty proud of my guys that day .
I figured wed all get the Christian Science Monitor for free after this , but none have showed up yet .
Talk about ingratitude .
Saddest Moment - Having the battalion commander from 1st Battalion , 1st Marines hand me the dog tags of one of my Marines who had just been killed while on a mission with his unit .
Hit by a 60 mm mortar .
Cpl Bachar was a great Marine .
I felt crushed for a long time afterward .
His picture now hangs at the entrance to the Intelligence Section .
Well carry it home with us when we leave in February .
Biggest Ass - Chewing - 10 July immediately following a visit by the Iraqi Deputy Prime Minister , Dr. Zobai .
The Deputy Prime Minister brought along an American security contractor ( read mercenary ) , who told my Commanding General that he was there to act as a mediator between us and the Bad Guys .
I immediately told him what I thought of him and his asinine ideas in terms that made clear my disgust and which , unfortunately , are unrepeatable here .
I thought my boss was going to have a heart attack .
Fortunately , the translator couldnt figure out the best Arabic words to convey my meaning for the Deputy Prime Minister .
Later , the boss had no difficulty in convening his meaning to me in English regarding my Irish temper , even though he agreed with me .
At least the guy from the State Department thought it was hilarious .
We never saw the mercenary again .
Best Chuck Norris Moment - 13 May .
Bad Guys arrived at the government center in the small town of Kubaysah to kidnap the town mayor , since they have a problem with any form of government that does not include regular beheadings and women wearing burqahs .
There were seven of them .
As they brought the mayor out to put him in a pick - up truck to take him off to be beheaded ( on video , as usual ) , one of the bad Guys put down his machinegun so that he could tie the mayors hands .
The mayor took the opportunity to pick up the machinegun and drill five of the Bad Guys .
The other two ran away .
One of the dead Bad Guys was on our top twenty wanted list .
Like they say , you cant fight City Hall .
Worst Sound -
That crack - boom off in the distance that means an IED or mine just went off .
You just wonder who got it , hoping that it was a near miss rather than a direct hit .
Hear it every day .
Second Worst Sound -
Our artillery firing without warning .
The howitzers are pretty close to where I work .
Believe me , outgoing sounds a lot like incoming when our guns are firing right over our heads .
Theyd about knock the fillings out of your teeth .
Only Thing Better in Iraq Than in the U.S. - Sunsets .
Spectacular .
It s from all the dust in the air .
Proudest Moment 
It s a tie every day , watching my Marines produce phenomenal intelligence products that go pretty far in teasing apart Bad Guy operations in al - Anbar .
Every night Marines and Soldiers are kicking in doors and grabbing Bad Guys based on intelligence developed by my guys .
We rarely lose a Marine during these raids , they are so well - informed of the objective .
A bunch of kids right out of high school shouldnt be able to work so well , but they do .
Happiest Moment -
Well , it wasnt in Iraq .
There are no truly happy moments here .
It was back in California when I was able to hold my family again while home on leave during July .
Most Common Thought - Home .
Always thinking of home , of Kathleen and the kids .
Wondering how everyone else is getting along .
Regretting that I dont write more .
Yep , always thinking of home .
I hope you all are doing well .
If you want to do something for me , kiss a cop , flush a toilet , and drink a beer .
Ill try to write again before too long - I promise .
Semper Fi , A Marine Intel Officer in Al Anbar Shares Some Thoughts ( Courtesy of former Cpl Denny Argall , USMC ) Classification : UNCLASSIFIEDAll : I havent written very much from Iraq .
There s really not much to write about .
More exactly , theres not much I can write about because practically everything I do , read or hear is classified military information or is depressing to the point that Id rather just forget about it , never mind write about it .
The gaps in between all of that are filled with the pure tedium of daily life in an armed camp .
So its a bit of a struggle to think of anything to put into a letter that s worth reading .
Worse , this place just consumes you .
I work 18 - 20 - hour days , every day .
The quest to draw a clear picture of what the insurgents are up to never ends .
Problems and frictions crop up faster than solutions .
Every challenge demands a response .
It s like this every day .
Before I know it , I cant see straight , because its 0400 and Ive been at work for twenty hours straight , somehow missing dinner again in the process .
And once again I havent written to anyone .
It starts all over again four hours later .
It s not really like Ground Hog Day , it s more like a level from Dantes Inferno .
Rather than attempting to sum up the last seven months , I figured Id just hit the record setting highlights of 2006 in Iraq .
These are among the events and experiences Ill remember best .
Worst Case of Deja Vu -
I thought I was familiar with the feeling of deja vu until I arrived back here in Fallujah in February .
The moment I stepped off of the helicopter , just as dawn broke , and saw the camp just as I had left it ten months before - that was deja vu .
Kind of unnerving .
It was as if I had never left .
Same work area , same busted desk , same chair , same computer , same room , same creaky rack , same . . . everything .
Same everything for the next year .
It was like entering a parallel universe .
Home wasnt 10,000 miles away , it was a different lifetime .
Most Surreal Moment - Watching Marines arrive at my detention facility and unload a truck load of flex - cuffed midgets .
26 to be exact .
I had put the word out earlier in the day to the Marines in Fallujah that we were looking for Bad Guy X , who was described as a midget .
Little did I know that Fallujah was home to a small community of midgets , who banded together for support since they were considered as social outcasts .
The Marines were anxious to get back to the midget colony to bring in the rest of the midget suspects , but I called off the search , figuring Bad Guy X was long gone on his short legs after seeing his companions rounded up by the giant infidels .
Most Profound Man in Iraq - an unidentified farmer in a fairly remote area who , after being asked by Reconnaissance Marines ( searching for Syrians ) if he had seen any foreign fighters in the area replied  Yes , you .
Worst City in al - Anbar Province - Ramadi , hands down .
The provincial capital of 400,000 people .
Killed over 1,000 insurgents in there since we arrived in February .
Every day is a nasty gun battle .
They blast us with giant bombs in the road , snipers , mortars and small arms .
We blast them with tanks , attack helicopters , artillery , our snipers ( much better than theirs ) , and every weapon that an infantryman can carry .
Every day .
Incredibly , I rarely see Ramadi in the news .
We have as many attacks out here in the west as Baghdad .
Yet , Baghdad has 7 million people , we have just 1.2 million .
Per capita , al - Anbar province is the most violent place in Iraq by several orders of magnitude .
I suppose it was no accident that the Marines were assigned this area in 2003 .
Bravest Guy in al - Anbar Province - Any Explosive Ordnance Disposal Technician ( EOD Tech ) .
Howd you like a job that required you to defuse bombs in a hole in the middle of the road that very likely are booby - trapped or connected by wire to a bad guy whos just waiting for you to get close to the bomb before he clicks the detonator ?
Every day .
Sanitation workers in New York City get paid more than these guys .
Talk about courage and commitment .
Second Bravest
Guy in al - Anbar Province 
It s a 20,000 way tie among all the Marines and Soldiers who venture out on the highways and through the towns of al - Anbar every day , not knowing if it will be their last - and for a couple of them , it will be .
Best Piece of U.S. Gear - new , bullet - proof flak jackets .
O.K. , they weigh 40 lbs and arent exactly comfortable in 120 degree heat , but theyve saved countless lives out here .
Best Piece of Bad Guy Gear - Armor Piercing ammunition that goes right through the new flak jackets and the Marines inside them .
Worst E - Mail Message   The Walking Blood Bank is Activated .
We need blood type A+ stat . 
I always head down to the surgical unit as soon as I get these messages , but I never give blood  theres always about 80 Marines in line , night or day .
Biggest Surprise - Iraqi Police .
All local guys .
I never figured that wed get a police force established in the cities in al - Anbar .
I estimated that insurgents would kill the first few , scaring off the rest .
Well , insurgents did kill the first few , but the cops kept on coming .
The insurgents continue to target the police , killing them in their homes and on the streets , but the cops wont give up .
Absolutely incredible tenacity .
The insurgents know that the police are far better at finding them than we are .
- and they are finding them .
Now , if we could just get them out of the habit of beating prisoners to a pulp . . . Greatest Vindication - Stocking up on outrageous quantities of Diet Coke from the chow hall in spite of the derision from my men on such hoarding , then having a 122 mm rocket blast apart the giant shipping container that held all of the soda for the chow hall .
Yep , you cant buy experience .
Biggest Mystery -
How some people can gain weight out here .
I m down to 165 lbs .
Who has time to eat ?
Second Biggest Mystery - if theres no atheists in foxholes , then why arent there more people at Mass every Sunday ?
Favorite Iraqi TV Show - Oprah .
I have no idea .
They all have satellite TV .
Coolest Insurgent Act - Stealing almost $ 7 million from the main bank in Ramadi in broad daylight , then , upon exiting , waving to the Marines in the combat outpost right next to the bank , who had no clue of what was going on .
The Marines waved back .
Too cool .
Most Memorable Scene -
In the middle of the night , on a dusty airfield , watching the better part of a battalion of Marines packed up and ready to go home after six months in al - Anbar , the relief etched in their young faces even in the moonlight .
Then watching these same Marines exchange glances with a similar number of grunts loaded down with gear file past - their replacements .
Nothing was said .
Nothing needed to be said .
Highest Unit Re-enlistment Rate -
Any outfit that has been in Iraq recently .
All the danger , all the hardship , all the time away from home , all the horror , all the frustrations with the fight here - all are outweighed by the desire for young men to be part of a ' Band of Brothers ' who will die for one another .
They found what they were looking for when they enlisted out of high school .
Man for man , they now have more combat experience than any Marines in the history of our Corps .
Most Surprising Thing I Dont Miss - Beer .
Perhaps being half - stunned by lack of sleep makes up for it .
Worst Smell - Porta - johns in 120 degree heat - and that s 120 degrees outside of the porta - john .
Highest Temperature - I dont know exactly , but it was in the porta - johns .
Needed to re-hydrate after each trip to the loo .
Biggest Hassle - High - ranking visitors .
More disruptive to work than a rocket attack .
VIPs demand briefs and battlefield  tours ( we take them to quiet sections of Fallujah , which is plenty scary for them ) .
Our briefs and commentary seem to have no affect on their preconceived notions of whats going on in Iraq .
Their trips allow them to say that theyve been to Fallujah , which gives them an unfortunate degree of credibility in perpetuating their fantasies about the insurgency here .
Biggest Outrage - Practically anything said by talking heads on TV about the war in Iraq , not that I get to watch much TV .
Their thoughts are consistently both grossly simplistic and politically slanted .
Biggest offender - Bill OReilly - what a buffoon .
Best Intel Work - Finding Jill Carrolls kidnappers - all of them .
I was mighty proud of my guys that day .
I figured wed all get the Christian Science Monitor for free after this , but none have showed up yet .
Talk about ingratitude .
Saddest Moment - Having the battalion commander from 1st Battalion , 1st Marines hand me the dog tags of one of my Marines who had just been killed while on a mission with his unit .
Hit by a 60 mm mortar .
Cpl Bachar was a great Marine .
I felt crushed for a long time afterward .
His picture now hangs at the entrance to the Intelligence Section .
Well carry it home with us when we leave in February .
Biggest Ass - Chewing - 10 July immediately following a visit by the Iraqi Deputy Prime Minister , Dr. Zobai .
The Deputy Prime Minister brought along an American security contractor ( read mercenary ) , who told my Commanding General that he was there to act as a mediator between us and the Bad Guys .
I immediately told him what I thought of him and his asinine ideas in terms that made clear my disgust and which , unfortunately , are unrepeatable here .
I thought my boss was going to have a heart attack .
Fortunately , the translator couldnt figure out the best Arabic words to convey my meaning for the Deputy Prime Minister .
Later , the boss had no difficulty in convening his meaning to me in English regarding my Irish temper , even though he agreed with me .
At least the guy from the State Department thought it was hilarious .
We never saw the mercenary again .
Best Chuck Norris Moment - 13 May .
Bad Guys arrived at the government center in the small town of Kubaysah to kidnap the town mayor , since they have a problem with any form of government that does not include regular beheadings and women wearing burqahs .
There were seven of them .
As they brought the mayor out to put him in a pick - up truck to take him off to be beheaded ( on video , as usual ) , one of the bad Guys put down his machinegun so that he could tie the mayors hands .
The mayor took the opportunity to pick up the machinegun and drill five of the Bad Guys .
The other two ran away .
One of the dead Bad Guys was on our top twenty wanted list .
Like they say , you cant fight City Hall .
Worst Sound -
That crack - boom off in the distance that means an IED or mine just went off .
You just wonder who got it , hoping that it was a near miss rather than a direct hit .
Hear it every day .
Second Worst Sound -
Our artillery firing without warning .
The howitzers are pretty close to where I work .
Believe me , outgoing sounds a lot like incoming when our guns are firing right over our heads .
Theyd about knock the fillings out of your teeth .
Only Thing Better in Iraq Than in the U.S. - Sunsets .
Spectacular .
It s from all the dust in the air .
Proudest Moment 
It s a tie every day , watching my Marines produce phenomenal intelligence products that go pretty far in teasing apart Bad Guy operations in al - Anbar .
Every night Marines and Soldiers are kicking in doors and grabbing Bad Guys based on intelligence developed by my guys .
We rarely lose a Marine during these raids , they are so well - informed of the objective .
A bunch of kids right out of high school shouldnt be able to work so well , but they do .
Happiest Moment -
Well , it wasnt in Iraq .
There are no truly happy moments here .
It was back in California when I was able to hold my family again while home on leave during July .
Most Common Thought - Home .
Always thinking of home , of Kathleen and the kids .
Wondering how everyone else is getting along .
Regretting that I dont write more .
Yep , always thinking of home .
I hope you all are doing well .
If you want to do something for me , kiss a cop , flush a toilet , and drink a beer .
Ill try to write again before too long - I promise .
Semper Fi , Posted by Bobby 2006-09-18 09:23 | | E - Mail|| Front Page|| [ 1252 views since 2007 - 05 - 07 ]
Top
Posted by SOP35 / Rat 2006-09-18 13:57 | | 2006-09-18 13:57 | |
Front Page Top
Posted by eltoroverde 2006-09 - 18 14:16 | | 2006-09-18 14:16 | |
Front Page Top
Posted by trailing wife 2006-09 - 18 14:51 | | 2006-09-18 14:51 | |
Front Page Top
Posted by Bobby 2006-09 - 18 14:54 | | 2006-09-18 14:54 | |
Front Page Top
Posted by tabd 2006-09 - 18 15:07 | | 2006-09-18 15:07 | |
Front Page Top
Posted by tabd 2006-09 - 18 15:09 | | 2006-09-18 15:09 | |
Front Page Top
Posted by Anguper Hupomosing9418 2006-09-18 15:28 | | 2006-09-18 15:28 ||
Front Page Top
Posted by Bobby 2006-09 - 18 15:42 | | 2006-09-18 15:42 | |
Front Page Top
Posted by tabd 2006-09 - 18 15:43 | | 2006-09-18 15:43 | |
Front Page Top
Posted by Old Patriot " >
Old Patriot 2006-09 -18 20:40 | | http://oldpatriot.blogspot.com/] " >[ http://oldpatriot.blogspot.com/]
2006-09-18 20:40 | |
Front Page Top
Posted by RD 2006-09-18 22:57 | | 2006-09-18 22:57 | |
Front Page Top
1. Welfare recipients :
The overwhelming majority of people who receive aid from welfare programs do not receive it for more than a few months at a time .
Less than 20 % of recipients from one year are still on welfare the following year .
Almost everyone wants to be working and earning a living , it is only a small percentage of the population that is cheating the system .
A significant portion of people in this category are people that are mentally ill .
Are these people to blame for their own illness ?
( No ) .
Is the government to blame for kicking these people out of mental institutions and onto the streets where they commit crimes and strain our services ?
( Yes ) .
Another significant chunk is addicted to drugs .
And while you can clearly blame these people for the initial decision to take a drug , how many people in history have chosen to become addicted to a drug ?
While it is debatable whether these people are to blame for their addiction , there is no question that the government is to blame for failing to provide treatment for addicts and for things like the failed invasion of Afghanistan , which helped created the largest poppy crop in history .
A third large group of permanent welfare recipients ( or long - term recipients ) are divorced women with children .
Many of these women took the advice that many conservatives give them -- get married and become stay - at - home mothers .
But when nearly half of all marriages end in divorce ( many of them rightly so ) , what happens to the man and woman afterward ?
The man , on average , has a significant increase in his financial status .
He loses the cost of taking care of a full family and has no negative impact on his career .
Women , on the other hand , lose the primary income they had .
And since many of them had spent years cleaning house and raising children ( both valid and honorable jobs , by the way ) , they were n't spending time obtaining education and experience in the workforce .
So when they are forced , all of a sudden , to go find a job , they do n't have the skills , education or experience to get a good , high - paying job .
And the generally end up with custody of any children , including primary responsibility , in most cases , of paying for most of the bills related to the children .
This translate to a situation where welfare is not only an attractive option , for many it is the only option .
Sure , there is some blame to be laid on the woman who chooses her husband poorly , but the bigger blame is on a system that pushes women to make that choice .
In particular , a lot of the blame on this one can be laid at the feet of conservatives who push marriage like it is the solution to all problems , which it is n't .
2. Children : A large proportion of the recipients of welfare programs are children .
There is no valid argument that children are being irresponsible by receiving government assistance .
Similarly , there is no valid argument suggesting that a child should pay the penalty for the mistakes or problems of their parents .
3 . No real problem :
If we take the above categories out of the equation , we 're left with a really , really small percentage of the population that is cheating or defrauding the system .
Sure , there are some people that totally lack personaly responsibility and are living off the government .
But they are a lot less than 1 % of the population and less than 1 % of the budget , so they really are n't a significant societal problem .
Conservatives like to attack this group because they are defenseless and are an easy target , but they are n't something that causes any real damage to society .
4. Double standard : Conservatives are all about attacking poor people for lacking in personal responsibility , but they rarely , if ever , attack other groups for lacking in responsibility .
They generally oppose government investigations of people accused of corporate crime or ethical lapses in elected office ( unless they are Republicans ) .
They have no problem giving drug users stiffer prison sentences than multi-million dollar embezzlers .
The standard for conservatives is clear -- people who come from conservative groups do n't have to have personal responsibility , but people coming from liberal groups do .
5 . The real cost of welfare :
The programs we are talking about are really , really inexpensive .
All welfare programs for the poor add up to less than $ 200 billion .
Out of a budget of $ 2.7 trillion , we 're talking a relatively small percentage .
Welfare programs for the middle and upper classes , though , add up to nearly a trillion dollars .
If we eliminated every welfare program for the poor , you would not , in any way , notice the difference in your taxes , even if all of the money was refunded .
6 . Everybody gets help : Nobody is successful in America without the help of the government .
Schools , roads , national defense , police , fire fighters , clean air , clean water , safe food , minimum wage , etc. , etc. , -- everyone gets help along the way from the government .
Furthermore , almost everyone recieves help along the way from others , too -- family , friends , legacy enrollments , family inheritance , etc .
But some in society do n't have as much in the way of help from these other areas .
In order to make sure that there really is equality of opportunity in America -- something conservatives champion -- it is necessary , then , for the government to step in and help these people .
7. Learning to be poor : Nobody aspires to be poor .
Few people start out rich and become poor .
Poverty breeds poverty .
If you grow up in a poor household , you are unlikely to gain the knowledge needed to advance in soceity the same way people who grow up middle class or above .
If someone is poor and does n't know how to get out of poverty , how can they possibly teach skills and knowledge they do n't have to their children ?
And if you grow up poor and your parents do n't teach you the skills needed to advance in society , how can you be blamed for that fact ?
I 've worked with poor people and I 've been poor and there are a few things that are nearly universal amongst the poor .
Most poor people have low levels of education .
They do n't have the skills needed to make it through school .
They do n't have the basic skills needed to get even a basic job and keep it .
They do n't have interpersonal skills or many of the things that people refer to as " common sense . "
Many of them are illiterate or read significantly below adult level .
It 's not that they can't get these things , they certainly can , it 's that they do n't automatically have them and they do n't automatically know how to obtain them .
In fact , many people at the bottom of the ladder do n't know that they even need these skills .
If there is a guy in Georgia giving out a million dollars to every person who comes and asks him for it and you never hear about the guy , then you 'll never get your free million dollars .
And even if you do hear about him , if you do n't have any way to get to Georgia , you still wo n't get the money .
8. Morality : We have two million American prisoners in this country .
They all have food , shelter , clothing , and other basic needs met no matter what they do .
We have thousands of enemies of our country in custody , from the lowliest terrorist all the way up to Saddam Hussein -- they all have food , shelter , clothing and other basic needs met no matter what they do .
I do n't know too many conservatives who have a problem with this concept .
But the very same people have a big problem if we make sure that our own law - abiding citizens have food , shelter , clothing and other basic needs met .
We do n't currently do this for all of our poorest citizens and that is 100 % the fault of conservatives who are the people that block such programs .
So what these people are saying is that Saddam Hussein deserves more from our government than does a poor child who has dumb or lazy or mentally ill parents .
That 's immoral by any standard .
9 . Punishment fitting the crime :
The worst part of all this , as far as I 'm concerned , is the idea that conservatives want to punish people for committing a perceived crime with a punishment that is way out of proportion to the supposed offense .
Let 's say that someone is lazy .
Let 's say that they wo n't work no matter what you do to them .
Conservatives would basically advocate a passive death penalty for such a person .
They say no government benefits .
No guaranteed food .
No guaranteed shelter .
No guaranteed clothing .
No guaranteed health care , even in the worst - case scenarios .
Well what happens to human beings who are without food , shelter , clothing and basic medical care ?
They die .
Hunger and homelessness are not valid punishments for the violation of any law in the United States .
So why is it that conservatives argue that we should punish lazy people with hunger and homelessness .
And that 's giving them the benefit of the doubt that poor people actually are lazy ( something I do n't believe is true except in a few extreme cases ) .
We should not allow a form of punishment for something that is legal -- there is no law against laziness -- that is harsher than the penalty for things that are legal .
You could get drunk and drive and kill someone and not be forced to be hungry and homeless .
It 's the same concept as the people who argue that we should be able to shoot looters in times of disaster or crisis .
It is n't legal to shoot people for theft in normal times , why would it be legal when times are tough ?
Besides , there are no arguments that we should be able to shoot price gougers during times of crises and they are committing the exact same crime .
They are n't doing it out of deprivation or need , though , they 're doing it out of pure greed .
Similarly , we do n't punish lazy rich people , do we ?
When 's the last time you saw one of Sam Walton 's kids doing something useful for society ?
But they are certainly amongst the richest people in the world -- through no effort of their own .
We reward rich , lazy people .
We force poor , lazy people to live in homeless shelters and eat out of trash cans .
Now I 'm certainly a firm believer in personal responsibility .
I started out as one of these extremely poor people and made my way up the ladder with the help of welfare programs and financial aid .
Was it easy ?
Hell no .
It was incredibly difficult and I had to fight every step of the way against not only money and social expectations , but against my own learned instincts and lack of knowledge about how to make my way in the world .
Would I have made it without help from a lot of people along the way ?
Absolutley not .
Well , there are a lot of people who do n't get the help I got .
Do they choose to be poor , uneducated and on welfare .
Absolutely no way , but they do n't know how to make it on their own and if they do n't get the help , it is extremely difficult to make it .
Solution :
There really is n't a solution for welfare reform .
It is n't really an issue that needs a solution .
The programs we have work .
We could certainly increase funding and increase requirements for education and job training .
We could also remove the impediments to getting off welfare -- a ridiculously low minimum wage , a lack of universal health care , barriers to education and subsidized child care -- that would make welfare unnecessary , which should be the goal .
We are a long way from that goal , though , and are moving in the wrong direction .
The divided nature of our economy also hurts -- this is a great economy if you are rich , but not so great if you are poor or even middle class .
A return to the Clinton - styled economy would help everyone and help lessen the need for welfare and , at the same time , help more people take personal responsibility .
Judge arrested in Aruba case Fifth suspect in custody after U.S. teen 's disappearance Paul Van Der Sloot was arrested after being questioned by police as a witness over the weekend .
RELATED Gallery : Missing Aruba teen 
Texas team to aid search 
Publicity a concern for tourism 
Was race a factor in arrests ?
 Interactive : Safety tips for travelers YOUR E- MAIL ALERTS Aruba Alabama Crime , Law and Justice or or Create Your Own ORANJESTAD , Aruba ( CNN ) --
An Aruban judge , the father of a 17 - year - old suspect in the disappearance of an Alabama teenager , also has been arrested in the case , the island 's police commissioner said Thursday .
Prosecutors decided to keep Paul Van Der Sloot , 53 , in custody for questioning for 48 hours , Aruba Police Commissioner Jan Van Der Straten said .
Under Aruban law , if there is reasonable suspicion , the prosecutor 's office can order a suspect held as long as another 48 hours .
After that , a judge 's decision is required to keep a suspect in jail .
The legal system in Aruba , an autonomous member of the Kingdom of the Netherlands , is based partly on Dutch civil law .
The father was arrested at about 2 p.m. on suspicion of involvement in the disappearance of Natalee Holloway , an 18 - year - old from suburban Birmingham , Alabama , said prosecution spokeswoman Mariaine Croes .
" At this point he 's a suspect , " Croes said .
" There 's a reasonable suspicion that he knows something and is involved in the disappearance of Ms. Holloway . "
Police questioned him over the weekend in connection with the case .
A law enforcement source close to the investigation said at the time that the judge was interviewed as a witness .
He spent about five hours in the police station Saturday for questioning and was brought in again on Sunday while his wife , Anita , visited their 17 - year - old son , Joran .
Last week , an Aruban judge ruled that Paul Van Der Sloot could not visit his son in jail .
Earlier , authorities had searched Van Der Sloot 's home , seizing two cars and removing bagfuls of evidence .
Anita Van Der Sloot said Thursday her husband 's arrest is " ridiculous . "
" It hurts because my husband gave 15 years of his integrity to this island , and that this could happen is so bizarre . "
" I do n't understand , and I know a lot of people do n't understand , what 's going on , " she said .
" I 'm very angry , but I will hold up . "
" I have to because I believe in my husband , I believe in my son , " she said .
" It will all will be fine . "
She said she met with Joran for about 40 minutes Thursday before receiving word that police were at her home to arrest her husband .
Her son is " doing fine , " she said .
" I know he 's innocent , and he knows he 's innocent . "
Family ' relieved ' Natalee Holloway 's aunt , Marcia Twitty , said her family was " very relieved " by the judge 's arrest .
" Maybe we can get somewhere and finally get these answers that they so desperately , desperately want , " she told CNN from Alabama .
The missing girl 's father , David Holloway , said the arrest " just adds that additional piece to the puzzle .
" How big is the puzzle ?
I do n't know , but the pieces are falling into place and falling into place very quickly , " he told CNN affiliate WBRC .
Natalee 's mother , Beth Holloway Twitty , said Wednesday she 's sure the four young men in custody -- but not formally charged in the case -- have more information to divulge .
" I have no doubt that they know what and who and where and when and why and how .
I have no doubt , " Twitty said on NBC's " Today Show . "
" There are some other individuals , though , that need to be pursued , " she added .
Twitty told CNN she met Tuesday with the parents of Joran Van Der Sloot .
He 's one of the last people reported to have seen Holloway .
She said the Van Der Sloots invited her into their home when she was handing out prayer cards in their neighborhood .
Twitty refused to give details about their 90 - minute discussion .
" I think I walked away with the confirmation that we still have some individuals that we need to pursue , " she said .
Holloway , an honors student from the Birmingham suburb of Mountain Brook , disappeared May 30 after she left a nightclub with Joran Van Der Sloot and brothers Deepak and Satish Kalpoe , ages 21 and 18 respectively , authorities said .
She was in Aruba , a small Caribbean island of 72,000 residents just north of Venezuela , with about 100 classmates to celebrate their recent graduation .
The three men and a fourth suspect , 26 - year - old disc jockey Steve Croes , face accusations of murder and kidnapping leading to murder .
Twitty says she has seen " no evidence whatsoever " that her daughter is dead .
Defense attorneys for Van Der Sloot and the Kalpoes have said their clients maintain their innocence .
Marcia Twitty said that after meeting with the Van Der Sloots , the missing girl 's mother told her : " ' I still feel like that dad knows something about where Natalee is . ' "
" She 's in very close contact with officials , both Aruban and FBI , " she said .
" They talk daily . "
Satish Kalpoe to mom : ' We did n't do anything '
The mother of the Kalpoes said Thursday that one son had admitted he and his brother made up a cover story to protect Joran Van Der Sloot .
Nadira Ramirez told CNN she was permitted to visit son Satish Kalpoe at Aruba 's prison within the past week .
She stressed that the teen told her their story was not planned ahead of Holloway 's disappearance , and she had no advance knowledge of it .
Initially , Ramirez said , her sons had told her and police they dropped Holloway off at the Holiday Inn , where she was staying .
But Satish Kalpoe told his mother later that was a lie aimed at protecting Van Der Sloot .
In fact , he told his mother , he and his brother had dropped Holloway and Van Der Sloot off at the beach by the Marriott hotel , about a mile from the Holiday Inn .
Ramirez 's account echoes comments made by one of two security guards who were arrested June 5 in connection with the case and released June 13 .
The guards , Abraham Jones , 28 , and Mickey John , 30 , were never charged .
After his release , John said Deepak Kalpoe confided to him while they were in jail together that he had lied to police .
( CNN Access ) Ramirez tearfully said her son insisted he and his brother were innocent .
" ' We did n't do anything .
We will be out from here .
Do n't cry , ' " she said he told her .
" I asked him , ' Satish , are you sure you guys did n't do anything ? ' " she said .
She said he responded : " ' No , mama .
We gave that girl and Joran a lift . '
" They do n't even know Natalee .
They said she did n't even introduce herself to them , " she said .
" They do n't know anything else about that . "
Although she has been suffering and unable to eat since her sons ' arrest , Ramirez said she remains confident they will be cleared .
She described her family as a close and traditional Hindu group and said both sons are " good boys . "
Satish does not drink , she said , and while Deepak drinks occasionally , neither youth takes drugs .
CNN's Karl Penhaul and Patrick Oppmann contributed to this report .
Home Page
Get up - to - the minute news from CNN CNN.com gives you the latest stories and video from the around the world , with in - depth coverage of U.S. news , politics , entertainment , health , crime , tech and more .
Home Page
Get up - to - the minute news from CNN CNN.com gives you the latest stories and video from the around the world , with in - depth coverage of U.S. news , politics , entertainment , health , crime , tech and more .
Building a Vector Space Search Engine in Perl
- Building a Vector Space Search Engine in Perl - A Few Words About Vectors - Getting Down To Business - Building the Search Engine - Making it Better - Further Reading
Why waste time reinventing the wheel , when you could be reinventing the engine ?
- Damian Conway
As a Perl programmer , sooner or later you ’ll get an opportunity to build a search engine .
Like many programming tasks - parsing a date , validating an e-mail address , writing to a temporary file - this turns out to be easy to do , but hard to get right .
Most people try end up with some kind of reverse index , a data structure that associates words with lists of documents .
Onto this , they graft a scheme for ranking the results by relevance .
Nearly every search engine in use today - from Google on down - works on the basis of a reverse keyword index .
You can write such a keyword engine in Perl , but as your project grows you will inevitably find yourself gravitating to some kind of relational database system .
Since databases are customized for fast lookup and indexing , it ’s no surprise that most keyword search engines make heavy use of them .
But writing code for them is n’t much fun .
More to the point , companies like Google and Atomz already offer excellent , free search services for small Web sites .
You can get an instant search engine with a customizable interface , and spend no time struggling with Boolean searches , text highlighting , or ranking algorithms .
Why bother duplicating all that effort ?
As Perl programmers , we know that laziness is a virtue .
But we also know that there is more than one way to do things .
Despite the ubiquity of reverse - index search , there are many other ways to build a search engine .
Most of them originate in the field of information retrieval , where researchers are having all kinds of fun .
Unfortunately , finding documentation about these alternatives is n’t easy .
Most of the material available online is either too technical or too impractical to be of use on real - world data sets .
So programmers are left with the false impression that vanilla search is all there is .
In this article , I want to show you how to build and run a search engine using a vector - space model , an alternative to reverse index lookup that does not require a database , or indeed any file storage at all .
Vector - space search engines eliminate many of the disadvantages of keyword search without introducing too many disadvantages of their own .
Best of all , you can get one up and running in just a few dozen lines of Perl .
A Few Words About Vectors
Vector - space search engines use the notion of a term space , where each document is represented as a vector in a high - dimensional space .
There are as many dimensions as there are unique words in the entire collection .
Because a document ’s position in the term space is determined by the words it contains , documents with many words in common end up close together , while documents with few shared words end up far apart .
To search our collection , we project a query into this term space and calculate the distance from the query vector to all the document vectors in turn .
Those documents that are within a certain threshold distance get added to our result set .
If all this sounds like gobbledygook to you , then do n’t worry - it will become clearer when we write the code .
The vector - space data model gives us a search engine with several useful features :
Searches take place in RAM , there is no disk or database access
Queries can be arbitrarily long
Users do n’t have to bother with Boolean logic or regular expressions
It ’s trivially easy to do ‘ find similar ’ searches on returned documents
You can set up a ‘ saved results ’ basket , and do similarity searches on the documents in it
You get to talk about ‘ vector spaces ’ and impress your friends
Getting Down to Business
The easiest way to understand the vector model is with a concrete example .
Let ’s say you have a collection of 10 documents , and together they contain 50 unique words .
You can represent each document as a vector by counting how many times a word appears in the document , and moving that distance along the appropriate axis .
So if Document A contains the sentence “ cats like chicken ” , then you find the axis for cat , move along one unit , and then do the same for like and chicken .
Since the other 47 words do n’t appear in your document , you do n’t move along the corresponding axes at all .
Plot this point and draw a line to it from the origin , and you have your document vector .
Like any vector , it has a magnitude ( determined by how many times each word occurs ) , and a direction ( determined by which words appeared , and their relative abundance ) .
There are two things to notice here :
The first is that we throw away all information word order , and there is no guarantee that the vector will be unique .
If we had started with the sentence “ chickens like cats ” ( ignoring plurals for the moment ) , then we would have ended up with an identical document vector , even though the documents are not the same .
This may seem to be a big limitation , but it turns out that word order in natural language contains little information about content - you can infer most of what a document is about by studying the word list .
Bad news for English majors , good news for us .
The second thing to notice is that with three non-zero values out of a possible 50 , our document vector is sparse .
This will hold true for any natural language collection , where a given document will contain only a tiny proportion of all the possible words in the language .
This makes it possible to build in - RAM search engines even for large collections , although the details are outside the scope of this article .
The point is , you can scale this model up quite far before having to resort to disk access .
To run a vector - space search engine , we need to do the following :
Assemble a document collection Create a term space and map the documents into it Map an incoming query into the same term space Compare the query vector to the stored document vectors Return a list of nearest documents , ranked by distance
Now let ’s see how to implement these steps in Perl .
Building the Search Engine
We ’ll make things easy by starting with a tiny collection of four documents , each just a few words long :
" The cat in the hat " " A cat is a fine pet . "
" Dogs and cats make good pets . "
" I have n't got a hat . "
Our first step is to find all the unique words in the document set .
The easiest way to do this is to convert each document into a word list , and then combine the lists together into one .
Here ’s one ( awful ) way do it :
sub get_words { my ( $ text ) = @_ ; return map { lc $ _ => 1 } map { /( [ a-z\-']+ ) / i } split /\s+/s , $ text ; }
The subroutine splits a text string on whitespace , takes out all punctuation except hyphens and apostrophes , and converts everything to lower case before returning a hash of words .
The curious do statement is just a compact way of creating a lookup hash .
% doc_words will end up containing our word list as its keys , and its values will be the number of times each word appeared .
If we run this ‘ parser ’ on all four documents in turn , then we get a master word list :
a and cat cats dogs fine good got hat have n't i in is make pet pets the
Notice that many of the words in this list are junk words - pronouns , articles , and other grammatical flotsam that ’s not useful in a search context .
A common procedure in search engine design is to strip out words like these using a stop list .
Here ’s the same subroutine with a rudimentary stop list added in , filtering out the most common words :
our % stop_hash ; our @stop_words = qw / i in a to the it have have n't was but is be from / ; foreach @stop_words { $stop_hash {$_}++ } ; sub get_words { #
Now with stop list action ! my ( $ text ) = @_ ; return map { $ _ => 1 } grep { !( exists $ stop_hash {$_} ) } map lc , map { /( [ a -z\ -' ] + ) / i } split /\s+/s , $ text ; }
A true stop list would be longer , and tailored to fit our document collection .
You can find a real stop list in the DATA section of Listing 1 , along with a complete implementation of the search engine described here .
Note that because of Perl ’s fast hash lookup algorithm , we can have a copious stop list without paying a big price in program speed .
Because word frequencies in natural language obey a power - law distribution , getting rid of the most common words removes a disproportionate amount of bulk from our vectors .
Here is what our word list looks after we munge it with the stop list :
cat cats dogs fine good got hat make pet pets
We ’ve narrowed the list down considerably , which is good .
But notice that our list contains a couple of variants ( “ cat ” and “ cats ” , “ pet ” and “ pets ” ) , that differ only in number .
Also note that someone who searches on ‘ dog ’ in our collection wo n’t get any matches , even though ‘ dogs ’ in the plural form is a valid hit .
That ’s bad .
This is a common problem in search engine design , so of course there is a module on the CPAN to solve it .
The bit of code we need is called a stemmer , a set of heuristics for removing suffixes from English words , leaving behind a common root .
The stemmer we can get from CPAN uses the Porter stemming algorithm , which is an imperfect but excellent way of finding word stems in English .
use Lingua :: Stem ;
We ’ll wrap the stemmer in our own subroutine , to hide the clunky Lingua : : Stem syntax :
sub stem { my ( $ word ) = @_ ; my $ stemref = Lingua : : Stem : : stem ( $ word ) ; return $ stemref - > [ 0 ] ; }
And here ’s how to fold it in to the get_words subroutine :
return map { stem ( $_ ) => 1 } grep { !( exists $ stop_hash {$_} ) } map lc , map { /( [ a -z\ -' ] + ) / i } split /\s+/s , $ text ;
Notice that we apply our stop list before we stem the words .
Otherwise , a valid word like beings ( which stems to be ) would be caught by the overzealous stop list .
It ’s easy to make little slips like this in search algorithm design , so be extra careful .
With the stemmer added in , our word list now looks like this :
cat dog fine good got hat make pet
Much better !
We have halved the size of our original list , while preserving all of the important content .
Now that we have a complete list of content words , we ’re ready for the second step - mapping our documents into the term space .
Because our collection has a vocabulary of eight content words , each of our documents will map onto an eight - dimensional vector .
Here is one example :
# A cat is a fine pet $ vec = [ 1 , 0 , 1 , 0 , 0 , 0 , 1 ] ;
The sentence “ A cat is a fine pet ” contains three content words .
Looking at our sorted list of words , we find cat , fine , and pet at positions one , three , and eight respectively , so we create an anonymous array and put ones at those positions , with zeroes everywhere else .
If we wanted to go in the opposite direction , then we could take the vector and look up the non-zero values at the appropriate position in a sorted word list , getting back the content words in the document ( but no information about word order ) .
The problem with using Perl arrays here is that they wo n’t scale .
Perl arrays eat lots of memory , and there are no native functions for comparing arrays to one another .
We would have to loop through our arrays , which is slow .
A better data way to do it is to use the PDL module , a set of compiled C extensions to Perl made especially for use with matrix algebra .
You can find it on the CPAN .
PDL stands for “ Perl Data Language ” , and it is a powerful language indeed , optimized for doing math operations with enormous multidimensional matrices .
All we ’ll be using is a tiny slice of its functionality , the equivalent of driving our Ferrari to the mailbox .
It turns out that a PDL vector ( or “ piddle ” ) looks similar to our anonymous array :
use PDL ; my $vec = piddle [ 1 , 0 , 1 , 0 , 0 , 0 , 1 ] ; > print $vec [ 1 0 0 1 0 0 0 1 ]
We give the piddle constructor the same anonymous array as an argument , and it converts it to a smaller data structure , requiring less storage .
Since we already know that most of our values in each document vector will be zero ( remember how sparse natural language is ) , passing full - length arrays to the piddle constructor might get a little cumbersome .
So instead we ’ll use a shortcut to create a zero - filled piddle , and then set the non-zero values explicitly .
For this we have the zeroes function , which takes the size of the vector as its argument :
my $ num_words = 8 ; my $vec = zeroes $ num_words ; > print $ vec [ 0 0 0 0 0 0 0 0 0 ]
To set one of the zero values to something else , we ’ll have to use the obscure PDL syntax :
my $ value = 3 ; my $ offset = 4 ; index ( $vec , $ offset ) .= $ value ; > print $ vec ; [ 0 0 0 3 0 0 0 0 0 ]
Here we ’ve said “ take this vector , and set the value at position 4 to 3 ” .
This turns out to be all we need to create a document vector .
Now we just have to loop through each document ’s word list , and set the appropriate values in the corresponding vector .
Here ’s a subroutine that does the whole thing :
# $ word_count is the total number of words in collection # % index is a lookup hash of word to its position in the master list sub make_vector { my ( $ doc ) = @_ ; my % words = get_words ( $ doc ) ; my $ vector = zeroes $ word_count ; foreach my $w ( keys % words ) { my $ value = $ words {$w} ; my $ offset = $ index { $w} ; index ( $ vector , $ offset ) .= $ value ; } return $ vector ; }
Now that we can generate a vector for each document in our collection , as well as turn an incoming query into a query vector ( by feeding the query into the make_vector subroutine ) , all we ’re missing is a way to calculate the distance between vectors .
There are many ways to do this .
One of the simplest ( and most intuitive ) is the cosine measure .
Our intuition is that document vectors with many words in common will point in roughly the same direction , so the angle between two document vectors is a good measure of their similarity .
Taking the cosine of that angle gives us a value from zero to one , which is handy .
Documents with no words in common will have a cosine of zero ; documents that are identical will have a cosine of one .
Partial matches will have an intermediate value - the closer that value is to one , the more relevant the document .
The formula for calculating the cosine is this :
cos = ( V1 * V2 ) / || V1|| x | |V2 | |
Where V2 and V2 are our vectors , the vertical bars indicate the 2 - norm , and the * indicates the inner product .
You can take the math on faith , or look it up in any book on linear algebra .
With PDL , we can express that relation easily :
sub cosine { my ( $ vec1 , $ vec2 ) = @_ ; my $ n1 = norm $ vec1 ; my $ n2 = norm $ vec2 ; my $ cos = inner ( $ n1 , $ n2 ) ; # inner product return $ cos -> sclr ( ) ; # converts PDL object to Perl scalar }
We can normalize the vectors to unit length using the norm function , because we ’re not interested in their absolute magnitude , only the angle between them .
Now that we have a way of computing distance between vectors , we ’re almost ready to run our search engine .
The last bit of the puzzle is a subroutine to take a query vector and compare it against all of the document vectors in turn , returning a ranked list of matches :
sub get_cosines { my ( $ query_vec ) = @_ ; my % cosines ; while ( my ( $ id , $ vec ) = each % document_vectors ) { my $ cosine = cosine ( $ vec , $ query_vec ) ; next unless $ cosine > $ threshold ; $ cosines {$id} = $ cosine ; } return % cosines ; }
This gives us back a hash with document IDs as its keys , and cosines as its values .
We ’ll call this subroutine from a search subroutine that will be our module ’s interface with the outside world :
sub search { my ( $ query ) = @_ ; my $ query_vec = make_vector ( $ query ) ; my %results = get_cosines ( $ query_vec ) ; return %results ; }
All that remains is to sort the results by the cosine ( in descending order ) , format them , and display them to the user .
You can find an object - oriented implementation of this code in Listing 1 , complete with built - in stop list and some small changes to make the search go faster ( for the curious , we normalize the document vectors before storing them , to save having to do it every time we run the cosine subroutine ) .
Once we ’ve actually written the code , using it is straightforward :
use Search : : VectorSpace ; my @docs = get_documents_from_somewhere( ) ; my $ engine = Search : : VectorSpace -> new ( docs => \@docs ) ; $ engine ->build_index ( ) ; $ engine->set_threshold ( 0.8 ) ; while ( my $ query = <> ) { my %results = $ engine -> search ( $ query ) ; foreach my $ result ( sort { $ results { $b} < = > $ results { $a} } keys % results ) { print " Relevance : " , $ results { $ result} , "
" ; print $ result , "
" ; } print " Next query ?
" ; }
And there we have it , an instant search engine , all in Perl .
Making It Better
There are all kinds of ways to improve on this basic model .
Here are a few ideas to consider :
Better parsing
Our get_words subroutine is rudimentary - the code equivalent of a sharpened stick .
For one thing , it will completely fail on text containing hyperlinks , acronyms or XML .
It also wo n’t recognize proper names or terms that contain more than one word ( like “ Commonwealth of Independent States ” ) .
You can make the parser smarter by stripping out HTML and other markup with a module like HTML :: TokeParser , and building in a part - of - speech tagger to find proper names and noun phrases ( look for our own Lingua : : Tagger : : En , coming soon on the CPAN ) .
Non-English Collections
Perl has great Unicode support , and the vector model does n’t care about language , so why limit ourselves to English ?
As long as you can write a parser , you can adapt the search to work with any language .
Most likely you will need a special stemming algorithm .
This can be easy as pie for some languages ( Chinese , Italian ) , and really hard for others ( Arabic , Russian , Hungarian ) .
It depends entirely on the morphology of the language .
You can find published stemming algorithms online for several Western European languages , including German , Spanish and French .
Similarity Search
It ’s easy to add a “ find similar ” feature to your search engine .
Just use an existing document vector as your query , and everything else falls into place .
If you want to do a similarity search on multiple documents , then add the vectors together .
Term Weighting
Term weighting is a fancy way of saying “ some words are more important than others ” .
Done properly , it can greatly improve search results .
You calculate weights when building document vectors .
Local weighting assigns values to words based on how many times they appear in a single document , while global weighting assigns values based on word frequency across the entire collection .
The intuition is that rare words are more interesting than common words ( global weighting ) , and that words that appear once in a document are not as relevant as words that occur multiple times ( local weighting ) .
Incorporating Metadata
If your documents have metadata descriptors ( dates , categories , author names ) , then you can build those in to the vector model .
Just add a slot for each category , like you did for your keywords , and apply whatever kind of weighting you desire .
Exact Phrase Matching
You can add arbitrary constraints to your result set by adding a chain of filters to your result set .
An easy way to do exact phrase matching is to loop through your result set with a regular expression .
This kind of post - processing is also a convenient way to sort your results by something other than relevance .
Further Reading
There ’s a vast body of material available on search engine design , but little of it is targeted at the hobbyist or beginner .
The following are good places to start :
http://hotwired.lycos.com/webmonkey/code/97/16/index2a.html?collection=perl
This Webmonkey article dates back to 1997 , but it ’s still the best tutorial on writing a reverse index search engine in Perl .
http://moskalyuk.com/software/perl/search/kiss.htm
An example of a simple keyword search engine - no database , just a deep faith in Perl ’s ability to parse files quickly .
http://www.movabletype.org/download.shtml
Movable Type is a popular weblog application , written in Perl .
The search engine lives in MT :: App::Search , and supports several advanced features .
It ’s not pretty , but it ’s real production code .
http://jakarta.apache.org/lucene/docs/index.html
Lucene is a Java - based keyword search engine , part of the Apache project .
It ’s a well - designed , open - source search engine , intended for larger projects .
The documentation discusses some of the challenges of implementing a large search engine ; it ’s worth reading even if you do n’t know Java .
http://mitpress.mit.edu/catalog/item/default.asp?ttype=2&tid=3391
Foundations of Statistical Natural Language Processing , MIT Press ( hardcover textbook ) .
Do n’t be put off by the title - this book is a fantastic introduction to all kinds of issues in text search , and includes a thorough discussion of vector space models .
http://www.nitle.org/lsi/intro/
An introduction to latent semantic indexing , the vector model on steroids .
The document is aimed at nontechnical readers , but gives some more background information on using vector techniques to search and visualize data collections .
The adventurous can also download some Perl code for latent semantic indexing at http://www.nitle.org/lsi.php.
Both the code and the article come from my own work for the National Institute for Technology and Liberal Education .
I was reminded of the story when reading Patrick Cockburn 's The Occupation , a vivid account of war and resistance in Iraq which is published by Verso this week .
Cockburn describes a visit to Dhuluaya , a fruit - growing region 50 miles north of Baghdad , where , early on in the occupation , the American military cut down ancient date palms and orange and lemon trees as part of a collective punishment for farmers who had failed to inform them about guerrilla attacks .
This vandalism will be remembered for generations because it was senseless and to the Iraqi mind powerfully symbolises the malice of the occupiers .
' At times , ' Cockburn says of the period just after the invasion , 'it seemed as if the American military was determined to provoke an uprising . '
Well , now they 've got it , a ferocious war that in the last three months alone has cost 10,000 lives , most of them Iraqi .
There seems no end to it and as Cockburn writes in his conclusion , instead of asserting America 's position as the sole superpower , the occupation has amply demonstrated the limits of US power .
The precise opposite of the desired effect was also achieved in the idiotically named ' War on Terror ' .
By the admission of intelligence services on both sides of the Atlantic , Iraq has galvanised terrorism .
Sections of a US National Intelligence estimate that were declassified last week say the war has become the ' cause celebre for jihadist ' and that ' jihadists regard Europe as an important venue for attacking Western interests ' .
This is not the view of a few CIA desk officers , but the shared verdict of 16 branches of US intelligence .
At the end of bad week in publicity terms , the White House has to deal with Bob Woodward 's new book , State of Denial , which reveals that Bush ignored the mounting insurrection in Iraq and that the White House was riven with disputes over the war between the Cheney / Rumsfeld faction and the former Secretary of State , Colin Powell , and Andrew Card , a former chief of staff .
Rumsfeld is depicted as arrogant and contemptuous of other members of the administration as well as being totally disengaged from the details of occupying and reconstructing Iraq , which was then the Pentagon 's responsibility .
There is an alarming sense of drift in the policy - making on both sides of the Atlantic , an unreality and , to use Woodward 's word , denial .
A leaked document , believed to have been written by a British MI6 officer attached to the Ministry of Defence , pulls no punches : ' The war on Iraq , ' it says , 'has acted as a recruiting sergeant for extremists across the Muslim world ...
Iraq has served to radicalise an already disillusioned youth and al - Qaeda has given them the will , intent , purpose and ideology to act . '
Any number of commentators and some politicians , for instance , Al Gore , Senator Robert Byrd in the US and Ken Clarke and Robin Cook in Britain , predicted precisely this outcome in the run-up to the war .
Bush and Blair never heeded the advice .
Only a tenth of the US document was published , but it is enough to undermine the campaign by the administration over the last few weeks to portray Iraq as an essential part of the war on terror and of making Americans safe at home .
It 's a lie of monumental proportions which exceeds even Downing Street 's manipulation of the September 2002 WMD dossier .
Iraq has done the opposite of making America safe and with five weeks to go to the mid-term congressional elections , the Democrats now have an opportunity to make that case .
Bill Clinton has urged his party to go on the offensive about the war and on Bush 's woeful negligence over the threat posed by bin Laden .
He went on Fox TV last Sunday and made the case about bin Laden in a pugnacious interview with Chris Wallace , pointing out that it was his successor , not he , who had downgraded the al - Qaeda threat and demoted the counterterror expert who so feared bin Laden .
Confirmation of the Bush administration 's lassitude comes in Woodward 's book .
In July of 2001 , two months before the September attacks , he reveals that the head of the CIA , George Tenet , and his counterterrorism chief , J Cofer Black , met Condoleezza Rice , then National Security Adviser , to impress upon her the seriousness of the intelligence about an attack .
Both men felt that she had not taken the warnings seriously .
Five years on , it is still terribly important to fight for the accurate record of what happened .
For instance , last week Jack Straw appeared on Question Time and stated that Tony Blair did not know until ' late ' of America 's plans to attack Iraq .
That is not true .
It has been established that on 22 September 2001 , 11 days after the al - Qaeda attacks , Blair attended a dinner with Bush , Colin Powell and Christopher Meyer during which the attack on Iraq was raised not just as matter of idle speculation .
Is that late ?
No , Blair was on board from a very early stage .
Given the state of Iraq , the diaspora of terror cells , the scandals of torture and extra- judicial punishment in Guantanomo and Britain , it is remarkable that Blair is still Prime Minister , that no member of the war cabinet has apologised for this calamitous record and that the Labour party has not signalled its remorse in the slightest way .
Last week 's conference was devoted to a series of setpieces in which those responsible for the greatest foreign policy disaster since the Second World War were allowed to posture in front of a largely compliant audience .
I had the advantage of reading and not seeing Blair 's speech , which meant that I was n't exposed to his demonic charm and did not fall into the swoon that afflicted so many colleagues .
I urge you to find the speech on the Labour party website and read exactly what he said and , while you 're about it , look up John Reid 's speech , too .
Both their statements on liberty are enough to give you an idea of the profound threat they represent to British democracy , to the traditions of open and accountable government , to the previous requirement that politicians accept responsibility for failed policies .
Blair 's speech dealt with terrorism in the following sentences .
' This terrorism is n't our fault .
We did n't cause it .
It 's not the consequence of foreign policy .
It 's an attack on our way of life . '
He might have said that on 12 September 2001 and he would have been right , but five years later , it is his and Bush 's response to the threat - the invasion of Iraq - that has provided stimulus to the growth of terrorism and made the clash of civilisations a frightening possibility .
Nowhere in his speech did he acknowledge this .
How could he without interfering with the delicate business of moulding his legacy ?
Apparently , he was n't heckled and no one in the hall fell off their chair laughing when he said he would dedicate the rest of his time in office to advancing peace between Israel and Palestinians .
That agenda was his reason for wiring British foreign policy into the White House .
But he got nowhere with Israel at a time when Bush needed him , which leads one to suppose that he does n't have a hope in hell now that he has served Bush 's purpose .
The only satisfaction to take out of this terrible episode is that the true account of what happened before the invasion of Iraq and why is being assembled despite Bush and Blair 's efforts to distort the record .
What we do now is an altogether harder task .
It will need a new generation of leaders to attempt to right the wrongs and set the West on a new course .
But they will always have the memories of senseless destruction to contend with .
henry.porter@observer.co.uk
Lazy Backup
If there ’s one thing good UI designers know , it ’s that the best UI is not to have one at all .
Applications should just save , security should just work , and computers should just backup .
Apparently that last task is a harder than it appears , since I still have n’t found decent backup software for Unix ( OS X and GNU / Linux ) .
Here is how the software should work :
I install it .
I point it at some storage server ( ideally Amazon EC2 and S3 , but if that ’s too hard then a GNU / Linux server with a large drive ) .
I give it a maximum space limit ( e.g. store no more than 200 GB ) .
I give it a maximum up - bandwidth limit ( e.g. use no more than 5K / s ) .
I tell it to run .
From then on , it should just work .
In the background , it will upload my files to the server using only 5 K/s of bandwidth .
If I get disconnected from the Internet or reboot my computer , when I get back on it will pick up where it left off .
If a file changes it will only send the diff and store that as well .
When I run out of disk space it will delete the old diffs .
It will preserve all the Unix ACLs and permissions and weird Mac OS X resource forks and stuff so that if my drive ever dies I can make a full bootable restore from the backup .
Does this software exist ?
The closest I ’ve seen is rdiff - backup , which is very nice but fails to automate some key steps .
If it does n’t exist , let me know if you ’re interested in writing it ( a wrapper around rdiff - backup to do it should n’t be too hard , I would think ) .
I ’d be willing to offer a bounty .
You should follow me on twitter here .
November 29 , 2006
Sienna Miller and her mom
Jo donned the latest in Hawaiian hoedown chic while partying in Niagara Falls , Canada Monday night .
The Millers danced the night away at a local casino and were joined by Sienna 's " Camille " co-star - and rumored new beau - James Franco .
While the mom and daughter duo opted for matching green floral blouses and pink cowboy hats , James kept it cool in jeans and a blazer .
Bush says domestic spying to continue Eavesdropping on citizens who are suspected of terrorist links is legal , he asserts
WASHINGTON - President Bush vowed Monday to continue the eavesdropping on Americans suspected of terrorist ties and said he assumed the government already is investigating who may have alerted reporters about the controversial spying program .
In a news conference at the White House , the president defended his repeated authorization of the wiretapping , without asking any court for search warrants , on international telephone calls and e-mails between suspected al - Qaida members and their associates .
He said the spying by the National Security Agency is legal and has worked to thwart terrorist attacks against the U.S .
He refused , however , to give any details .
" Do I have the legal authority to do this ?
The answer is , absolutely , " Bush said .
" I 've reauthorized this program more than 30 times since the September the 11th attacks , and I intend to do so for so long as the nation faces the continuing threat of an enemy that wants to kill our American citizens . "
Later in the day , critics continued to imply that Bush had acted outside the law .
" We will not tolerate a president who believes that he is the sole decision - maker when it comes to the policies that this country should have in the war against terror and the policies we should have to protect the rights of completely innocent Americans , " Sen .
Russ Feingold , D - Wis. , said at a Capitol Hill news conference .
" He is the president , not a king . "
Bush said the terrorist threat continues , and he expressed frustration that the Senate has failed to renew the USA Patriot Act , the anti-terror law with some provisions that otherwise expire at the end of the month .
Opponents say the law may trample on civil liberties .
The president said he has not ordered any investigation to determine who , if anyone , leaked information on the spying program to the New York Times , but he presumes one is under way .
" My personal opinion is it was a shameful act , for someone to disclose this very important program in time of war , " he said .
" The fact that we 're discussing this program is helping the enemy . "
The Justice Department would not comment on whether it is investigating .
The year - ender news conference was the latest in a series of Bush appearances , including Sunday night 's televised address from the Oval Office , aimed at stanching criticism of the war in Iraq and Bush 's slide in popularity polls .
It came shortly after U.S. Attorney General Alberto Gonzales told reporters the administration believes the spying program was authorized by the Constitution and by Congress in its resolution authorizing the terror war shortly after the Sept. 11 , 2001 , al - Qaida attacks on the World Trade Center and the Pentagon that killed more than 3,000 people .
Gonzales said the U.S. Supreme Court has acknowledged the president 's powers in wartime , particularly when it decided last year that Congress had authorized the detention of a U.S. citizen captured on the battlefield as an " enemy combatant . "
The high court likely would uphold the administration 's spying as well , even though Congress did not specifically authorize it , he said .
" We believe that the court would apply the same reasoning to recognize the authorization by Congress to engage in this kind of electronic surveillance , " Gonzales said .
Failing that , he said , the Constitution itself gives the president , as commander - in - chief , broad wartime powers .
Bush also made that point , saying that while he is mindful of privacy concerns , it is his responsibility to do whatever is necessary to protect the American people in time of war .
He also said the White House briefed congressional leaders about the spying more than a dozen times .
But lawmakers said they were shocked at the decision to bypass the Foreign Intelligence Surveillance Act , under which a special court , acting in secret , can approve electronic surveillance — either before or after telephones have been tapped .
The FISA courts have rejected administration requests for wiretapping only a few times since the law was passed in 1978 , officials have said .
Several Republican and Democratic senators agreed with Senate Judiciary Chairman Arlen Specter , R - Pa. , that legislative hearings should be held on the issue early next year .
" Where does he find in the Constitution the authority to tap the wires and the phones of American citizens without any court oversight ? " asked Sen. Carl Levin , D - Mich . " ... Notifying some members of Congress , if he did , that he 's taken the law into his own hands — that is not a check on the executive branch , nor is the fact that he gets opinions from six lawyers in the executive branch , all under his control , that he can do this .
That 's not a check .
A check is what is in the law . "
Levin and other senators demanded that the eavesdropping be conducted only under FISA .
Bush told reporters the administration monitors the spying to make sure it complies with the Constitution and that the program without search warrants was needed to move swiftly against would - be attackers .
patty.reinert@chron.com
Growth in information technology is particularly rapid : we 're doubling its power , as measured by price - performance , bandwidth , capacity and many other measures , every year or so .
That 's a factor of 1000 in 10 years , a million in 20 years , and a billion in 30 years , although a slow , second level of exponential growth means that a billion - fold improvement takes only about a quarter of a century .
The exponential growth of computing goes back over a century and covers five main paradigms : · Electromechanical computing as used in the 1890 US census .
· Relay - based computing as used to crack Nazi cryptography in the early 1940s .
· Vacuum - tube - based computing as used by CBS to predict the election of Dwight Eisenhower as US president in 1952 .
· Discrete - transistor - based computing as used in the first space launches in the 1960s .
· Computing based on integrated circuits , invented in 1958 and applied to mainstream computing from the late 1960s .
Each time it became apparent that one paradigm was about to run out of steam , the realisation resulted in research pressure to create the next paradigm .
Today we have more than a decade left in the paradigm of shrinking transistors on an integrated circuit , but there has already been enormous progress in creating the sixth main computing paradigm of three - dimensional molecular computing , using carbon nanotubes for example .
As another example , it took us 14 years to sequence the genome of HIV ; SARS took only 31 days .
The result is that we can reliably predict such measures as price - performance and capacity of a broad variety of information technologies .
There are many things we cannot dependably anticipate .
Our inability to make reliable predictions applies to any specific project .
But the overall capabilities of information technology in each field can be projected .
I have been making predictions of this type for more than 20 years .
We see examples in other areas of science of very smooth and reliable outcomes resulting from the interaction of a great many unpredictable events .
Consider that predicting the path of a single molecule in a gas is essentially impossible , but predicting the properties of the entire gas - comprised of a great many chaotically interacting molecules - can be done very reliably through the laws of thermodynamics .
Analogously , it is not possible to reliably predict the results of a specific project or company , but the overall capabilities of information technology , comprised of many chaotic activities , can nonetheless be dependably anticipated through what I call the law of accelerating returns .
Between 2000 and 2014 we 'll make 20 years of progress at 2000 rates , equivalent to the entire 20th century .
And then we 'll do the same again in only seven years .
To express this another way , we wo n't experience 100 years of technological advance in the 21st century ; we will witness in the order of 20,000 years of progress when measured by the rate of progress in 2000 , or about 1000 times that in the 20th century .
Ultimately , we will merge with our technology .
As we get to the 2030s , the non-biological portion of our intelligence will predominate .
By the 2040s it will be billions of times more capable than the biological part .
Above all , information technologies will grow at an explosive rate .
And information technology is the technology that we need to consider .
Ultimately , everything of value will become an information technology : our biology , our thoughts and thinking processes , manufacturing and many other fields .
As one example , nanotechnology - based manufacturing will enable us to apply computerised techniques to automatically assemble complex products at the molecular level .
This will mean that by the mid 2020s we will be able to meet our energy needs using very inexpensive nanotechnology - based solar panels that will capture the energy in 0.03 per cent of the sunlight that falls on the Earth , which is all we need to meet our projected energy needs in 2030 .
A common objection is that there must be limits to exponential growth , as in the example of rabbits in Australia .
The answer is that there are , but they 're not very limiting .
By 2020 , $ 1000 will purchase 1016 calculations per second ( cps ) of computing ( compared with about 109 cps today ) , which is the level I estimate is required to functionally simulate the human brain .
Another few decades on , and we will be able to build more optimal computing systems .
For example , one cubic inch of nanotube circuitry would be about 100 million times more powerful than the human brain .
The ultimate 1 - kilogram computer - about the weight of a laptop today - which I envision late in this century , could provide 1042 cps , about 10 quadrillion ( 1016 ) times more powerful than all human brains put together today .
And that 's if we restrict the computer to functioning at a cold temperature .
If we find a way to let it get hot , we could improve that by a factor of another 100 million .
And we 'll devote more than 1 kilogram of matter to computing .
We 'll use a significant portion of the matter and energy in our vicinity as a computing substrate .
Our growing mastery of information processes means the 21st century will be characterised by three great technology revolutions .
We are now in the early stages of the " G " revolution ( genetics , or biotechnology ) .
Biotechnology is providing the means to change your genes : not just designer babies but designer baby boomers .
But perfecting our biology will only get us so far .
Biology will never be able to match what we will be capable of engineering , now that we are gaining a deep understanding of biology 's principles of operation .
That will bring us to the " N " or nanotechnology revolution , which will achieve maturity in the 2020s .
There are already early impressive experiments .
A biped nanorobot created by Nadrian Seeman and William Sherman , of New York University , can walk on legs only 10 nanometres long , demonstrating the ability of nanoscale machines to execute precise manoeuvres .
Microchips of Bedford , Massachusetts , has developed a computerised device that , when implanted under the skin , delivers precise mixtures of medicines from hundreds of nanoscale wells inside it .
There are many other examples .
By the 2020s , nanotechnology will enable us to create almost any physical product we want from inexpensive materials , using information processes .
We will be able to go beyond the limits of biology , and replace your current " human body version 1.0 " with a dramatically upgraded version 2.0 , providing radical life extension .
The " killer app " of nanotechnology is " nanobots " , blood - cell - sized robots that can travel in the bloodstream destroying pathogens , removing debris , correcting errors in DNA and reversing ageing processes .
We 're already in the early stages of augmenting and replacing each of our organs , even portions of our brains with neural implants , the most recent versions of which allow patients to download new software to their implants .
The most profound transformation will be " R " for the robotics revolution , which really refers to " strong " AI , or artificial intelligence at the human level .
Hundreds of applications of " narrow AI " - machine intelligence that equals or exceeds human intelligence for specific tasks - already permeate our infrastructure .
Every time you send an email or make a mobile phone call , intelligent algorithms route the information .
AI programs diagnose electrocardiograms with an accuracy rivalling that of doctors , evaluate medical images , fly and land aircraft , guide intelligent autonomous weapons , make automated investment decisions for over $ 1 trillion of funds , and guide industrial processes .
A couple of decades ago these were all research projects .
With regard to strong AI , we 'll have both the hardware and software to recreate human intelligence by the end of the 2020s .
We 'll be able to improve these methods and harness the speed , memory and knowledge - sharing ability of machines .
Ultimately , we will merge with our technology .
This will begin with nanobots in our bodies and brains .
The nanobots will keep us healthy , provide full - immersion virtual reality from within the nervous system , provide direct brain - to - brain communication over the internet and greatly expand human intelligence .
But keep in mind that non-biological intelligence is doubling each year , whereas our biological intelligence is essentially fixed .
As we reach the 2030s , the non-biological portion of our intelligence will predominate .
By the mid 2040s , the non-biological portion of our intelligence will be billions of times more capable than the biological portion .
Non-biological intelligence will have access to its own design and will be able to improve itself in an increasingly rapid redesign cycle .
This is not a utopian vision : the GNR ( genetics , nanotechnology and robotics ) technologies each have perils to match their promises .
The danger of a bioengineered pathological virus is already with us .
Self - replication will ultimately be feasible in non-biological nanotechnology - based systems as well , which will introduce its own dangers .
In short , the answer is not relinquishment .
Any attempt to proscribe such technologies will not only deprive human society of profound benefits , but will drive such technologies underground , which would make the dangers worse .
We wo n't experience 100 years of technological advance in the 21st century ; we will witness in the order of 20,000 years of progress when measured by the rate of progress in 2000 , or about 1000 times that achieved in the 20th century .
Some commentators have questioned whether we would still be human after such dramatic changes .
These observers may define the concept of human as being based on our limitations , but I prefer to define us as the species that seeks - and succeeds - in going beyond our limitations .
Because our ability to increase our horizons is expanding exponentially rather than linearly , we can anticipate a dramatic century of accelerating change ahead .
Intuitive view In 2003 , Time magazine organised a " Future of Life " conference celebrating the 50th anniversary of Watson and Crick 's discovery of the structure of DNA .
All speakers , myself included , were asked what we thought the next 50 years would bring .
Most of the predictions were short - sighted .
James Watson 's prediction was that in 50 years , we 'll have drugs that allow us to eat as much as we want without gaining weight .
" Fifty years ? " I replied .
We 've already demonstrated it in mice and human drugs using the relevant techniques that are in development .
We can expect them in five to 10 years , not 50 .
The mistake that Watson and virtually every other presenter made was to use the progress of the past 50 years as a model for the next half - century .
I describe this way of looking at the future as the " intuitive linear " view : people assume the current rate of progress will continue .
But technological change is not linear but exponential .
You can examine the data in different ways , and for a variety of technologies , from electronic to biological .
You can analyse the implications , from the sum of human knowledge to the size of the economy .
However you measure it , the exponential acceleration of progress and growth applies .
Understanding exponential progress is key to understanding future trends .
Over the long term , exponential growth produces change on a scale dramatically different from linear growth .
Consider that in 1990 , the human genome project was widely regarded as controversial .
In 1989 , we sequenced only one - thousandth of the genome .
But from 1990 onwards the amount of genetic data sequenced doubled every year - a rate of growth that continues today - and the transcription of the human genome was completed in 2003 .
Reverse - engineering the brain
The most profound transformation will be in " strong " AI , that is , artificial intelligence at the human level .
To re-create the capabilities of the human brain , we need to meet both the hardware and software requirements .
Achieving the hardware requirement was controversial five years ago but is now largely a mainstream view among informed observers .
Supercomputers are already at 100 trillion ( 1014 ) calculations per second ( cps ) and will hit 1016 cps near the end of this decade , which is the level I estimate is required to functionally simulate the human brain .
Several supercomputers with 1015 cps are already on the drawing board , with two Japanese efforts targeting 1016 cps about the end of the decade .
By 2020 , 1016 cps will be available for about $ 1000 .
So now the controversy is focused on the algorithms .
To understand the principles of human intelligence we need to reverse - engineer the human brain .
Here , progress is far greater than most people realise .
The spatial and temporal resolution of brain scanning is progressing at an exponential rate , roughly doubling each year .
Scanning tools , such as a new system from the University of Pennsylvania , can now see individual interneuronal connections and watch them fire in real time .
Already , we have mathematical models of a couple of dozen regions of the brain , including the cerebellum , which comprises more than half the neurons in the brain .
IBM is creating a highly detailed simulation of about 10,000 cortical neurons , including tens of millions of connections .
The first version will simulate electrical activity and a future version will also simulate chemical activity .
By the mid-2020s , it is conservative to conclude that we will have effective models of the whole brain .
One benefit of a full understanding of the human brain will be a deep understanding of ourselves , but the key implication is that it will expand the tool kit of techniques we can apply to create artificial intelligence .
We will then be able to create non-biological systems that match human intelligence .
These superintelligent computers will be able to do things we are not able to do , such as share knowledge and skills at electronic speeds .
New Scientist
Futurist , inventor and writer Ray Kurzweil is responsible for innovations such as text - tospeech synthesisers and the first musical instrument synthesiser .
His books include The Age of Intelligent Machines ( 1990 ) , The Age of Spiritual Machines ( 2000 ) and his new book , released this month , The Singularity is Near : When Humans Transcend Biology , on which this story is based .
www.kurzweiltech.com, kurzweilai.net , singularity.com
The act of building software is a journey — at the start you have a destination in mind and some idea of the route .
By the time you reach the destination your map is littered with the record of all of your wrong turns .
Looking back you can see the path you should have taken .
But each wrong turn gave you the insight you needed to plot the right path through the obstacles that you faced .
Here I describe the obstacles that Visual SourceSafe scatters all over your file history , and the few that Subversion adds in the way of moving from the former to the latter .
My starting point was Power Admin 's migration tool .
I have n't studied Brett Wolldridge 's Perl version as I can't really read Perl but I am assuming from his write up and Power Admin 's write up that the two tools use the same migration strategy .
Using Power Admin's tool to port our older alpha development branch of FOST.3 ™ into the test repository took a few hours to work out how to use the software then just over 2 ½ hours to run .
Checking through this afterwards exposed the major flaw in the migration method : it was oriented towards the structure of the files in SourceSafe at the time of migration and was not able to deal with shared files .
For the way that we develop here this was a problem in the migration .
We use a lot of shared files and setting this up manually in Subversion was certainly going to be a major pain .
It seemed to me that a better approach would be to replay the operations that had been done in the original database on the new Subversion repository .
This would allow me to keep the shared files as logically shared within Subversion , something that I was sure would make the transition much smoother .
It would also have the advantage of forcing me to learn all aspects of Subversion properly before I was trying to show others how we were going to use it .
I felt that it would be fairly simple to produce a slightly more complex version of Power Admin 's software that could merge together file histories wherever possible .
It turns out that this just is n't possible and it took me many days to work out why not .
There are an additional couple of points about the software solution .
One requirement that is implicit in the earlier versions that I want to make explicit here is that the migration process itself must not change the SourceSafe database in any way .
A second was that there was no way I was going to attempt to reverse engineer the database format used by SourceSafe which means that the software only has access to data available through running the command line SourceSafe tools .
SourceSafe only gives us access to changes on files and projects ( I 'll call them directories from now on to avoid confusion ) that are still extant at the time that you query it .
There is no GUID for any file or directory and all the history has the names and paths that the file or directory had at that time and not what they have now .
The entire history of a given file is not shown in its history reports .
File / directory renames are shown in the parent directory history ( the parent they had at the time no less ) , and directory sharing is shown in the parent directories .
The time resolution is only to the nearest minute which means that many events that must be replayed in the right order and are split between project and file histories have to be done by guess work .
Files and directories can get " lost " when a parent directory their history has moved through has later been deleted .
Although we get a hint to tell us the location where a file is checked in we do n't get good information about where the file is first created .
Nobody wants to be bored with details of the wrong turns so I wo n't talk about them .
I 'll only discuss the obstacles that are left after all of my dead ends have been filtered out .
I expected the development to take a couple of days .
In the end it took a couple of weeks — every time I thought I 'd made a breakthrough SourceSafe and later Subversion added an extra layer of complexity .
It was n't until I fully embraced the very complex data structures easily done in C++ that I started to make real headway .
Multidimensional shenanigans
We can think of the revision control information in SourceSafe like stacks of versions for each file ( that we are still using at the point of the migration ) with the newest version at the top of the stack .
The stacks are laid out by the directories that contain them .
Of course some stacks are higher than others ( there are more versions ) and in actual fact some stacks are exact copies of each other ( where the files are shared ) , and more interestingly sometimes parts of stacks are copies of each other ( where a file was shared and then branched ) .
The simplest way to deal with this is to ignore the duplication between stacks and parts of stacks and to treat each stack of versions completely independently .
This is the view that Brett Wooldridge and Power Admin 's approach takes of the SourceSafe database and the view that they leave the Subversion repository in .
It guarantees that all of the file versions are present , but it also looses a lot of the information that is in the SourceSafe database .
A more accurate view is that we have a tree structure of directories and files that change over time .
In order to work out where to put things at certain times we have to work out how this tree changes over time and this is what sourcesafe2subversion does .
This task is thankfully made easier because FOST.3 ™ already included a lot of support for handling time based changes as they are very common in business systems .
Using these same data structures to model an ever changing directory tree was fairly straightforward , although also fiddly due to the fact that we have to construct the tree backwards in time and replay it forwards in time .
Hopefully all of this will make more sense as I explain in detail what happens .
Reading the history
The first part of the migration is to read the file history for each of the files that we 're going to migrate .
The tool only considers files that are still visible in the SourceSafe database at the time of migration — this is in keeping with the earlier tools .
Also in keeping with them it ignores labels .
If you need deleted files or directories to be transferred then look for them in SourceSafe and undelete them first .
The history files that SourceSafe generates need to be parsed to fetch the required information .
For files we only look for create and check - in events , ignoring everything else .
For directories we look at a wider range of tasks , including sub - directory creation and deletion ; file deletion ; file and directory recovery ; and renames , amongst others .
We can largely ignore branches because Subversion does a natural “ soft ” branch at each copy command .
What this means though is that where a file is not branched ( in SourceSafe ) then there will be separate Subversion check - ins for each directory that the shared file resides in .
The history from SourceSafe preserves the relative ordering for any given file or directory ( I 'll just call these histories ) , but gives us the history in reverse order ( with some interesting gotchas ) .
We reverse these to get the natural order .
Pinned files
Pinned files are evil and the need for them is because SourceSafe does n't have proper roll back support .
They do of course complicate the file histories .
When you request the initial file listing from SourceSafe it will normally just put the files that are found in a project in this sort of format :
$ / FOST.3/sourcesafe2subversion : event.cpp event.hpp
This is pretty easy to parse , but if you have a file pinned then you get something that looks like this :
$ / FOST.3/sourcesafe2subversion : event.cpp;2 event.hpp
This tells me that the SourceSafe file $ / FOST.3/sourcesafe2subversion/event.cpp is using version two rather than the latest version .
This tool throws away this extra information .
After using the tool you may need to analyse any pinned versions that are found .
For pinned files you have essentially three options :
Use the latest version anyway .
This is the do nothing option .
Roll the file back in SourceSafe and lose the later versions altogether .
Manually copy the earlier version in Subversion when the migration has completed .
We only had one pinned file in our master database so I just copied the required version after the migration completed .
Temporary files
Visual Studio .NET seems to have introduced another fun new features when you add projects to SourceSafe .
It creates some temporary files in the new project directories and then immediately deletes them .
These delete instructions put other instructions out of order meaning that some files will end up in the wrong place .
Because of this any delete command for a file whose name starts with a tilde ( ~ ) will not be added to the history .
If you use files starting with tildes you will need to have a think about how to deal with this .
Sorting the events
Because the time resolution for the history in SourceSafe is poor and we need to replay events in the right order the first thing that we do is to calculate an order for the events .
Two heuristics are layered together to get an ordering that should work .
Remember that the events that we need to re-run are stored in separate histories for different types of event and the SourceSafe time resolution is so poor that we can't just use its time stamps to work out the proper order .
Our starting point is the full list of events split into a structure that allows us to group them by any SourceSafe time stamp .
We know the relative order for the events in a given history because SourceSafe records them in the right order ( although it delivers the history in reverse order the first stage has already sorted this out ) .
The explanation works best if the second heuristic is explained first .
When we look at the events that happen in any given minute we want to list these in the order that we will play them .
We know that the events within a given history are already correct so we will not touch the relative ordering in the histories .
This means that if we can give a weight for each type of event then we simply go through the histories picking the lightest event from all the histories we are looking at .
The weights are assigned such that directory creation is lighter than getting a version which in turn is lighter than directory deletion .
This works fine , but for project ( directory ) sharing in SourceSafe .
SourceSafe shares the files in a directory before it creates the sub - directories .
Because the sub - directory shares will appear first in the histories this means that when we replay the events we will try to share into directories that do not exist .
This is where the first heuristic comes in .
What we would have liked is for SourceSafe to create the sub - directories before it does the share at a given directory level .
As it does n't do this we attempt to spot this behavior and reverse the events that happen at this time stamp .
This is the place where the tool is most likely to get confused and it happens in one specific circumstance , described next .
Sharing
Here is the normal effect of sharing a project ( directory ) in SourceSafe .
What we have done here is to share the WWW project into $ / FOST.3 / Project1 .
Kirit 11/05/06 14:16 Added _debug Kirit 11/05/06 14:16 Added _fslib Kirit 11/05/06 14:16 Shared $ / FOST.3/ Project1/WWW/config.ini Kirit 11/05/06 14:16 Shared $ / FOST.3/ Project1/WWW/favicon.ico Kirit 11/05/06 14:16 Created WWW
It looks to me that SourceSafe has recorded the events in the opposite order in the history for some reason , but it could be that it just does the sub - directories in some random order .
In any case the first heuristic that we use spots this case and puts the sub - directory creation events first by reversing the events for that directory during that minute .
Here is one with a problem though :
Kirit 30/08/05 14:24 Shared $ / FOST.3/ Project2/WWW/config.ini Kirit 30/08/05 14:24 Added _fslib Kirit 30/08/05 14:24 Added _debug Kirit 30/08/05 14:24 Shared $ / FOST.3/ Project1/WWW/favicon.ico Kirit 30/08/05 14:23 Created WWW
What happened here is that the WWW was added manually and then the favicon .ico was shared .
I then followed this by individually sharing the sub - directories and finally sharing the file config.ini .
The heuristic can't spot this and for this reason the events occur in the wrong order .
In order to overcome this the parser looks for a particular comment format for a file share .
We can edit the comment for this event in the directory history and set it to :
sourcesafe2subversion timestamp : 2005-08-30 14:25:00.000
This tells the parser to not use the timestamp from the history , but to use the specified one instead .
By setting this just one minute later the correct re-ordering of the events at 14:24 will occur .
In the migration of our SourceSafe database this had only happened two times so was fairly easy to work around by changing the time stamps for two file shares .
Planning
We now have the file structures as they are currently and all of the file histories going back in time as if they were all in their current locations .
The planning phase attempts to work out how this structure changed over time so that we can work out where files where at earlier times .
In particular we are interested in merging shared files into a single history wherever possible and as an added bonus we also get to replay delete and undelete commands in many circumstances .
There are a number of stumbling blocks though , the most important of which is that we do n't have history for any directories have subsequently been deleted .
We can't get them by just undeleting and taking a peek because the records may have been purged from the database .
We also cannot even assume that that the database was empty when it was first created as there can be file and directories from earlier than this if they were restored into the database .
This all makes the planning rather tricky , but it does its best .
In order to deal with situations where it does n't have information it makes use of a holding directory called _vss_deleted where file versions that can't be found a home anywhere else are put .
This includes things like all file histories for structures that have been restored into the database and also individual file versions for files where the trail has gone cold due to a directory along their history having been deleted .
This leads to a situation where we get multiple check ins for a file that is actually the same file .
If we consider a file that has been shared between projects A and B and then later from B to C we will end up with three files when planning starts as there are three files in the SourceSafe database now .
This planning stage will merge these together so that when it replays the SourceSafe events it will only play a single event into Subversion before the branch to B and then only two until the branch from C .
After this point it will have to write all three versions for each change .
Lost files
When the planning moves back it will spot and merge the files from C and B and it will then spot and merge the files from B and A .
This means that it will knock out all versions of the file in C prior to the share from B and all versions of the files in C and B prior to the share from A .
This is all well and good and helps to migrate the true history of the SourceSafe database .
The problem comes when B has subsequently been deleted .
In this situation there are two files at the beginning of the planning stage , those in A and C .
The share instruction is lost as we do n't have any history for B and hence we know that the file in C has history from before C was created but we do n't know where that history should be .
Under replay these orphaned files are put into _vss_deleted and for each early version of the file in C we will get a version written to both A and to _vss_deleted even though they are actually the same versions .
Although this is the safest approach to take there is an alternative way of doing it .
We can get the directory that a particular check - in was done to ( although not for the first version ) in the file history .
If we find a file in the specified directory with a check - in at the same time then this is probably the same file .
I say probably because there is a circumstance under which they will be different .
If we take our same example of directory sharing from earlier we can imagine two files X and Y both in A .
These will get shared to B and then on to C .
As described earlier , when we have all three directory histories available to us we know what happened and everything is fine .
We can merge them backward in time during the planning phase .
Of course if B is missing then we lose the connection between the versions in C and the versions in A .
But we can find any check ins for the files in C in A because the history will say something like :
*****************
Version 2 *****************
User : Kirit Date : 8/10/02 Time : 18:36 Checked in $ / A Comment : Example checkin
And , what 's better is that we will see this in our versions in C .
This looks like a good enough basis to merge them with , but there is a problem .
What if in B the file X was renamed to X.temp , Y was then renamed to X and X.temp renamed to Y ?
What we do now is to merge the files back to the wrong versions because we cannot see the rename as we cannot see B '' 's history .
Because of this potential problem the option in the configuration Merge orphaned files can be turned off if you are worried about this .
However to try to minimise the problem the following checks are done : # All prior versions must have the same version number ; #
All prior check in time stamps must match ; #
The check in path on all prior versions must match .
With these extra checks in place it seemed to me that this potential renaming problem probably was n't going to come up and if it did happen then we'd live with it — for us it would n't be an issue .
In order to mitigate against it completely there are two other options : # Restore the deleted directory B if it is still available .
This brings back in the history that can be used to merge them properly .
You can delete it again from Subversion after the migration is complete .
#
Get the planning stage to do a get on the earlier versions and compare them .
Only allow the merge if they actually are identical .
These could both be added in , but I felt it was n't worth it to do the extra coding for this pathological case .
===Replay===
Lest those of you reading this think that all of the problems come from using SourceSafe then let me disabuse you of that right now .
The problems with using the command line client svn ' ' of course only really start with this stage , which takes the events we 've worked out and replays them into the Subversion repository .
Apart from the cryptic error messages and the poorly described commands and options there is also one missing command — undelete .
I 'm sure the lack of this command has been gone through a zillion times one place or another and of course the response is that you just copy the file from the revision it was last in :
svn copy svn://angelo.felspar.net/deleted.txt
-- revision 12345
That 's great , but how do you find the revision number ?
Well , that 's pretty easy too , you just do this :
svn log -v svn://angelo.felspar.net/
This is all well and good , but it 's pretty hard to do programmatically .
You have to issue the second command and pipe the content into a file and then read that back .
Note though that the URI s you find in that file have been decoded from UTF - 8 and it's anybody 's guess which character encoding the file uses .
It would be really helpful if one of the following two would work :
svn copy svn://angelo.felspar.net/deleted.txt
-- revision PREV svn recover svn://angelo.felspar.net/deleted.txt
Audit
It 's virtually impossible to audit the that directory transformations have occured correctly as we do n't have full information from SourceSafe , but we do need to ensure that we have the right end result .
To this end the tool has an option to perform a full get using SourceSafe and an export from Subversion once the migration is complete , but before the final tidying up is done .
A tool like WinMerge can be used to determine that the two structures are the same .
There may be some minor differences ( for example with pinned files ) .
You should be able to explain all differences and make a decision about what to do about them .
Most problems with the tool would normally result in it getting confused and not being able to complete the migration .
This is the final stage that should give you confidence that the migration has worked as it should before you start to work in the new repository .
( other ) Potential problems
There are a few things that the current version of the software assumes hold .
You should check these through an import to a test repository for every SourceSafe database before you migrate to your production Subversion repositories .
Character encodings
The tool is Unicode , Subversion uses UTF - 8 internally and SourceSafe uses … well who knows ?
If you have different people checking things in to SourceSafe who use different locale settings then either SourceSafe handles it properly or you 're already having problems .
Once you 've made the switch to Subversion then these character encodings problems should largely disappear , but I have n't managed to work out all of the encoding issues involved in the transition properly as I can only go from the concrete examples I 've seen .
I can promise you that the tool 's Unicode handling is good and if you can get the SourceSafe history files into a known encoding which you can then read in as Unicode the tool should handle everything properly giving Subversion proper UTF - 8 encoded URIs and writing UTF - 8 encoded comments .
The other command line programs that are used should also work properly as they are all executed through the Windows Unicode API .
Fingers crossed …
Date and times
There are a number of dependencies for the dates used to order the changes .
Check the following items :
Dates are reported in European format , i.e. dd/ mm/yy .
SourceSafe reports years as only the final two digits .
If you have any activity in a SourceSafe database before 2000 CE you will need altered date parsing .
The change should be fairly trivial .
you will need altered date parsing .
The change should be fairly trivial .
The locations of the date and time parts are hard coded for the normal report layouts .
I do n't know what happens if there is a long user name in a history report .
Parsing problems
There are a number of places where the tool needs to parse the output of other programs .
SourceSafe histories follow a pattern that the parser then looks for , but if you use lots of stars in history comments the parser may get confused .
Subversion histories are structured in a much better format for machine reading .
If there are changes to this format then the parser may fail .
It would probably be better to use the Subversion API directly to avoid all of this .
SourceSafe gotchas
These are mostly mentioned in the text , but just for quick reference here is a recap :
Monday , July 31 , 2006
Black swan ?
Posted by Mikko @ 15:23 GMT
Pete Lindstrom at Spire Security 's weblog has an interesting post out , challenging whether it really is true that bluetooth viruses have tried infecting my phone four times so far :
My own anecdote is that Mikko is the first person I 've ever heard of who has been
attacked by a bluetooth virus .
And he 's been attacked four times .
Has anyone else out there ever been hit by one , or have a friend who was infected ?
Read the full post here .
So : if you 've ever seen a bluetooth virus in action , do post a comment to Pete 's blog .
Let 's see if we can get any feedback about real cases .
Somehow I find it hard to believe I would be the only person in the world who has seen these incoming bluetooth connections in real life .
Here 's one example of my encounter with Cabir .B .
Cheers ,
Mikko
Friday , July 28 , 2006
Two massmailings underway Posted by Mikko @ 17:06 GMT
We 've seen two separate spam runs with infected attachments tonight .
First one comes in an email with random header info and body text " Hi , Honey - My best photo ever ! " .
This one contains a file called " dsc00342.jpg .exe " as an attachment .
This one is detected by us as Trojan - Downloader .
Win32.Small.cyy .
The second one comes in an email looking like this :
The link to all - yours .
net is fake ; instead the link points to an EXE file hosted at whitehat.cc .
The file is named " postalcard.jpg.exe " and is detected by us as Backdoor .
IRC.Cloner.ae .
All - yours .
net is a real greeting card site and has nothing to do with this case .
Abuse messages have been sent about whitehat.cc domain .
Mystery Man Competition Winner Revealed Posted by Sean @ 09:17 GMT
We have a winner for our latest competition .
We received 60 + submissions , and most of them guessed correctly .
The winner 's ( Mika ) tee shirt is on its way , and for the rest , you can confirm your answer using the extra hint shown in this post 's image .
We 'll profile the author next week at the start of the FRECA Competition .
Some of the incorrect guesses included :
- Virus writer Marcos Velasco
- Antivirus expert Peter Szor
- Heiress Paris Hilton
Good job everyone !
Thursday , July 27 , 2006
Alert ( " Your new friend is a worm " ) ; Posted by SGMasood @ 12:43 GMT
Web Application Worms exploit persistent Cross Site Scripting ( XSS ) vulnerabilities in websites .
It 's a new category of malware and it's a growing concern for popular websites .
Social Networking sites seem to be the most popular target as of now .
MySpace has already been hit by two such worms - the Samy worm in October last year and last week 's Flash worm .
Samy was written by a guy who wanted to become popular on MySpace .
So he designed the worm to crawl through the site while furiously adding people to his friends list .
The result : over a million " friends " in a couple of hours .
Last week 's worm exploited a vulnerability in Macromedia Flash to redirect MySpace users to an objectionable webpage .
Last week MySpace was also the target of a malicious banner advertisement that ran on the site .
It used the WMF vulnerability in Windows to serve adware to more than a million users with unpatched machines .
All this piqued our interest and we decided to see how secure other popular social networking sites are against " wormable " XSS vulnerabilities .
We picked two among the top social networking sites with a reported combined user base of 80 million .
Within half an hour we had discovered over half a dozen potentially " wormable " XSS vulnerabilities in each site !
We stopped looking after finding half a dozen , but we are sure there are a lot more holes in there .
With about a day's work a malicious attacker with a half - decent knowledge of javascript could create a worm using just one of these vulnerabilities .
Something to consider :
The WMF banner ad successfully reached about one million users .
An automated worm utilizing a similarly malicious WMF exploit or a similar browser expoit ( maybe even a 0 - day exploit ) could potentially reach a much , much larger audience of unpatched machines .
Theoretically , this could be the entire user base ...
Recommendations -
1 . End users need to patch their machines .
There 's no excuse not to .
2 . Web application developers must start taking security seriously .
Yes , XSS issues are silly , easy to find and omnipresent .
And XSS issues have stopped being funny for a long time now .
They are a real danger with the advent of Phishing and Web Application worms that exploit a mass user base of millions of users within a very short time .
Of course , we have reported the issues to the affected websites and are working with them to get the issues fixed .
And , of course , we are n't taking any names here .
F - Secure Tee Shirt Opportunity Posted by Sean @ 11:42 GMT
Last week we promoted our upcoming Reverse Engineering Challenge .
Today we have a different challenge for you .
Just who is the mystery author mentioned in our previous post ?
The first person to send the correct answer to " nerds [ at ] f- secure [ dot ] com " will be mailed a free F - Secure tee shirt .
Here are your clues :
He 's in the banner photo .
He was the subject of a weblog post sometime during 2005 .
He has 17 years of " experience " .
For those of you that do n't want to do any sleuthing , we 'll have the answer for you next week when Assembly ' 06 starts .
Wednesday , July 26 , 2006
CA vs F - Secure Posted by Mikko @ 14:13 GMT
An interesting discussion has started around comments released by one of our competitors , namely Computer Associates .
The comments given by Simon Perry , a VP at CA were prompted by the mobile antivirus service that will be available for Orange smartphone users in UK .
What is interesting about the debate is that CA is indirectly claiming that Orange has made a bad decision by launching a mobile security solution .
CA seems to be claiming that Orange is either ignorant of what is the real malware situation in their network or of ignoring the data they have and choosing to launch an unnecessary service .
CA well knows that all mobile operators have real - time data detailing everything that happens in their networks , and simply cannot be influenced by marketing messages related to what is happening in their network .
Could it be that CA simply does not have competitive mobile security solutions and is explaining their complete lack of success in the mobile market by denying the threat ?
The fact is that there are over 300 known mobile malware .
That is not hype .
We estimate that tens of thousands of phones have been infected so far , worldwide .
Smartphones based on open operating systems are being targeted already .
This means that the vast majority of phones are safe against current malware , but does not eliminate the damage caused to the users of the smartphones that are or have been infected .
It is also a fact that the number of smartphones , mobile malware and infections are on the rise .
Is the threat real ?
Yes it is .
I know , because I 've been hit four times myself .
Of course I 'm running our antivirus on my phone , so I have n't actually been infected .
But a Bluetooth virus has tried infecting my phone four times so far .
Twice in Helsinki , once in Stockholm and once in London .
Protecting mobile users against current and future threats shows caring and wisdom .
It should be applauded rather than criticized .
If we ignore this problem now it 's only going to get worse .
We can still stop this problem and avoid things getting as bad as they did with PCs .
Ranting off ,
Mikko
Netscape.com hacked Posted by SGMasood @ 11:45 GMT
While we were drafting a weblog post on XSS and Social Networking sites , our man Miguel pointed us to Netscape.com .
Netscape.com has been hacked via a persistent Cross Site Scripting ( XSS ) vulnerability in their newly launched Digg - like news service .
Attackers ( who are obviously fans of Digg ) have used the XSS vulnerability to inject their own javascript code snippets into pages on the website , including the homepage .
As of now , it has only been used to display javascript alerts with " comical " messages and to redirect visitors to Digg.com !
Check out additional screenshots here and here .
Fortunately no one has tried to inject malcious code ... yet .
We 'll finish our draft with more on the potential dangers of XSS for you soon .
Do n't fall for a fake virus outbreak warning Posted by Mikko @ 10:14 GMT
We 've received several reports of a mass mailing that 's going around .
The messages have been spoofed to look like they are from update@microsoft.com and arrive with title " Warning !
New Virus On The Internet ! Update Now ! " .
The link in the mail goes to http://update.microsoft.go.ro and downloads an IRC backdoor .
Administrators might want to filter web traffic to this site .
Abuse messages on the site have been sent .
The downloaded file is detected as W32 / FakeMSUpdate by our latest update ( 2006-07-26_02 ) .
Tuesday , July 25 , 2006
Demo Video - Rogue Suspect Posted by Kamil @ 14:15 GMT
What does a spyware researcher do ?
With at least part of his day , he tests samples .
Today we made some video with notes for you to follow along .
Enjoy !
Video 1 : demonstrates the installation of one suspected rogue - it breaks the IE browser with a Browser Helper Object .
Video 2 : demonstrates the pop-ups that really push for the $ale .
The videos are encoded using standard windows codec .
Friday , July 21 , 2006
Spy vs. Spy Posted by Sean @ 09:29 GMT
Our spyware researchers really hate the word " affiliate " .
Affiliate marketing drives spyware .
From the worst known offenders to questionable rogue anitspyware software - affiliates trying to sell - by - any - means are the engine behind the problem .
Known rogues install maliciously .
But it 's often difficult to pin down the real rogues .
There 's an incredible amount of just mediocre antispyware out there that is n't malicious , but they use the same marketing and sales techniques as the rogues .
Lots of ads ( paid for by commission seeking affiliates ) -
No trial period - Offering a free scan - But if it finds something you then have to pay to clean it off your system .
And they really get in your face about buying .
The known rogues present outright false positives - sometimes offering to clean the malware that prompted you to download the rogue in the first place .
The mediocre guys might also have false positives , but due to bugs in their code , not outright lies .
Adding detections for second - rate software as malware is n't something we do , but we can blog about it to help you be aware .
Many fall into a gray area and our researchers have to put them to the test .
But regardless of anything else , all of these guys , malicious or not , make apparently outrageous claims .
Affiliates repeat the claims over and over in ads to drive sales and get their cut .
Check out this one site we visited , which we will not name here , but it was nuker.com .
They claim to have a very positive review from Download.com .
Only it is n't a link , just an image .
We 've searched Download.com 's site for the supposed review and cannot locate it , not to our surprise .
Download.com is a trusted source and these guys are trying to subvert that trust to their own ends .
They also link to a Yahoo !
" Headline " on their site .
But if you follow the links , you find it's from the PR news section of Yahoo Business and that they themselves uploaded the article .
They 're quoting themselves !
Think you want to try their product ?
Wednesday , July 19 , 2006
Coming Soon : Another Reverse Engineering Challenge Posted by Mikko @ 14:34 GMT
F - Secure is sponsoring Assembly 2006 – one of the largest demo parties in the world .
It takes place in Helsinki , and it ’s historically always been organized at the same time as DEF CON – so in two weeks from now .
As part of our sponsorship we 're hosting an F - Secure Reverse Engineering Challenge Compo .
It 's a competition where the target is to decode programs in order to find hidden information .
It consists of three Windows EXE files written by one mystery researcher working in the F - Secure Security Labs .
The three challenges are a set .
When the programs are run , they 'll ask the user for a password .
Give the correct password , and you then get instructions on how to find the next challenge .
The goal is to solve all three challenges .
The first ones to complete the challenges will win an iPod or a PSP – See Assembly 's website .
The competition will be open to all , not just those attending Assembly .
More details on the rules - and on the mystery author of the challenges – soon !
Monday , July 17 , 2006
Exploit Wednesday Posted by Sean @ 10:27 GMT
Another Microsoft Office exploit , Bifrose .UZ , was discovered last week .
It drops a backdoor using PowerPoint ( PPT ) files .
The exploit was discovered after a limited number of people received e-mail with the PowerPoint file as an attachment .
So what 's the deal with Microsoft Office and why the exploits ?
There were Word fixes in June - Several Excel fixes were included in July 's patches - And now there is a PowerPoint exploit that will need to be patched in August .
See a pattern ?
There 's a growing trend here .
We 've been saying for some time that the lack of large virus outbreaks is evidence that the malware environment could be getting worse , not better .
The bad guys want to make money - not make attention .
So as a malware author , if you want to target a few prominent companies for the purpose of industrial espionage , you design your exploit to attack them within and then lay low .
Spoofed e-mails are sent to company insiders and they , thinking it 's just another document that they need to review , open it up and the backdoor gets installed .
The bad guys are taking advantage of three things :
The first is the patch cycle itself .
These new exploits are being released after the second Tuesday of each month to maximize its lifespan .
The second is the common day - to - day routine of receiving Office files .
There have n't been any new macro viruses to speak of for some time and so Office files ( doc/ xml / ppt ) easily pass through corporate firewalls and people do n't think twice about clicking on them .
This avenue of attack is currently under the radar and is not perceived as a danger by end users .
And the third advantage is that the companies exploited do n't want to talk about it .
They dread the negative publicity as a victim of espionage .
That 's why the public does n't know the name of last month 's Excel exploit victim .
Such hush - hush may be keeping some of these exploits from being reported .
Wednesday , July 12 , 2006
Man - in - the - middle phishing Posted by Mikko @ 11:26 GMT
The first ever case of using a man - in - the - middle attack against an online bank was reported by Brian Krebs of Security Fix on Tuesday .
The security industry has long predicted this type of man - in - the - middle attack ; it was only a matter of time .
The attack targeted Citibank 's Citibusiness service and was designed to spoof the token key hardware device used by the bank 's customers .
The phishing site checked the logon credentials with the real site before rendering the results to the phishing victim .
Enter an invalid password , and you got an invalid logon page .
A man - in - the - middle attack checks everything done at the phishing site against the original , so everything should look and feel more genuine .
Exactly the same kind of attacks can be used to target other types of two - factor authentication , including one - time password sheets .
More on Updates Posted by Sean @ 11:11 GMT
With spear phishing on the increase , you should n't neglect visiting Microsoft Update this month .
There are a good number of Office patches to be downloaded and Excel has the most with eight different vulnerabilities .
Even Excel Viewer 2003 requires a patch .
Users do n't update Office as often as the Windows OS and it 's increasingly becoming a target for more focused spear phishing attacks .
Your company could be next - update soon .
And now for something completely different : Daylight Savings Time 2006 was adjusted in Australia to accommodate the Commonwealth Games .
If you live down under , it 's time to adjust the system time back to the standard dates .
G'Day !
Tuesday , July 11 , 2006
July bulletins are out Posted by Mikko @ 19:25 GMT
Microsoft has just released the latest security updates , with critical updates affecting Windows and Office .
Details at
http://www.microsoft.com/technet/security/bulletin/ms06-Jul.mspx, updates at http://update.microsoft.com/microsoftupdate/.
Monday , July 10 , 2006
Wr0ld Cup Results Posted by Sean @ 13:02 GMT
Our resident Italian has something to celebrate today !
Italy 's football team won the World Cup , 5 - 3 on penalties after a 1 - 1 tie with France .
Italy received 3.9 % of the votes in our June 9th poll .
Our congratulations to Italy .
You can Be Sure that 's coffee in the mug at Paolo 's side �
Yet Another Name Posted by Kamil @ 11:04 GMT
Last Friday we posted on rogue anti-spyware .
Also on Friday , Alex Eckelberry of SunbeltBlog posted on a new rogue named SpyHeal .
It is believed that SpyHeal is probably a replacement for SpywareQuake .
Take a look , SpyHeal is one of the results of our " Privacy Policy " search .
SpywareQuake is there too !
We have no doubt that they are related .
Kudos to Sunbelt .
Saturday , July 8 , 2006
$ pyware Economics Posted by Sean @ 06:17 GMT
On April 7th we posted about New York 's lawsuit against Direct Revenue .
BusinessWeek has been examining the court documents and they have a very interesting article , The Plot To Hijack Your Computer , and related items detailing Direct Revenue 's business model .
There 's also a podcast for those of you on the go .
Check it out .
Friday , July 7 , 2006
What 's In a Name ?
Posted by Kamil @ 14:53 GMT
There 's a category of software that 's rather difficult to define , or at least to name .
Many term it as potentially unwanted applications or software ( PUA / PUS ) .
Companies pushing this type of software use every possible means to get you to download as many copies of their product as possible .
Spamming , pop-ups , hijacking start pages , etc. Sound familiar ?
What are we speaking of ?
Rogue anti-spyware and other so - called system optimization utilities .
And they are n't just pushing one version , they 're pushing many .
Some of these guys create one engine and then sell it under multiple names and interfaces .
Their websites even look like they are copied from the same template .
The sales pitch typically includes a " free " scan .
The results of the scan are often doctored with items that you should remove or fix .
Except in order to do so , you now need to buy a license .
Check out the results of this Google search .
Most of the results are of suspected rogues and are hosted on the same server .
What did we search for ?
A block of text from one site 's privacy policy .
Either all of the sites borrowed exactly the same text from each other , or they are in fact the same organization .
If your product is legitimate , why do you need 30 or more names for it ?
Preview of Next Tuesday Posted by Sean @ 14:48 GMT
Microsoft released their Advance Notification
Bulletin on the 6th of July .
Next Tuesday 's update will include four Windows updates and three Office updates .
Wednesday , July 5 , 2006
Still Living in 1998 ?
Posted by Sean @ 10:32 GMT
The second Tuesday of this month brings something else in addition to Microsoft Security Updates .
July 11th will also mark the end of Windows 98 / ME technical support .
It 's now the end of their lifecycle .
At least at Microsoft .
According to IDC figures , there are an estimated 70 million 98 / ME machines still in operation worldwide .
Searching for news stories on the topic yields a good number of results from India .
Older hardware and the costs of upgrading can be a very limiting factor for some .
So what to do if you 're still running an older OS ?
Make sure that you have a good antivirus product and a firewall .
Check out Microsoft's Security At Home 98 & ME for more information .
( You 'll find special offers for our F - Secure Internet Security and Anti-Virus products there . )
If you 're still holding on to older hardware because you 're a hobbist , you might also consider trying out a lightweight distribution of Linux .
Live CDs make it quite easy to give it a try .
The George Deutsch scandal instantly became one of the top stories in the press this week , and the coverage has been widespread , even where I live in the United Kingdom .
Andrew Revkin , the author of the New York Times article about Deutsch ’s resignation , deserves a round of applause for being the first to bring the story into the mainstream media .
He contacted me late Monday night , only a few hours after I posted my original findings .
I would also like to direct readers to two Texas papers , the Fort Worth Star - Telegram and the Houston Chronicle , which both ran good stories with a local focus .
In addition , I will be on The World Tonight on BBC Radio 4 tonight at 10:00 pm GMT .
Not everyone has covered this story well , and some have n’t even covered it at all .
Although The Washington Post did cover the Deutsch resignation on Wednesday , the same day as The New York Times , it did not mention the source of the information on Deutsch ’s lying about having a college degree .
Although it briefly mentioned The Scientific Activist in an article on Thursday , it never acknowledged the fact that That ’s the last time I give them a hot news tip .
Incomplete coverage is n’t as bad as no coverage , which is what 's happening at Texas A&M University ’s student paper The Battalion .
There has n't been a single article about the NASA censorship scandal , even though the original story came out over a week and a half ago .
All of this is occurring despite the fact that the story is about A&M and the fact that Why has n’t their been any coverage ?
Editor in Chief Melissa Filbin has the explanation .
“ I just do n’t see the angle , ” she told me .
Are you serious ?
No angle ?
Filbin told me explicitly on Tuesday that there would be no coverage of this story .
Unsurprisingly , a writer at the paper described to me what ’s going on as “ Lots of politics .
” If you would like to submit a letter for publication , submit it to mailcall@thebattalion.net .
Please note that the paper 's website states that letters are supposed to be 200 words or less .
I used to write for The Battalion , and in general I think it is professional and well - done , especially for a student paper .
This situation is pretty sad , though .
I hope that the editors of The Battalion will change their minds , because so far they have done a great disservice to the students of Texas A&M University , many of whom rely on the student paper to find out what ’s going on in the world .
( 9 February 23:59 GMT ) :
It looks like The Battalion will be running a story about Deutsch this Friday after all .
Thanks go to lunaliar for bringing this to my attention .
I called the Editor in Chief , and although she would n't tell me much , she verified that the article would indeed feature an interview with Deutsch himself .
Deutsch only just broke his media silence , but based on what he 's said so far , I think we can expect something pretty ridiculous .
I hope that The Battalion will provide a detailed background on the story , but since it has waived that option so far by not reporting on it at all , I 'll believe it when I see it .
Either way , I do n't think it would hurt to keep them on their toes , so I 'll leave the contact information up in case you have anything you want to say .
( 10 February 9:26 GMT ) : Forget about what I said in the last update .
The Battalion is in factrunning a story today on the NASA scandal , despite Melissa Filbin telling me and others that there would be one .
( 10 February 20:52 GMT ) : I probably should have made this update earlier , but I have been busy all day making up for lost time in the research lab this week !
As it has already been noted in the comments for this post , The Battalion did apparently run an AP story on Deutsch today , although I have n't seen it ( it does not appear on the paper 's website ) .
While I am glad that there has been some coverage , this is n't a substitute for more in depth reporting , and it definitely does not make up for not reporting on this incident at all until now .
I should make it clear that this has nothing to do with mentioning me or The Scientific Activist .
Instead , this is about the students who relied on this paper for their news and were left in the dark on this subject .
Regardless ,
The Battalion has proven itself in the past to be a professional paper , and with the large student body and wealth of resources available to it by operating at such a big public university , I have faith that it can overcome this and not drop the ball the next time a story like this comes up .
I took down the contact information for The Battalion since it was no longer relevant .
Sir Iqbal Sacranie 's organisation represents 400 groups
The Muslim Council of Britain ( MCB ) pledged to tackle extremism " head on " after the 7 July attacks in London .
But in a BBC Panorama special , Mehbood Kantharia and other prominent British Muslims question the MCB 's commitment to meeting this challenge .
The MCB has branded the programme " deeply unfair " and a " witch - hunt " .
Secretary general Sir Iqbal Sacranie said Panorama had used " deliberately garbled quotes in an attempt to malign the Muslim Council of Britain " .
He said it had " the barely concealed goal of drawing British Muslims away from being inspired in their political beliefs and actions by the faith of Islam " .
" It is unfortunate that just when Britain 's 1.6 million Muslims are beginning to make progress in terms of their political participation in the mainstream , there are those who are purposefully trying to sabotage that process , " he added .
Task force
Mehbood Kantharia was a member of the MCB 's central working committee between 1997 and 2004 , but has since left the organisation .
He told Panorama : " It is my personal view that because they are in a state of denial they cannot become real , you know , sort of like , forthright , really forthright about wanting to do something about the kind of extremism that prevails . "
We are confident the programme will be a timely contribution to the present debate
Mike Robinson , Panorama producer
Editor tackles Panorama ' slur '
The MCB , an umbrella organisation of about 400 mosques and other Islamic groups , is seen as representing mainstream Muslim opinion in the UK .
On Saturday the council said Mr Kantharia had informed it that his remarks were not referring to the MCB .
But Mr Kantharia later said that while he had not mentioned the MCB specifically , his comments could have been interpreted as applying to individuals within it .
" I think the MCB is overreacting in this matter , " he added .
MCB secretary general Sir Iqbal Sacranie was asked after the 7 July attacks to help set up a task force to root out extremism in Britain 's Muslim communities .
After meeting Tony Blair in Downing Street on 19 July he said : " The community is determined to deal with this issue head on . "
But an investigation by Panorama reporter John Ware found groups affiliated to the MCB promoting anti-Semitic views , the belief that Islam is a superior ideology to secular British values and the view that Christians and Jews are conspiring to undermine Islam .
In an interview with Mr Ware , Sir Iqbal refused to disown a group known as Al - e - Hadith , which says the ways of Christians and Jews " are based on sick or deviant views " and that " imitating the Kuffar [ non- Muslims ] leads to a permanent abode in hellfire " .
Suicide bombers
Commenting on the group , Sir Iqbal said " we must accept the reality " of the diversity within the Muslim community in the UK .
He also praised the work of the Islamic Foundation , which promotes the teachings of Jamaa 'at Islami founder Sayid Mawdudi .
Mr Mawdudi wrote Islam was a " revolutionary ideology which seeks to alter the social order of the entire world " .
In a wide ranging interview , Mr Ware also tackled Sir Iqbal on his decision not to attend the Holocaust Day Memorial and his attendance of a memorial service for Hamas leader Sheikh Ahmed Yassin , who supported suicide bombers in Israel .
Asked what kind of signal his presence at Sheikh Yassin 's memorial service sent to young British Muslims , Sir Iqbal said : " If your whole question is based upon one aspect of that person 's belief in terms of supporting it , we look into the wider picture .
The suicide bombing that you 're referring to is one aspect of the whole struggle . "
But Sir Iqbal condemned suicide bombings by British Muslims anywhere and said there was no difference between the life of a Palestinian and the life of a Jew and that all life was sacred .
In a separate interview , a senior spokesman for one of the MCB 's main affiliates , the Muslim Association of Britain ( MAB ) , appeared to condone the glorification of suicide bombers .
' Witch hunt '
Asked if describing martyrdom in Israel as " divine bliss " meant he was an " apologist for terrorism " , Dr Azzam Tamini replied : " If you want to consider me so that 's up to you . "
London mayor Ken Livingstone earlier this week accused the BBC and other media organisations of conducting a " witch - hunt " against the MCB , which he described as the " mainstream representative body of British Muslims " .
The MCB has made a formal complaint to the BBC accusing it of " blatant pro-Israeli bias " and " undermining community relations in the UK " .
In his letter of complaint , written before he had viewed the programme , Sir Iqbal said : " It appears the BBC is more interested in furthering a pro-Israeli agenda than assessing the work of Muslim organisations in the UK . "
He added : " The BBC should not allow itself to be used by the highly placed supporters of Israel in the British media to make political capital out of the 7 July atrocities in London . "
' Timely contribution '
In his response , Panorama editor Mike Robinson , said the programme examined questions " being raised by the Muslim community itself " .
" Despite some critical comments to the contrary , it is certainly not the case that nearly all the questioning of Sir Iqbal Sacranie was about Israel . "
He added that the BBC " rejects completely any allegation of institutional or programme bias " and he was " confident " the programme would be " a timely contribution to the present debate " .
The Panorama special A Question of Leadership is on BBC One at 2220BST on Sunday , 21 August .
Tags
Supreme Court Hears Arguments in KSR summarizes the oral arguments for KSR International v. Teleflex , an important patent case pending before the Supreme Court .
The question involves whether it should be more difficult to obtain a patent for a claimed invention in a patent application .
In our patent system , a patent may be obtained if four criteria are satisfied : ( a ) if it is the type of thing that the patent statute covers , i.e. " statutory subject matter " ( this is pretty broad , of late — it includes any practical invention — " anything under the sun that is made by man " — this is " Section 101 " of the US Patent Act ) ; ( b ) has " utility " ( pretty easy to satisfy , unless it does not work at all , like a perpetual motion machine , or if it has only " negative " utility , e.g. a weapon that would destroy all life on earth — Section 101 again ) , ( c ) which is " novel " ( this means new — section 102 ) ; and ( d ) which is " non-obvious " ( section 103 ) .
This last — non - obviousness ( called " inventive step " in most other countries ) — is usually the most difficult hurdle to overcome .
This is because many things are " new " combinations of existing things or elements , but " would have been " considered " obvious " to a hypothetical " person having ordinary skill in the art " ( PHOSITA ) .
In other words , an invention is not novel if you can find a single prior art " reference " ( say , a previous patent or article ) that fully describes it .
But if the invention is a combination of elements that is a new combination of elements and not all found in a single reference , then it is novel .
So then the Examiner has to find multiple references that teach all the elements .
Now originally , the Supreme Court held that simply aggregating old elements together does not pass the patentability test if the elements are each performing the same functions that they were already known to perform .
( See pp. 36 et seq. of this brief . )
But the Court of Appeals for the Federal Circuit ( CAFC ) , the federal appellate court with exclusive appellate jurisdiction in patent law cases since it was established in 1982 , has held that a claimed invention cannot be held obvious unless the patent office can show some proven " ' teaching , suggestion , or motivation ' [ TSM ] that would have led a person of ordinary skill in the art to combine the relevant prior art teachings in the manner claimed . "
That is , the CAFC 's approach has allowed mere aggregations to be patented so long as there is no evidence suggesting that the elements be combined .
( Here one gets a glimpse of the utter arbitrariness and inherent vagueness of IP law and its complete dissimilarity to real property law . )
So under current practice , using the example above , the PTO Examiner has to find two or more references that show all the elements of the claimed invention , AND he must somehow show some other teaching or reference that suggests combining the references .
For example , suppose it 's known to make brooms with straw bristles ; and it 's known to use plastic for a variety of purposes .
Someone tries to patent a broom having plastic bristles .
Let 's assume this is novel — no one has done this before .
Is it " obvious " to combine plastic ( which is known to be widely used , and as a substitute for other materials ) with the standard broom design ( also well known ) ?
What if the Examiner can't find an article where someone muses , " Say , you know , you could use plastic instead of straw in a broom if you want — ... " ?
The point is that quite often , you can get an invention patented by making sure it includes some fairly trivial feature that makes it " novel " and then , when the Examiner tries to argue well , this is just obvious , you tell him he has to prove it by finding an explicit TSM ( teaching , suggestion or motivation ) out there that suggests combining the elements .
( And let 's face it : all inventions are combinations of existing prior art ; this is the nature of progress . )
In other words , under the current TSM test , claims " cannot be held invalid . . . no matter how trivial might be the differences "  from the prior art unless evidence suggesting the difference is found in the art .
In the current case , KSR manufactures gas pedals that can be adjusted for the height of the driver and uses electronic signals rather than a mechanical cable to accelerate when the pedal is pushed .
Both features were developed separately but Teleflex sued KSR claiming that KSR 's combination of the two features infringed on a patent it was issued in May 2001 .
KSR argues that the patent should be invalidated because the combination of the two features is obvious .
They want the Supreme Court to overrule the CAFC , which " held that the prior art did not render the claimed invention unpatentable because they had not proven , beyond genuine dispute and by clear and convincing evidence , that there was a suggestion or motivation to combine the teachings of the prior art in the particular manner claimed by the patent at issue ( U.S. Patent No. 6,237,565 ) . "
So what will the Court do ?
It is possible the TSM test may be modified or dropped , and I hope it is .
This would mean it is easier for the patent office to show that a claimed invention is obvious , since it will not have to show a TSM to combine well - known elements that the patent applicant has merely aggregated in an obvious way .
The presumption may be shifted , so that if all the elements claimed are shown in multiple references , the patent applicant has to show that the invention is non-obvious , rather than the PTO ( or opponent at trial ) having to show some TSM to aggregate or combine the well - known elements .
It 's interesting that some companies are against the TSM test ( that is , they are in favor of making it more difficult to obtain patents ) , and some are in favor of it .
" Critics of the test argue that this has made it too difficult to prove that a claimed invention is obvious . "
The Coalition for Patent Fairness , for example , which incldes high - tech companies like Intel , Cisco Systems and Hewlett - Packard , seems to be in favor of revision of the current test .
" The tech companies [ Microsoft Corp. , Cisco Systems Inc. , Intel Corp. and others ] want to put a damper on all the patents on all the patents on business methods , designs and undeveloped technologies that casues them to spend lots of money to defend . "
( One of their concerns is " patent trolls - companies that exist primarily to make money from patents through litigation instead of commercialization " — but as I 've noted , the hostility against patent trolls is misplaced .
They are no different than any other patentee who takes advantage of the corrrupt and unjust patent system . )
But pharmaceutical and biotechnology research - based companies such as Johnson & Johnson , GE and DuPont , for example , have filed briefs " arguing that major changes to the patent system would jeopardize billions of dollars invested in product innovation .
They want to protect pharmaceutical and chemical products from generic manufacturers and counterfeiters .
These companies oppose any change to the test since it might make it difficult to patent known drugs for new uses .
I am hopeful the Court will decide to narrow or drop the TSM test , but even if they do , it 's only a mild improvement to this horrible morass of artificial and unjust law .
By Clark Boyd
Technology correspondent
The small loans are aimed at helping developing countries
But in 1997 , Mr Whittle 's boss gave him a new challenge - to fund small projects .
After several failed attempts to push these small projects through the World Bank bureaucracy , he decided to call a brainstorming session .
" My colleagues and I went into a room at the World Bank one day , and said , what if we just allowed anybody to come in and just pitch their idea .
And what if we made decisions on the same day , " said Mr Whittle .
They decided to put the plan into action , and it proved successful .
More than 1,000 groups from some 85 countries submitted ideas for small businesses and non-profit projects .
More than 500 finalists were chosen , and came to Washington , DC , to make their cases for funding .
On the final day , the World Bank awarded $ 5 m to dozens of small start - ups .
But what Mr Whittle remembers most is a conversation with one South African woman who did not win that day .
She was not upset .
In fact , she was convinced that there were many people around the world who would fund her project if they knew about it .
Going online
Dennis
Whittle saw an opportunity to tap into what he calls the " secondary market " for donations .
He quit the World Bank , and six years ago , he and a colleague started a private , web - based microfinance program called Global Giving .
Take a goat herder in Uganda .
If you give him $ 25 , that 's two smaller goats .
That 's a great start .
With $ 100 , you can imagine more goats , perhaps a small shelter , stock up on goat feed
Jessica Flannery , Kiba
" The website is kind of like a combination of eBay and Amazon .
And the idea is that qualified grassroots projects from around the world can be listed , as long as they meet certain qualifications .
" If you 're a donor , and you 're interested in HIV / Aids , you can find projects to fund .
If you 're interested in projects in Kenya , you can find those .
It 's a clearing house . "
A potential donor searches through a list of small - scale projects on the Global Giving website .
You can even e-mail project leaders for more information .
Then , the donor can choose to give as little as $ 10 to a project .
Some , though , have given as much as $ 150,000 .
Needy projects
Global Giving is not the only website tapping into internet 's power to directly connect would - be funders with would - be entrepreneurs .
The couple behind Kiva spent time in Africa
Kiva 's story starts a little more than two years ago , when Jessica Flannery went to East Africa .
She was working for a group that gives $ 100 grants to needy projects .
" Every single day , I would meet an entrepreneur , and hear about how $ 100 had changed not just his or her life , but also the lives of their families , friends and other community members , " said Ms Flannery .
" Take a goat herder in Uganda .
If you give him $ 25 , that 's two smaller goats .
That 's a great start .
With $ 100 , you can imagine more goats , perhaps a small shelter , stock up on goat feed .
So , that little bit of money can really help set someone up . "
Jessica 's husband Matt Flannery , a computer programmer , came to visit her in East Africa for a few weeks .
He too was moved by the entrepreneurial spirit he saw there .
So , he set out to design a website that could connect small lenders with small donors .
" I wanted to start a little program where someone in America or Europe or Australia or anywhere with the internet could lend money online to a small businessperson in Africa , " said Mr Flannery .
' Peer - to - peer ' giving
The result is the Kiva website .
Kiva is a Swahili word for unity or agreement .
The site went live last year .
The challenge that these microcharity enterprises have is identifying great projects , vetting them , ensuring that they are on the level , and ensuring that they are using the money wisely
Ethan Zuckerman , Harvard Law School
" The way it works is you pay using PayPal , " said Mr Flannery .
" Then , you receive updates that are like blogs over e-mail and on the internet , and eventually you get paid back according to the performance of the entrepreneur . "
Lenders do not receive interest on loans , but the borrower does pay some interest , which helps pay some of Kiva 's costs .
But the internet can bring both great promise and great peril for microfinance , according to Ethan Zuckerman , a fellow at Harvard Law School 's Berkman Center for Internet and Society .
Mr Zuckerman , who also sits on the advisory board of Global Giving , points out that the net makes it easy to give money to worthy projects , but it also makes it easy for scammers to dupe potential donors .
He says that guarding against these kinds of scams is an important service Global Giving and Kiva can provide .
" The challenge that these microcharity enterprises have is identifying great projects , vetting them , ensuring that they are on the level , and ensuring that they are using the money wisely , " he said .
Globalgiving and Kiva say they work with local groups to vet would - be entrepreneurs .
Both organisations contend that is the best and most cost - effective way to make sure money collected via the internet is distributed efficiently , and properly .
Both websites seem to have successfully tapped into what one could call a " distributed network " of small donors and lenders worldwide .
Global Giving has raised millions of dollars in donations for small projects in the developing world .
And while the Kiva 's co-founders will not put a dollar figure on the amount they have loaned so far , they do say that every time a new business is listed on the website , the needed funds are raised in just days , or even hours .
Clark Boyd is technology correspondent for The World , a BBC World Service and WGBH - Boston co-production
DIGG THIS
Bush ’s ballyhooed speech , full of swaggering braggadocio about his now - acknowledged secret prisons and the tortures his minions practice there ( which Bush , using the usual prissy euphemisms favored by state - terror sadists , calls " an alternative set of procedures " ) , made much hay of the information squeezed out of al - Qaeda factotum Abu Zubaydah .
But as Ron Suskind noted in his piercing book , The One Percent Solution — and notes again in a new Salon.com interview — Zubaydah is literally insane , suffering from a severe multiple personality disorder .
He was never a top al Qaeda operative , as Bush claimed yet again in his bluster yesterday ; and the " information " he spewed out under torture was almost entirely garbage — yet , as Suskind notes , it sent American agents on wild goose chases all over the world .
I mentioned here earlier this week that as the Bush era endgame begins , these thugs will grow more brazen in their depredations , and more open about their brutal tactics .
It ’s getting harder to hide the massive extent of their lawbreaking , and if the Democrats take Congress in November , it will be harder still .
So what they must do now is simply break down all notions of law and morality , destroy the notions of justice and honor .
They must make up down and turn black to white :
Torture is not bad , it ’s not a crime ; torture is good , it keeps us safe .
You want to be safe , do n’t you ?
You want your children to be safe , do n’t you ?
Then we must use these " alternative procedures . "
And to keep us safe , the president must be able to do anything he pleases , without hindrance from the " pre-9/11 mindset " of the Constitution : he can spy on us , he can imprison us without charges , he can hold us indefinitely , he can even murder us in " extrajudicial killings " without arrest , trial , jury — or warning .
What ’s wrong with that , if it keeps your family safe ?
Do you want your children to die ?
Because that ’s what will happen if you oppose the president !
All of this must be made to seem normal , acceptable — even laudable — if the Bush Faction is to remain in power and escape prosecution .
Like ABC ’s " Road to 9/11 " propaganda film , Bush ’s speech is part of a larger campaign of moral and political subversion that will only grow in frenzy and intensity in the months to come .
The Best of Chris Floyd
You don´t have to go to Brasilia to experience Oscar Niemeyer´s wacky architecture .
Right near the center of São Paulo is his Memorial da America Latina .
It was opened in 1989 , despite it´s rather 60´s Jetson´s look .
Niemeyer has never really altered his style .
The centerpiece of the memorial is a vast , shade - less , sunbaked , concrete plaza -- perhaps not the best feature in a tropical city .
The project strikes me as one of those self - congratulatory public projects that don´t do very much good .
The quote at the bottom of the bleeding hand is from the then - governor of São Paulo state .
The site is located next to one of the major transit points in São Paulo ; Barra Funda , where the train , subway and multiple bus lines converge .
A shopping mall would´ve been a better contribution to the urban fabric .
Instead Paulistas have a vast , fenced - in , ceremonial dead - zone in the heart of the city .
I suppose the models at least looked cool .
* Mohandas Karamchand Gandhi was born on 2 October 1869 in Porbandar , India .
He led India 's movement for independence from British rule and is one of the most respected spiritual and political leaders of the 20th century .
In 1948 he was assassinated by a Hindu fanatic who opposed his tolerance for all creeds and religions .
Gandhi is honoured by his people as the father of the Indian nation and is called ' Mahatma ' , which means Great Soul .
Gore 's TV idea seems more Current / Viewer - sent content ridiculed a year ago
CURRENTXX_012_RAD.jpg SHOWN : L TO R : David Neuman , president of programming ; Laura Ling , supervising producer of Vanguard Journalism ; Joel Hyatt , CEO of the company .
They 're posing for this portrait in the Master Control Room .
Story is about Current , a new cable TV network that is programmed using " viewer - created content . "
Al Gore ( not shown ) has a hand in this operation .
Photos shot on Monday , July 31 , 2006 , in San Francisco , CA .
Photo taken on 7/31/06 , in San Francisco , CA . ( Katy Raddatz / The S.F.Chronicle ) ** John Marsh Davis Mandatory credit for photographer and the San Francisco Chronicle / - Mags out less CURRENTXX_012_RAD.jpg SHOWN : L TO R : David Neuman , president of programming ; Laura Ling , supervising producer of Vanguard Journalism ; Joel Hyatt , CEO of the company .
They 're posing for this portrait in the ... more Photo : Katy Raddatz Photo : Katy Raddatz Image 1 of / 1 Caption Close Gore 's TV idea seems more Current / Viewer - sent content ridiculed a year ago 1 / 1 Back to Gallery
Television insiders and pundits mocked Al Gore and Joel Hyatt a year ago when the pair introduced Current TV , their San Francisco - based cable and satellite channel .
Even after critics saw that the ex-vice president and Democratic Party fundraiser were n't crafting a left - wing network , few in the change - averse world of television could understand why anyone would tune into Current 's programming motif : three - to seven - minute videos created by emerging filmmakers , citizen journalists and the most rank of amateurs -- the viewers themselves .
Soon after Current 's premiere , the Wall Street Journal described it this way : " Newsless , often clueless and usually dull , the new channel is a limp noodle . "
Plus , Current was carried in only 17 million households , making it the equivalent of a one - stoplight town in the television universe .
Big advertisers do n't start calling until a network can be seen in 40 million households .
But the media landscape has shifted in the past year , as video - sharing sites like YouTube.com revealed an audience for viewer - created entertainment .
Current has since led the industry in the commercialization of that concept , as its viewers are creating ads for its leading advertisers .
Half of Toyota and Sony 's commercials on Current are made by the people watching them , giving advertisers a window into the mind - set of the coveted younger demographic .
Now carried in 30 million homes , Current will announce a plan next month for online expansion and is planning an international version next year .
Madeleine Smithberg , co-creator of Comedy Central 's " The Daily Show With Jon Stewart , " will start a daily offering this fall that 's still under wraps .
The best news of all for Hyatt , who is Current 's CEO , is that the operation is making a small profit , according to Derek Baine , a senior analyst with Monterey - based Kagan Research .
And some of the TV industry observers who once mocked Current have begun to change their minds as several networks , such as CNN and the CW -- which is a combination of the former WB and UPN television networks -- are now embracing user - generated content .
But while Current may have been ahead of the curve on this trend , the next challenge it confronts is tougher :
Many in the channel 's targeted 18 - 34 demographic may not be able to afford the premium - tier service of some digital cable systems , where Current is carried .
Others may prefer lapping up videos online in YouTube 's free - form format rather than on Current 's more organized site .
Critics continue to ask : Is Current focused on the wrong medium ?
Current " caught the ( viewer - created content ) trend early , but it is kind of surfing by them , " said John Higgins , business editor at Broadcasting & Cable magazine , a trade publication for the television industry .
" These guys ( at Current ) had all the right ideas and all the same machinery in place that YouTube did , but they did n't quite do it .
Lighting struck 10 feet to the left of them .
" Do you ever hear people say , ' Did you see that video on Current ? '
No .
They say , ' Did you see that video on YouTube ? ' " Higgins said .
Hyatt said Current is trying to position itself as the thinking person 's YouTube -- " a premium offering " where the best of user - generated content will gravitate to TV .
Part of Current 's strategy is rooted in the belief that while YouTube may be serving up 100 million videos a day to 6 million unique visitors , the 18 - to - 34 set still watches and appreciates a lot of television .
But while that age group watches an average of three hours and 55 minutes a day , it is far less than older folks .
The over - 50 crowd sees nearly six hours daily , according to Nielsen Media Research .
Yet , in another sign that media consumption habits are unpredictable , the audience for short videos may not be as young as perceived .
The highest percentage of YouTube 's audience is between 35 and 49 years old , according to June measurements by Nielsen / NetRatings .
" Content creators -- people who want to share their stories with their generational cohorts -- believe that television is at a whole different level than the Web , " Hyatt said recently while sitting in Current 's offices across the street from AT&T Park .
" So , yes , anybody can submit a piece of video to , fill in the blank -- YouTube , iFilm , Google Video , Yahoo video -- and it's all put up there .
And it 's a big mass of stuff .
" And for viewer creators , yes , you get your stuff on the Web , but the best of it can get on television , " Hyatt said .
Plus , said Current programming chief David Neuman , cable TV offers a proven business model that a dot - com company does n't .
Higgins agreed : " That 's where they have to make their mark .
To be the organizers , the editors of user - generated video . "
The majority of Current 's videos , called " pods , " are submitted by correspondents with whom the channel 's editors have a continuing relationship .
About 30 percent of Current 's pods come in over the transom as " viewer - created content . "
The way viewer - created video winds up on the air is akin to " American Idol . "
Creators submit pieces to Current 's Web site , www.current.tv, where viewers comment on them and vote on whether to " green - light " them to the airwaves .
Current producers skim the cream of these for airplay .
Current 's lineup is an eclectic mix of point - of - view journalism and trend and cultural pieces .
It has aired heartbreaking stories from AIDS - ridden corners of Africa and wacky pods on bikini - wearing meter maids .
It 's shown correspondents filming from the site of recent rocket attacks in Israel and aired an insightful conversation with two Hezbollah members that was filmed days before the current Middle East war broke out .
Programming chief Neuman , an NBC veteran who supervised mid-1980s comedies such as " Cheers , " became more confident than ever that Current was on the right track last fall when he saw a video filmed by a New Orleans resident shortly after Hurricane Katrina struck the city -- and before network reporters could get on the ground .
The resident shot the video while he volunteered on a 3 a.m. rescue operation aboard a flat - bottomed boat .
" He was authentically from that place , " Neuman said .
" He was telling the story in his voice , from his point of view .
It was just a more compelling and authentic experience than you could get from conventional news .
And he had scooped the competition .
They were out by a satellite truck somewhere trying to figure out how to drive through 3 feet of water . "
Neuman said Current has no hard rules on story length , but it has no plans to begin airing long - form documentaries .
While its market research says Current 's audience will watch six to eight pods in a row , Neuman said , " They do n't want to sit there and be annihilated with miserable war news for 45 minutes .
" When you want the audience to participate meaningfully in digital generation , it 's easier in the short form , " he said .
Current may be ahead for now in the area of short - form television entertainment , but others in the industry are gaining on it .
In the past few weeks , the CW announced it would allow viewers to create 15 - second promotional spots for its programs , as Current already does .
In September , MTV will start MTV Flux in the United Kingdom , a channel that will allow viewers to share video they shot ; if the concept works , an MTV executive said all MTV channels could be " fluxed . "
CNN just started soliciting viewer video and photos for its CNN Exchange Web site , and NBC has created a channel on YouTube.com to promote its programs .
Hyatt smiled and shook his head at the changes , noting that the imitation is flattering .
" We are gratified , to be sure , but we 're motivated by the validation . "
But Current is still too small to be Nielsen - rated , " so nobody knows if people are watching or not , " said Baine , of Kagan Research , who is tracking Current .
" That 's a tough thing for advertisers .
You 're showing them a lot of hypotheticals . "
Baine estimated that the company is turning a slight profit of $ 3 million this year based on estimated revenue of $ 47 million .
He forecasts that Current 's advertising revenue will increase next year to $ 19 million from $ 10 million this year .
" For a network in its first year to not be losing money is pretty good , " Baine said .
Major advertisers such as Toyota are happy with Current 's first year -- and especially its V - CAMS , or viewer - created ads , which began in May .
Toyota is so pleased with the new approach that it is considering using a viewer - created ad if it buys advertising time during the 2007 Super Bowl .
Current " is a great place to experiment with new ideas like this , " said Kim McCullough , corporate manager for marketing communications for Toyota Motor Sales , USA .
As for whether television is the best medium for user - generated content , McCullough said , " I do n't think there is one best way .
It 's too early to say right now .
We want to be involved in all these different platforms as this shakes out . "
Next , Current is experimenting with a video - on - demand offering in Los Angeles , where viewers can watch the pods they choose .
It is attempting to lure more high - end filmmakers with its " Seeds of Tolerance " contest , which awards $ 100,000 to the best piece on tolerance and diversity .
And two months ago , it began soliciting short pods shot on cell phones .
Newman said the quality is n't good yet , but he is n't concerned .
" It 's perfectly consumable TV ; it 's just not really compelling , " Neuman said .
" Where it will become more compelling is when it 's taking you places where you would n't be taken otherwise . "
Find out more
--
To learn how to generate your own content for Current TV , go to www.current.tv
--
To learn about CNN 's user - generated content , visit www.cnn.com/exchange/
LWN.net
One of the best Linux news and information sites with extensive daily and weekly coverage of Linux and the Open Source community .
LXer : Linux News
An international independent news and opinion source serving the free and open source software community .
One of its best features is the lively , but respectful forums where all manner of things related to free and open source topics are discussed .
The LXer community is the best !
GROKLAW Pamela Jones ' well - researched website on Linux and open - source legal issues ; insightful and cut - to - the - chase analysis .
Slashdot : News for Nerds , stuff that matters
What can you say about Slashdot that has n't already been said ?
If you 're a geek or a wanna - be this is the site to end all sites .
Get involved !
The Victoria Linux Users Group Discuss List The Victoria Linux Users Group general discussion list where you can pick everyone 's brains for Linux answers .
Freshmeat.net -
The source for Open Software Freshmeat maintains one of the largest archives of Linux software on the web .
The first stop for Linux users hunting for the software they need for work or play .
The Linux Brochure Project ( LBP ) LBP is GPLed data and software which is used to document key Linux information in a standard - size brochure ; an excellent advocacy and publicity tool for LUGs and other Linux organizations .
The Linux Documentation Project ( LDP )
The Linux Documentation Project develops free , high quality documentation for the GNU / Linux OS including the creation of multi-lingual FAQs , HOWTOs and Guides .
User Friendly the Comic Strip Columbia Internet , the friendliest , hardest - working and most neurotic little Internet Service Provider in the world .
Throw in a mischievous Artificial Intelligence and a naive but curious Dust Puppy , and you have the makings of USER FRIENDLY , the chronicle of a group of well - meaning but misguided Internet Workers .
Links Pages Generated by bk2site .
Copyright © 2002 -2012
Barbara E. Irwin
Copyright © 2002
Andrew Willard
Webmaster for LoLL
This page was last updated
Wed Jan 25 12:51:11 2012
Hosted by
One sat -nav firm has now removed Crackpot from its database
Cars , minibuses and trucks have taken the steep , twisty road from Swaledale to Wensleydale in North Yorkshire .
When vehicles become stuck , drivers are reversing perilously close to the cliff edge , say worried locals .
Carol Porter , 39 , who lives at Summer Lodge Farm , said : " We want this sorting out before something terrible happens . "
She said that she and her husband Steven , 41 , who live next to the track , have been helping at least one driver a week .
" When they get grounded on the small boulders , we 're having to go up there in the tractor and pull them out , " said Mrs Porter .
" If we 're outside , we try to stop them , but it 's a public right of way so we can't put any signs up saying no entry . "
We get a lot of sales reps in posh cars coming and they get so cross
Farmer Carol Porter
Send us your sat -nav stories
The couple want to see the track removed from the route recommended by satellite navigation systems for travelling between Swaledale and Wensleydale .
She said : " The drivers are going up and through the gate on to the gravel track .
" You can see it goes from Tarmac to the stones - and it's only just passable with 4x4s .
" But we get a lot of sales reps in posh cars coming and they get so cross .
" We 're three miles off the main road and having to turn them back and tell them to take a different road , they 're getting really frustrated . "
Even an Argos delivery truck had to turn round at Christmas when it was faced with the track , she said .
" It 's only a matter of time before something happens - and it's a 100 ft drop over the edge . "
Database change
Grinton Parish Council has now asked North Yorkshire County Council to look into the problem and see if safety signs can be erected .
A county council spokesman said : " We will look at the signing issue and any appropriate action that needs to be taken will be taken . "
A spokeswoman for Trafficmaster , which makes the Smartnav system , said it had removed any possibility of through - routes making use of Crackpot from its mapping database after tests on Wednesday morning .
She added : " The tests showed if you keyed in Crackpot as a destination then you would be sent along this route but it would not have been used as a through - route on our system .
" We believe our system would not have been responsible for taking motorists on unsuitable roads in the first place . "
How to defend yourself from bad advice about writing
In one of the NaNoWriMo forums , Elrina asks for help on " How to Avoid Passive Tense ? " :
Okay , I admit it .
I am a shameless user of passive tense .
I 've been involved with a power - struggle with one of my writing profs on campus ( creative nonfiction class ) about the tense , and I think it 's finally time for me to concede .
However , she seems to think that I should just inherently know other ways to word things .
And , of course , there 's the issue that I do n't think I quite understand passive tense , because the things she 's been marking as " wrong , " are not passive tense as I was taught .
I guess I tend to say things like " I was doing this , " " there were these things , " etc .
A specific sentence I 've been playing with recently :
" Thomas was relieved when the car finally pulled onto the highway . "
So , any thoughts would be awesome .
Well , Elrina , here are a few thoughts .
First , there 's nothing wrong with " Thomas was relieved when the car finally pulled onto the highway " .
At least , there 's no grammatical or stylistic reason for you to reword it .
Second , that sentence is probably not really an example of the passive voice , unless you mean that Thomas was relieved in the sense that his replacement arrived for duty .
If you mean that Thomas was relieved in the sense that he felt a lessening of anxiety , then the construction is an example of what the Cambridge Grammar of the English Language calls an " adjectival passive " .
CGEL observes that " adjectival passives are passive only in a derivative sense " .
( More on this in a later post , or go read pp. 1436 -1440 of CGEL if you 're curious and impatient .
A clue : you can say " Thomas was very relieved when the car finally pulled onto the highway " , but not " Thomas was very run over when the car finally pulled onto the highway " . )
Third , your other two examples -- " I was doing this " and " there were these things " -- are definitely not passives in any sense at all .
If your writing prof is really telling you that things like this are wrong because they 're in the passive voice , then she 's certainly ignorant and probably incompetent .
Fourth , there 's nothing intrinsically wrong with using the passive voice .
All the best writers do it , some of the time .
See the list of posts at the bottom of the page for some examples -- if you 're eager , go here to find some examples of passives in the writing of E.B.
White , who was the White in Strunk & White , or here , to examine the passive practices of professor Strunk himself ..
Fifth , and least important , the traditional terminology is " passive voice " , not " passive tense " .
The term tense deals with ways of expressing concepts of time , like present and past ; the term voice deals with ways of arranging the arguments of a verb , as in " The ninja explained the concept of passive to the writing teacher " ( which is an example of active voice ) , vs . " The concept of passive was explained to the writing teacher by the ninja " ( which is an example of passive voice ) .
There 's also aspect , which deals with ways of expressing action ( or being ) in respect of its inception , duration , or completion .
Putting voice , tense and aspect together , we can create a little paradigm of some variations on one of your examples .
I do this .
[ active voice , present tense ]
I am doing this .
[ active voice , present tense , progressive aspect ]
I did this .
[ active voice , past tense ]
I was doing this .
[ active voice , past tense , progressive aspect ]
This is done ( by me ) .
[ passive voice , present tense ]
This is being done ( by me ) .
[ passive voice , present tense , progressive aspect ]
This was done ( by me ) .
[ passive voice , past tense ]
This was being done ( by me ) .
[ passive voice , past tense , progressive aspect ]
So your example , the one in bold , was in the active voice .
Speaking of ninjas and writing teachers , the ninja is this cartoon by Nic Bommarito seems to know her grammar :
Of course , we here at Language Log do n't recommend or even condone the murder of English professors , though we do feel that some of them ought to sit in on a linguistics course or two , or maybe read a good student grammar .
And if you want to be able to stand up to them , Elrina , you might invest in such a grammar yourself , and perhaps in a good usage guide while you 're at it .
What 's in those books might even help your writing , but in any case it 'll help you keep your writing teachers from wasting your time .
Following Elrina 's question , the NaNoWriMo forum has three pages of interesting answers .
These make it clear that most people believe that " passive " has something to do with whether or not the subject is an agent , and perhaps also something to do with overall dynamism , vividness or concreteness .
For example , " Corvus " defends the use of passive in this way :
While I do not advocate a sudden embracing of the passive voice , I do advocate a less strident opposition to it .
It 's not always the wrong voice .
For example : " The horrific thought occured to me that I was on the wrong train , headed for Paris instead of Berlin . "
I challenge the reader to reconstruct this idea in active voice and maintain the flavor .
That challenge is hard to meet , since the sentence is already in the active voice .
The issue for Corvus seems to be that the subject of the main clause is " thought " rather than " I " .
In another comment , " Cpt. Nemo " suggests switching Elrina 's problem sentence from
Thomas was relieved when the car finally pulled onto the highway .
to one of
Thomas felt relieved when the car finally pulled onto the highway .
Thomas gave a sigh of relief when the car finally pulled onto the highway .
and " paintbyletters " responds that
The third is definitely the most active , because Thomas is acting .
I , as the reader , sigh in relief right along with him .
OTOH , to tell me that Thomas felt relief or was relieved distances me from Thomas .
I do n't care quite as much , and overuse of passive verbs will have a cumulative effect on your reader 's interest in your characters .
I do n't care at all , myself .
I 've given up , for the moment , on wishing that people would use grammatical terminology in a coherent way , and instead , I 'm asking myself whether any of this writing advice makes any sense .
Specifically , I wonder whether there 's any evidence that a narrative is better if it has a higher proportion of verbs that denote actions , whose subjects are human agents .
Let 's do a quick sanity check , by looking at the openings of a few successful novels , pulled ( literally ) off the shelf at random .
Exercise for the reader : what proportion of the clauses have a verb denoting an action , with an agentive subject ?
Would these novels have been better if that proportion were higher ?
It was August , and it should n't have been raining .
Perhaps rain was too strong a word for the drizzle that blurred the landscape and kept my windshield wipers going .
I was driving south , about halfway between Los Angeles and San Diego .
[ Ross Macdonald , The Far Side of the Dollar ]
The Channel Club lay on a shelf of rock overlooking the sea , toward the southern end of the beach called Malibu .
Above its long brown buildings , terraced gardens climbed like a richly carpeted stairway to the highway .
The grounds were surrounded by a high wire fence topped with three barbed strands and masked with oleanders .
[ Ross Macdonald , The Barbarous Coast ]
The law offices of Wellesley and Sable were over a savings bank on the main street of Santa Teresa .
Their private elevator lifted you from a bare little lobby into an atmosphere of elegant simplicity .
It created the impression that after years of struggle you were rising effortlessly to your natural level , one of the chosen .
[ Ross Macdonald , The Galton Case ] Moran 's first impression of Nolen Tyner :
He looked like a high risk , the kind of guy who falls asleep smoking in bed .
No luggage except for a six - pack of beer on the counter and the Miami Herald folded under his arm .
[ Elmore Leonard , Cat Chaser ]
A friend of Ryan 's said to him one time , " Yeah , but at least you do n't have to take any shit from anybody . "
Ryan said to his friend , " I do n't know , the way things 've been going , maybe it 's about time I started taking some . "
[ Elmore Leonard , Unknown Man # 89 ]
The marriage was n't going well and I decided to leave my husband .
I went to the bank to get cash for the trip .
This was on a Wednesday , a rainy afternoon in March .
The streets were nearly empty and the bank had just a few customers , none of them familiar to me .
[ Anne Tyler , Earthly Possessions ]
He -- for there could be no doubt about his sex , though the fashion of the time did something to disguise it -- was in the act of slicing at the head of a Moor which swung from the rafters .
It was the colour of an old football , and more or less the shape of one , save for the sunken cheeks and a strand or two of coarse , dry hair , like the hair of a cocoanut .
[ Virginia Woolf , Orlando ]
I 'll make my report as if I told a story , for I was taught as a child on my homeworld that Truth is a matter of the imagination .
The soundest fact may fail or prevail in the style of its telling : like that singular organic jewel of our seas , which grows brighter as one woman wears it and , worn by another , dulls and goes to dust .
Facts are no more solid , coherent , round , and real than pearls are .
But both are sensitive .
[ Ursula K. LeGuin , The Left Hand of Darkness ]
Early this morning , 1 January 2021 , three minutes after midnight , the last human being to be born on earth was killed in a pub brawl in a suburb of Buenos Aires , aged twenty - five years , two months and twelve days .
If the first reports are to be believed , Joseph Ricardo died as he had lived .
[ P.D James , The Children of Men ]
My quick count says that out of 39 tensed verbs , 7 ( or about 18 % ) denote actions and have an agentive subject .
Two of the seven are " said " -- hardly the most dynamic action around -- and if we discount those , we 're down to 13 % .
Do you see any places where the text would be improved by substituting some active - voice transitive verbs denoting actions , with human agentive subjects ?
I do n't .
The next time someone tells you to " avoid passive " , -- apparently meaning that you should use verbs denoting actions with human agents as subjects -- why not ask them to define their terms , and to back up their advice with some evidence ?
Other LL posts on passive voice :
" Passive voice and bias in Reuters headlines about Israelis and Palestinians " ( 12/17/2003 )
" The passivator " ( 4/6/2004 )
" Two out of three on passives " ( 5/8/2004 )
" Hey folks , ' passive voice ' != ' vague about agency ' " ( 5/31/2004 )
" Tossing technical terms around " ( 8/5/2005 )
" Voice confused with tense at the Economist " ( 3/13/2006 )
" Diagnosing soup label syntax " ( 6/29/2006 )
" Passive aggression " ( 7/18/2006 )
" How long have we been avoiding the passive , and why ? "
( 7/22/2006 )
" The ancient roots of passive avoidance " ( 7/23/2006 )
" When men were men , and verbs were passive " ( 8/4/2006 )
" The direct and vigorous hyptic voice " ( 8/5/2006 )
" Free verbs " ( 8/5/2006 )
" Avoiding passive for dummies " ( 9/25/2006 )
" School shootings and passive constructions " ( 10/10/2006 )
" The passive in law " ( 10/16/2006 )
" If they do it too much , they should be told not to do it at all " ( 10/31/2006 )
Posted by Mark Liberman at November 1 , 2006 07:05 AM
Pipeline (
ConsoleReader ( eol= " " ) ,
SimpleHTTPClient ( ) ,
SimpleFileWriter(" downloadedfile.txt " ) ,
) .run ( )
the console reader sends lines of text ( URLs ) the user enters to ...
the HTTP client , which fetches the associated page .
It then forwards on the page data to ...
the file writer , which appends all messages it 's sent to a file on disk .
BitTorrent support ( using the official BitTorrent client ) - includes preliminary ' streaming over BitTorrent ' support .
Lets you integrate P2P in your own Kamaelia applications .
( using the official BitTorrent client ) - includes preliminary ' streaming over BitTorrent ' support .
Lets you integrate P2P in your own Kamaelia applications .
HTTP client and nascent seaside - style pure - python webserver
OpenGL ( e.g. the checkers / draughts board on the right )
Strong DVB ( freeview TV ) support on Linux - including the foundations of a PVR
( freeview TV ) support on Linux - including the foundations of a PVR Collaborative whiteboarding with audio ( speex encoded ) - draw and talk together over the internet
with audio ( speex encoded ) - draw and talk together over the internet V isual composition of Kamaelia systems - create and link components on screen , see the code produced ( the screenshot near the top of the article )
irc.freenode.net
Kamaelia is an intuitive way to structure applications -- as a network of components which message each other .
Much like Unix pipes implemented in Python .
It was originally designed by BBC Research for rapid development of server software .
Here 's a taster of what a Kamaelia application looks like : ( built with the GUI ) And here 's some equivalent Python code : Those 5 lines of Python give you a console - based HTTP downloading program ( like wget or curl but with less options ) using existing components .
It 's as simple as that .
Version 0.5.0 is a major release - lots of functionality has been added from Google Summer of Code 2006 .
Key highlights of this release : For more information see the Kamaelia website .
You can get a copy of Kamaelia and Axon from Sourceforge , together with most of the dependencies in the mega bundle .
If you have any problems or questions , just pop along to #kamaelia on .
No Python experience is needed to get started !
Labels : kamaelia
Adjust font size :
( CNN ) --
When you first meet 4 - year - old Roberto Salazar , you can't help but notice his unwavering smile and constant laughter .
By all accounts , he 's a very happy boy .
It is only when he rams his head violently into walls or plays a little too roughly with a schoolmate , all the while smiling , that you are reminded that he suffers from an incredibly rare genetic disorder .
Roberto is one of 17 people in the United States with " congenital insensitivity to pain with anhidrosis , " referred to as CIPA by the few people who know about it .
Roberto was born in July 2001 , becoming Luis ' and Juan 's little brother .
As a newborn , his parents thought he was the perfect baby .
" Roberto was wonderful .
He never cried .
He would sleep 23 out of 24 hours a day .
He never cried to eat , never cried that his diaper is itching , " said his mother , Susan Stingley - Salazar .
At 3 months , things abruptly changed .
Roberto refused to eat .
He was rapidly losing weight .
His parents tried desperately to find ways to " force a child to eat that does n't want to eat , " Stingley - Salazar said .
First they tried to feed him with an eyedropper .
Then a feeding tube was attached to his stomach at 8 months .
Other abnormalities quickly surfaced .
Roberto was severely susceptible to heatstroke on hot summer days .
His parents soon noticed he did not sweat .
" You can't carry Roberto because he sucks your heat from your body .
You 're hot , sweaty .
His body can't sweat like yours so he 's just absorbing all of your heat , " Stingley - Salazar said .
His family was shocked when Roberto started teething .
He gnawed on his own tongue , lips and fingers to the point of mutilation .
" If you could imagine when you bite your tongue how bad it hurts .
At one point , you could n't even distinguish that his tongue was his tongue , " Stingley - Salazar said .
Stingley - Salazar , a registered nurse with a degree in molecular biology , took Roberto to see more than 60 physicians in the boy 's first few years .
She researched his symptoms on the Internet every night .
She e-mailed any specialist she could find .
She came up with very few answers until she contacted Dr. Felicia Axelrod of the New York University Dysautonomia Treatment and Evaluation Center .
Axelrod has studied this family of " no - pain " diseases for more than 35 years .
These genetic disorders affect the autonomic nervous system -- which controls blood pressure , heart rate , sweating , the sensory nerve system and the ability to feel pain and temperature .
Stingley - Salazar 's first reaction : " There is somebody out there who actually knows what we 've been going through , you know , the hell we 've been living for the last two - and - a - half years . "
CIPA is the most severe and fatal type of the seven types of hereditary sensory and autonomic neuropathy , or HSAN .
Overheating kills more than half of all children with CIPA before age 3 , Stingley - Salazar said .
According to Axelrod , levels of pain vary .
" For some children it 's a mild degree such as breaking a leg , they 'll get up and walk on the leg .
They feel that something is uncomfortable but they keep on moving , " she said .
" For other children , the pain loss is so severe that they can injure themselves repetitively and actually mutilate themselves because they do n't know when to stop . "
All HSAN disorders are recessive genetic disorders -- both parents have to carry the genetic mutation in order to pass it on to a child .
But there is less than a 1 - in - 4 chance that the child will develop it .
Neither of Roberto's older brothers has the disorder .
A more common HSAN condition is familial dysautonomia , or FD .
There are about 500 cases of FD in the United States , Axelrod said .
The first sign of FD is a child 's inability to suck properly followed by delayed milestones -- these children walk and speak later .
Often , FD patients endure severely dry eyes because they are unable to produce tears .
Also , part of this sensory disorder is difficulty " telling where they are in space , " Axelrod said .
The minor effect is constantly bumping into things .
The major effect is that 80 percent of these kids suffer curvature of the spine because they have no concept of posture .
" The hardest thing growing up with FD is that sometimes your balance can be off .
Also when you get busy , like when your blood pressure drops , I faint .
It 's scary for people who do n't know what to do , " 15 - year - old Perry Goldberger said .
Perry was diagnosed when she was 2 weeks old .
She , too , suffers from common ailments of HSAN -- she gets liquids through a stomach tube ; she can't distinguish between hot and cold ; she does n't feel pain .
Perry has learned to handle her daily medical regimen :
During the day she takes nebulizer treatments for her lungs and seven tube feedings .
At night she must use an oxygen machine to help her breathe and must place a moisture chamber around her eyes while she sleeps .
" This is my daily schedule that I take every single day .
You get used to it after a while , " she said .
Her mother , Laurie Goldberger , said her family takes it one day at a time and is teaching Perry a certain level of independence .
" Now at 15 , she 's gotten very responsible and understands it and she knows she has to take it .
So at school she does her own medicine , " Goldberger said .
Axelrod points to Perry as an example of the huge strides made in HSAN disorders .
" Forty years ago , a child with FD had a 50 percent probability of reaching the age of 5 , " she said .
" Today , a child born with FD would have a 50 percent probability of reaching the age of 40 . "
Last updated at 13:58 27 September 2006
For those admirers of Elizabeth Hurley who cannot afford the real thing - and that 's most of us - here is a rather cheaper alternative ... the ' fembot ' played by her in Austin Powers 2 : The Spy Who Shagged Me .
The prop has gone on sale on auction website eBay , but the silicon puppet does have a few disadvantages compared with the real thing .
The fembot has a tendency to explode at inopportune moments , and frankly could do with a spot of make - up , but the curves do seem to be in the right places .
The Hurley fembot , aka Vanessa Kensington , was Austin Power 's wife until she exploded into metal pieces , and was revealed as a robot .
Whether Vanessa Kensington was a fembot all along is still up for debate .
It is presumed that Vanessa was captured and killed by Powers ' nemesis , Dr Evil , soon before she and Austin married , but some fans believe she perhaps is still alive .
Bids for the fembot start at £ 1,800 , which probably would n't even get you lunch with the real Liz .
Mario Moreno should still have been behind bars the night he climbed into the passenger seat of a stolen car with two fellow gang members .
He was carrying a rifle , some cartridges and , in his jacket pocket , a bag of marijuana .
“ Let ’s go do this , ” the car ’s driver recalled Moreno saying as they headed into the turf of a rival black gang .
They drove by a liquor store at 89th Street and Central Avenue in South Los Angeles .
Two older black men were standing outside .
Moreno , 18 , aimed his weapon out the driver ’s - side window and fired .
One bullet killed Darrell Dennard , 53 , a grandfather who slept in an alley behind a nearby fish market and got by doing odd jobs .
He had just bought a lottery ticket .
It was about 9 p.m. on Oct. 11 , 2004 .
If not for a chronic shortage of jail beds in Los Angeles County , Dennard ’s killer would have been in jail four more months .
Moreno had been convicted of possessing a sawed - off shotgun — a felony .
A probation officer called him a “ danger to the community , ” and a judge sentenced him to a year in jail , the county maximum .
Six days later he was released into a work program .
Since his arrest , he had served a total of 53 days .
Moreno joined more than 150,000 county inmates who have been released during the last four years after serving fractions of their sentences .
Thousands , like Moreno , committed violent crimes when they would otherwise have been locked up , even with time off for good behavior .
The large - scale releases started in mid-2002 , when Sheriff Lee Baca had to make major budget cuts .
Unwilling to lay off patrol officers , he chose to close jails .
As a result , nearly everyone now sentenced to 90 days or less is let go immediately .
Many others leave after serving no more than 10 % of their time , making Los Angeles County Jail sentences among the weakest in the nation .
A Los Angeles Times investigation of early releases since Baca ’s jail closures began found :
 Nearly 16,000 inmates — more than 10 % of those released early — were rearrested and charged with new crimes while they were supposed to be incarcerated .
 Nearly 2,000 of those rearrested were released early a second time , only to be arrested again while they should have been behind bars .
Hundreds of those people cycled through jail three or more times .
One example of the revolving door : A 55 - year - old woman was released early in 2002 on an assault charge , only to be rearrested three days later on suspicion of another assault .
Over the next three years , she was released early 15 times and rearrested 19 times when she was supposed to be locked up .
 Sixteen men , including Moreno , were charged with murders committed while they should have been in jail .
Nine are awaiting trial ; seven have been convicted in the homicides .
 More than a fourth of those rearrested were charged with violent or life - endangering crimes , including 518 robberies , 215 sex offenses , 641 weapons violations , 635 drunk - driving incidents , 1,443 assaults and 20 kidnappings .
Many of these inmates probably would have committed new offenses even if they had served full sentences .
But the early releases have given career criminals more time on the streets to commit additional crimes , endangering the public .
Juvenal Valencia , 21 , was convicted of assault with a deadly weapon , released early and then cycled in and out of jail twice more after early releases .
Prosecutors have now charged him with first - degree murder in a drive - by shooting that left one man dead and five others wounded .
He has pleaded not guilty .
At the time of the killing , Valencia had two months left to serve for a probation violation .
In recent years , sheriff ’s clerks have routinely disregarded sentences handed down by judges .
In some cases , inmates are freed despite instructions from a judge that they must serve their full sentences .
“ That puts us all in peril , ” said Los Angeles City Atty .
Rocky Delgadillo .
“ I think criminals have learned from this that there is a way to beat the system .
For many , a few days in jail has become just a cost of doing business . ”
Los Angeles Police Chief William J. Bratton , who led the Boston and New York police departments before taking over in Los Angeles in late 2002 , said the situation has frustrated officers on the street and made policing harder .
“ It ’s an amazing system .
I ’ve never seen anything like it , ” he said .
“ The police , prosecutors and judges — sometimes even a jury — have made decisions , and you have the ability to arbitrarily undo all of that . ”
In recent interviews , Baca defended his decision to release inmates early as a “ last resort , ” saying he had little choice but to shut down jail facilities when he had to cut millions of dollars from his budget .
At the time , Baca warned that crime would increase if he were n’t given more money .
“ In a public safety fashion , the net will be cut and the floodgate will be open to more crime , ” Baca told county supervisors at a 2002 board meeting to which he had brought a thousand supporters .
Now , he says , the public is paying the consequences .
“ I knew that there are people in our county jails that are so unstable that even if they ’re only in there for a minor crime , they ’re capable of committing a bigger crime , ” he said .
“ You just ca n’t predict who that person is going to be , specifically . ”
A bond measure of up to $ 500 million to fund improvements to — and expansion of — the jail system is being considered for the November ballot .
But even if the extra millions come through , sheriff ’s officials say they wo n’t be enough to fix long - neglected jails .
The sheriff has little control over who comes into his jails .
In recent years , bookings have steadily increased , partly the result of a jump in arrests by Los Angeles police .
And more than a thousand jail beds are regularly taken up by prisoners awaiting transfer to state facilities , a process that takes weeks .
Today , the county has about 19,000 jail beds in use .
Baca says he would need at least 30,000 — and additional deputies — to end early release .
‘ A Truly Innocent Victim ’
A little over a week before Moreno killed him , Dennard ’s mother , Gladys Derrick , visited her son in the alley behind the fish market .
She brought travel - size lotions and shampoos and a basket of “ all kinds of things he did n’t have to cook . ”
He was “ always good company , ” she said .
“ It ’s not very often that you have a truly innocent victim , ” said LAPD Det .
John Skaggs , who investigated the killing .
“ This of course is that case . ”
Half a dozen members of Dennard ’s family were in the Compton courthouse on March 27 to see Moreno sentenced to state prison for voluntary manslaughter , a plea prosecutors said they offered because witnesses would n’t testify .
Dennard ’s sister wore a T - shirt printed with her brother ’s smiling image and the dates marking his life :
9/26/51-10/11/04 .
Moreno , a member of one of the county ’s most notorious gangs , Florencia 13 , smiled at his family when he entered the courtroom .
A girlfriend powdered her nose .
His mother , her hair tied back in two long braids , read a Bible .
Dennard ’s brother , Howard McZeal , addressed the court .
“ I ’d like to know why my brother is n’t here , ” McZeal said , his voice cracking .
“ What did he do to you ? ”
Moreno stared straight ahead .
Until speaking to a Times reporter shortly before the sentencing , Dennard ’s family had no idea that his killer had gotten out of jail with months still to serve .
“ A gang member arrested with a sawed - off shotgun ?
That [ jail time ] was a camping trip to him , a business junket , ” McZeal said later .
“ If that man had still been in jail , Darrell would still be alive . ”
A Crush of Inmates
When beds were full , inmates were housed in hallways , common rooms , the pews of the jail ’s chapel and anywhere floor space was available .
In the summer of 1983 , with the building filled to twice its capacity , hundreds of inmates were given four blankets each and slept under the stars on the roof of Men ’s Central Jail .
By then a class - action lawsuit filed on behalf of inmates by the American Civil Liberties Union was making its way through the court system .
A federal court found the overcrowding to be cruel and unusual punishment and ordered the county to stop overloading its jails .
At the time , more than 22,000 inmates were being housed in space meant for half as many .
County officials , under a federal consent decree , agreed to open new facilities .
In 1988 , the judge allowed the county to institute what was to be a temporary solution to the overcrowding : early release .
The number of early releases ebbed and flowed , but by the late 1990s it had slowed to a trickle .
Then , in mid-2002 , Baca faced two years of budget shortfalls , forcing $ 167 million in cuts .
County supervisors said they had little choice but to rein in spending .
During that time , state and county governments were reeling from losses in tax revenue caused by fallout from the dot - com bust .
Other county departments were also hit hard .
“ We did what we could to maintain ” the sheriff ’s funding , said Supervisor Yvonne Brathwaite Burke .
Baca was already dealing with a jail system that had lost 5,000 beds in a decade , mostly from earthquake damage .
In little more than a year , he closed three more jails and shut down parts of four others , reducing the number of inmates by another 5,000 .
The cuts saved more than $ 50 million .
But they also guaranteed a new wave of early releases .
Baca ’s critics point to “ nonessential ” pet projects , like rehabilitation programs in the jail , that could have been cut to keep inmates in jail longer .
“ That ’s nice , but that ’s not our job .
Our job is custody , ” said Los Angeles County Sheriff ’s Sgt. Paul Jernigan , who works in Men ’s Central and is one of four candidates running against Baca in the June 6 election .
But the sheriff said these programs amounted to a fraction of the money he needed to save .
With cuts down to the bone , he said he faced laying off deputies or closing the jails .
“ If you were to ask the community , ‘ I ’ll take away five police cars in your neighborhoods or I ’ll do early release , ’ ” they ’ll say , ‘ Do n’t take away the five radio cars .
Now manage your jail the best way you can . ’
So I did , ” he said .
In the last two years , Baca ’s department has benefited from an increase in county revenue from property taxes , fueled by a surging real estate market .
More than half the beds closed since 2002 have been reopened .
The department has the funds , but not the staff , to reopen the remaining 2,500 beds .
And there is still the problem of aging and outdated facilities at a time of growing pressure to reduce violence among inmates and relieve overcrowding that has continued despite the large - scale early releases .
In Men ’s Central , cells designed for three inmates are filled with six .
Last week , U.S. District Judge Dean D. Pregerson described the practice as “ simply not consistent with basic values , ” noting that inmates did not even have the space to stand up and take a step or two .
Pregerson , who oversees the still - open civil rights case on jail conditions , said the situation “ should not be permitted to exist in the future . ”
A Balancing Act
Los Angeles County , with the largest jail system in the nation , has led the way .
In the 3 1/ 2 years before Baca closed jails , about 10,000 inmates were let out prematurely .
In the 3 1/ 2 years that followed , almost 150,000 were released three or more days early .
With fewer beds , the sheriff has also had to loosen standards on who qualifies for early release .
“ By lowering that criteria , you ’re qualifying more hardened criminals , ” said Sheriff ’s Capt .
Bill Bengtson .
Until The Times asked for data , sheriff ’s officials had not tracked how often inmates were rearrested when they would otherwise have been behind bars .
In February , the officials hastily conducted an analysis of rearrests before giving the newspaper data on more than 2 million bookings into the jail since 1999 .
The Sheriff ’s Department analysis , which looked at the seven years of data as a whole , concluded that inmates released early were no more likely to re-offend than those who were not .
But The Times found distinct differences when it compared the years before the jail closures with those after .
As fewer served full terms , rearrests within 90 days of release increased for all inmates .
Those released early after the policy change were more likely to be rearrested within 90 days than inmates who served their full jail time .
The Times analysis also showed that although the number of inmates released early increased 15 - fold after mid-2002 , arrests of people with time left on their sentences rose about 60 - fold , from 266 to 15,775 .
Rearrests for violent and life - threatening crimes soared from 74 before the jail closures to more than 4,000 since .
Among the perpetrators : Hector Aguilar , who left jail Sept. 1 , 2004 , with three months left on his sentence for domestic violence .
Four days later , he opened fire with an AK - 47 assault rifle on a sheriff ’s patrol car , missing two deputies inside .
He pleaded guilty to assault with a deadly weapon and was sentenced to 43 years in state prison .
In deciding which inmates deserve the most time , sheriff ’s officials try to balance overcrowding against the need to keep dangerous criminals locked up .
The inmate pool for early release is limited to about 10 % of the jail population — convicts sentenced by judges to less than a year .
The remaining inmates are awaiting trial or transfer to state prison for longer sentences , or are incarcerated for parole violations under a contract with the state .
Since late 2004 , a small number of beds — now about 75 — has been reserved for inmates sentenced to jail who have been identified by the LAPD as chronic , dangerous offenders .
They do their full time .
Occasionally , inmates arrested for specific crimes in specific areas are also kept longer .
In recent months , for example , sheriff ’s deputies have cracked down on prostitution in parts of South Los Angeles and Compton .
Current guidelines say prostitutes arrested there “ shall serve 100 % of their sentence , and shall NOT be released [ early ] . ”
Guidelines issued by the sheriff spell out which inmates in the 10 % pool qualify for early release :
Those in jail for manslaughter , sex offenses and child abuse , along with violators of gang injunctions , do all of their time .
For nearly all other convictions , inmates serve a fraction of their sentences .
Women , who are housed in separate , less crowded facilities , usually do no more than 25 % .
Men serve no more than 10 % .
If jailers had the room , a typical inmate given a year in jail would spend about 243 days behind bars after discounts for good behavior and work .
As it is now , an inmate eligible for a 10 % release would serve just 24 days .
“ That ’s a disaster , ” said Los Angeles County Dist .
Atty .
Steve Cooley .
“ Obviously , if they are n’t in , they can be out committing crimes . ”
‘ Get Them Out ’
Each day the decision of who goes home early is made in cramped cubicles at the county ’s Inmate Reception Center .
Sheriff ’s clerks work eight - hour shifts , reviewing inmate files to identify those who meet the sheriff ’s criteria for early release .
On a recent morning , Pamela Broom ’s desk was stacked with a dozen or so manila envelopes , filled with paperwork on candidates for early release .
Broom pulled the envelope of Rosa Louise Degraw .
A blond , plump face glared from a booking photo .
The jail ’s computer showed that Degraw was serving a 180 - day jail sentence for battery and vandalism .
With time off for good behavior , she was supposed to serve about four months .
Degraw ’s sentencing documents contained an explicit directive from the judge : “ No early release . ”
Instead , 33 days after she was booked , Degraw was eligible to go .
“ The sheriff says , ‘ It does n’t mean anything .
I ’ve got to get them out of my jails , ’ ” said Broom ’s supervisor , Greg Sivard .
Degraw had landed in jail after repeatedly violating her probation requirements following a conviction for battery and vandalism .
Among her battery victims : her mother .
Broom said she has little time to reflect on whom she is releasing .
“ I ’d be in a mental ward , ” said Broom , who finds anywhere from two to 40 inmates each day to release early .
“ You follow the criteria .
You get paid to do your job , not have opinions . ”
In red ink on the envelope , she marked Degraw free to go .
Two and half hours later , Degraw , 23 , pushed her way through a metal jail door onto Bauchet Street in downtown Los Angeles .
She was angry she ’d served as much time as she had .
Dressed in the same white tank top and blue jeans she had come to jail in , Degraw said she believed she ’d serve only 10 % of her sentence .
Still , she said , the extra time made her want to avoid coming back .
“ The longer you make them stay in there and think about it , the chances are less that they ’ll get out and do something else , ” she said .
Degraw said she planned to reunite with her 4 - year - old son and try again to earn her high school equivalency degree .
For the immediate future , she had other plans : “ I ’m going to drink me a bottle of Southern Comfort today . ”
Freed Without a Review
“ It should be clear to those who are listening that we are going to put them in programs and ankle bracelet monitoring , ” Baca said , appearing on KCET - TV Channel 28 ’s “ Life and Times ” in April 2003 .
“ They ’re not just walking out the door with no obligations . ”
For a few months in 2003 , jailers reviewed criminal histories before approving early release .
Then they abandoned the effort , saying it was too time - consuming .
Since then , inmates have been freed without anyone looking at their full criminal past .
Many had long arrest records .
More than 4,400 released early after the jail cuts had been prosecuted for assaults with deadly weapons or seriously injuring people .
Today , the department has far fewer inmates on electronic monitoring and other types of supervision than it did in 2001 .
Elsewhere , jail officials do more to determine which inmates are likely to endanger public safety .
In Portland , Ore. , the Multnomah County Sheriff ’s Department examines the criminal records of inmates so convicts with violent pasts do more time regardless of their most recent offenses .
After questions from The Times , Los Angeles County Sheriff ’s Chief Marc Klugman said the department would consider once again looking at criminal histories and other factors to determine whether an early release was appropriate .
Baca said judges and prosecutors also bear some responsibility .
He said they are well aware that he is releasing inmates early , yet continue to agree to plea bargains that send dangerous offenders to jail instead of prison .
Creative Sentencing
On Sept. 30 , 2002 , Los Angeles County Superior Court Judge James R. Brandlin sentenced Jeffery , 36 , to two years in County Jail .
Eight months later , he was back on the street .
Brandlin , who had called Jeffery a “ tremendous risk to public safety , ” demanded answers in a letter to Baca .
The sheriff had his aides look into the case .
Jeffery , Baca wrote back to the judge , had been released properly by sheriff ’s officials struggling to keep the jail population down .
“ While this may not meet with your approval , ” Baca said , “ I sincerely hope that it allays any concerns you have that Mr. Jeffery was incorrectly released . ”
Brandlin declined to comment for this story .
As more and more inmates realized that there was little risk of serving full sentences , fewer accepted deals to serve their time under house arrest or through community service .
And as alternative sentences dwindled , more pressure was put on the jails .
“ You tell a guy now , ‘ Hey , 30 days Caltrans , ’ ” Cooley said .
“ He says ‘ You know what , I do n’t need all that jazz .
Give me my time .’ ”
Cooley said frustrated prosecutors and judges seek creative ways to “ beat the sheriff ’s sentencing system . ”
Here ’s how prosecutors and one judge made sure that a defendant served his time .
In September , sheriff ’s deputies caught Steven Torres strolling through his Compton neighborhood carrying a large glass bong and a small pipe containing drug residue .
He was on probation for previously carrying a concealed weapon .
A search of his home turned up another handgun — a serious violation .
His probation officer wrote that Torres should “ spend a suitable amount of time in local custody ” to show him that “ criminal behavior will not be tolerated . ”
At a November hearing , where Torres pleaded no contest , Superior Court Judge Xenophon F. Lang Jr. told him he would “ serve 90 actual days in the County Jail ” and ordered him to surrender to the jail in January to await sentencing .
In March , at Torres ’ sentencing hearing , Lang smiled at the bulky defendant before him in handcuffs .
The judge reminded Torres of the 90 - day sentence he had proposed earlier .
“ It appears he has done that , ” Lang said with a chuckle , ordering Torres released on probation .
Fatal Consequences
Randy Morones , 33 , had been rousted from a jail bed about 2 a .m .
It was his 11th day in jail on a drug conviction .
He had been sentenced to six months .
In 1999 and again in 2000 , he had been convicted of beating a girlfriend and sent to state prison .
His latest offense marked his seventh stay in County Jail in four years .
Since 1989 , he had been convicted of drunk driving four times .
None of this mattered when Morones again came up for early release .
Because he had served 10 % of his jail time , he was free to go .
Morones left the downtown jail complex about 8:30 a.m .
By evening , he was drinking beer at a friend ’s house .
Then he climbed behind the wheel of his 18 - foot motor home and headed to his parents ’
Pico Rivera home , speeding along 3rd Street .
Witnesses said he did n’t even hit the brakes as he approached the red light at Arizona .
He slammed into Garcia , throwing him more than 130 feet and killing him .
Morones ran from the crash site , but witnesses caught and held him until deputies arrived .
In September 2004 , a jury found Morones guilty of second - degree murder and gross vehicular manslaughter while drunk .
At his sentencing , Morones apologized to Garcia ’s family : “ I wish the Lord took my life instead of an innocent man . ”
He was sentenced to 20 years to life in state prison .
Galdino Garcia wept when he spoke recently of the crash and his memories of his brother .
A Mexican immigrant , Jose played guitar in Latin rock bands .
He spent time riding his motorcycle in the San Gabriel Mountains , telling his family that the rides made him feel like he was “ caressed by God . ”
Galdino Garcia said he blames the justice system as well as Morones .
“ I believe in the law , but that was one of my questions :
Why did they let him out early ? ” Galdino said .
“ They never answered me that question . ”
Times researcher Maloy Moore and staff writers Robin Fields and Stuart Pfeifer contributed to this report .
Data analysis by Doug Smith and Sandra Poindexter .
( INFOBOX BELOW )
Recidivism
After early releases mushroomed in mid-2002 , all county inmates were more likely to be rearrested within 90 days after being released .
But the rearrest rate almost tripled for those let out early .
Before jail closures
After jail closures Full term 13.1 % 18.5 % Early release 7.7 % 20.6 %
Does not include inmates released after Sept. 30 , 2005
Source : Los Angeles County Sheriff ’s Department .
Data analysis by Sandra Poindexter
*
( INFOBOX BELOW )
Free to re-offend
From July 2002 to December 2005 , the number of inmates who should have been in jail who were :
Released early 148,229 Rearrested 15,775 Charged with assault 1,443 Charged with robbery 518 Charged with a sex offense 215 Charged with murder 16
Sources : L.A. County Sheriff ’s Department ; L.A. Superior Court
Now we know the truth .
In an interview with NBC's Brian Williams , Apple CEO Steve Jobs explained why Apple comes up with new iPod models so frequently : " You keep on innovating , you keep on making better stuff , " Jobs said , in response to a question from Williams about why a new iPod might seem outdated as soon as you take it out of the box .
Then Jobs offered a bit of advice to consumers : " If you always want the latest and greatest , then you have to buy a new iPod at least once a year . "
Gee , thanks , Steve .
We always thought it was the dead batteries or battered shell that kept sending us back to the Apple store .
Glad you could set us straight .
[ Via iLounge
Researchers have linked human activities to rising ocean temperatures in hurricane formation regions , further connecting severe storms to global climate change .
Using 22 different computer models of the climate system , atmospheric scientists from Lawrence Livermore National Laboratory and 10 other labs say that they have shown that the warming of the tropical Atlantic and Pacific oceans over the last century is directly linked to human activities .
For the period 1906 - 2005 , the researchers found an 84 percent chance that external forcing ( such as human - caused increases in greenhouse gases , ozone and various aerosol particles ) accounts for at least 67 percent of the observed rise in sea surface temperatures ( SSTs ) in the Atlantic and Pacific hurricane formation regions .
In both regions , human - caused increases in greenhouse gases were found to be the main driver of the 20th century warming of SSTs , the scientists say .
"
We ’ve used virtually all the world ’s climate models to study the causes of SST changes in hurricane formation regions , ” says Benjamin Santer of Livermore ’s Program for Climate Model Diagnosis and Intercomparison , and lead author of a paper describing the research .
The use of fossil fuels are said to emit greenhouse gases that cause global climate change .
This research shows a further direct link between human activities , climate change and killer storms .
“ In the real world , we ’re performing an uncontrolled experiment by burning fossil fuels and releasing greenhouse gases , ” Santer says .
“ We do n’t have a convenient parallel Earth with no human influence on climate .
This is why our study relied on computer models for estimates of how the climate of an ‘ undisturbed Earth ’ might have evolved .
The bottom line is that natural processes alone simply cannot explain the observed SST increases in these hurricane breeding grounds .
The best explanation for these changes has to include a large human influence .
” The researchers note that hurricanes are complex phenomena and are influenced by a variety of physical factors such as SST , wind shear , moisture availability and atmospheric stability .
The increasing SSTs in the Atlantic and Pacific hurricane formation regions is n’t the sole cause of hurricane intensity , but is likely to be one of the most important influences on hurricane strength .
“ The models that we ’ve used to understand the causes of SST increases in these hurricane formation regions predict that the oceans are going to get a lot warmer over the 21st century , ” Santer says .
“ That causes some concern .
In a post - Katrina world , we need to do the best job we possibly can to understand the complex influences on hurricane intensity , and how our actions are changing those influences . ”
Tolkien 's Not -So -Secret Vice
In 1931 , Tolkien wrote an essay about the somewhat peculiar hobby of devising private languages .
He called it A Secret Vice .
But in Tolkien 's case , the " vice " can hardly be called secret anymore .
What , really , is going on inside the head of a man who all his life is toying with enormous linguistic constructions , entire languages that have never existed outside his own notes ?
For one thing must be perfectly clear :
He made very much more of these languages than he could ever hope to include in his stories .
True , there are a few Elvish poems and a swarm of exotic names in the annals of Middle - earth , but even so , this is nothing compared to all that Tolkien made .
In Tyalië Tyelelliéva # 6 , Lisa Star informs us that her own list of published words has twelve thousand entries .
We are talking about enormous linguistic constructions .
How did it start ?
How was it done ?
And why ?
Young John Ronald Reuel in the Nevbosh - speaking world
One day quite exactly a hundred years ago , early teenage Tolkien was baffled to hear a couple of other kids communicating in Animalic .
This was a primitive play - language that mainly consisted of English words for animals .
The inventors of Animalic did not attempt to keep it a secret , and young Tolkien soon learnt some of it .
In his essay A Secret Vice ( published in The Monsters and the Critics p. 198-219 ) he gives one example of Animalic :
Dog nightingale woodpecker forty , which translates as " you are an ass " .
( By all means : " ass " here means donkey and nothing else .
In Animalic , forty meant donkey , while donkey , of course , meant forty ... )
Animalic soon became a dead language , but some of the kids continued their linguistic games .
They invented a language called Nevbosh ( this being Nevbosh for " new nonsense " - the nonsense replacing Animalic , evidently ... )
Tolkien was not the originator of this language , but according to himself , he contributed to the vocabulary and helped to standardize the spelling .
" I was a member of the Nevbosh - speaking world , " he proudly recalls .
Nevbosh was mainly a mixture of heavily distorted English , French and Latin words .
It did not represent a real breaking away from English or other normal languages .
More than twenty years after it became a dead language Tolkien was still able to remember at least one connected fragment , that he calls " idiotic " :
Dar fys ma vel gom co palt ' hoc
pys go iskili far maino woc ?
Pro si go fys do roc de
Do cat ym maino bocte
De volt fac soc ma taimful gyróc ! '
The rhymes can actually be preserved in translation : " There was an old man who said ' how / can I possibly carry my cow ? /
For if I was to ask it / to get in my pocket / it would make such a fearful row ! ' " But for Tolkien , simply distorting existing words ( like woc = " cow " ! ) was in the long run not enough .
Already among the Nevbosh kids there emerged something more sophisticated : words that could not be traced to any specific source , but popped up simply because they seemed to fit their meaning - because the combination of sound and sense gave the kids pleasure .
Tolkien mentions a word lint " quick , clever " .
Young John Ronald Reuel never forgot this word :
Forty years later he had Galadriel singing how the years in Middle - earth had passed ve lintë yuldar lissë - miruvóreva , like swift draughts of the sweet mead ...
Time went by , and Nevbosh joined Latin and Gothic on the long list of dead languages .
But Tolkien , still a child , was already devising one of his first wholly private languages : Naffarin .
He mentions one Naffarin sentence to illustrate , but there is no translation : O Naffarínos cutá vu navru cangor luttos ca vúna tiéranar , dana maga tíer ce vru encá vún ' farta once ya merúta vúna maxt ' amámen .
Though Naffarin supposedly incorporated some of the latest stages of Nevbosh , we already sense a movement towards " Elvish " forms .
Naffarin was inspired by Latin and Spanish , but Tolkien was to find two even more powerful inspirations .
Through the Welsh cellar door into the Finnish wine - cellar One thing was important to Tolkien .
Languages should be beautiful .
Their sound should be pleasing .
Tolkien tasted languages , and his taste was finely tuned .
Latin , Spanish and Gothic were pleasing .
Greek was great .
Italian was wonderful .
But French , often hailed as a beautiful language , gave him little pleasure .
But heaven itself was called Welsh .
In his essay " English and Welsh " , Tolkien recalls how he once saw the words Adeiladwyd 1887 ( It was built 1887 ) cut on a stone - slab .
It was a revelation of beauty .
" It pierced my linguistic heart , " he recalls .
It turned out that Welsh was full of such wonderful words .
Tolkien found it difficult to communicate to others what really was so great about them , but in his essay he makes an honest attempt : " Most English - speaking people ... will admit that cellar door is ' beautiful ' , especially if dissociated from its sense ( and from its spelling ) .
More beautiful than , say , sky , and far more beautiful than beautiful .
Well then , in Welsh for me cellar doors are extraordinarily frequent , and moving to the higher dimension , the words in which there is pleasure in the contemplation of the association of form and sense are abundant . "
He then lists concrete examples like Welsh wybren being " more pleasing " than English sky .
- MC p. 190-193 .
But there were more pleasures in store for young Tolkien .
One day he found ... a
Finnish grammar !!!
He soon found himself in phonaesthetic ecstasy .
" It was like discovering a complete wine - cellar filled with bottles of an amazing wine of a kind and flavour never tasted before .
It quite intoxicated me " ( Letters : 214 ) .
High on Finnish he scrapped his latest project ( " make your own Germanic language " ) , for now he had found more powerful inspirations .
Many years later , he stated that the Elvish tongues were " intended ( a ) to be definitely of a European kind in style and structure ( not in detail ) ; and ( b ) to be specially pleasant .
The former is not difficult to achieve , but the latter is more difficult , since individuals ' personal predilections , especially in the phonetic structure of languages , varies [ sic ] widely ...
I have therefore pleased myself " ( Letters : 175-176 ) .
This in effect meant that from the point he discovered Welsh and Finnish , they were the main influences on his own linguistic constructions .
Of course , he was right in observing that individual taste varies widely .
The Welsh language that he loved so much and modeled Sindarin on , was once described as " a mass of grunts and gargling sounds " by a Norwegian radio reporter .
Still , many people seem to agree that the Elvish tongues are generally euphonious .
Tolkien registrered positive feedback : " The names of persons and places in this story were mainly composed on patterns deliberately modelled on those of Welsh ( closely similar but not identical ) .
This element in the tale has given perhaps more pleasure to more readers than anything else in it " ( MC:197 ) .
But we are leaping ahead of things ; let us return to the very beginning .
While World War I was still raging , Tolkien 's linguistic constructions definitely became Elvish languages .
On March 2nd , 1916 , 24 - year - old Tolkien wrote to his beloved Edith telling her that he had been working on his " nonsense fairy language - to its improvement .
I often long to work at it and do n't let myself ' cause though I love it so it does seem such a mad hobby ! "
Mad or not , he was to give in to his longing and keep working on this hobby throughout his life .
- Letters : 8 . Exactly at this point , in 1916 , while Tolkien was in hospital having survived the Battle of Somme , the very first parts of his " mythology for England " were written - fragments of what would one day become the Silmarillion .
At the same time , or rather a little before , he wrote his first Elvish word - lists .
One thing triggered the other : " The making of language and mythology are related functions , " he observed in A Secret Vice .
" Your language construction will breed a mythology " ( MC:210-211 ) .
Or again in a letter written many years later , shortly after the publication of LotR : " The invention of languages is the foundation .
The ' stories ' were made rather to provide a world for the languages than the reverse .
To me a name comes first and the story follows ... [ LotR ] is to me ... largely an essay in ' linguistic aesthetic ' , as I sometimes say to people who ask me ' what is it all about ? ' " ( Letters:219-220 )
Few people took this explanation seriously .
" Nobody believes me when I say that my long book is an attempt to create a world in which a form of language agreeable to my personal aesthetic might seem real , " Tolkien complained .
" But it is true . " - Letters :264 .
From the very beginning , there were two main languages in his mythology : one that sounded much like Finnish , and one that was similar to Welsh .
Unlike their inspirations , they were related and were derived from a common primitive language .
The Finnish - like language was called " Qenya " right from the start ; a small spelling reform was all that stood between it and its final name .
The other language was originally called Golgodrin or " Gnomish " , it was i-Lam na-Ngoldathon or " the tongue of the Gnomes " .
( Its later form , so heavily revised that it was not really the " same " language , was long called Noldorin ; only as Tolkien was completing LotR did he realize that its real name was Sindarin .
But see below . )
The first Gnomish lexicon was published a few years ago and turns out to be very comprehensive , probably the most complete " dictionary " Tolkien ever made for any Elvish language .
The " Qenya " word - list was finally published in 1998 and turns out to be another very comprehensive document , as can be seen from the indices presented on this web - page ( whether by English glosses or Qenya words ) .
The years passed by and the stories of the Silmarillion evolved , but it seems that the relevance of the original dictionaries soon dwindled : Frequent revisions inevitably rendered them obsolete .
In the second half of the thirties , however , Tolkien made a list of some seven hundred Primitive Elvish " stems " and some of their derivatives in later languages .
It was apparently this list , the so - called Etymologies , he was referring to when he started to write The Lord of the Rings ( he added to the list some words and names from this work , e.g. mith " grey " and rhandir " pilgrim " , that together give Mithrandir ) .
The Etymologies was published in its entirety by Christopher Tolkien in The Lost Road p. 347-400 .
A fairly typical entry goes like this : MBUD - project .
* mbundu : Q mundo snout , nose , cape ; N bund , bunn .
Cf. * andambundâ long - snouted , Q andamunda elephant , N andabon , annabon .
Here we have several archaic forms ( duly asterisked as " unattested " ) plus the descendants of these forms is Q ( Quenya ) and N ( " Noldorin " , read : Sindarin ) .
This brings us over to the technique used by Tolkien in devising his linguistic creations .
How was it done ?
Tolkien 's technique Christopher Tolkien describes his father 's strategy as a language - maker in one formidable sentence : " He did not , after all , ' invent ' new words and names arbitrarily : in principle , he devised from within the historical structure , proceeding from the ' bases ' or primitive stems , adding suffix or prefix or forming compounds , deciding ( or , as he would have said , ' finding out ' ) when the word came into the language , following it through the regular changes in form that it would thus have undergone , and observing the possibilities of formal or semantic influence from other words in the course of its history . "
The result : " Such a word would then exist for him , and he would know it . "
( LR:342 ) As an example of this process we may use the Elvish numerals .
Consider the primitive stems for the words for the numbers 1 - 10 , plus words derived from these stems as they appear in Quenya and Sindarin : 1 : MINI : Q minë , S min
2 : AT ( AT ) : Q atta , S tad
3 : NEL( ED ) : Q neldë , S neledh
4 : KÁNAT : Q canta , S canad
5 : LEPEN : Q lempë , S leben
6 : ÉNEK : Q enquë , S eneg
7 : OTOS / OTOK : Q otso , S odog
8 : TOL - OTH /OT : Q tolto , S toloth
9 : NÉTER : Q nertë , S neder
10 : KAYAN / KAYAR : Q cainen , S caer
( There were also stems for 11 and 12 , since the Elves apparently used a duodecimal system of counting almost from the moment they came into being , but this is enough for our purpose . )
One can observe how Tolkien changed the original stems according to fixed rules and calculated their forms in later Elvish tongues .
For instance , one rule is that in Sindarin unvoiced p , t , k become voiced b , d , g when they follow a vowel :
Thus we get leben from the stem LEPEN , eneg from ÉNEK and neder from NÉTER .
In Quenya , the rule is that the unvoiced plosives are usually unchanged , so in High - elven we have the forms lempë ( from the stem LEPEN - via * lepne and * lenpe ? ) , enquë ( i.e. enkwe ) and nertë .
On the other hand , Quenya has a rule that short final i became e at the end of words , so we have minë from MINI .
Sindarin drops the vowel to produce min .
These and other rules for sound - change were so designed that the resulting languages had the kind of music Tolkien wanted : one approaching " Finnish " phonology , while the other came to sound much like Welsh .
Christopher Tolkien notes how his father took into consideration " the possibilities of formal or semantic influence from other words in the course of its history " .
The numerals provide us with an example of that , too .
According to the Etymologies , the Sindarin word for " three " was originally neledh as in the list above .
But later it became neled because it was " influenced " by canad " four " .
( One imagines the Elf counting min , tad , neledh , canad ; one day he says neled , canad instead ! )
But no matter how much Tolkien was toying with sound - changes and did not just invent new words and names arbitrarily , the words would still have to come from somewhere .
Were they , after all , arbitrary anyway ?
Often not .
When Tolkien was interviewed by the Daily Telegraph in 1968 and got to read a preliminary version of the interview before it was printed , he was horrified to discover that he had said this : " When you invent a language , you more or less catch it out of the air .
You say boo - hoo and that means something . "
This was not at all what he really meant ; he was n't sure that he had said this at all .
He carefully explained that he made words based on personal predilections , his guide being what he thought was phonetically fitting ( Letters : 375 ) .
It may be discussed how " personal " these associations were .
Many would probably agree that quite a few Elvish words in a strange way seem to fit their meaning : elen " star " , menel " sky " , vanya " beautiful " , wen or wend ë " maiden " , lótë " flower " , masta " bread " .
( Of course one may disagree , too : The present writer thinks MOR , the well - known stem for " black " , sounds brown instead - and how could Tolkien think that carnë means " red " ?
To me , the word sounds green ! )
Tolkien has explained the basis of some of his predilections : " The element ( n ) dor ' land ' , probably owes something to say such names as Labrador ( a name that might as far as style and structure goes be Sindarin ) " ( Letters : 383 - 4 ) .
He also tells us how GON ( O ) , GOND ( O ) got to be the Elvish root for " rock , stone " ( as in Gondor " stone - land " , Gondolin " Stone - song " ) :
When he was eight years old , Tolkien read a book stating that nothing was known of the language of the pre-Celtic and pre-Roman tribes , except possibly ond " stone " .
Young John Ronald Reuel thought this word " fitted the meaning " , so he remembered it and used it in his home - made languages many years later : Sindarin gond or gonn , Quenya ondo .
( Letters :410 .
The book that provided Tolkien with the word ond was finally identified in Vinyar Tengwar # 30 : Celtic Britain by Professor John Rhys , that according to Carl F. Hostetter and Patrick Wynne " consists of over 300 densely - set pages and eschews neither etymological discussion , untranslated Latin passages , nor untransliterated Greek words " .
This was Tolkien 's preferred reading at the age of eight . )
Many " Elvish " words turn out to be picked from a wide variety of sources : Pé " mouth " is Hebrew , lá " no , not " is Arabic , nér " man " from the reconstructed Indo - European language , ken- " see " is similar to Chinese kan , and roch " horse " is reminiscent of the Hebrew verb râkháv " ride " .
The stem ÑGAR ( A ) M " wolf " yields ( besides Quenya narmo and Sindarin garaf ) the Doriathrin word garm , Garm being one of the names of the monstrous Fenris - wolf haunting Norse mythology .
Not just Old Norse , but also modern Scandinavian languages seem to be represented : Quenya varya " protect " is suspiciously similar to Norwegian verge , verje ; " arrow " is pil in Scandinavian and pilin in Quenya , and while Quenya mat-/ Sindarin medi means " eat " , Norwegian / Swedish mat , Danish mad means " food " !
Given the fact that one of the prime influences on Tolkien 's languages was Finnish , we might also wonder if Quendi as a name of the Elves has something to do with kvener , an old Scandinavian name of the Finns .
If there is any internal factor showing that Tolkien 's languages are fictious , it must be the fact that some " plagiarism " can be detected in the vocabulary .
But Tolkien willingly admitted that he did not try do avoid the influence of real - world languages .
After all , he made languages for his own pleasure , not to fool others and make them think that they were " real " .
When devising the few fragments of non-Elvish languages , such as Sauron 's Black Speech and also the Adûnaic tongue ( elaborated in structure but not in vocabulary ) , Tolkien was probably less reluctant to simply make words arbitrarily .
Or so he thought .
The Black Speech word nazg " ring " ( as in Nazgûl , Ringwraith ) seems to be an unconscious borrowing from Gaelic nasc of the same meaning ( Letters p. 385 ) .
For a change the Black Speech was constructed to be as ugly as it possibly could be , and Tolkien did not like Gaelic ( yet another example of his fine - tuned linguistic taste - except for native speakers , how many people are able to tell Gaelic and Welsh apart ? )
Tolkien insisted that " all the names in the book , and the languages , are of course constructed , and not at random " ( Letters : 219 ) .
Yet there are a few " random " names .
A note reproduced in The War of the Jewels p. 318 suggests that Tolkien did not know what the names Amloth and Ecthelion meant when he first used them , but since they " are well - sounding and have been in print " , he took the time to find out what they meant .
But the name Eöl proved too tough : " It is n't really absolutely necessary that names should be significant " !
( The War of the Jewels p. 320 . )
The questionable question of stability However , Tolkien 's languages changed in other ways than just the simulated changes within the imagined history .
In The Monsters and the Critics p. 218- 19 , Tolkien observes that " if you construct your art - language on chosen principles " , you can write poetry in that language - " in so far as you fix it , and courageously abide by your own rules , resisting the temptation of the supreme despot to alter them " .
Tolkien did not courageously abide by his own rules .
Tolkien did not resist the temptation of the supreme despot .
He never got his languages really " finished " .
The one thing that finally ensured total stability was his demise in 1973 .
In Sauron Defeated p. 240 , Tolkien 's character Lowdham speaks for Tolkien himself : " In making up a language you are free : too free .
It is difficult to fit meaning to any given sound - pattern , and even more difficult to fit a sound - pattern to any given meaning .
I say fit .
I do n't mean that you can't assign forms or meanings arbitrarily , as you will .
Say , you want a word for sky .
Well , call it jibberjabber , or anything else that comes into your head without the exercise of any linguistic taste or art .
But that 's code - making , not language - building .
It is quite another matter to find a relationship , sound plus sense , that satisfies , that is when made durable .
When you 're just inventing , the pleasure or fun is in the moment of invention ; but as you are the master your whim is law , and you may want to have the fun all over again , fresh .
You 're liable to be for ever niggling , altering , refining , wavering , according to your linguistic mood and to your changes of taste . "
This is precisely what Tolkien did himself .
Throughout his life he kept revising , revising , revising .
In the words of his son , " The linguistic histories were ... invented by an inventor , who was free to change these histories as he was free to change the story of the world in which they took place , and he did so abundantly ...
Moreover , the alterations in the history were not confined to features of ' interior ' linguistic development : the ' exterior ' conception of the languages and their relations underwent change , even profound change " ( LR:341-342 ) .
Sindarin is a good example of changed ideas about the outer history of the languages .
The scenario set out in the appendices to LotR is that this is the language of the Sindar , the Grey - elves - the Elves that came to Beleriand from Cuiviénen , but did not go over the sea to Valinor .
But in Tolkien 's pre-LotR notes , Sindarin is called Noldorin , and before that Gnomish , for this was the language of the Noldor or " Gnomes " , the " Wise Elves " .
It was developed in Valinor , while Quenya in the former scenario was the language of the Lindar , the first of the three clans of the Eldar ( to complicate matters even further , the Lindar were later renamed and became the Vanyar , while Lindar became a name of the third clan , the Teleri ...)
But then Tolkien must have realized that the Elves , immortal and all , would hardly develop radically different languages when they lived side by side in Valinor .
So according to the revised scenario , both the Vanyar and the Noldor spoke Quenya with just minor dialectal differences , while the " Noldorin " language that Tolkien had already made was simply re-christened Sindarin , transferred from Valinor to Middle - earth and relocated to the mouths of the Grey - elves there .
It was , of course , far more plausible that they had developed a language very different from Quenya , having been separated from their kin in Valinor for thousands of years .
Christopher Tolkien comments , " So far - reaching was this reformation that the pre-existent linguistic structures themselves were moved into new historical relations and given new names " ( LR:346 ) .
But also the vocabulary , the phonology and the grammar of the languages were repeatedly revised .
Consider these lines from an early " Qenya " poem , published in MC:213 - 14 :
Man kiluva lómi sangane ,
telume lungane
tollalinta ruste ,
vea qalume ,
mandu yáme ,
aira móre ala tinwi
lante no lanta -mindon ?
" Who shall see the clouds gather , the heavens bending upon crumbling hills , the sea heaving , the abyss yawning , the old darkness beyond the stars falling upon fallen towers ? "
This was written in 1931 .
Much later , probably in the sixties or even the ( necessarily ) early seventies , Tolkien re-wrote this poem .
He literally translated it from early " Qenya " into mature " Quenya " , Quenya as the language had become after thirty years of revisions .
Now these lines go like this ( MC:222 ) , though they mean the same as ever : Man kenuva lumbor ahosta
Menel akúna
ruxal ' ambonnar ,
ëar amortala ,
undume hákala ,
enwina lúme elenillor pella
talta - taltala atalantië mindonnar ?
As we see , the only word that is the same in both texts is man " who " ; there is also the future - tense ending - uva in kiluva > kenuva " shall see " .
It is an open question whether an Elf speaking the " Qenya " of the twenties and the early thirties would have been able to follow a conversation in mature Quenya .
Not just words , but even grammatical endings were subject to revision .
In the Etymologies , there are quite a few examples of " Qenya " having a genitive in -n , e.g . Ar Manwen " Manwë's Day " ( LR:368 ) .
But in the published LotR , -n has become the dative ending , while the genitive now ends in - o .
Does the ending -o sound more " genitival " than -n does ?
One day , Tolkien must have decided just that .
Some words had their meaning totally reversed .
We have learnt that the Avari are the Elves that refused to leave Cuiviénen and go to Valinor .
But the Etymologies shows that Tolkien originally intended Avari as the name of the Elves that did go to Valinor !
The name Fëanor existed at a very early stage , but it did not always mean " Spirit of Fire " , as it is translated in the Silmarillion .
In the Etymologies it is interpreted as " Radiant Sun " , from earlier * Phay - anâro ( LR:381 ) .
Before that , in the earliest word - lists , it meant " goblet - smith " ( The Book of Lost Tales I , p. 253 ) .
Even when something had appeared in print , Tolkien could not always resist the temptation to keep tampering .
In the first edition of LotR , Frodo 's greeting to Gildor was elen síla lúmenn ' omentielmo .
Later Tolkien decided that the last word should have been omentielvo instead , and this form was used in later editions .
( One of the pioneers in the study of Elvish , Dick Plotz , was shocked to see the new form .
He thought the American publishers , Ballantine , had made a mistake and prevailed upon them to correct it .
In the next edition the publishers - necessarily incompentent in these matters - introduced the form omentilmo , that means nothing at all : Even honest efforts can have sad consequences ! )
Nonetheless : the greatest changes and revisions undoubtedly happened before the mid-thirties .
Concerning the original " Gnomish " language of 1915 or thereabouts , old Tolkien considered it merely a " language that ultimately became that of the type called Sindarin " , and his earliest " Qenya " he now held to be " very primitive " ( The Peoples of Middle - earth p. 379 ) .
But with the appearance of the Etymologies in the mid-thirties , the near - mature form of Q( u ) enya and " Noldorin " = Sindarin came into place , and the remaining forty years of Tolkien 's life were spent niggling over details .
Students , imitators , satirists and writers
How , then , do Tolkien 's languages fare today , when a quarter of a century has passed since their maker went to the halls of Mandos ?
Some of us have embarked on the study of Elvish , perhaps with somewhat the same attitude as people enjoying a well - made crossword puzzle :
The very fact that no real Elvish grammars written by Tolkien have been published makes it a fascinating challenge to " break the code " .
Or it may be pure romanticism , a special form of literary immersion :
By studying the Eldarin languages , you try to get closer to - indeed into the heads of - the immortal Elves , fair and wise , the Firstborn of Eru Ilúvatar , teachers of mankind in its youth .
Or , less romantically , you want to study the constructions of a talented linguist and the creative process of a genius engaged in his work of love .
And many simply enjoy the Elvish languages as one might enjoy music , as elaborate and ( according to the taste of many ) gloriously successful experiments in euphony .
Whatever the motive of the student , the study is undoubtedly instructive :
To describe Tolkien 's languages properly , one has to get acquainted with much linguistic terminology .
( The present writer would hardly have been intimately familiar with such terms and concepts as allative , ablative , locative , svarabhakti , assimilation , lenition and many more if I had not needed them in my study of Elvish .
Once I impressed one of my lecturers with my knowledge of Welsh lenition patterns .
How could she know that my examples were actually based on Sindarin ? )
It has also been suggested that some of Tolkien 's insights as a linguist are buried in his languages , waiting to be unearthed .
Modern Language Association International Bibliography deemed that the study of Elvish was sufficiently serious for them to register Vinyar Tengwar , the news letter of the Elvish Linguistic Fellowship , on their index .
Furthermore , it can easily be demonstrated that the nomenclature of The Lord of the Rings has inspired other fantasy writers - in this genre , names often have a distinctly Celtic or Welsh style .
We can even find direct borrowings of morphemes .
Reading such examples as Eriador , Gondor , Mordor etc. some have evidently gathered that the element - dor means " land " , and in fantasy novels , you often encounter quite a few countries having names in - dor.
Cf. for instance Alan Gardner 's golden land of Elidor .
There exists a Norwegian fantasy comic , Ridderne av Dor or " The Knights of Dor " , that satirizes this phenomenon : countries have names like Kondor , Matador and Glassdor !
Parodies indeed appeared already when Tolkien was alive ; just consider this , ahem , version of A Elbereth Gilthoniel from Bored of the Rings .
Prominent scholars of Elvish , including Arden R. Smith and Anthony Appleyard , have analyzed this text just as seriously as it does not deserve .
More serious attempts to write Elvish texts - mostly in verse - have also been published over the years .
By now it would certainly be possible to put together a small anthology of such compositions .
Hence , a small body of Elvish literature does exist today .
Of course , there is no way of knowing what Tolkien would have thought of such newly written texts .
It can hardly be doubted that if he ever returns from the dead , he will soon be busy with a red pencil .
But as Tolkien 's papers are being published and our knowledge of Quenya and Sindarin becomes more complete - the gaps are still enormous - it might become possible to write long texts in Elvish .
In her journal Tyalië Tyelelliéva , Lisa Star has boldly declared that " the ultimate goal is the revival of the Elvish languages for speaking , writing and art " .
Realistic or not , Tolkien does deserve it : A lifetime of work is left on the long road from Nevbosh to mature Quenya and Sindarin .
It would be the final monument to Tolkien 's efforts if his beloved languages could be brought to life - and indeed it would be the only fitting monument to a man who had to invent a whole world just to have a place where people could greet one another with the words Elen síla lúmenn ' omentielvo .
Ardalambion Index
IS the dot - com bubble reinflating ?
Last week , a relatively obscure Wall Street analyst named Safa Rashtchy , from Piper Jaffray , became an overnight sensation among the Internet faithful .
He predicted that Google 's stock price , which has climbed more than 350 percent since its initial public offering in 2004 , and was $ 422.52 at the time , would hit $ 600 a share by the end of 2006 .
Mr. Rashtchy 's bold forecast recalls memories of the time in 1998 that Henry Blodget , then a young , unknown analyst at CIBC Oppenheimer , predicted that Amazon.com would hit $ 400 a share .
At the time , Amazon stock traded at $ 242.75 a share ; after Mr. Blodget 's prognostication , the stock jumped to more than $ 600 .
Of course , the story did not end well for Mr. Blodget : Amazon 's stock eventually fell back to earth ( today , it is trading at around $ 288 , after accounting for splits ) and Mr. Blodget himself , who had been hired away by Merrill Lynch with a seven - figure salary after his seemingly prescient call , was barred from working in the securities industry when it emerged that he had touted other companies that were also clients of the firm .
No one is suggesting that Mr. Rashtchy is involved in any chicanery , but his prophecy does raise the question of whether analysts and investors have once again become irrationally gaga over the Internet , and Google in particular .
Note to this online book :
On April 29 , 2002 , I reacquired the publishing rights to my book ( from Prentice Hall ) , and have decided to publish it online , where it is now freely available for anyone to read ( and print - provided that the printed copy is only for your personal use ) .
I have personally moved on to the Java programming language , JavaScript , HTML5 , etc .
This book is showing its age , but for anyone who still programs in C , the techniques described in this book -- especially the class methodology in Chapter 4 -- are still an incredible ' little gem ' worth knowing about .
Enjoy ! jerryj@duckware.com
For years researchers have been trying to understand how a few HIV - infected patients naturally defeat a virus that otherwise overwhelms the immune system .
Last year , a research team at the University of Rochester Medical Center confirmed that such patients , called long - term non-progressors , maintain higher than normal levels of the enzyme called APOBEC - 3G ( A3G ) in their white blood cells , which function to stave off infections .
Now , the same group has teamed up with a structural biologist to provide the first look at the A3G structure .
Such information represents an early step toward the design of a new class of drugs that could afford to all the same natural protection enjoyed by few , according to a study published today in The Journal of Biological Chemistry .
Researchers believe that A3G works by mutating or " editing " the HIV genetic code every time the virus copies itself .
Editing introduces errors until the virus can no longer reproduce .
At the same time , HIV has also evolved to counter A3G with its own defense protein , the viral infectivity factor ( Vif ) , which holds firmly to A3G and tricks the white blood cell into destroying it .
The results of the current study suggest how the physical form of A3G leads to its role in the immune system , and what parts of it may need to be protected so that it can continue to protect the body .
" Keeping A3G in action represents a new way to attack HIV , " said Joseph E. Wedekind , Ph.D. , associate professor in the Department of Biochemistry and Biophysics at the University of Rochester Medical Center .
Wedekind , along with Harold C. Smith , Ph.D. , professor in the same department , led the study .
" This first , rough glimpse of A3 G 's physical structure gives us a map to follow in the search for a new class of AIDS treatments , " Wedekind said .
Study Details
For two decades , Smith and his team have worked to determine how " editing enzymes " like A3G make necessary changes to human genetic material .
As the human immune system evolved , it recognized the ability of these enzymes to cause rapid genetic change and unleashed them on viral DNA .
Last September , Smith 's laboratory published work in the Journal of Virology that found higher levels of A3G closely correspond to lower HIV viral levels .
After confirming that the A3G plays a key role in the body 's fight with AIDS , Smith sought out Wedekind for a collaboration to determine its structure .
Wedekind is an expert in structural biology , the branch of molecular biology concerned with the study of the molecular shape and properties of proteins and nucleic acids , the molecules that make up the body 's structures and carry out its life functions .
Improved understanding of both protein and nucleic acid architecture has revolutionized medicine in recent years and has contributed to the design of current leading AIDS drugs .
In seeking to determine the structure of A3G , however , the team was unable to use standard methods to start .
For instance , X - ray crystallography , Wedekind 's area of expertise since 1989 , involves aiming a high - energy X - ray beam at a sample of protein or nucleic acid that has been crystallized to form a repeating lattice of the molecule .
The beams reflect off the atoms within a crystal , a camera records the reflected pattern and the data are reconstructed into a 3 - D electron map by computers .
The technique gives high - resolution images of the positions of atoms within a molecule , but only if researchers can first crystallize the molecule of interest .
The team is making progress on crystallizing A3G , but wanted complementary , structural information in the meantime .
To achieve immediate results , the researchers elicited the help of Richard Gillilan , Ph.D. , staff scientist at the Cornell High - Energy Synchrotron Source ( CHESS ) in Ithaca , N.Y. , and second author on the JBC manuscript .
Gillian has expertise in an imaging method called small - angle X - ray scattering ( SAXS ) , which does not require the sample analyzed to be crystalline .
While less detailed than crystallography , SAXS provides the general shape of a molecule , the spatial relationship of its parts to one another and hints about the function of each part .
Implications of Shape
Within infected human cells , viral DNA chains must temporarily unzip their two attached chains into single strands to be read and copied , and they must be copied if the virus is to infect more cells .
Past work had established that A3G edits single strands of HIV DNA exposed while the virus copies itself .
The newly determined structure of A3G suggests how it is able to crawl down HIV DNA chains , introducing mistakes wherever the chains are unzipped and skipping over zipped - up , double stranded regions .
Researchers now believe A3G is capable of this because its structure is surprisingly different from other enzymes in its class .
The study also confirmed that A3G has two forms -- one that actively disrupts viral reproduction by editing as a free protein , and another in which the enzyme is inactive due to the presence of mRNA .
The new SAXS results show what both forms look like , and suggest new ways in which HIV or the cell itself may turn off A3G .
HIV , along with deploying Vif , may also create a surplus of molecules that force A3G into its inactive form , researchers said .
The theory is that HIV infection disrupts the normal process of making proteins , creating a surplus of free messenger RNAs that force A3G to become inactive .
Messenger RNAs , copies of DNA that serve as a templates for the building of proteins , thus , may be natural regulators of whether A3G remains active or not .
Preventing this mRNA interaction with A3G may represent yet another new avenue of attack on HIV .
" We are the first group to be able to say 'here are the parts of the molecule that need to be protected to keep A3G active in its age - old , ongoing war against viruses " Smith said .
" We believe this work will lead to the development of a new treatments that enable patients to better harness their own natural defense mechanisms . "
###
Turn off the options , and turn up the intimacy .
I recently spent three days working with what is possibly the most advanced recording console in the world , and I have to report that it was a horribly unmusical experience .
The console , which has more than 10,000 controls on its surface and a computer inside , was designed in such a way that music - making tasks once requiring a single physical switch now require a several - step mental negotiation .
My engineer kept saying " Wait a minute " and then had to duck out of the musical conversation we were having so he could go into secretarial mode to execute complex computer - like operations .
It 's as though a new layer of bureaucracy has interposed itself between me and the music we want to make .
After days of tooth - gnashing frustration , I had to admit that something has gone wrong with the design of technology - and I was paying $ 2,000 a day in studio fees to discover it .
Years ago I realized that the recording studio was becoming a musical instrument .
I even lectured about it , proclaiming that " by turning sound into malleable material , studios invite you to construct new worlds of sounds as painters construct worlds of form and color . "
I was thrilled at how people were using studios to make music that otherwise simply could not exist .
Studios opened up possibilities .
But now I 'm struck by the insidious , computer - driven tendency to take things out of the domain of muscular activity and put them into the domain of mental activity .
This transfer is not paying off .
Sure , muscles are unreliable , but they represent several million years of accumulated finesse .
Musicians enjoy drawing on that finesse ( and audiences respond to its exercise ) , so when muscular activity is rendered useless , the creative process is frustrated .
No wonder artists who can afford the best of anything keep buying " retro " electronics and instruments , and revert to retro media .
The trouble begins with a design philosophy that equates " more options " with " greater freedom . "
Designers struggle endlessly with a problem that is almost nonexistent for users : " How do we pack the maximum number of options into the minimum space and price ? "
In my experience , the instruments and tools that endure ( because they are loved by their users ) have limited options .
Software options proliferate extremely easily , too easily in fact , because too many options create tools that can't ever be used intuitively .
Intuitive actions confine the detail work to a dedicated part of the brain , leaving the rest of one 's mind free to respond with attention and sensitivity to the changing texture of the moment .
With tools , we crave intimacy .
This appetite for emotional resonance explains why users - when given a choice - prefer deep rapport over endless options .
You can't have a relationship with a device whose limits are unknown to you , because without limits it keeps becoming something else .
Indeed , familiarity breeds content .
When you use familiar tools , you draw upon a long cultural conversation - a whole shared history of usage - as your backdrop , as the canvas to juxtapose your work .
The deeper and more widely shared the conversation , the more subtle its inflections can be .
This is the revenge of traditional media .
Even the " weaknesses " or the limits of these tools become part of the vocabulary of culture .
I 'm thinking of such stuff as Marshall guitar amps and black - and - white film - what was once thought most undesirable about these tools became their cherished trademark .
The Marshall guitar amplifier does n't just get louder when you turn it up .
It distorts the sound to produce a whole range of new harmonics , effectively turning a plucked string instrument into a bowed one .
A responsible designer might try to overcome this limitation - probably the engineers at Marshall tried , too .
But that sound became the sound of , among others , Jimi Hendrix .
That sound is called " electric guitar . "
Or think of grainy black - and - white film , or jittery Super 8 , or scratches on vinyl .
These limitations tell you something about the context of the work , where it sits in time , and by invoking that world they deepen the resonances of the work itself .
Since so much of our experience is mediated in some way or another , we have deep sensitivities to the signatures of different media .
Artists play with these sensitivities , digesting the new and shifting the old .
In the end , the characteristic forms of a tool 's or medium 's distortion , of its weakness and limitations , become sources of emotional meaning and intimacy .
Although designers continue to dream of " transparency " - technologies that just do their job without making their presence felt - both creators and audiences actually like technologies with " personality . "
A personality is something with which you can have a relationship .
Which is why people return to pencils , violins , and the same three guitar chords .
