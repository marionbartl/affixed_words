The social avoidance that normally develops when a mouse repeatedly experiences defeat by a dominant animal disappears when it lacks a gene for a memory molecule in a brain circuit for social learning , scientists funded by the National Institutes of Health's ( NIH ) National Institute of Mental Health ( NIMH ) have discovered .
Mice engineered to lack this memory molecule continued to welcome strangers in spite of repeated social defeat .
Their unaltered peers subjected to the same hard knocks became confirmed loners – unless the researchers treated them with antidepressants .
" For both mice and men , social status is important ; for mice , losing to a dominant mouse usually means that they avoid the dominant and they avoid social situations , " explained NIMH director Dr. Thomas Insel .
" These new findings add to a growing literature on the molecular basis of social behavior , helping us to know where as well as how social information is encoded in the brain . "
The results reveal neural mechanisms by which social learning is shaped by psychosocial experience and how antidepressants act in this particular brain circuit .
They also suggest new strategies for treating mood disorders such as depression , social phobia and post - traumatic stress disorder , in which social withdrawal is a prominent symptom .
Drs. Olivier Berton and Eric Nestler , University of Texas Southwestern Medical Center ( UTSMC ) , and colleagues , report on their study in the February 10 , 2005 issue of Science .
Coursing from a hub in the center of the brain ( ventral tegmental area ) , the relevant circuit mediates responses to emotionally important environmental stimuli via release of dopamine .
Activity of this neurotransmitter is regulated in the circuit by brain derived neurotrophic factor ( BDNF ) , which is known to play a key role in memory ( http://www.nimh.nih.gov/Press/prbdnf.cfm).
Berton , Nestler and colleagues suspected that BDNF plays a similarly pivotal role in social learning .
To find out , they first subjected mice to a different dominant mouse daily for 10 days .
Even 4 weeks later , the " socially defeated " animals vigorously avoided former aggressors or unfamiliar mice .
BDNF and an indicator of gene expression increased markedly in their social memory circuit .
Yet , the social avoidance behavior was reversible by giving the animals antidepressants .
Next , borrowing a page from gene therapy , the researchers injected mice with a kind of molecular magic bullet ( using transgenic techniques and a virus ) that selectively turned off BDNF expression in the social learning circuit .
This exerted an antidepressant - like effect ; the mice were spared from developing social avoidance behavior following repeated social defeat .
" Without BDNF in the circuit , an animal can't learn that a social stimulus is threatening and respond appropriately , " explained Nestler .
He and his colleagues also discovered that social defeat triggered an upheaval in gene expression in the target area of the circuit , the nucleus accumbens , located deep in the front part of the brain – 309 genes increased in expression while 17 decreased .
This pattern persisted even 4 weeks later , with 127 genes still increased and 9 decreased , paralleling the changes seen in social behavior .
The researchers suggest that this alteration in gene expression encodes the motivational changes induced by aggression .
When BDNF was deleted , or the animals were given antidepressants , most of the changes in gene expression reversed .
Identification of the products of the genes turned on and off by social defeat , BDNF and antidepressants revealed the workings of the molecular pathways involved in dopamine regulation of social motivational processes .
The results suggest that chronic treatment with antidepressants restores social approach behaviors partly by interfering with the cascade of activity triggered by BDNF as the organism adapts to experience .
The researchers say the study " suggests new directions for antidepressant drug discovery . "
Source : NIH / National Institute of Mental Health
Ideas I 've had , collected here in case I -- or anybody else -- wants to implement them .
Thanks to Chris Ball , Allan Callaghan , Philip Chong , Adam Compton , Piet Delport , Daniel Drucker , Kevin Everets , Henrik Paulini , Giles Radford , Pete Saunders , Donald Stewart and Andrew Walbran for comments and suggestions .
There 's an RSS 2.0 feed for this page .
Flat piano
Like many musicians , I enjoy watching live music because it gives me a chance to see how the performers play .
For most instruments , this works well -- but keyboard players ' hands are generally hidden from the audience by their instrument .
Classical pianists usually get around this by facing away from the audience when they play ; a few rock keyboardists solve the problem by using a keytar , or a keyboard on a stand tilted away from them .
I 'd like to solve this by building a keyboard that does n't obscure the player 's hands : the key mechanism would be designed so that no counterweight would be used at the back of the key , meaning that the keyboard casing could be completely flat at the level of the keys .
If a counterweight is necessary , it could be coupled to the key using gears from beneath .
I think it'd be particularly neat if this could be made to work with a real acoustic piano -- but even for a MIDI keyboard , this would allow a weighted keyboard to be built with an unusually minimal appearance .
SpamAssassin rule scheduling Several machines I run spend most of their CPU time doing SpamAssassin analysis .
SpamAssassin applies a very large set of rules to incoming messages in order to decide whether they 're spam .
Each rule has a positive or negative score , and the sum of all the scores for the rules that fired is compared against a threshold .
When filtering mail , once you 've passed the score needed to tell a message is junk , there 's no point in running rules that will increase the score more .
You can therefore limit yourself to only the rules that may reduce the score .
If it drops below the threshold again , you can go back to trying positive - score rules .
In order to prove a message is spam , you only have to make sure you 've run all the rules that might help to prove it is n't .
If we use this approach , where the positive - score rules do n't always get used , then it would also make sense to keep track of which rules are most likely to fire , and try those first .
Relative mouse movement
User interfaces do n't make much use of relative mouse movement at the moment -- other than the odd knob - like adjustment tool , or gestures ( which I 've never been terribly convinced about as a UI concept ) .
Given that laptop users are often forced to use an inherently - relative trackpad ( or occasionally a stick ) instead of a real mouse , it'd be useful to minimise the amount of fiddly absolute positioning necessary in mouse - based interfaces .
A mostly - keyboard - controlled window manager could use relative movement to shuffle windows around : you press a number key to select a window , then drag it to its new location using the mouse .
This more than halves the distance you have to move the mouse , which would be a great advantage on a trackpad .
A text editor could use mouse or scrollwheel movement to adjust numbers in text , using a logarithmic scale so that it would n't matter how big they were to start with .
( Or log vertical and linear horizontal , or similar . )
This 'd be great for a live - feedback TeX editor .
Chime reverb
Players of stringed or tuned - percussion instruments will be familiar with the concept of sympathetic resonance : if I play a C on the piano with the damper lifted , all the other Cs ( and , to a lesser extent , the Gs , and so on ) will resonate along with it -- and continue to do so even if I damp the original C .
It would be possible to construct a " tuned reverb " system , based on the same principle as a plate reverb , but seeking to maximise rather than minimise tuned resonance .
( Imagine clamping a speaker and contact microphone to a piano frame . )
This could be used to provide a resonant backing behind a solo instrument -- although the player would probably want a damper pedal to stop the resonance when changing chords , in the same way a pianist does .
I 've seen this done to great effect when using a MIDI - equipped guitar and a synthesiser , but this would work with any sound , including the human voice .
Of course , you probably would n't build this in real life ; you 'd simulate it using something like Pd ...
A touch of real physics for Oolite Oolite is an open - source game set in the Elite universe .
I spent far too much time playing the Amiga version of Elite many years ago , and I think Oolite 's great ; they 've struck just the right balance between the playability of the original Elite and the realism of Frontier and FFE .
One way in which they 've chosen to stick with Elite 's behaviour is in how the ship handles : there 's no momentum .
This is fine by me , since my major problem with Frontier was that I kept flying into planets by accident .
However , they 've implemented Frontier 's engine plume animation , and the faster you move forwards , the bigger your engine plume gets -- which makes no sense , unless they 're claiming that the ship really does have no momentum .
I do n't think this is the case ; by the time of Oolite , navigation systems are smart enough that they 're just providing the illusion to the pilot that the ship is momentumless .
The pilot does n't control the engines directly ; the navigation system does whatever 's necessary to make the real ship do what the pilot wants .
It 's therefore fairly straightforward to make the plume animation match reality : just have Oolite figure out what direction the navigation system must be accelerating in , and point the engine plume that way .
The result should be quite pretty to look at .
This clears up some of the oddities of the game world .
The ship has a speed limit because the thrusters can only maintain the illusion up to a certain speed -- for example , pulling up in a smooth curve only works if you limit the forward velocity .
( The fuel injectors do n't break this rule , since if you 're going faster forwards you need more thrust to compensate . )
It also explains why in - system fuel is essentially free -- you are n't using any except when you change direction .
On the other hand , it would also be nice to be able to disable the momentumless interface when necessary ( i.e. toggle between the Elite and Frontier control modes ) .
This would let you get a better top speed at the cost of maneuverability , or accelerate to a high speed and then rotate to shoot backwards with your forward weaponry .
( Perhaps " advanced flight controls " should be a high tech - level -- or perhaps illegal -- upgrade . )
In - car surround sound Nearly every car stereo system has four speakers situated roughly at the corners of the car , so it 's an obvious environment for surround sound -- and , indeed , back in the 8 - track era , several manufacturers produced in - car Quad - 8 players .
I think it 's time for a quad revival .
These days , most car stereos have CD players , some kind of digital audio processing engine , and four separate power amplifiers , which means it should cost next to nothing to add support for decoding surround sound .
There are a number of formats that could be supported .
SQ and QS are simple matrixed encodings , used on many quadraphonic LPs in the 1970s .
In some cases , the CD releases of these recordings kept the surround information intact ; Mike Oldfield 's " Hergest Ridge " is one example .
Dolby Surround and Pro Logic are more recent matrix systems , and have already been implemented in some car stereos .
Compressed surround sound , using DTS , AC3 and similar codecs , has been available in various consumer products for years .
The " 5.1 Music Disc " format from the late 90s used standard audio CDs containing DTS rather than PCM audio ; few titles are available in the format , but since they 're as cheap to produce as a normal CD they 're still available and relatively inexpensive .
The compressed - audio decoders present in many car stereos present a new option for " compatible surround " CDs : store the front channels as regular CD audio tracks , and the rear channels as MP3 or similar files on data tracks .
You 'd have to read the surround data into a buffer first , but you can probably get away with relatively low bitrates for the rear speakers .
There are also a number of schemes for simulating surround sound from a two - channel recording .
The classic Hafler circuit ( feeding the back speakers with the difference between the front speakers ) is trivial to implement .
Many surround amps use delays or reverbs to synthesise a rear channel .
Automatic redirect creator I 'm currently looking at changing the mail - archive - to - HTML system I use -- which is largely painless , but has the disadvantage that all the URLs to individual messages will change .
I could reverse - engineer both systems and figure out how it 's generating filenames based on the messages , but I think there 's probably an easier approach .
I 'm imagining a " make - redirects " tool .
Given two trees of documents , this program should identify pairs of similar documents in the " old " and " new " trees , and emit an Apache config file with Redirect directives in .
The documents do n't need to be identical , just as close as possible ( containing the largest percentage of identical text ) -- it seems unlikely to me that this would n't work for mail archives .
The same approach could be used to deal in a mostly automatic way with web content moving around on any site -- and even with smaller documents being merged into one larger one .
( The other way around would require generation of a stub page , and would be a bit harder to detect automatically . )
LED - backed LCD
One of the major problems with backlit LCDs is that the backlight must be on all the time -- meaning that a lot of power is wasted as heat from absorbed light , and it 's not possible to get a true black on the display .
To solve a different problem ( motion portrayal ) , people have recently suggested using a grid of LEDs as a backlight which are scanned like a CRT beam .
This would be useful for moving video , but scanning is irritating for mostly - still images ( such as computer screens ) .
The grid of LEDs could be used in a different way -- as a smart backlight that only generated as much light as was necessary in each bit of the screen , using the LCD elements to add fine detail .
Essentially , you 'd display a low - resolution black - and - white version of the desired image on the LEDs , and the difference between that and the desired image on the LCD .
This would significantly reduce power usage from the backlight , and would allow dark areas to be truly dark .
You would end up with not - quite - dark artefacts in the shape of LED grid cells around single light pixels , though ; it might be best to low - pass filter ( and then brighten ) the backlight image to avoid sharp transitions in the backlight intensity between cells .
Daniel Drucker pointed out that this is remarkably similar to the display being developed for the One Laptop Per Child project , which includes a number of interesting new display technologies .
Instant completion
The completion facilities offered by readline and similar libraries are very useful for command - line users , but they are n't very easy to discover -- particularly when the completion rules are complicated , and the user may not know that their shell is able to completion what they 're currently typing .
I 'd like it if readline would show the current completion in a pale colour after what I 'm currently typing -- so I can see instantly what would get completed if I hit Tab .
This would invariably add some extra overhead , but in many cases ( such as completing filenames in a directory , or command - line options from a parsed -- help message ) caching the results of the lookup the first time would get around this , and the completion lookup could start running in the background as soon as a completable word is detected .
Mike Loucks is the CEO of Space Exploration Engineering ( SEE ) , which he co-founded in 1995 .
He received a BA in Physics / Astronomy from Whitman College , WA in 1985 and an MS in Aerospace Engineering Sciences from the University of Colorado in 1991 .
He co-founded SEE corp. in 1995 after working as an operations and trajectory planning expert for Orbital Sciences Corporation .
The NASA Apollo missions and science fiction by Robert Heinlein got Mike interested and space and astronomy .
Early on , he pondered becoming an astronomer but later decided that aerospace engineering was his true passion .
We chatted about the founding of SEE and his work there .
Mike then told me about the kinds of computer and software tools he uses for orbital and celestial mechanics and the role Macs have played in his life .
Mike finished with some great advice for students who want to pursue a career in aerospace engineering .
If the French marauders known as The Deflated waged their brand of urban subversion in Southern California , the mecca of the sport utility vehicle , by now they would probably have been jailed , beaten , shot or at least sued .
But five weeks after the clandestine crew of environmentalists launched a low - intensity war on SUVs in Paris , there are no casualties to report .
Except , of course , for dozens of deflated gas - guzzling vehicles , said Sous - Adjudant Marrant ( Sub - Warrant Officer Joker ) , the mysterious , masked leader of Les Degonfles .
Under cover of night , Marrant ’s troops target Jeep Cherokees , Porsche Cayennes and other four - wheel - drive vehicles parked on the tree - lined avenues and cobblestoned lanes of wealthy neighborhoods .
The eco -guerrillas deflate tires without damaging them , smear doors with mud and paste handbills on windshields proclaiming that the vehicles are dangerous , polluting behemoths that do not belong in the city .
“ We use the mud to say that if the owners will not take the four - wheel - drives to the countryside , we will bring the countryside to the four - wheel - drives , ” said Marrant , 28 , who uses an alias because angry drivers deluge his website , https://degonfle.blogg.org with e-mails threatening mayhem and questioning his manhood .
Advertisement
Although his nom de guerre was inspired by Subcommander Marcos , the masked Mexican guerrilla revered by leftists , Marrant insists he is not violent or even particularly serious .
“ Deflated ” is a self - deprecating name that also means “ coward ” in French .
The group wants to send a mischievous message while avoiding damage to the vehicles , injury and prosecution , the thin , mop - haired activist said during an interview in a corner cafe on the Seine ’s left bank , longtime turf of radicals and revolutionaries .
“ We emphasize the comic , the burlesque side , ” Marrant said with the earnest , wide - eyed look of a prankster trying to keep a straight face .
“ It would be hard to take us to court .
We do n’t slash tires , we deflate them .
Air does n’t cost anything .
As for getting cars dirty , that ’s nothing .
I would plead guilty to that .
Our rules are to never run from the police .
And always run from the owners . ”
The rise of anti-SUV activism in France shows that one man ’s vandal can be another man ’s avenger .
The deflators are on the fringe of a movement that has considerable support at City Hall , which is governed by an alliance of the Socialist and Green parties .
Christophe Delabre , the president of a French association of SUV owners , has appeared in a television debate with Marrant , who wore sunglasses , a baseball cap and a bandanna to conceal his identity .
Delabre does not find his adversary amusing .
Advertisement
“ It ’s comparable to extremism , to discrimination , to inciting hate , ” Delabre said .
“ You ca n’t stigmatize a category of the population with impunity under the pretext that they drive a kind of vehicle .... [ The Deflated ] put others ’ lives in danger , and that ’s unacceptable .
It ’s out of the question that this kind of action is tolerated in France .
I do n’t understand how the police can arrest deflators and let them go a few hours later . ”
Although city leaders do n’t condone vandalism , officials have gone as far as proposing that Paris ban sport utility vehicles .
Deputy Mayor Denis Baupin , who oversees transportation programs , has called the SUV “ a caricature of a car . ”
Baupin spoke during a recent rally of about 200 activists at a Jeep dealership where the manager had agreed to shut down early for the day .
The decision drew cheers from children wearing cow and buffalo masks , cyclists hoisting bikes triumphantly aloft .
“ An SUV is totally useless for Paris , ” Baupin said in his speech , blaming the recent devastating hurricanes in the U.S. on climate change caused by pollution .
“ The situation is striking :
The country that refused to sign the Kyoto Protocol suffered from a climatic catastrophe ....
We all feel sorry for the dead in New Orleans .
But now maybe the United States should start considering that their development pattern is not to be repeated worldwide and that it causes environmental problems . ”
Advertisement
In the United States , sport utility vehicles account for one of every four automobiles sold , but in France , SUVs represent only about 5 % of the market .
The prices are high for middle - class families , but sales jumped about 20 % last year .
Overt official hostility has encouraged antisocial attacks masquerading as activism , Delabre charged .
“ This reflects the impact of the statements made during the last two years by Mr. Baupin , ” he said .
“ He has told anyone listening , and the media helped him a lot , that four - wheel - drives should be banned .
I criticized him because that kind of talk surprised me coming from an elected representative . ”
Like other historic European capitals , Paris struggles with overwhelming traffic that challenges even the smallest cars and steeliest drivers .
Double - parked delivery trucks block narrow streets .
Swarms of motorcyclists zoom the wrong way on congested boulevards .
Parking garages , impossibly small , seem designed by sadists .
Advertisement
Spurred by the take - back - the - streets attitude of the Greens , City Hall is trying to discourage cars in favor of mass transit , biking and walking .
In addition , the national government has imposed a new tax on high - polluting vehicles that works out to about $ 300 per owner , but varies depending on emission levels .
And the Deflated are stepping up their stealthy fight .
Marrant is writing a children ’s song as an anthem for the cause .
He also hopes to record a dance - mix version before Saturday , when activists plan an international wave of anti-SUV operations -- by daylight , this time -- in France , Britain , Canada and Australia .
“ The point is to focus on consumers , ” he said , spewing smoke from a Gaulois cigarette into the haze shrouding the crowded cafe .
“ We have to get past the idea that there ’s always a single , identifiable villain : the president , the corporation , the chief executive .
Our campaign has to be very marketing , shocking , provocative .
I want to make it fashionable to be anti-4X4 . ”
Marrant is unemployed , though he has dabbled in journalism .
His brother works for a major European corporation .
His group numbers about 20 , he said .
They come from a mix of middle - and working - class backgrounds and anti-globalization and environmental groups .
Advertisement
The Deflated have made contact with like - minded activists in the United States .
Marrant is familiar with the U.S. television advertising campaign that equated buying an SUV with financing Islamic terrorism .
But he finds it too gloomy .
He says the French public supports his group ’s approach .
People send e-mails asking to participate or suggesting tactics , such as a special tool the activists now use for lightning - fast deflations .
“ It ’s a kind of key that deflates a tire very fast and completely , in two seconds , ” he said .
“ A mechanic sent an e-mail telling us about it .
He said , ‘ You can do better than you have been doing . ’ ”
Delabre , meanwhile , fears an eventual confrontation .
Advertisement
“ I put myself in the place of an owner of a four - wheel - drive who sees people messing up his vehicle , ” he said .
“ I worry that things will get out of control .
We ca n’t accept that in our fine democracy .
People have died for the freedom we have today . ”
*
Claire Rocher and Achrene Sicakyuz in The Times ’ Paris Bureau contributed to this report .
One of my big fears while I was researching Bait and Switch was that I would never find a job .
The other , which I hesitate to admit , was that I would find a job and that I would be forced to work in some kind of soul - crushing physical environment -- a cubicle or a windowless office .
I ’ve been in offices -- insurance companies , title companies , or just to visit working friends -- and felt this terrible weight of blankness and despair .
Sure , I work in my own “ office , ” but it looks out on trees and my desk faces a poster - sized image of Eagle Nebula as seen through the Hubble telescope , which is space enough for me .
I felt my aversion was more than a little neurotic .
After all , people work in standard - issue offices every day , and very few of them take up automatic weapons against their colleagues .
A visitor to the forum on this website mentions the horror of his physical work environment , but only as seen through the eyes of his more free - ranging wife :
. . . my wife visited me at my work a few years ago , so I gave her a brief tour and then we went for lunch .
She was honestly horrified at the environment -- a maze of cubicles -- she is of course used to being in an open classroom -- she felt sorry for me .
She did not understand how I could ever put up with it .
( The cubicles were actually nicer than most of my career ) .
But a recent article in the new pop-science magazine , Seed , makes me think that our office environments may be more damaging than I suspected .
The article is about neurogenesis , the generation of new neurons within adult brains .
According to longstanding neuroscientific belief , this is impossible : Neurons cannot regenerate , and we are stuck with the number we were born with , minus those lost to alcohol or Alzheimer ’s .
Princeton psychologist Elizabeth Gould has shown otherwise : Neurons can regenerate .
The reason this had n’t been observed before is that the animals studied lived out their short lives in plain laboratory metal cages .
Gould studies little rat - sized monkeys called marmosets .
Put them in metal cages , kill them , and slice their brains for microscopy , and you find very little neurogenesis .
But if you let them live in an “ enriched enclosure ” -- the marmoset equivalent of Versailles , featuring “ branches , hidden food , and a rotation of toys ” -- neurogenesis kicks in , along with an increase in the number and strength of synaptic connections .
Another scientist , Fernando Nottebohm , working at my alma mater , Rockefeller University , has found a similar effect in birds .
Keep finches and canaries in metal cages and you get listless , tuneless , birds with equally dull brain tissue .
Only when studied in the wild do the birds sing and , not coincidentally , generate a profusion of new brain cells .
Stress also inhibits neurogenesis , and the Seed article emphasizes the possible implications for the effects of poverty on human brain structure .
Early trauma from , for example , separation from parents , could lead to lasting neurological deprivation .
But the article leaves hanging the social implications of the effects of “ boring ” environments .
Boredom may constitute a form of stress , but it is not the same thing .
In fact , the home environments of the poor are often overly “ enriched ” through sheer crowding , at least compared to the spotless , largely empty , motel - like , interiors of the upper middle class .
My guess is that boring , nature - free , environments take their toll on well - paid office - dwellers and minimum - wage factory workers alike .
Add stress to boredom -- the deadline is at midnight !
lay - offs are coming ! -- and you have a recipe for rapid brain shrinkage .
I think I can prove this too , if only a few office - workers will step forward and offer up their brains to science .
LUCY BALLINGER
Last updated at 21:55 25 August 2006
The trouble with throwing a party is that the guests get in the way .
Some turn up at the wrong time , others are not dressed for the occasion and yet more fail to mind their manners .
Read her incredible email in full
Story : Live webcam foils transatlantic burglary
On the occasion of her 21st birthday bash at the Ritz Hotel , however , bank worker Lucy Gao decided there would be none of these problems .
She sent a detailed e-mail to 39 of her friends setting out the schedule for the evening .
It gave them staggered time slots for arrival and told them what to wear and even what to say .
There were also helpful hints such as : ‘ It goes without saying that the more upper - class you dress , the less likely you shall be denied entry . ’
The meticulous Miss Gao , however , saw her best - laid plans backfire on her .
One colleague at Citigroup bank was so stunned by the message that he forwarded it on to a friend .
She in turn sent it to 12 colleagues in her department with four additional words at the top – ‘ Her best yet … enjoy ’ .
And as always seems to happen in these cases , the e-mail has pinged around the world , entertaining bank workers by the thousand .
Miss Gao was a pupil at Parkstone Grammar School for girls in Poole , Dorset , before studying engineering at Balliol College , Oxford .
Her father Zhiyong , 49 , and mother Pin Lui , 48 , both have doctorates .
Mr Gao works for Sony while his wife works for Marconi .
They recently moved to Coventry while their daughter took up a work - experience internship with Citigroup in Real Estate Equity Research at the bank ’s headquarters in Canary Wharf , East London .
Her birthday party began last Friday evening with a champagne reception at the Rivoli Bar in the Ritz , and ended at the Pangea nightclub in Mayfair .
Miss Gao opened the e-mail by briefly thanking her friends for confirming they would attend .
She then launched into 350 words of instructions about precisely where they should go and when .
The honoured few were given slots in staggered arrival times and told that if they had any problems on the night to call her ‘ PA ’ – believed to be university friend Sanampreet Gill .
The message went on : ‘ Please read ALL the following to ensure your entry into the Ritz .
I have arranged the Ritz to host a Champagne Reception with a selection of Ritz Champagne for all my guests , this will be on me so please come and indulge .
‘ A specially made birthday cake has also been ordered and the Ritz waiters will kindly serve you each a generous slice with Ritz cutleries , etc … also on me . ’
Men were to wear shirts , jackets and ties while women should stick to cocktail dresses and skirts .
If in doubt , they should contact the birthday girl who gave her mobile number , direct line at work and fax number .
She stipulated that when asked by staff : ‘ How can I help you Sir / Madame ? ’ partygoers should reply : ‘ I am here for Lucy ’s Birthday Party at the Rivoli Bar ’ .
One recipient wrote on the e-mail : ‘ Maybe we need to revisit the intern selection criteria – I think the emphasis on control may be too high !’
Yesterday a message , claiming to be from Miss Gao , was posted on an Oxford University gossip website .
It said that the e-mail was meant to be a joke between friends , but that things were now ‘ seriously getting out of control ’ .
The message went on : ‘ I am sorry if you found the content of the invitation details offensive and I am glad to entertain .
‘ But please stop now because it is getting really unprofessional and unnecessary , and a lot of you know me anyway and have heard about this so I apologise for repeating this again , but hopefully for the final time . ’
A Citigroup spokesman said Miss Gao had done nothing wrong and her employment was unaffected .
WASHINGTON , July 21 — The Bush administration is rushing a delivery of precision - guided bombs to Israel , which requested the expedited shipment last week after beginning its air campaign against Hezbollah targets in Lebanon , American officials said Friday .
The decision to quickly ship the weapons to Israel was made with relatively little debate within the Bush administration , the officials said .
Its disclosure threatens to anger Arab governments and others because of the appearance that the United States is actively aiding the Israeli bombing campaign in a way that could be compared to Iran ’s efforts to arm and resupply Hezbollah .
The munitions that the United States is sending to Israel are part of a multimillion - dollar arms sale package approved last year that Israel is able to draw on as needed , the officials said .
But Israel ’s request for expedited delivery of the satellite and laser - guided bombs was described as unusual by some military officers , and as an indication that Israel still had a long list of targets in Lebanon to strike .
Secretary of State Condoleezza Rice said Friday that she would head to Israel on Sunday at the beginning of a round of Middle Eastern diplomacy .
The original plan was to include a stop to Cairo in her travels , but she did not announce any stops in Arab capitals .
Acting White Black and Hispanic students who earn high grades face social costs in terms of their popularity .
In the United States , the academic achievement of the average black child lags that of the average white child at kindergarten entry and the achievement difference grows throughout the school years .
A typical black 17 year old reads at the same level as a typical white 13 year old .
On the Scholastic Aptitude Test , the average black student scores more than a standard deviation below the average white student .
Crafting effective public policies to address the achievement gap requires understanding its causes .
Various possibilities have been advanced , including differences in family structure and poverty , differences in school quality , racial bias in testing or teachers ' perceptions , genetics , and differences in peer culture , socialization , or behavior .
In An Empirical Analysis of " Acting White " ( NBER Working Paper No. 11334 ) , co-authors Roland Fryer and Paul Torelli find that black and Hispanic students who earn high grades face social costs in terms of their popularity .
Fryer and Torelli define " acting white " as any " statistically significant racial differences in the relationship between [ student ] popularity and grades . "
Participants in student focus groups say that a number of behaviors are condemned as " acting white , " including enrollment in honors or advanced placement classes , speaking proper English , wearing the wrong clothes from the wrong stores , or wearing shorts in the winter .
To quantify " acting white , " the authors construct a popularity index using data from the Addhealth survey , a nationally representative sample of 90,118 students in grades 7 through 12 in the school year 1994 - 5 .
Addhealth interviewed the same students in 1995 , 1996 , and 2002 .
Along with collecting information on parental education , socioeconomic status , school characteristics , and grade point average , the survey asked students to list up to five friends of each sex , ordered from their best friends to more casual acquaintances .
Fryer and Torelli 's popularity index assigns popularity to a student based the number of students who list them as a friend , weighted by the popularity of each student .
The weighting scheme ensures that if two students ( A and B ) have the same number of people who list them as friends , then student A will have a higher popularity index if his friends are more popular , meaning that more people list them as friends .
The resulting popularity indexes demonstrate that " the relationship between social status and achievement is categorically different between racial groups , a difference that is robust to changes in specifications , data sub- samples , and definitions of social status or achievement . "
At a GPA of roughly 2.5 , racial differences begin to emerge , and Hispanic students lose popularity rapidly .
Popularity peaks at a GPA of about 3.5 for black students .
Whites continue to gain popularity as their grades increase .
The social cost of " acting white " is more severe for black males than for black females .
It is larger for blacks in public schools , but nonexistent for blacks in private schools , " a finding that may partially explain why black kids in private schools do especially well . "
Finally , the burden imposed for " acting white " is greater for students with more interracial contact .
Blacks in more segregated schools " incur less of a tradeoff between popularity and achievement . "
The toll for " acting white " is " particul arly salient among high achievers and those in schools with more interracial contact . "
The authors find that two of the most common explanations for black underachievement -- that white society holds talented blacks back so much that they develop coping devices that limit their striving for academic success , and that blacks sabotage their high achieving peers -- fail to explain the fact that academically excellent students of all races retain their popularity at segregated and private schools .
Fryer and Torelli conclude that the patterns in their data accord best with a model in which investments in education are thought to be indicative of an individual 's opportunity costs of peer group loyalty -- Linda Gorman
The Digest is not copyrighted and may be reproduced freely with appropriate attribution of source .
Tags
A recent story out of New Orleans sheds light on the inefficiency of socialist " charity . "
Not only was FEMA unable to cater to people 's needs when they needed trailers , but now just the opposite is happening .
Homeowners who have repaired their houses are having difficulty returning the trailers to FEMA .
The agency , overwhelmed , is unable to inspect the trailers and assign them to other families .
But the story does not end there .
Homeowners cannot legally move the trailer off their property .
They require a towing license .
So while there are people still waiting for a trailer , others have a perfectly good available trailer that they are unable to get rid of .
Even with a budget of billions of dollars , government agencies simply cannot do things efficiently ; FEMA is not matching demand with supply .
The situation with financial help is no different .
A US Government Accountability Office report has concluded that people are spending their FEMA money for non-emergency purchases .
For example , many have used the funds for guns , alcohol , jewelry and gambling .
A charitable organization , unlike the government , has to risk its own assets .
If it decides that a particular family needs aid , it could verify that the goods and services provided are used for emergency and immediate needs only .
There is an incentive to save resources so that others can also be helped .
Charity cannot be managed bureaucratically ; it must be efficient or face the consequences : the loss of money , reputation and future donors .
While dishonest behavior would still arise under private charities , they would learn from their mistakes and continually improve their practices .
The government , however , has to go through bureaucratic processes before it can improve : meetings , investigations , reports , witnesses , depositions , accusations , and other headache - inducing proceedings .
The bureaucrat is not in the business of making money by satisfying consumer demand .
He is not in a business at all !
The funds entrusted to him are the result of the taxpayer 's productivity .
He faces no risk of loss and thus can waste our money with impunity .
Consider Mises 's great definition of bureaucratic management :
" Bureaucratic management is the method applied in the conduct of administrative affairs the results of which has no cash value on the market .
Remember :
We do not say that a successful handling of public affairs has no value , but that it has no price on the market , that its value cannot be realized in a market transaction and consequently cannot be expressed in terms of money . "
Indeed , what Katrina victims needed the most was a method of quickly and spontaneously assessing priorities .
This can be best achieved through a market process , where needs are expressed in terms of money and where the dynamic fluctuations of price are the result of consumers and producers seeking to improve their state of affairs .
If there is a decrease in the supply of housing or water or food , then prices will rise to reflect that change .
Higher prices encourage entrepreneurs to increase the supply , satisfying the increased demand .
As the needs are satisfied and demand lowers , so do prices and then the crisis is over .
Sadly , the Katrina aid did not follow a market process .
It was a free - for - all stampede of unconditional gifts on behalf of the government .
Consequently , things turned ugly .
An MSNBC analysis tells us that " investigators studied more than 200 cases , and say in 70 percent of them aid recipients gave bogus Social Security numbers — numbers that belonged to dead people , to someone else or to no one at all .
And when investigators checked out addresses given in these cases , about 40 percent were bogus — vacant lots or nonexistent apartments . "
Moreover , up to 900,000 of the 2.5 million applications were fraudulent .
These are not just random events but deeply ingrained symptoms of government management .
A similar news report reveals just how widespread the abuses were :
There was little or no verification of the names , addresses or Social Security numbers of applicants registering by phone or the Internet for the $ 2,000 in aid , resulting in thousands of checks issued to those with duplicate or bogus information .
Duplicate payments were made to about 5,000 of the nearly 11,000 debit card recipients who received Katrina aid , first with debit cards and then again via electronic bank transfer .
Although FEMA says it bought 114,341 trailers for $ 1.7 billion , discrepancies abound in FEMA 's documentation of the number ordered , received and occupied , making it difficult to ascertain the exact units available or whether government - owned property was otherwise accounted for .
FEMA may have bought too many temporary homes — 24,967 manufactured homes obtained for $ 857.8 million and 1,295 modular homes at $ 40 million — resulting in 10,777 such homes sitting empty in Hope , Ark. , in sinking mud without proper storage .
" It was unclear how the decision was made , " the Homeland Security audit stated . "
Everywhere we look , we find cases of inefficient and downright wasteful practices .
FEMA 's own rules , for example , ban mobile homes in flood plains , yet the same agency nevertheless ordered the construction of 26 thousand of them for Katrina victims .
It does not matter one whit whether Mayor Ray " Chocolate City " Nagin or Governor Blanco or the enlightened central planners at FEMA were the ones guilty of improper allocation of resources .
The truth is that the entire system of government aid continually fails to efficiently provide goods and services .
Lacking a market test where gains and losses are used as guides , the government cannot possibly determine either the amount or the quality of goods and services to produce .
All that can be done is a botched attempt , something like driving blind and drunk on an icy road at night with a flat tire and very strong winds .
It has been six months since the hurricane .
There are folks out there having the time of their lives in posh hotel rooms watching the latest HBO series while FEMA , and ultimately all of us , pays for their fun .
Then there are those who still want trailers and those who want trailers off their driveways .
These absurd occurrences are the result of intervention in the market , of socialist " solutions " to government - created problems , and of bureaucratic management .
Not subject to the forces of supply and demand , government offers both too much and not enough of things .
For as long as intervention exists , economic chaos will reign supreme .
Let the market restore order .
----------
Manuel Lora is a freelance TV producer and multimedia specialist in New Orleans . vanguardist@gmail.com .
He loves hanging out in the Mises chatroom .
Comment on the blog
On the First Round Capital website we write that : " We love investing in technologies and business models that are able to shrink existing markets .
If your company can take $ 5 of revenue from a competitor for every $ 1 you earn – let 's talk ! "
I ’ve often been asked what we mean by that – so I thought it would be a good topic for a blog post .
My first company , Infonautics , was an online reference and research company targeting students ( mostly high school students ) .
While I was there , I got a firsthand education on “ asymmetrical competition . ”
In 1991 , when we started Infonautics , the encyclopedia market was approximately a $ 1.2 Billion industry .
The market leader was Britannica - with sales of approximately $ 650 Million , they were considered the gold standard of the encyclopedia market containing “ over 44 million words ” written by scholars and “ more than 80 Nobel laureates ” .
World Book Encyclopedia was firmly ensconced in second place .
Both Britannica and World Book sold hundreds of thousands of encyclopedia sets a year for over $ 1,000 .
However , in 1993 , the industry was permanently changed .
That year Microsoft launched Encarta for $ 99 .
Encarta was initially nothing more than the poorly regarded Funk & Wagnall 's Encyclopedia repackaged on a CD – but Microsoft recognized that changes in technology and production costs allowed them shift the competitive landscape .
By 1996 Britannica ’s sales had dropped to $ 325 million - about half their 1991 levels – and Britannica had laid off its famed door - to - door sales staff .
And by 1996 the encyclopedia market had shrunk to less than $ 600 M .
In that year , Encarta ’s US sales were estimated at $ 100 M .
So in just three years , leveraging a disruptive technology ( CD - ROM ) , cost infrastructure ( licensed content versus in - house editorial teams ) , distribution model ( retail in computer stores versus a field sales force ) and pricing model ( $ 99 versus $ 1000 ) , the encyclopedia market was cut in half .
More than half a billion dollars disappeared from the market .
Microsoft turned something that Britannica considered an asset ( a door - to - door salesforce ) into a liability .
While Microsoft made $ 100 M it shrunk the market by over $ 600 M .
For every dollar of revenue Microsoft made , it took away six dollars of revenue from their competitors .
Every dollar of Microsoft ’s gain caused an asymmetrical amount of pain in the marketplace .
They made money by shrinking the market .
[ It is also interesting to note how distruptive business models have continued to impact the encyclopedia market - anyone care to guess what Google and Wikipedia have done to Encarta sales in the last few years ? ]
At Half.com , we tried to do the same thing .
We quickly learned that most readers of fiction books finished reading the book within two weeks after purchase .
So we launched a very simple feature on our site .
Say you purchased a John Grisham book from half.com for $ 15 ( versus a market price of $ 30 ) .
Two and a half weeks later you would receive an email from Half.com offering “ your money back ” – users simply had to check a box and we would list their book for sale for $ 15 .
The vast majority of users would relist the book for sale -- and we found that for best selling books , we would sell the exact same copy of a book four times .
That is , Buyer A would buy the book for $ 15 , read it and sell it to Buyer B for $ 15 , who would then read it and sell it to buyer C for $ 15 , who would read it then sell it to Buyer D .
Of course , we would take commissions from every sale – say $ 3 – and shipping charges – say $ 2 – from each sale .
So for the four transactions , the out of pocket cost to the buyers would be $ 20 .
Now if half.com did n’t exist , you can assume that the books would have been purchased through traditional channels for $ 30 each – for a total out of pocket cost of $ 120 .
Think about it .
For every $ 1 of sales on half.com , we took $ 6 away from the existing traditional channel - another example of asymmetrical competition .
This is the reason why I ’m so excited about our recent investment in Jingle Networks .
Jingle is the owner of 1-800 - FREE411 – the country ’s first nationwide provider of free directory assistance .
Launched late last year , the 1 - 800 - FREE411 service offers consumers a free alternative to the high cost of 411 service provided by traditional carriers .
By including a ten - second advertisement before giving out a phone number , 1- 800 - FREE411 saves consumers on average $ 1.25 each time they look for a phone number from their telephone .
Since American consumers use traditional 411 services 6 billion times a year , 1- 800 - FREE411 has the potential to shrink an $ 8 billion market .
I believe ( and hope ) that as consumers shift to ad - supported directory assistance , we will take a significant share away from the entrenched carriers .
If you have a business that will shrink an existing market , allowing you to take $ 5 of revenue from a competitor for every $ 1 you earn , let ’s talk !
For a great inside look at the creation of Encarta - I 'd suggest " The Microsoft Way " by Randall Stross .
Just $ 0.75 on Half.com ...
Tags
[ S ] ince love and fear can hardly exist together , if we must choose between them , it is far safer to be feared than loved .
— Niccolò Machiavelli , The Prince , 1513
All animals experience fear — human beings , perhaps , most of all .
Any animal incapable of fear would have been hard pressed to survive , regardless of its size , speed , or other attributes .
Fear alerts us to dangers that threaten our well - being and sometimes our very lives .
Sensing fear , we respond by running away , by hiding , or by preparing to ward off the danger .
To disregard fear is to place ourselves in possibly mortal jeopardy .
Even the man who acts heroically on the battlefield , if he is honest , admits that he is scared .
To tell people not to be afraid is to give them advice that they can not take .
Our evolved physiological makeup disposes us to fear all sorts of actual and potential threats , even those that exist only in our imagination .
The people who have the effrontery to rule us , who call themselves our government , understand this basic fact of human nature .
They exploit it , and they cultivate it .
Whether they compose a warfare state or a welfare state , they depend on it to secure popular submission , compliance with official dictates , and , on some occasions , affirmative cooperation with the state 's enterprises and adventures .
Without popular fear , no government could endure more than twenty - four hours .
David
Hume taught that all government rests on public opinion , but that opinion , I maintain , is not the bedrock of government .
Public opinion itself rests on something deeper : fear .
Hume recognizes that the opinions that support government receive their force from " other principles , " among which he includes fear , but he judges these other principles to be " the secondary , not the original principles of government " ( [ 1777 ] 1987 , 34 ) .
He writes : " No man would have any reason to fear the fury of a tyrant , if he had no authority over any but from fear " ( ibid. , emphasis in original ) .
We may grant Hume 's statement yet maintain that the government 's authority over the great mass of its subjects rests fundamentally on fear .
Every ideology that endows government with legitimacy requires and is infused by some kind (s ) of fear .
This fear need not be fear of the government itself and indeed may be fear of the danger from which the tyrant purports to protect the people .
The Natural History of Fear
Thousands of years ago , when the first governments were fastening themselves on people , they relied primarily on warfare and conquest .
As Henry Hazlitt ( [ 1976 ] 1994 ) observes ,
There may have been somewhere , as a few eighteenth - century philosophers dreamed , a group of peaceful men who got together one evening after work and drew up a Social Contract to form the state .
But nobody has been able to find an actual record of it .
Practically all the governments whose origins are historically established were the result of conquest — of one tribe by another , one city by another , one people by another .
Of course there have been constitutional conventions , but they merely changed the working rules of governments already in being .
Losers who were not slain in the conquest itself had to endure the consequent rape and pillage and in the longer term to acquiesce in the continuing payment of tribute to the insistent rulers — the stationary bandits , as Mancur Olson ( 2000 , 6 –9 ) aptly calls them .
Subjugated people , for good reason , feared for their lives .
Offered the choice of losing their wealth or losing their lives , they tended to choose the sacrifice of their wealth .
Hence arose taxation , variously rendered in goods , services , or money ( Nock [ 1935 ] 1973 , 19 – 22 ; Nock relies on and credits the pioneering historical research of Ludwig Gumplowicz and Franz Oppenheimer ) .
Conquered people , however , naturally resent their imposed government and the taxation and other insults that it foists on them .
Such resentful people easily become restive ; should a promising opportunity to throw off the oppressor 's dominion present itself , they may seize it .
Even if they mount no rebellion or overt resistance , however , they quietly strive to avoid their rulers ' exactions and to sabotage their rulers ' apparatus of government .
As Machiavelli observes , the conqueror " who does not manage this matter well , will soon lose whatever he has gained , and while he retains it will find in it endless troubles and annoyances " ( [ 1513 ] 1992 , 5 ) .
For the stationary bandits , force alone proves a very costly resource for keeping people in the mood to generate a substantial , steady stream of tribute .
Sooner or later , therefore , every government augments the power of its sword with the power of its priesthood , forging an iron union of throne and altar .
In olden times , not uncommonly , the rulers were themselves declared to be gods — the Pharaohs of ancient Egypt made this claim for many centuries .
Now the subjects can be brought to fear not only the ruler 's superior force , but also his supernatural powers .
Moreover , if people believe in an afterlife , where the pain and sorrows of this life may be sloughed off , the priests hold a privileged position in prescribing the sort of behavior in the here and now that best serves one 's interest in securing a blessed situation in the life to come .
Referring to the Catholic Church of his own day , Machiavelli takes note of " the spiritual power which of itself confers so mighty an authority " ( [ 1513 ] 1992 , 7 ) , and he heaps praise on Ferdinand of Aragon , who , " always covering himself with the cloak of religion , ... had recourse to what may be called pious cruelty " ( 59 , emphasis in original ) .
One naturally wonders whether President George W. Bush has taken a page from Ferdinand 's book ( see , in particular , Higgs 2003a and , for additional aspects , Higgs 2005 b ) .
Naturally , the warriors and the priests , if not one and the same , almost invariably come to be cooperating parties in the apparatus of rule .
In medieval Europe , for example , a baron 's younger brother might look forward to becoming a bishop .
Thus , the warrior element of government puts the people in fear for their lives , and the priestly element puts them in fear for their eternal souls .
These two fears compose a powerful compound — sufficient to prop up governments everywhere on earth for several millennia .
Over the ages , governments refined their appeals to popular fears , fostering an ideology that emphasizes the people 's vulnerability to a variety of internal and external dangers from which the governors — of all people !— are said to be their protectors .
Government , it is claimed , protects the populace from external attackers and from internal disorder , both of which are portrayed as ever - present threats .
Sometimes the government , as if seeking to fortify the mythology with grains of truth , does protect people in this fashion — even the shepherd protects his sheep , but he does so to serve his own interest , not theirs , and when the time comes , he will shear or slaughter them as his interest dictates .
Olson ( 2000 , 9 – 10 ) describes in simple terms why the stationary bandit may find it in his interest to invest in public goods ( the best examples of which are defense of the realm and " law and order " ) that enhance his subjects ' productivity .
In brief , the ruler does so when the present value of the expected additional tax revenue he will be able to collect from a more productive population exceeds the current cost of the investment that renders the people more productive .
See also the interpretation advanced by Bates ( 2001 , 56–69 , 102 ) , who argues that in western Europe the kings entered into deals with the merchants and burghers , trading mercantilist privileges and " liberties " for tax revenue , in order to dominate the chronically warring rural dynasties and thereby to pacify the countryside .
Unfortunately , as Bates recognizes , the kings sought this enlarged revenue for the purpose of conducting ever - more - costly wars against other kings and against domestic opponents .
Thus , their " pacification " schemes , for the most part , served the purpose of funding their fighting , leaving the net effect on overall societal well - being very much in question .
Both Olson and Bates argue along lines similar to those developed by Douglass C. North in a series of books published over the past four decades ; see especially North and Thomas 1973 , and North 1981 and 1990 .
When the government fails to protect the people as promised , it always has a good excuse , often blaming some element of the population -- scapegoats such as traders , money lenders , and unpopular ethnic or religious minorities .
" [ N ] o prince , " Machiavelli assures us , " was ever at a loss for plausible reasons to cloak a breach of faith " ( [ 1513 ] 1992 , 46 ) .
The religious grounds for submission to the ruler - gods gradually transmogrified into notions of nationalism and popular duty , culminating eventually in the curious idea that under a democratic system of government , the people themselves are the government , and hence whatever it requires them to do , they are really doing for themselves — as Woodrow Wilson had the cheek to declare when he proclaimed military conscription backed by severe criminal sanctions in 1917 , " it is in no sense a conscription of the unwilling : it is , rather , selection from a nation which has volunteered in mass " ( qtd. in Palmer 1931 , 216–17 ) .
Not long after the democratic dogma had gained a firm foothold , organized coalitions emerged from the mass electorate and joined the elites in looting the public treasury , and , as a consequence , in the late nineteenth century the so - called welfare state began to take shape .
From that time forward , people were told that the government can and should protect them from all sorts of workaday threats to their lives , livelihoods , and overall well - being — threats of destitution , hunger , disability , unemployment , illness , lack of income in old age , germs in the water , toxins in the food , and insults to their race , sex , ancestry , creed , and so forth .
Nearly everything that the people feared , the government then stood poised to ward off .
Thus did the welfare state anchor its rationale in the solid rock of fear .
Governments , having exploited popular fears of violence so successfully from time immemorial ( promising " national security " ) , had no difficulty in cementing these new stones ( promising " social security " ) into their foundations of rule .
The Political Economy of Fear
Fear , like every other " productive " resource , is subject to the laws of production .
Thus , it cannot escape the law of diminishing marginal productivity : as successive doses of fear - mongering are added to the government 's " production " process , the incremental public clamor for governmental protection declines .
The first time the government cries wolf , the public is frightened ; the second time , less so ; the third time , still less so .
If the government plays the fear card too much , it overloads the public 's sensibilities , and eventually people discount almost entirely the government 's attempts to frighten them further .
Having been warned in the 1970s about catastrophic global cooling ( see , for example , The Cooling World 1975 ) , then , soon afterward , about catastrophic global warming , the populace may grow weary of heeding the government 's warnings about the dire consequences of alleged global climate changes — dire unless , of course , the government takes stringent measures to bludgeon the people into doing what " must " be done to avert the predicted disaster .
Recently the former Homeland Security czar Tom Ridge revealed that other government officials had overruled him when he wanted to refrain from raising the color - coded threat level to orange , or " high " risk of terrorist attack , in response to highly unlikely threats .
" You have to use that tool of communication very sparingly , " Ridge astutely remarked ( qtd. by Hall 2005 ) .
Fear is a depreciating asset .
As Machiavelli observes , " the temper of the multitude is fickle , and ... while it is easy to persuade them of a thing , it is hard to fix them in that persuasion " ( [ 1513 1992 , 14 ) .
Unless the foretold threat eventuates , the people come to doubt its substance .
The government must make up for the depreciation by investing in the maintenance , modernization , and replacement of its stock of fear capital .
For example , during the Cold War , the general sense of fear of the Soviets tended to dissipate unless restored by periodic crises , many of which took the form of officially announced or leaked " gaps " between U.S. and Soviet military capabilities : troop - strength gap , bomber gap , missile gap , antimissile gap , first - strike - missile gap , defense - spending gap , thermonuclear - throw - weight gap , and so forth ( Higgs 1994 , 301–02 ) .
One of the most memorable and telling lines in the classic Cold War film Dr. Strangelove occurs as the president and his military bigwigs , facing unavoidable nuclear devastation of the earth , devise a plan to shelter a remnant of Americans for thousands of years in deep mine shafts , and General " Buck " Turgidson , still obsessed with a possible Russian advantage , declares : " Mr. President , we must not allow a mine - shaft gap ! "
Lately , a succession of official warnings about possible forms of terrorist attack on the homeland has served the same purpose : keeping the people " vigilant , " which is to say , willing to pour enormous amounts of their money into the government 's bottomless budgetary pits of " defense " and " homeland security " ( Higgs 2003 b ) .
This same factor helps to explain the drumbeat of fears pounded out by the mass media : besides serving their own interests in capturing an audience , they buy insurance against government punishment by playing along with whatever program of fear - mongering the government is conducting currently .
Anyone who watches , say , CNN's Headline News programs can attest that a day seldom passes without some new announcement of a previously unsuspected Terrible Threat — I call it the danger du jour .
By keeping the population in a state of artificially heightened apprehension , the government - cum - media prepares the ground for planting specific measures of taxation , regulation , surveillance , reporting , and other invasions of the people 's wealth , privacy , and freedoms .
Left alone for a while , relieved of this ceaseless bombardment of warnings , people would soon come to understand that hardly any of the announced threats has any substance and that they can manage their own affairs quite well without the security - related regimentation and tax - extortion the government seeks to justify .
Large parts of the government and the " private " sector participate in the production and distribution of fear .
( Beware : many of the people in the ostensibly private sector are in reality some sort of mercenary living ultimately at taxpayer expense .
True government employment is much greater than officially reported [ Light 1999 ; Higgs 2005a ] .)
Defense contractors , of course , have long devoted themselves to stoking fears of enemies big and small around the globe who allegedly seek to crush our way of life at the earliest opportunity .
Boeing 's often - shown TV spots , for example , assure us that the company is contributing mightily to protecting " our freedom . "
If you believe that , I have a shiny hunk of useless Cold War hardware to sell you .
The news and entertainment media enthusiastically jump on the bandwagon of foreign - menace alarmism — anything to get the public 's attention .
Consultants of every size and shape clamber onboard , too , facilitating the distribution of billions of dollars to politically favored suppliers of phoney - baloney " studies " that give rise to thick reports , the bulk of which is nothing but worthless filler restating the problem and speculating about how one might conceivably go about discovering workable solutions .
All such reports agree , however , that a crisis looms and that more such studies must be made in preparation for dealing with it .
Hence a kind of Say's Law of the political economy of crisis : supply ( of government - funded studies ) creates its own demand ( for government - funded studies ) .
Truth be known , governments commission studies when they are content with the status quo but desire to write hefty checks to political favorites , cronies , and old associates who now purport to be " consultants . "
At the same time , in this way , the government demonstrates to the public that it is " doing something " to avert impending crisis X .
At every point , opportunists latch onto existing fears and strive to invent new ones to feather their own nests .
Thus , public - school teachers and administrators agree that the nation faces an " education crisis . "
Police departments and temperance crusaders insist that the nation faces a generalized " drug crisis " or at times a specific drug crisis , such as " an epidemic of crack cocaine use . "
Public - health interests foster fears of " epidemics " that in reality consist not of the spread of contagious pathogens but of the lack of personal control and self - responsibility , such as the " epidemic of obesity " or the " epidemic of juvenile homicides . "
By means of this tactic , a host of personal peccadilloes has been medicalized and consigned to the " therapeutic state " ( Nolan 1998 , Szasz 2001 , Higgs 1999 ) .
In this way , people 's fears that their children may become drug addicts or gun down a classmate become grist for the government 's mill — a mill that may grind slowly , but at least it does so at immense expense , with each dollar falling into some fortunate recipient 's pocket ( a psychiatrist , a social worker , a public - health nurse , a drug - court judge ; the list is almost endless ) .
In this way and countless others , private parties become complicit in sustaining a vast government apparatus fueled by fear .
Fear Works Best in Wartime
Even absolute monarchs can get bored .
The exercise of great power may become tedious and burdensome — underlings are always disturbing your serenity with questions about details ; victims are always appealing for clemency , pardons , or exemptions from your rules .
In wartime , however , rulers come alive .
Nothing equals war as an opportunity for greatness and public acclaim , as all such leaders understand ( Higgs 1997 ) .
Condemned to spend their time in high office during peacetime , they are necessarily condemned to go down in history as mediocrities at best .
Upon the outbreak of war , however , the exhilaration of the hour spreads through the entire governing apparatus .
Army officers who had languished for years at the rank of captain may now anticipate becoming colonels .
Bureau heads who had supervised a hundred subordinates with a budget of $ 1 million may look forward to overseeing a thousand with a budget of $ 20 million .
Powerful new control agencies must be created and staffed .
New facilities must be built , furnished , and operated .
Politicians who had found themselves frozen in partisan gridlock can now expect that the torrent of money gushing from the public treasury will grease the wheels for putting together humongous legislative deals undreamt of in the past .
Everywhere the government turns its gaze , the scene is flush with energy , power , and money .
For those whose hands direct the machinery of a government at war , life has never been better .
Small wonder that John T. Flynn ( 1948 ) , in writing about the teeming bureaucrats during World War II , titled his chapter " The Happiest Years of Their Lives " :
Even before the war , the country had become a bureaucrat 's paradise .
But with the launching of the war effort the bureaus proliferated and the bureaucrats swarmed over the land like a plague of locusts .
...
The place [ Washington , D.C. ] swarmed with little professors fresh from their $ 2,500 - a- year jobs now stimulated by five , six and seven - thousand - dollar salaries and whole big chunks of the American economy resting in their laps .
( 310 , 315 )
Sudden bureaucratic dilation on such a scale can happen only when the nation goes to war and the public relaxes its resistance to the government 's exactions .
Legislators know that they can now get away with taxing people at hugely elevated rates , rationing goods , allocating raw materials , transportation services , and credit , authorizing gargantuan borrowing , drafting men , and generally exercising vastly more power than they exercised before the war .
Although people may groan and complain about the specific actions the bureaucrats take in implementing the wartime mobilization , few dare to resist overtly or even to criticize publicly the overall mobilization or the government 's entry into the war — by doing so they would expose themselves not only to legal and extralegal government retribution but also to the rebuke and ostracism of their friends , neighbors , and business associates .
As the conversation stopper went during World War II , " Do n't you know there 's a war on ? " ( Lingeman 1970 ) .
Because during wartime the public fears for the nation 's welfare , perhaps even for its very survival , people surrender wealth , privacy , and liberties to the government far more readily than they otherwise would .
Government and its private contractors therefore have a field day .
Opportunists galore join the party , each claiming to be performing some " essential war service , " no matter how remote their affairs may be from contributing directly to the military program .
Using popular fear to justify its predations , the government lays claim to great expanses of the economy and the society .
Government taxation , borrowing , expenditure , and direct controls dilate , while individual rights shrivel into insignificance .
Of what importance is one little person when the entire nation is in peril ?
Finally , of course , every war ends , but each leaves legacies that persist , sometimes permanently .
In the United States , the War between the States and both world wars left a multitude of such legacies ( Hummel 1996 , Higgs 1987 , 2004 ) .
Likewise , as Corey Robin ( 2004 , 25 ) writes , " one day , the war on terrorism will come to an end .
All wars do .
And when it does , we will find ourselves still living in fear : not of terrorism or radical Islam , but of the domestic rulers that fear has left behind . "
Among other things , we will find that " various security agencies operating in the interest of national security have leveraged their coercive power in ways that target dissenters posing no conceivable threat of terrorism " ( 189 ) .
Not by accident , " the FBI has targeted the antiwar movement in the United States for especially close scrutiny " ( 189 ) .
Such targeting is scarcely a surprise , because war is , in Randolph Bourne 's classic phrase , " the health of the state , " and the FBI is a core agency in protecting and enhancing the U.S. government 's health .
Over the years , the FBI has also done much to promote fear among the American populace , most notoriously perhaps in its COINTELPRO operations during the 1960s , but in plenty of others ways , too ( Linfield 1990 , 59–60 , 71 , 99–102 , 123–28 , 134–39 ) .
Nor has it worked alone in these endeavors .
From top to bottom , the government wants us to be afraid , needs us to be afraid , invests greatly in making us afraid .
Conclusion
Were we ever to stop being afraid of the government itself and to cast off the phoney fears it has fostered , the government would shrivel and die , and the host would disappear for the tens of millions of parasites in the United States — not to speak of the vast number of others in the rest of the world -- who now feed directly and indirectly off the public 's wealth and energies .
On that glorious day , everyone who had been living at public expense would have to get an honest job , and the rest of us , recognizing government as the false god it has always been , could set about assuaging our remaining fears in more productive and morally defensible ways .
I 'm on hold waiting to speak with a Dell Tech Support representative , presumably in India .
The Dell 2405 FPW UltraSharp Flat Panel LCD
Montior
I recently purchased ( using our corporate discount at work ) arrived in a broken state .
When powered on , the video display is horribly distorted .
I should be seeing the on screen display ( before I hook up any video sources ) but instead I see what looks like a single line of pixels stretched vertically to the point that they consume the entire display .
Attaching a real video source ( VGA or DVI ) fails to rectify the problem .
So I found the on- line Dell 2405 FPW manual and confirmed that I 've attempted all the troubleshooting ideas they 've published .
No help there .
It 's still messed up .
I then found the phone number to call : 1-800-822-8965 ( for individual home consumers who purchased through an Employee Purchase Program ) .
On the first try , I navigated the annoyingly stupid IVR system .
It starts by making me press buttons on the phone and them strangely transitions to using voice response , which I hate .
It 's slower , less accurate , and more frustrating .
I was eventually put into a holding queue where I waited about 10 minutes before simply being disconnected .
I called back and repeated the previous steps .
But this time I found myself patched through to a phone in a call center in India ( I could tell by the accents ) .
However , nobody was actually talking to me .
I somehow ended up on the phone of a person who was talking to someone else .
I got to overhear bits of several office conversations before the representative said something like " thanks for holding .
I 'll transfer you to my manger now .
I 've spoken with him and explained your situation . "
Huh ?!
I tried to interrupt and explain that it was highly unlikely , since nobody had talked to me yet .
But before I knew it , I was apparently speaking with a manager .
About 20 seconds into explaining the problem , he hung up on me .
So I 've called back a third time and decided to document my progress so far .
I 'm starting to think that if they 're treating me this way , I have every right to charge back the credit card charge .
I 've followed every instruction they 've given in the manual and when I call , but so far they 're simply not helping .
They are wasting my time and making me regret purchasing another Dell product .
While writing this , a representative picked up the phone and asked for my computer tag number .
I explained that the problem was with a monitor , not a computer .
She then asked me for the order number .
I worked to look it up in my email and suggested that it'd be faster for her to find it .
She found the record and then informed me that my call had been sent to the wrong department .
WTF ?!
I asked how I could ensure that does n't happen next time I call .
Was there a different answer I could have given the IVR ?
She had no idea .
So now I 'm back on hold for the fourth time .
Dell really puts the " service " in customer service , do n't they ?
Update : According to my phone , I 've been on hold for 35 52 minutes now .
I wonder how long this will take ...
Update # 2 : After 53 minutes on hold , I was connected with " Austin " who examined the record and realized that he could n't help me .
Since I had purchased the monitor through a corporate discount program , I needed to talk to someone else .
( Where have I heard that line before ?! )
As I write this , he 's connecting me to that department .
He took my phone number so they can call me if the call is dropped .
( Heh . )
Total time on this call so far is 62 minutes .
Update # 3 : About 10 minutes later , I was connected with " Apollo " ( heh ) and we went a few rounds so that I could convince him that I 'd tried everything .
He then determined that they need to send me a new monitor ( duh ) .
I had to give him all my shipping information again , even though he has access to my previous shipping record .
That makes no sense .
I also had to read him the serial number off the back of the unit .
Why do I suspect they already have that info as well ?
Update # 4
After another 10 ( or so ) minutes on hold , he collected a bit more info and gave me the case number and dispatch numbers I needed .
He 'll get the monitor shipped to me and I 'll ship them the bad one .
Total time on the call was 1 hour and 26 minutes .
Amusingly , he was able to give me the " right ' 1-800 numbers to call and the extensions to dial .
I guess the third time 's the charm or something .
What fun .
Why could n't I have accomplished this all in 5 minutes on their web site ?
Would n't that be cheaper for them and easier for me ?
Posted by jzawodn at December 30 , 2005 10:08 PM
Lambda Calculus
Volume Number : 7 Issue Number : 5 Column Tag : Lisp Listener
Lambda Calculus
By André van Meulebrouck , Chatsworth , CA \
 A Calculus for the Algebraic - like Manipulation of Computer Code , or  Why Oh Why Oh Y ?
 People who like this sort of thing will find that this is the sort of thing they like .
Abe Lincoln
[ André van Meulebrouck is a consultant who makes his base camp in Southern California .
When not cloistered in front of a keyboard , youll most likely find him donning a Zippy T - shirt in the great out - of - doors , or pursuing various athletic endeavors .
( And listening to Pat Metheny music , no doubt . ) ]
Note to the Überprogrammer and disclaimer : I will be endeavoring to write so simply that everyone should be able to get something out of this article .
Such tutorialness should not be taken as an insult to anyones intelligence .
Introduction
Wouldnt it be nice to be able to manipulate computer code in the same sort of clean mathematical way that one does algebra ?
Usually computer code is too ad hoc to allow much of that , but what if we had a super clean model that we could work with ?
Even if such a model wasnt practical , it would certainly still be interesting , and what could be found out from it might be mappable back into computer languages which dont have as neat a set of algebraic - like properties .
Most people have heard of the Turing machine , as its now tantamount to being the measuring stick by which computability is judged .
If something is computable on a Turing machine , it is considered computable ; if something isnt computable on a Turing machine its considered uncomputable .
There is however , another model , equally as powerful , that is quite different .
It has no concept of Turing machine style state , and it has some very nice algebraic - like properties .
It s called the l-calculus .
This article will introduce l-calculus and combinators , and show some similarity between l-calculus and the programming language LISP .
An attempt will then be made to use l-calculus as a programming language in its own right to code a popular function in an effort to show the clean , algebraic - like properties of l-calculus and to consider ( in a small way ) if l- calculus might serve as a light unto the footsteps  to guide the way to computing without gratuitous complexity .
Intro to l-calculus
l - calculus is a calculus which expresses computation via anonymous functions .
l-calculus preceded LISP and LISP drew from it to some extent .
l is the anonymous function in l-calculus , and lambda is the anonymous function in LISP .
LISP 101
What follows will be a crash course in LISP .
( This will be just enough to make you dangerous . )
Lets start with a some arbitrary function and convert it from how youd see it in a math book or C program to how it would look in LISP .
Let s pick the sine function as it would look if applied to the numerical argument 3 : sin( 3 ) .
Let s tuck sin into the list of arguments and use spaces instead of commas if there is more than one argument : ( sin 3 ) .
This form of prefix notation is the chosen syntax of LISP .
Let s stick to this syntax for everything , lest the syntax get so unwieldy that parsing become a science in and of itself .
So , 2 + 2 will be (+ 2 2 ) .
Note that with this style of syntax , it is easy to represent + with an arbitrary numbers of arguments : (+ 1 2 3 4 5 ) .
Further , lets say that every top level position of a list gets one round of evaluation .
Specifically , the function position gets evaluated , then each argument position gets evaluated , then , the evaluated function gets applied to the evaluated arguments .
The one round of evaluation can be used to invoke a function call from any position :
>>> (+ (+ 2 3 ) (+ 3 5 ) ) 13
or even
>>> (+ (+ (+ 1 2 ) (* 3 4 ) ) (* 5 2 ) ) 25
because a list in any position can have a function position and argument positions of its own , and so on , to arbitrary depth .
Note :
In the Scheme dialect of LISP , the function position is treated precisely the same as the argument positions .
Let me motivate an example of that by first showing the if function ( which in LISP is a true function ) .
if has the form : ( if < condition > < then > < else > ) .
If < condition > is true , < then > is evaluated and returned , otherwise < else > is evaluated and returned .
zero ? is a function ( called a predicate ) that is used to determine whether a number is 0 or not .
Consider this example :
>>> ( ( if ( zero ? 0 ) + -) 3 4 ) 7
The next thing we need is a way to abstract out common process patterns into descriptions .
This is done via lambda , the anonymous function .
For instance , ( lambda ( x ) (+ x 1 ) ) is a function that takes in an evaluated argument , binds it with x , and then computes the body of the lambda form with the understanding that any occurrence of parameter x in the body will refer to the value of x bound by the lambda form .
In this case , the returned result will be the argument plus one , and the argument will not be side effected .
To invoke an anonymous function , we simply invoke it like any other function .
We invoked sine like this : ( sin 3 ) .
Invoking ( lambda ( x ) (+ x 1 ) ) on the argument 3 would look like this :
>>> ( ( lambda ( x ) (+ x 1 ) ) 3 ) 4
To define something we do this : ( define foo 3 ) .
Thereafter , typing foo at the MacScheme prompt , we find it evaluates to 3 .
>>> ( define foo 3 ) foo >>> foo 3
Heres an example of naming an anonymous function :
>>> ( define plus- one ( lambda ( x ) (+ x 1 ) ) ) plus- one >>> ( plus-one 3 ) 4
Currying
l - calculus is very economical .
It has only a few syntactic constructs yet it can still express everything that is computable [ Peyton Jones , 1987 ] .
Anything it lacks can be bootstrapped .
Since I described LISP previously , I can now use LISP to better describe what l- calculus is : for us herein , l - calculus will essentially amount to restricting ourselves to using nothing but LISPs lambda forms .
That s almost a good definition , however , due to the extreme thriftiness of l-calculus , we must impose an even more draconian restriction : every LISP lambda form must have one and only one argument !
( Note that while this improves our description of l- calculus , it s still only a very nutshell definition . )
How then does l-calculus express a lambda form that has 2 or more arguments ?
For instance : ( lambda ( x y ) ... ) ?
This is no problem , because any function of n parameters can be converted to a function of n - 1 parameters , and so forth ( recursively ) until all n parameters are abstracted out .
For instance ,
( lambda ( x y ) ... ) would become ( lambda ( x ) ( lambda ( y ) ... ) ) , and ( lambda ( x y z ) ... ) would become ( lambda ( x ) ( lambda ( y ) ( lambda ( z ) ... ) ) ) , etc..
This technique is called currying  after Haskell Curry , but was originally introduced by Schönfinkel [ Révész , 1988 ] .
Free Variables and Higher - Order Functions
Notice that currying relies on two issues that are quite interesting ; free variables , and the ability to return a function as a result .
Free variables are variables which are not bound .
This is relative to the context you re looking at things from .
For instance x is bound in ( lambda ( x ) ( lambda ( y ) x ) ) , but is free in : ( lambda ( y ) x ) .
Consider it a question of ownership : if a lambda form references a parameter it does not own , it is said to be referencing a free variable ; if a lambda form references a parameter it does own , it is said to be referencing a bound variable .
Higher - order functions are functions which can return functions as values or accept them as arguments .
Returning a function as a result is something not widely available in conventional languages , and even in those that allow it , it s usually not provided for as powerfully as in LISP and functional languages .
When a function gets defined ( evaluated ) it must do a closure , which is to say that the environment in force at the time ( the parents environment , or lexically apparent scope ) gets encapsulated with the function .
Implementationally , this could be the saving of a pointer to the parents environment with the function so that if / when the function gets invoked ( applied ) , it will know what environment to look to in order to resolve any free variables .
A function could be passed around quite a bit , and could be held onto for quite some time before it actually gets invoked .
And who knows what environment will be in force when it does get invoked ?
A function can be sure to be invoked in the right environment by taking along a recollection of its defining environment wherever it goes .
Intro to Combinators
( Prerequisites : A grade of C or better in ; Intro to l- calculus , LISP 101 , Currying , and Free Variables and Higher - Order Functions . )
At this point , I want to complicate things just a bit by introducing a narrower subset of l-calculus : combinators .
To convert a l - calculus expression into a combinator , we get rid of the free variables in it .
A l-calculus expression which has no free variables is a combinator .
A combinator can have free variables within its subexpressions , but ultimately all free variables in all its subexpressions must be resolved within the context of the combinator , without requiring any external context .
Why the preoccupation with ridding free variables ?
On a grand scale , it has to do with modularity .
The idea of modularity is to break up a problem into black boxes , the combining of which can be done with little care as to the contents ( as long as the contract for what the black box does is well understood ) .
Taking this idea to extremes , what would the ultimate in modularity be ?
How about small black boxes that have no wires  hanging out of them ?
I claim that every free variable is precisely one such wire that we need to expend mental energy on keeping track of to make sure they get hooked up  right and that other black boxes that also hook up to them dont do anything nasty to them that would cause problems for other black boxes .
The next concern of modularity is glue .
Once youve pulverized something into pieces , how do you glue the pieces together ?
The methods a computer language gives you to break down a problem into blocks , and the quality of glue you re given to combine those blocks , makes a big difference in how good the language is .
With combinators , the blocks are small and smooth ( i.e. , no wires hanging out ) , and the glue is very simple : each block can combine with one ( and only one ) block at a time .
Perhaps some graphical propaganda with subliminal messages is in order here .
Would you rather hook up blocks like these :
or like these ?
Programming with Combinators
l - calculus interpreters are not widely available , and investigating l- calculus is rather difficult in many of the more conventional languages available today .
However , LISP is close enough to allow a fairly immediate translation .
And Scheme ( an elegantly simple dialect of LISP ) is even closer .
Lets take a look at what a popular function would look like in l-calculus by approximating it as closely as possible in Scheme .
Our chosen function will be the factorial function , which is a canonical example in LISP circles .
I think youll find l-calculus to be an incredibly simple calculus , yet despite its simplicity , youll probably find you re outrunning your headlights of conception very quickly ( and often with incredibly short expressions ) !
This game might seem similar , in fact , to programming a Turing machine inasmuch as both are a sort of minimalist game ; and with such severe restrictions on how expression can take place , it requires a black magic style of cleverness that many might find intriguing and gratifying .
( Note : Examples cited in the text of the article will be taken from a MacScheme transcript window .
What the user types will be represented in boldface , and MacScheme responses will be in italics .
The MacScheme interpreter prompt is >>> after which the reader should type in the form of the example , then press the enter key to compile and evaluate it .
All the code necessary to run the l-calculus version of factorial is contained at the end of the article , and the article refers to it heavily .
By typing in all the code at the end of the article , and putting it into a file , one can then open that file and select  Eval Window off the  Command  menu , then quickly select the transcript window ( to watch the action ) .
All necessary functions will then get defined , and a test case will be run giving a result of 120 . )
Heres what our chosen function looks like in Scheme .
MacScheme Top Level >>>
( define fact ( lambda ( n ) ( if ( zero ? n) 1 (* n ( fact (- n 1 ) ) ) ) ) ) fact >>> ( fact 5 ) 120
I want to trivially rewrite fact to use a repertoire of primitives closer to whats available in primitive recursion ( primitive recursion  here meaning the topic of that name in theoretical Computer Science [ Wood , 1987 ] ) .
The appeal of primitive recursion in this exercise is that it is involved with a similar style of bootstrapping as is done in l-calculus : more sophisticated functions are derived using an extremely simple set of primitive functions .
>>> ( define fact ( lambda ( n ) ( if ( zero ? n) 1 (* n ( fact ( pred n ) ) ) ) ) ) fact
pred is the predecessor function defined as follows ( bear with me through the trivial - - things will get hairy fast enough ) .
>>> ( define pred ( lambda ( n ) (- n 1 ) ) ) pred >>> ( pred 5 ) 4 >>> ( fact 5 ) 120
With no further delays , its time to derive the combinator version of factorial .
Let s start by making some combinators we know well need .
Booleans and Conditionals
combinator - true and combinator - false are nothing more than projection functions [ Wood , 1987 ] , which consume two arguments .
combinator - true  projects  ( returns ) its first argument , and combinator - false returns its second argument .
>>> ( ( combinator - true 1 ) 2 ) 1 >>> ( ( combinator - false 1 ) 2 ) 2
With only ( anonymous ) functions to work with , its no wonder the constants true and false are functions ( i.e. get used to it ) .
But why these particular functions ?
Was this an arbitrary choice , or is there something that forced our hand here ?
Stay tuned !
One of the most basic functions well need ( and the one which combinator - true and combinator - false were designed for ) is the conditional : if .
It would be most straightforward if we could define our combinator - if as follows .
( define combinator - if ( lambda ( condition ) ( lambda ( then ) ( lambda ( else ) ( ( condition then ) else ) ) ) ) )
What we want is for the evaluation of argument condition to produce a function which must then consume the other arguments ( then and else ) and return whichever is appropriate .
While this version of combinator - if will work in l-calculus , it wont work in Scheme .
The reason : if is inherently normal order in its evaluation ( call by name or call by need ) , but Scheme evaluation is applicative order ( call by value ) .
Applicative order means the evaluated function will get applied to the evaluated arguments , whereas in normal order , arguments get consumed unevaluated .
Im perhaps giving very oversimplified nutshell  style definitions here , but the issues of evaluation are beyond the scope of this article and you neednt worry too much about them , except to understand that you dont want to evaluate both branches of an if ( indeed doing so can cause infinite recursion ) .
( While on the topic of evaluation , it might be worth noting that one of the practical payoffs of l-calculus is the Church - Rosser theorem [ Révész , 1988 ] which says that if a lambda expression has a normal form ( roughly translated : a terminating answer ) , it can be found regardless of what evaluation order is used .
This has implications for multiprocessor / parallel architectures . )
To get around Schemes applicative order evaluation of combinator - if , we can simply thunkify  all arguments to it , and then later force  the result .
To thunkify something means to wrap a lambda of no arguments around it .
The net effect is to delay evaluation of the thing which gets wrapped up , because when the lambda of no arguments gets evaluated , it will do a closure .
Even though the lambda form has no arguments of its own , a closure will still be done !
And that s important , because there might be free variables inside the body ( i.e. the thing which got wrapped up might have free variables in it ) .
The resultant wrapped up object is called a thunk .
( It might be worth noting that in l - calculus the contents of a lambda form can get evaluated , to some extent , prior to the lambda form being invoked !
This is called partial evaluation , and has some advantages ( It s essentially like being able to run code , to some extent , before you have any data / arguments to run it with ! ) .
LISP however , is not allowed to evaluate the contents of a lambda form until the lambda form gets applied . )
Since the evaluation of the wrapper used up the round of evaluation that the contents would normally have gotten , another round of evaluation is required in order force the contents inside the wrapper to get evaluated .
This is easily done by forcing the thunk , which is to say applying the thunk to no arguments !
Here are two test cases to verify combinator - if .
>>> ( ( ( combinator - if combinator - false ) ( lambda ( ) combinator - true ) ) ( lambda ( ) combinator - false ) ) #< PROCEDURE combinator - false > >>> ( ( ( combinator - if combinator - true ) ( lambda ( ) combinator - true ) ) ( lambda ( ) combinator - false ) ) #< PROCEDURE combinator - true >
( Note : Ive violated one of our draconian policies here .
Each lambda form was supposed to have one argument only ( no less , no more ) .
A thunk violates this .
However , thunks could be made to tow the line .
As an exercise to the reader , explain how to make thunks of one argument , and how to force them . )
Church Numerals
l - calculus is so thrifty it doesnt have numbers .
Unless of course , we extend pure l-calculus .
However , even if we did , wed still want to see if we could implement them with combinators for the sheer fun of it ; more importantly , since numbers arent part of pure l-calculus , we dont know for sure if they will have the same properties that pure l-calculus has unless we implement them in pure l-calculus ( if we can , then well know that we can safely extend pure l- calculus to include non-negative integers ) [ Révész , 1988 ] .
There are different ways of bootstrapping numbers .
Herein we will implement them by function applications .
A number will be a function that consumes two arguments ( which can be thought of as being a function and an object ) and will then apply the function to the object n times ( to represent n ) .
Numbers derived in this manner are called Church numerals owing to the fact that they were invented by the inventor of l-calculus : Alonzo Church .
combinator - zero takes in a function and object and just returns the object after not having applied the function to it ( i.e. after having applied the function to it zero times ) .
Note that combinator - zero is the same as combinator - false .
combinator - zero ? is the predicate used to determine whether an argument is combinator - zero or not .
Before explaining combinator - zero ? , I want to define some terms to make the ensuing discussion less cumbersome .
Lets call a projection function that returns its last argument an n-consumer where n is a positive integer representing how many arguments the function wants to consume .
So , identity is a 1 - consumer , combinator - false and combinator - zero are 2 - consumers , and project - 3rd - of - 3 is a 3 - consumer .
An observation : an n-consumer applied to anything will yield an n - 1 - consumer if n is greater than 1 .
For example , a 3 - consumer applied to anything will return a 2 - consumer .
combinator - zero ? applies its argument ( a Church numeral ) to a 3 - consumer , and then applies the result of that to combinator - true .
In the case where combinator - zero ? s argument is combinator - zero we have the case wherein a 2 - consumer gets applied to something .
The result will be identity .
Since identity simply bounces back whatever argument it gets handed , when it gets applied to combinator - true it will return combinator - true .
In the case where combinator - zero ? s argument is other than combinator - zero , we wind up with m nestings of 3 - consumers ( where m is the value of the Church numeral that combinator - zero ? was called with ) , and all those nested 3 - consumers get applied to combinator - true .
The result will be a 2 - consumer ( which is to say combinator - false ) because what is returned from the innermost application becomes the next anything for the next outermost application ( and so on ) !.
Notice that the second test ( below ) did not return #< PROCEDURE combinator - false > .
However , in the third test , ( which called the same result with arguments to see which one it would return ) we see that the result behaves like combinator - false .
Explanation :
This anomaly is due to LISPs inability to determine function equality .
Functions are considered equal in LISP if and only if the pointers to them are the same .
In this case , we have two functions that are semantically the same , but are syntactically different .
>>> ( combinator - zero ? combinator - zero ) #< PROCEDURE combinator - true > >>> ( combinator - zero? combinator - one ) #< PROCEDURE > >>> ( ( ( combinator -zero? combinator - one )  i- am - true ) i-am - false ) i-am - false
dechurchify - numeral can be applied to Church numerals to convert them to regular numbers .
To convert a Church numeral to a regular number you unravel it .
A Church numeral is nothing more than a conglomerate of functions waiting to be invoked on some object .
So , by calling a Church numeral with 1 + as the function and 0 as the object , we can essentially get a Church numeral to sum itself up !
make - church - numeral is the companion to dechurchify - numeral : it converts regular numbers to Church numerals .
( make - church - numeral is not itself a combinator , but it doesnt need to be -- it s merely a user convenience function so we can see the results of Church numeral computations in human readable form . )
>>> ( dechurchify - numeral ( make- church - numeral 50 ) ) 50
Arithmetic Functions
combinator - succ is the successor function ( addition by 1 in the set of nonnegative integers ) .
combinator - succ works by consuming a Church numeral ( let s call it n ) , then returning another numeral .
The numeral it returns will , like all Church numerals , want to consume a function and an object -- lets call the function f .
Inside the numeral it returns will be f applied to the unraveling of n .
In other words , it will unravel n and then apply f to it once more .
All counting numbers can be now be bootstrapped via combinator - zero and combinator - succ .
For instance , if we apply combinator - succ to combinator - zero , that should give us combinator - one , to which we could then apply combinator - succ again to get combinator - two , etc . .
( This is precisely how make - church - numeral makes Church numerals . )
combinator -* does nothing more than compose its arguments .
To compose functions you apply the functions , one after another , to an argument .
That is what Church numerals themselves are : composed functions !
combinator -* wants to consume two Church numerals ( let s call them m and n ) .
After consuming them , it returns a numeral .
Lets call the function the returned numeral will want to consume : f . Inside the returned numeral , f will be handed to n , which will result in a new function being made .
The new function will be a function that will do f n times .
It will then hand this new function to m , meaning the new function will be done m times .
So , the function that does f n times will be run m times !
( Essentially , this amounts to composing composed functions ! )
>>> ( dechurchify - numeral (( combinator -* ( make-church- numeral 45 ) ) ( make- church - numeral 3 ) ) ) 135
combinator - pred is subtraction by 1 in the set of nonnegative integers .
This one is tricky -- Church himself had trouble with it , and it was ultimately Kleene who came up with it [ Révész , 1988 ] .
However , what they were doing was tantamount to programming in LISP before LISP had been invented !
In some ways , combinators are like a form of Assembly language , and therefore if you try to understand them at too low a level without any high level concepts to guide you , it s easy to get so lost that you cant see the forest for the trees .
Therefore I want to explain this function in terms of LISP concepts : car , cdr , and cons .
First , we need to come up with an algorithm that doesnt violate the rules of the game .
Basically , we know how to count up : combinator - succ .
But how do we translate that into counting down ?
One thing we could do is to start from 0 and count up to the number we want the predecessor of , then return the next - to - the - last number we generated while counting up .
Note that n - 1 and n can be thought of as a tuple : ( n - 1 , n ) , which we can think of as being ( m , m + 1 ) wherein m + 1 = n .
We have tuples in LISP : they are called cons cells ( in Scheme , they are called pairs ) , and they look like this : ( 3 . 4 ) , which is a dotted pair ( discussing the difference between dotted pairs versus regular pairs is beyond my game plan ) .
Using cons ( the LISP constructor function , which is used to build tuples and lists ) , we can make the aforementioned pair like this : ( cons 3 4 ) .
And , we can access the different parts of it using car and cdr : ( car ( cons 3 4 ) ) => 3 , and ( cdr ( cons 3 4 ) ) =>
4 .
So , our job is clear : make tuples until we reach n , then return the car of the tuple that contains : n - 1 and n .
Building one tuple is a start , but how do we build n of them ?
In LISP we could recurse from 0 to n , checking to see when weve reached n ( building , of course , a tuple during each recursive call ) .
While recursion doesnt come for free in l-calculus ( as you will see ) we can get it .
That leaves us with having to come up with a predicate to test for Church numeral equality .
Even if we could coin the needed predicate , it still somehow seems like using a bulldozer to dig a hole for a petunia , doesnt it ?
Could we could skip recursion and the equality predicate ?
Perhaps at first thought that might seem like a tall order , but it turns out we can appeal to the definition of Church numerals to get the n iterations !
This is the same trick used by dechurchify - numeral .
Recalling that a Church numeral is really nothing more than a conglomerate of functions waiting to be applied to an object , and since we can pass in the function to be applied and the object we want it to be applied to , we can use this to our advantage just as dechurchify - numeral does : instead of passing in 1 + , whats to stop us from passing in some other function , like say a tuple maker ?
And instead of passing in 0 , we could pass in an initial tuple of ( 0 , 0 ) as the object .
The final result will be a tuple , which we can then take the car of .
( Note that if the initial tuple is ( error , 0 ) we can trap out attempts to call the predecessor function on 0 . )
>>> ( dechurchify - numeral ( combinator - pred ( make- church - numeral 3 ) ) ) 2
Note that combinator - car and combinator - cdr take in an object that wants a selector as an argument .
For the selector argument , combinator - car will pass to the object a projection function that will return its 1st of 2 arguments , and combinator - cdr will pass it a projection function that will return its 2nd of 2 arguments .
Recursion
At this point we now have the following , and a test case reveals it works :
>>> ( define fact ( lambda ( n ) ( (( combinator - if ( combinator - zero ? n ) ) ( lambda ( ) combinator - one ) ) ( lambda ( ) ( ( combinator -* n ) ( fact ( combinator - pred n ) ) ) ) ) ) ) fact >>>
( dechurchify - numeral ( fact ( make- church - numeral 5 ) ) ) 120
However , we re still not there yet because we rely on recursion through the use of a named symbol , and that s : fact .
It s okay to use named symbols as a shorthand ( in the sense of a macro expansion ) for code , but not if we rely on them for computational expressiveness .
To illustrate the problem , consider the following .
( Note : let is a LISP special form that creates local bindings .
Below , fact - wrong will be bound to the lambda form ( lambda ( n ) ( if ... ) ) within the scope of the let , which ends with the right paren that closes the let . )
>>> ( define local - fact - wrong ( lambda ( n ) ( let ( ( fact - wrong ( lambda ( n ) ( if ( zero ? n) 1 (* n ( fact - wrong (- n 1 ) ) ) ) ) ) ) ( fact - wrong n ) ) ) ) local - fact - wrong >>> ( local - fact - wrong 5 ) ERROR : Undefined global variable fact - wrong Entering debugger .
Enter ? for help .
debug :>
Obviously the semantics for define are quite different from the semantics for let .
What happened above actually makes perfect sense .
It s called lexical scoping :
The reference to the free variable fact - wrong inside the lambda form that was being bound to fact - wrong must refer to a variable named fact - wrong in a parent environment .
And indeed , at the time the lambda form was closed and bound to fact - wrong , there was no fact - wrong in any parent environment .
In less formal terms :
We were defining something , then in the midst of defining it , we made a reference to the very thing we were in the midst of defining !
It makes sense that you have to completely finish defining something before you can make references to it !
We can fix this problem by first creating the variable that we want to use recursively , then evaluating the lambda form ( to achieve closure ) so that the free reference will refer to the variable we just created .
Then , we bash the binding of the variable we created to get it to point to the closed lambda form [ Gabriel , 1988 ] , [ Rees et al. , 1986 ] .
This requires assignment , which is done by the destructive operator set !
( pronounced :  set bang ) .
( Note : begin simply allows sequencing .
It signifies that the forms inside its scope should be evaluated one after another .
It is generally used in places where normally only one form is allowed , such as a branch of an if test .
Below , the use of begin is superfluous , but serves to highlight the fact that sequencing is taking place . )
>>> ( define local - fact - right ( lambda ( n ) ( let ( ( fact - right ( ) ) ) ( begin ( set ! fact - right ( lambda ( n ) ( if ( zero ? n) 1 (* n ( fact - right (- n 1 ) ) ) ) ) ) ( fact - right n ) ) ) ) ) local - fact - right >>> ( local - fact - right 5 ) 120
As you can see , that makes us win .
There is a facility for defining local functions in Scheme already , that does something similar to the above : letrec .
>>> ( define local - fact ( lambda ( n ) ( letrec ( ( fact - right ( lambda ( n ) ( if ( zero ? n) 1 (* n ( fact - right (- n 1 ) ) ) ) ) ) ( fact - right n ) ) ) ) ) local - fact >>> ( local - fact 5 ) 120
Obviously define has letrec semantics rather than let semantics .
Another way of looking at this is that lexical scoping makes sense until we look at the global level , or top level ( the level you re at when you type forms at the MacScheme prompt ) .
Funny things happen at the global level .
Since its the last environment and is the parent of everything , we can refer to variables that dont exist yet .
If you think of scoping as a search , then you re searching the lexical environments from the innermost to the outermost to find any particular variable .
If none is found , then you search the global environment .
So , even if define had let semantics , unless the style of lexical search employed was semantically different from the style of search employed by the metacircular interpreter in [ Abelson et al. , 1985 ] , recursive definitions would still work at the top level !
The fact that we can refer to global variables that dont exist yet does make for one very important convenience :
We can define functions in any order we want .
For instance , if foo calls fido , we can define foo first and fido later , or vice versa .
It just simply doesnt matter .
( Exercise for the reader :
What happens if two symbols ; fluff and fido , are bound by a letrec ?
Does fluff know about fido ?
Does fido know about fluff ?
How does Scheme define the semantics of letrec ?
See [ Rees et al. , 1986 ] .
By the way , fluff and fido are two really with it  trendoids ; fido is an AI dog , and fluff is an object oriented cat .
Holy buzzwords , Batman !
( I just couldnt resist the chance to be a joker . ) )
Ive diverted a bit in order to drive home the point that recursion relies on a sort of tricky way of resolving free variables , and I think you can now imagine why such a trick wont work in l-calculus .
The Y Combinator
So , how do we get recursion in l-calculus ?
Well , one thing we do know how to do is :
We know how to get rid of free variables .
Think about it :
Why is x free in ( lambda ( y ) x ) ?
Because it doesnt look like this : ( lambda ( x ) ( lambda ( y ) x ) ) .
Well , if we want it to look like that , let s just make it be that !
After all , were not changing the value of the expression , were only changing the way the free variable will derive its meaning :
We re promising to pass in the value rather than rely on the rules of lexical scoping to ascribe the right value from the static ( lexically apparent ) context .
This process of factoring out free variables is called abstraction .
A form is not a combinator until we resolve all the free variable references in it to make them all bound within the context of the proposed combinator .
So , let s convert fact into a combinator .
( lambda ( fact ) ( lambda ( n ) ( (( combinator - if ( combinator - zero ? n ) ) ( lambda ( ) combinator - one ) ) ( lambda ( ) ( ( combinator -* n ) ( fact ( combinator - pred n ) ) ) ) ) ) )
Now weve got a combinator , but were not off scot - free yet .
We need to know what should be bound to fact .
In other words , what do we apply ( lambda ( fact ) ... ) to so that fact gets bound to the right thing ?
What do we want do we want it to be bound to ?
Well , fact should be bound to the code of the fact function .
( Of course !
It s recursive ! )
In other words , we want to apply ( lambda ( fact ) ... ) to a copy of facts code .
But wed have to do something like that for every level the recursive version of fact would have recursed .
Essentially , what we want is a way to get infinite recursion , and then we want to knit into each recursive level a combinator version of the function were trying to simulate recursion on .
( The infinite recursion will get stopped at the appropriate time since the function definition includes a stop condition . )
To get infinite recursion is trivial .
( ( lambda ( x ) ( x x ) ) ( lambda ( x ) ( x x ) ) )
Then all we need to do is knit in a version of the fact combinator at each level of recursion .
( ( lambda ( x ) ( f ( x x ) ) ) ( lambda ( x ) ( f ( x x ) ) ) )
And again , we need to factor out the free variable , or said another way , abstract it out .
( lambda ( f ) ( ( lambda ( x ) ( f ( x x ) ) ) ( lambda ( x ) ( f ( x x ) ) ) ) )
This special combinator has a name :
It s called the Y combinator .
( Kids , do try this at home ! )
( define y ( lambda ( f ) ( ( lambda ( x ) ( f ( x x ) ) ) ( lambda ( x ) ( f ( x x ) ) ) ) ) )
This version of Y works in l-calculus where evaluation is normal order , but will hang ( when invoked ) if evaluation is applicative order .
For our purposes , we need the applicative order Y combinator , which is the following fix to the ( normal order ) Y combinator .
( Exercise for the Überprogrammer : Derive the below tweak to Y and convince yourself that you understand why its necessary for applicative order . )
>>> ( define applicative - order -y ( lambda ( f ) ( ( lambda ( x ) ( f ( lambda ( arg ) ( ( x x ) arg ) ) ) ) ( lambda ( x ) ( f ( lambda ( arg ) ( ( x x ) arg ) ) ) ) ) ) ) applicative - order-y
Putting it all together , we get the chosen function we wanted .
>>> ( define combinator - fact ( applicative - order -y ( lambda ( fact ) ( lambda ( n ) ( (( combinator - if ( combinator - zero ? n ) ) ( lambda ( ) combinator - one ) ) ( lambda ( ) ( ( combinator -* n ) ( fact ( combinator - pred n ) ) ) ) ) ) ) ) ) combinator - fact
And it works .
>>> ( dechurchify - numeral ( combinator - fact ( make- church - numeral 5 ) ) ) 120
Aftermath
Now that weve gotten this far , lets compare our model with LISP ( LISP here meaning Scheme and / or Common LISP ) .
For instance , does our if accept the same things that LISPs if accepts ?
No .
Ours is much stricter .
It accepts only canonical true or canonical false , while the empty list is taken for false in Common LISP [ Steele , 1990 ] .
Scheme is closer to our model ( see [ Rees et al. , 1986 ] ) but does itself have some deviations .
Exercise for the reader : Decide for yourself if our if is correct ( and thereby LISP should be made to tow the line , or at least , we should program in LISP as if it were as strict as our model ) , or , that LISPs permissiveness is a justifiable programmer convenience which causes no problems .
In determining this , you might want to tweak our model to mimic the behavior of LISP ( different tweaks would be needed for Scheme versus Common LISP ) .
Then , run various tests and see if the tweaks cause problems , confusion , slow code execution , etc . .
( Perhaps theres no right or wrong answer here . )
Note : the empty list and the predicate to check for it are ( ) and null ?
respectively ( in Scheme ) and nil and null in Common LISP .
I havent shown their implementation in terms of combinators , so the above exercise would require some digging , especially since most books gloss over their implementation .
Exercise for the Überprogrammer :
One might think , on first seeing curried functions , that currying is an expressive weakness inflicted on l-calculus due to its thriftiness .
While fully uncurrying all the code needed for combinator - fact , think about whether there are or might be cases wherein curried functions are more expressively powerful than their uncurried counterparts .
Also , see if all curried functions can be uncurried in a purely mechanical fashion , or if some require a bit of tweaking !
Yet another exercise :
In a sense , Church numerals are a rather odd way of thinking about numbers , because Church numerals are verb oriented ( based on functions calls waiting to be set into motion ) , whereas perhaps normally we tend to think of numbers as being noun oriented ( based on static data - like objects ) .
We could devise numerals based on the latter approach .
For instance , the empty list could be 0 , 1 could be a list containing 1 element , and n could be a list containing n elements , etc. .
Implement such numerals and note how it changes the arithmetic routines .
For instance ; succ will turn out to be cons , pred will be cdr , plus will be append , and delistify - numeral will be length , etc . .
( Note how much simpler pred is ! )
Compare and contrast the Church numeral approach with the list numeral approach .
For instance , will recursion be necessary to express multiplication ?
Are Church numerals more expressively powerful ?
A question for the Überprogrammer : Ive shown two ways of looking at recursion .
One involves state ( the bashing of a bound variable ) and the other : the Y combinator .
What I didnt mention was that ( lambda ( x ) ( x x ) ) applied to itself , is an example of self replicating code .
While some folks dont like state , others dont like the idea of self replicating code .
If we decide we dont like either ( for whatever reasons ) , what does that do to recursion ?
With what other model can we understand or justify recursion ?
( Warning : l - calculus can be hazardous to your financial health . )
Acknowledgments
 Thanks  to technical reviewer Henry G. Baker , Ph.D. for helpful suggestions .
 Thanks  to John Koerber for his efforts at making this article safe for nonLISPers by not letting me get away with things a LISP reviewer would have let me get away with !
Bugs / infelicities mea culpa .
Bibliography and References
[ Abelson et al. , 1985 ] Harold Abelson and Gerald Jay Sussman with Julie Sussman .
Structure and Interpretation of Computer Programs .
MIT Press , Cambridge , Massachusetts , USA , 1985 .
[ Gabriel , 1988 ] Richard P. Gabriel .
The Why of Y. LISP Pointers , vol. 2 , no .
2 October - November - December , 1988 .
[ Peyton Jones , 1987 ] Simon L. Peyton Jones .
The Implementation of Functional Programming Languages .
Prentice - Hall International , 1987 .
[ Rees et al. , 1986 ] Jonathan Rees and William Clinger ( editors ) .
Revised3 Report on the Algorithmic Language Scheme ; AI Memo 848a .
MIT Artificial Intelligence Laboratory , Cambridge , Massachusetts , USA , September 1986 .
[ Révész , 1988 ] György E. Révész .
Lambda - Calculus , Combinators , and Functional Programming .
Cambridge University Press , Cambridge , England , 1988 .
[ Steele , 1990 ] Guy L. Steele Jr.. Common LISP the language 2nd edition .
Digital Press , USA , 1990 .
[ Wood , 1987 ] Derick Wood .
Theory of Computation .
Harper and Row , Publishers , Inc. , 1987 .
. . .
A note on references : Im being very informal in the citing of references , thinking it more appropriate for a non-academic article , and because the citing of multitudinous references could become very burdensome .
All the l- calculus versions of the combinators presented herein ( from which the Scheme versions were derived ) are from [ Révész , 1988 ] , except in the case of the applicative order Y combinator which abounds in LISP literature .
[ Peyton Jones , 1987 ] presents introductory l-calculus , as well as denotational semantics and other topics .
[ Abelson et al. , 1985 ] includes Church numerals , the applicative order Y combinator , and similar , and implements them in Scheme , however these are more of a sideline issue alluded to in exercises .
[ Rees et al. , 1986 ] is the definition of the Scheme language .
Copies of the Revisedn Report can be obtained from the MIT AI Lab for a small fee .
[ Gabriel , 1988 ] presents a tutorial on Y in Common LISP .
MacScheme is put out by Lightship Software , P.O. Box 1636 , Beaverton , OR 97075 USA .
Phone : ( 503 ) 643-6909 .
There are numerous other sources of information on this topic that I could list , however I feel these references most closely represent the materials I actually drew from in this article .
; File : fact.y. ;
Here 's the chosen function .
( define fact ( lambda ( n ) ( if ( zero ? n) 1 (* n ( fact (- n 1 ) ) ) ) ) ) ; ( fact 5 ) ; ( define identity ( lambda ( x ) x ) ) ; ( define project - 1 st - of - 2 ( lambda ( x ) ( lambda ( y ) x ) ) ) ; ( define project - 2nd - of - 2 ( lambda ( x ) identity ) ) ; ( define project - 3rd - of - 3 ( lambda ( x ) ( lambda ( y ) identity ) ) ) ; ; ; true and false could be defined this way : ; ( define combinator - true project - 1st - of - 2 ) ; ( define combinator - false project - 2nd - of - 2 ) ; ; but we 'll do them as follows .
; ( define combinator - true ( lambda ( x ) ( lambda ( y ) x ) ) ) ; ( define combinator - false ( lambda ( x ) ( lambda ( y ) y ) ) ) ; ( define combinator - cons ( lambda ( x ) ( lambda ( y ) ( lambda ( selector ) ( ( selector x ) y ) ) ) ) ) ; ( define combinator - car ( lambda ( object ) ( object project - 1st - of - 2 ) ) ) ; ( define combinator - cdr ( lambda ( object ) ( object project - 2nd - of - 2 ) ) ) ; ( define force - a - thunk ( lambda ( thunk ) ( thunk ) ) ) ; ( define combinator - if ( lambda ( condition ) ( lambda ( then ) ( lambda ( else ) ( force - a - thunk ( ( condition then ) else ) ) ) ) ) ) ; ( define combinator - zero project - 2nd - of - 2 ) ; ( define combinator - zero ? ( lambda ( n ) ( ( n project - 3rd - of - 3 ) combinator - true ) ) ) ; ( define combinator - succ ( lambda ( n ) ( lambda ( f ) ( lambda ( x ) ( f ( ( n f ) x ) ) ) ) ) ) ; ( define dechurchify - numeral ( lambda ( numeral ) ( ( numeral 1 + ) 0 ) ) ) ; ( define make - church - numeral ( lambda ( n ) ( if ( zero ? n ) combinator - zero ( combinator - succ ( make- church - numeral (- n 1 ) ) ) ) ) ) ; ( define combinator -* ( lambda ( m ) ( lambda ( n ) ( lambda ( f ) ( m ( n f ) ) ) ) ) ) ; ( define combinator - pred ( lambda ( n ) ( combinator - car ( ( n ( lambda ( tuple ) ( ( combinator - cons ( combinator - cdr tuple ) ) ( combinator - succ ( combinator - cdr tuple ) ) ) ) ) ( ( combinator - cons " combinator - pred called on 0 " ) combinator - zero ) ) ) ) ) ; ( define combinator - applicative - order -y ( lambda ( f ) ( ( lambda ( x ) ( f ( lambda ( arg ) ( ( x x ) arg ) ) ) ) ( lambda ( x ) ( f ( lambda ( arg ) ( ( x x ) arg ) ) ) ) ) ) ) ; ( define combinator - one ( make- church - numeral 1 ) ) ; ( define combinator - fact ( combinator - applicative - order -y ( lambda ( fact ) ( lambda ( n ) ( (( combinator - if ( combinator - zero ? n ) ) ( lambda ( ) combinator - one ) ) ( lambda ( ) ( ( combinator -* n ) ( fact ( combinator - pred n ) ) ) ) ) ) ) ) ) ; ( dechurchify - numeral ( combinator - fact ( make- church - numeral 5 ) ) ) ; ; Done .
DETROIT , Aug. 1 — The Toyota Motor Company passed the Ford Motor Company in July for the first time to rank as the second - biggest carmaker in the United States , behind General Motors , auto sales reports out today showed .
All of the major Detroit companies reported double - digit sales declines in July compared with 2005 , when auto sales reached record levels because of the popularity of employee discount programs .
Toyota ’s milestone was evidence that American buyers are again flocking to Japanese companies in the wake of high gasoline prices .
Each of the Detroit companies ’ lineups remain dominated by trucks and sport utility vehicles , while the major Japanese companies each sell a greater percentage of cars than light trucks in the United States .
Toyota ’s win over Ford came only three months after Toyota passed DaimlerChrysler , including both Chrysler and Mercedes - Benz , to rank as the third - biggest company in terms of American sales .
Joel Spolsky talks about Painless Software Schedules in his book “ JoelOnSoftware “ .
Accurately estimating how your much time it will take to complete a task is one of the fundamental skills of any professional .
Joel ’s approach is simple :
Keep a spreadsheet with Feature / Task / Priority / Original Estimate / Current Estimate columns .
Track effort in hours , not days / weeks .
Tracking in hours forces you to do a straw man analysis of the tasks that are needed upfront .
Tracking in longer intervals of time encourage more “ rough guessing ” .
Use Excel .
Mind you , Joel was the project manager for Excel once upon a time .
See original article for the other guidelines .
After the break , evaluating different programs .
The reason for having the Original Estimate and Current Estimate columns is to create a feedback loop and improve your estimation skill over time .
It can also be helpful to have the estimation history when you are developing an estimate for a similar task .
One useful concept I think he might have left out is doing a best case / worst case original estimate .
( See this article for a commentary on best case / worst case as presented in Steve McConnell ’s Software Estimation ) .
He originally wrote that article in March of 2000 , so I had to wonder if any of his fans had developed a better software alternative .
Here is a loose comparison of five of the contenders :
Microsoft Excel COST : Free , maybe .
Probably already installed on your work computer .
MEMORY : 6.2 MB on startup .
PRO : Flexible , you can do anything with it .
CON : Flexible , you can do anything with it and waste a lot of time fiddling instead of working on those tasks you are estimating .
In his article Joel gives tips on the key Excel features that are needed to get the system working : pivot tables , WORKDAY
Safari Software ’s Masterlist-XL
http://www.safarisoftware.com/
COST : Free spreadsheet , requires Microsoft Excel .
MEMORY : 33.4 MB on startup .
CON :
The version Joel links to in his article is out of date and does not work with modern versions of Excel .
Grab the latest version from Safari ’s website instead .
PRO : Roadmap tutorial .
PRO : Very focused on getting you working on the high priority / low time tasks first and the low priority / high time tasks last .
CON : Pop - up dialog boxes used for editing instead of editing the spreadsheet directly .
Data validation is good , and the fields are bigger / more readable than they would be using the spreadsheet directly , but this slows you down .
CON : Has concept of deadlines for when tasks are due .
Does n’t appear to have a mechanism for determining deadlines from the amount of work to be done .
PRO : Schedule tasks into specific windows of time on a calendar .
CON : Scheduling tasks this way is time consuming .
I have to assume that you would only do this 1 - 2 days in advance .
CON : Where is the original estimate / current estimate tracking for giving yourself feedback to improve your estimation skills ?
PRO : Import internal format ( mostly used to upgrade to new versions ) .
CON : Even though you can use Excel to access the raw data , you are most likely going to screw up the application if you try to play around with it .
Positive - G’s Task Tracker
http://www.postitive-g.com
COST : $ 25 USD .
– MEMORY : 3.1MB on startup .
Seems to spawn lots of separate processes as you use it .
PRO : This * exactly * the mechanism Joel describes in his book .
CON : Pop - up dialog boxes used for editing instead of editing the spreadsheet directly .
PRO : Task timers if you do n’t want to manually keep track .
PRO : You can set how many working hours are in a day .
( When was the last time you got 8 effective hours of work in a day without working overtime ? )
PRO : “ Add 1 Hours Work ” button to quickly keep track of how long you ’ve been working on a task .
PRO : Export XML , HTML , MS Project .
PRO : Very simple , not going to waste a lot of time learning it .
CON : Very simple , no frills .
AllNetic Working Time Tracker
http://www.allnetic.com/
COST : $ 30 USD .
MEMORY : 7.4MB on startup .
PRO : Timers for keeping track of exactly how much time spent on tasks .
CON : No concept of original / current estimates , just actual time spend .
This tools is more intended for generating billable hour reports .
PRO : Import CSV / internal format .
PRO : Export HTML / TXT / XML / CSV / SQL .
Generates invoices .
This definitely is intended more as a billable hours application .
CON : The UI is poorly organized .
Safari Software ’s Masterlist Professional
http://www.safarisoftware.com/
COST : $ 25 USD .
MEMORY : 23.5 MB at start - up .
PRO : Professional look and layout .
PRO : Context sensitive help and tutorial .
PRO : Has all of the features of Masterlist - XL plus more .
PRO : Scheduling can integrate with your Outlook calendar .
Does n’t track current estimate , but can keep track of original estimate ( Time Needed ) and how long it took ( Time Spent ) so feedback is possible .
Timer support .
PRO : It has an algorithm for suggesting the order in which tasks should be done , and auto - scheduling .
PRO : Is a tool for a productivity enhancing methodology .
PRO : Prioritizer wizard for assigning finely grained priority .
PRO : Data can be edited in a spreadsheet view .
PRO : Export to Excel .
CON :
The program has enough smarts in it that there will be some ramp up time while you get used to it .
CON :
It was n’t readily evident if you could use the data for project planning .
It seems more focused on enhancing productivity .
Not a bad thing .
AbstractSpoon ’s ToDo List
http://www.codeproject.com/tools/todolist2.asp
COST : Free , open source .
MEMORY : 7MB at start - up .
PRO : ISO data format support !
( I ’m a freak who does n’t understand why YYYY / MM / DD is n’t the defacto every where since it is unambiguous and easily sortable ) .
PRO : Plug - in architecture .
Existing plug-ins include : encrypt / decrypt , iCal Exporter , RTF comments , custom spellcheck , Gannt Project Export .
PRO : 3rd - party tool support .
PRO : Multiple user support with XML data files that can be merged with source control software .
PRO : Tree based task lists with functions for breaking existing tasks into lists of subtasks .
The branches of the tree roll up into their parents in terms of tracking data .
PRO : Timers .
PRO : Keeps track of your original estimate and time spent .
PRO : Smart set of tracking fields .
Priority , Risk , % Complete , Start Date , Due Date , Completion Date , user defined status .
PRO : Completely configurable UI .
PRO : Export HTML , TXT , CSV .
PRO : Spellchecker .
CON : Overwhelming amount of configurable options ( you can even reconfigure all of the keyboard shortcuts ! )
CON : For programmers , by programmers .
It is very well done but suffers from clutter .
This comes from being so highly configurable .
CON : I ’m surprised there are n’t user - defined fields .
It does n’t directly have metrics for comparing original estimate and time spent , but it would be easy to whip up a plug - in to support that .
UPDATE 2006/09/07
willCode4
Beer does it very simply with an XML file and an XSL transformation
http://willcode4beer.com/design.jsp?set=sched
PRO : How much simpler can you get ?
CON : How much simpler can you get ? :)
PRO : It was cool that he found this page and left a comment on it .
PRO : Because it ’s bare - bones you ’ll spend time on doing work and not fiddling around with scheduling .
Overall :
First choice : ToDo List .
: ToDo List .
Second choice : Using homegrown Excel application .
This will give you a lot of flexibility , but it will be more time consuming .
Or use the XML / XSL approach .
: Using homegrown Excel application .
This will give you a lot of flexibility , but it will be more time consuming .
Third choice : Masterlist Professional .
I have a feeling it can be a very powerful tool , but do you have time to ramp up ?
: Masterlist Professional .
I have a feeling it can be a very powerful tool , but do you have time to ramp up ?
Fourth choice : Task List .
Use Painless Software Schedules methodology with a slightly nicer interface than a raw Excel spreadsheet .
If you have to do anything beyond scheduling one person you ’re screwed .
Not recommended :
Working Time Tracker
Masterlist XL ( just buy Masterlist Professional if that ’s the format you are comfortable with ) .
Please leave comments with any other suggestions ( that ’s how I found out about ToDo List — thank you Jay Kint ) .
Related Posts :
This site may earn affiliate commissions from the links on this page .
Terms of use
It ’s been a long time coming .
Over the past year , the hype machine has been beating the drum for Intel ’s new processor architecture .
Dubbed Core , the new architecture is a radical shift for a company that was once the chief proponent of ramping up CPU frequency .
Core 2 , the first desktop product , promises to be faster than the Pentium D series and even faster than the Athlon 64 FX - 62 .
However , those last tests were n’t completely kosher , as the “ FX - 62 ” was really an overclocked FX - 60 running on DDR400 , rather than the DDR2 - based FX - 62 , and they were done under Intel ’s supervision .
Even so , it ’s been clear from all the leaks , sanctioned testing , and industry scuttlebutt that Core 2 is fast .
But does it really perform in a wider array of applications than has been previously leaked or revealed ?
We ’ll answer that question shortly .
Today , Intel finally reveals the details of their Core 2 CPUs , allowing us to present our full independent analysis .
We obtained a pair of Core 2 CPUs from Intel : the Core 2 Duo E6700 , which runs at 2.66GHz and will cost approximately $ 530 , and the Core 2 Extreme X6800 , which clocks at 2.93GHz and is priced at $ 999 .
( These are prices for quantities of 1,000 . )
How will AMD respond to the new Intel Core 2 Duo ?
Think “ 4×4 ” , power , and price , executives say .
Click here for more .
We described the Core microarchitecture back in March .
Core 2 owes much of its heritage to the Intel ’s mobile Pentium M processor line .
The first iteration of that architecture , known as Banias , was the creation of Intel ’s Israeli design team .
But Core 2 is n’t just another iteration of the Pentium M. Instead , it steals a little from the old NetBurst architecture and adds enhancements of its own .
The net result is a processor with a substantially shorter instruction pipeline than NetBurst ( Intel ’s name for the architecture of the Pentium 4 and Pentium D processors . )
In Core 2 , substantially more instructions are executed per clock cycle , so even though Core 2 processors run at a lower clock frequency than previous Intel desktop lines , they run applications faster .
Core 2 is also more power efficient :
Intel ’s goals for the mainstream CPU is to maintain 65W , versus the 90W to 95W of the mainstream Pentium Ds or the 130W of the high - end Pentium D 940 or Extreme Edition CPUs .
The net result is a CPU that uses less power while running applications substantially faster .
Let ’s take a look at the Core 2 architecture before we try to answer the question “ how much faster ? ”
Continued …
We were playing a game by candlelight in an island cabin in northern Maine last night when this squeaking baby bat ( about 1 " -- that crack is just the space between the fireplace and the flooring ) fell from the ceiling .
We scooped it gently onto a paper plate and transferred it up on a ledge on the stepped chimney .
Suddenly its mom swooped down , scooped him up in her wing like it was a pouch and crawled up the entire chimney that way until she had her baby safely upside down in the rafters again !
Labels : enviro
... one of the most highly regarded and expertly designed C++ library projects in the world .
— Herb Sutter and Andrei Alexandrescu , C++ Coding Standards
In the previous section we used two different forms — metafunction classes and placeholder expressions — to pass and return metafunctions just like any other metadata .
Bundling metafunctions into " first class metadata " allows transform to perform an infinite variety of different operations : in our case , multiplication and division of dimensions .
Though the idea of using functions to manipulate other functions may seem simple , its great power and flexibility [ Hudak89 ] has earned it a fancy title : higher - order functional programming .
A function that operates on another function is known as a higher - order function .
It follows that transform is a higher - order metafunction : a metafunction that operates on another metafunction .
[ Hudak89 ] Paul Hudak .
" Conception , Evolution , and Application of Functional Programming Languages , " ACM Computing Surveys 21 , no .
3 Pages : 359 - 411 . New York : ACM Press .
1989 . ISSN:0360-0300 .
http://doi.acm.org/10.1145/72551.72554.
Now that we 've seen the power of higher - order metafunctions at work , it would be good to be able to create new ones .
In order to explore the basic mechanisms , let 's try a simple example .
Our task is to write a metafunction called twice , which — given a unary metafunction f and arbitrary metadata x — computes :
twice(f , x ) := f( f( x ) )
This might seem like a trivial example , and in fact it is .
You wo n't find much use for twice in real code .
We hope you 'll bear with us anyway :
Because it does n't do much more than accept and invoke a metafunction , twice captures all the essential elements of " higher - orderness " without any distracting details .
If f is a metafunction class , the definition of twice is straightforward :
template < class F , class X > struct twice { typedef typename F:: template apply <X >:: type once ; // f( x ) typedef typename F:: template apply < once >:: type type ; // f( f( x ) ) } ;
Or , applying metafunction forwarding :
template < class F , class X > struct twice : F:: template apply < typename F:: template apply <X >:: type > {} ;
C++ Language Note
The C++ standard requires the template keyword when we use a dependent name that refers to a member template .
F:: apply may or may not name a template , depending on the particular F that is passed .
See the book 's Appendix B for more information about template .
Given the need to sprinkle our code with the template keyword , it would be nice to reduce the syntactic burden of invoking metafunction classes .
As usual , the solution is to factor the pattern into a metafunction :
template < class UnaryMetaFunctionClass , class Arg > struct apply1 : UnaryMetaFunctionClass :: template apply < Arg > {} ;
Now twice is just :
template < class F , class X > struct twice : apply1 < F , typename apply1 < F,X > : : type > {} ;
To see twice at work , we can apply it to a little metafunction class built around the add_pointer metafunction :
struct add_pointer_f { template < class T > struct apply : boost ::add_pointer <T> {} ; } ;
Now we can use twice with add_pointer_f to build pointers - to - pointers :
BOOST_STATIC_ASSERT
( ( boost : : is_same < twice < add_pointer_f , int > :: type , int** >:: value ) ) ;
« Think Young | Main | Death by Devil 's Advocate »
Keep the sharp edges !
" Great software is n't created by committee . "
That quote came from James Gosling , at the developer " fireside chat " at the last JavaOne .
And from Applied Minds tech wizard Bran Ferren , " Art is n't the product of a team . "
Is this true ?
First , I do n't believe James was necessarily talking about the functionality and code when he said " great software " .
Clearly , teams of great programmers can produce great code .
I think he means the kind of breakthrough apps that people can become passionate about , and I also think it 's less about the programming and more about the design and spec .
And we can all have our own interpretation of the word " team " -- at what point does a reasonably small , synergistic group building and adding to one another 's strengths turn into an idea- crushing , groupthink team ?
That depends ... very few good novels are written by more than one person .
Perhaps for novels , two is the maximum , and even that 's pretty rare .
And we all recognize that indie films today tend to be of much higher storytelling quality than the watered - down major studio films where there 's often a huge gap between " the director 's cut " and the final release edit .
But what about software or other products ?
What about the team responsible for decisions that affect the context in which users interact with your product , service , or company ?
How big can those teams be before they become completely dysfunctional ?
Obviously there 's no absolute number ... two people can cancel out each other 's good ideas just as effectively as a dozen .
If it 's not simply about the absolute number , then what is it about ?
It 's about how hard the team / group works to exploit the smartest aspects of the team while maintaining the distance and diversity so artfully ( and scientifically ) suggested in James Surowiecki's Wisdom of Crowds book .
It 's about aggregating the intelligence of the individuals rather than having the group make decisions as a whole .
And those are two profoundly different things .
If you have n't read the book , I made an earlier summary of one of the key premises here .
Most importantly , it 's about working to keep the sharp edges instead of smoothing them all over .
It 's about avoiding the dreaded " morph " .
You 've seen the morph phenomenon , where products end up looking like a morph of all competing products until there 's virtually no major distinction .
Nothing remarkable .
Nothing we love .
Think of all the new cars you see today that look soooooo much like every other car .
With a few exceptions ( like the Honda Element , the MINI ) , most look like they 've been run through a morphing program that found the perfect average .
I was about to add the ScionxB to my list of examples , but then I realized that it 's looking dangerously close to the Element ... and if the car designers are n't careful , we 'll just be exchanging a road full of lookalike rounded cards for a road full of box - like cars with very little difference between them .
This is the car I 've wanted all my life :
The ' 64 Mustang .
My dream car .
And though some of the newer Mustangs over the years have been nice - looking cars , the designs today now look like they 've been morphed with that of many other cars :
Metaphorically speaking , where are the sharp edges ?
Where are the strong ideas that come from either an individual or the product of true brainstorming ?
( Not the kind of meetings that pretend to be brainstorming , but where someone always plays " devil 's advocate " and kills innovation at the roots , or where we all know that if we do n't go along with " the group " , we 'll be in trouble . )
When people are n't brave enough for one reason or another , ideas are morphed and the sharp edges are worn away until there 's little left but a completely palatable , utterly unlovable lump .
( Again , I do n't mean " sharp edges " literally - - I happen to love my iPod precisely because it has no sharp edges ... very sexy indeed . )
But then what do you do when the sharp - edged ideas of individuals are all different ?
You pick one .
Or , applying the wisdom - of - crowds model , you take the best of several .
But rather than morphing , you aggregate the ideas in whatever way is meaningful to this kind of product , service , process , idea .
And you read Surweicki's book to find out why forcing out anyone who does n't " fit " with the group can be not just unproductive , but in some cases deadly ( read his discussion about the Space Shuttle ) .
And I 'm going to keep posting this picture , way past the point when you 're sick of seeing it :
If we allow groupthink / consensus to win , smoothing over all the pointed edges , we 'll indeed have something that nobody hates .
How many of us can afford to be there today ?
Posted by Kathy on October 2 , 2005 | Permalink
TrackBack
TrackBack URL for this entry :
https://www.typepad.com/services/trackback/6a00d83451b44369e200d83459c39469e2
Listed below are links to weblogs that reference Keep the sharp edges !:
» Keeping the rough edges from Fast and Bulbous
I just read this article on the " Creating Passionate Users " blog ( a worthwhile read in general ) , and it seemed relevant to our current discussions on board size .
When people are n't brave enough for one reason or another , ideas are morphed and the sha ... [ Read More ]
Tracked on Oct 3 , 2005 5:20:14 AM
» Return of the Swoosh Thing from stark raving calm
Looks like Kathy Sierra and I are reading the same source material : Youve seen the morph phenomenon , where products end up looking like a morph of all competing products until theres virtually no major distinction .
Her illustrations ... [ Read More ]
Tracked on Oct 3 , 2005 8:46:59 AM
» The Existential Vacuum from Inside Conversation
I am reading Viktor Frankl 's book Man's Search for Meaning .
He postulates that the process of an individual 's search for meaning is the centerpiece of their existance .
Those that are not actively seeking or do not have a clear understanding [ Read More ]
Tracked on Oct 3 , 2005 12:20:42 PM
» The Existential Vacuum from Inside Conversation
I am reading Viktor Frankl 's book Man's Search for Meaning .
He postulates that the process of an individual 's search for meaning is the centerpiece of their existance .
Those that are not actively seeking or do not have a clear understanding [ Read More ]
Tracked on Oct 3 , 2005 12:22:55 PM
» Summer is coming from Blog this
I can tell Summer is coming , spent yesterday in the water and putting the AC on in my place .
Went ... [ Read More ]
Tracked on Oct 3 , 2005 6:22:10 PM
» Trust the Masses ? from Engineering Patterns
I found an interesting page on wikipedia today that made a particular aspect of the debate over the a ... [ Read More ]
Tracked on Oct 4 , 2005 9:09:13 PM
» Trust the Masses ? from Engineering Patterns
I found an interesting page on wikipedia today that made a particular aspect of the debate over the a ... [ Read More ]
Tracked on Oct 4 , 2005 9:12:49 PM
Comments
Mark Twain 's eruptum quote comes to my mind
" Sane and intelligent human beings are like all other human beings , and carefully and cautiously and diligently conceal their private real opinions from the world and give out fictitious ones in their stead for general consumption . "
The blogging is narrowing the gap and helping us voice our * real opinions *.
I almost wrote off the whole blogging even before starting to work on it , but I was so wrong , see my very first posts , http://tarrysingh.blogspot.com/2005_04_01_tarrysingh_archive.html
The deal is that even the one 's who reach a consensus know damn well ( in their minds ) that " it 's oh - so - very - dullyfying ( is it a word ? ) crap that we 're selling ! "
We need to be able to communicate across the wall , break it open and make it ONE BIG SPICY UNGREY CONSENSUS !
Posted by : Tarry Singh | Oct 2 , 2005 3:58:32 PM
I remember being at a staff session on ' the power of the team ' - the age - old mantra of " there 's no ' I ' in team " was thrown at us to contemplate ... I shouted out - " you 're right but there 's a 'me ' " ... always a fun one to use that !
;-)
Posted by : DK | Oct 2 , 2005 4:52:08 PM
You 're singing my song or I am drinking your Koolaid or both .
I ask clients " what do you want to create ? "
And they sit in stunned silence .
They want to know what others are doing or how some initiative has worked some place else .
They resist owning the opportunity to be creatiively different - the opportunity to be loved or hated .
But I have to admit , I love ripping the bandages off their eyes .
I think you do too .
Have you read Peter Block 's book , " The Asnwer to How is Yes " ?
You might like it .
Thanks for making public your thoughts ; your blog is a great contribution .
Posted by : Michael Wagner | Oct 2 , 2005 4:55:59 PM
I agree with you about the idea that ideas with sharp edges are good , but I disagree with your use of the term " consensus " to describe the process behind the production of " morphed " ideas .
Consensus , as it's used to describe a group decision - making process , does n't involve a group of people who know an idea is crap but agree to it anyways .
It does n't involve taking bits and pieces of various ideas and making a boring , homogenous proposal .
In true consensus models , each person in the group can veto a proposal .
Every single person in the room can nix a crap idea , and every single person in the room can propose a great one .
Actual consensus is an extremely rare thing in the business world ; it 's egalitarian and non-hierarchical , and it requires that you convince someone of an idea 's merit rather than simply order them to implement it .
" Consensus " gets bandied around a lot these days , to provide the usual managerial power plays with a modicum of respectability , but as you 've said , that almost always involves someone in a role of authority shooting down ideas which they did n't come up with , and we know what that ends up producing .
It 's not a lack of bravery , really , but rather an acknowledgement of the truth of the situation : if you were to propose something more interesting that your boss , he or she would probably just shoot it down .
Yay hierarchy .
In contrast , real consensus meetings are like brainstorming sessions without the idea - crapper in the corner ( or at the head of the table , usually ) .
I 've been working with a group which uses a strict consensus model ( each person has to be enthusiastic about a proposal ) for about two years now , and while it takes more time than just marginalizing the people who disagree , we have the opportunity to transcend the dichotomy you 've voiced .
We do n't have to choose between a brown blob and one person 's proposal ; we get to have an idea which actually works for everyone , and we have this opportunity because every person brings their different analytical powers together .
We get to come up with sharp - edged ideas as a group .
Any decision - making process which involves " forcing out anyone who does n't ' fit ' with the group " is n't consensus .
It 's the usual corporate primate dynamics nonsense .
Being creative is not a zero sum game .
For more information on consensus , check out :
http://en.wikipedia.org/wiki/Consensus_decision-making
Posted by : Coda Hale | Oct 2 , 2005 8:18:39 PM
My Scion xB is on order .
When reading reviews online I came across a quote that I loved ( paraphrased ) " Honda Element owners will love the Scion xB because they will no longer own the ugliest car on the road . "
The Element is certainly unique - but it is still an SUV .
My favorite SUV , but an SUV none the less .
Now , try to classify the Scion xB ...
Some call it a wagon , but this does n't really fit .
It 's not an SUV - low ground clearance , no 4WD option , it 's an urban vehicle .
Some have suggested a new category " micro- mini-van " .
THat 's lame too .
The Scion xB is truely unique .
Sure it might looke a little like the Element , but the Element is an evolutionary step from the SUV .
The xB is discontinuous innovation .
Nothing against the Element , I really like them too .
But I object to the xB is a Element wanna - be thing .
Just wait unitl I get it and post pictures - you will see what I mean .
- Matt
Posted by : Matt Galloway | Oct 2 , 2005 11:38:18 PM
Coda : that 's a pretty inspiring and thought - provoking comment , I have to say .
Thanks for giving me more to think about ...
Matt : Passionate users 101-- When users are passionate about your product or idea , they ''ll defend it ...
* especially * against the typical koolaid point accusation of " nothing new here . "
You 're seriously getting an xB ?
My next door neighbor has one and I must admit I 've been lusting .
But Eric and Beth have an Element , so , you know , I had to throw that in .
I have a Subaru like , well , like virtually everyone else in Boulder .
It 's the requirement when you move here .
( Unless you have a pickup , then you 're exempt . )
But I 'm from southern California , and everyone * knows * that we can't drive for s*** in rain , let alone SNOW ... so having an all - wheel drive car is nice .
I can't wait to see your pictures .
Michael : I have n't read that book ; I 'll check it out !
Thanks Tarry : )
DK : In one of our books there 's a fake corporate memo that has the " There 's no " I " in Team " in it , and the O'Reilly copyeditor had us smiling when she wrote back , " But there IS a " U " in Suck . "
Posted by : Kathy Sierra | Oct 3 , 2005 12:03:20 AM
Maximum two authors for a novel ?
Perhaps a good novel , but not this one :
http://www.eigology.com/unblokt/bookshelf.php
( completed works : volume 1 )
Somewhere between 350 to 700 people came together to write this .
Enjoy !
Posted by : Sean | Oct 3 , 2005 8:42:54 AM
Design by consensus always ends up being a watered - down version of what it should be .
That middle zone of mediocrity is also a middle zone of safety for many execs who either lack vision or insight or courage ... or all of the above .
This post is so dead - on .
Thank you for writing it . :)
Posted by : Olivier Blanchard | Oct 3 , 2005 3:26:28 PM
DK ,
Now I do n't feel so unique .
To
" There 's no ' I ' in ' TEAM ' . "
I would say ,
" No , but there 's an ' m ' and an 'e ' and that 's ' me ' . "
Posted by : Dustin | Oct 3 , 2005 4:46:16 PM
Kathy ,
Well done !
The " Sharp Edge " message cannot be told enough times , because it is basically counter - intuitive .
People will say , " Oh yes , right ! " and proceed to pull all of the sharp edges out of the offering and the messages to conform to " conventional wisdom " .
Sharp edges make things remarkable and Seth Godin has written extensively about the necessity of creating remarkable ideas .
Sharp edges are vital for the success of any creative effort , and that includes weblogs as well .
Blogs with sharp edges are fun to read and generate traffic almost without trying .
Screw the SEO campaigns , just write memorable content with sharp edges and all will be well .
Posted by : David St Lawrence | Oct 5 , 2005 1:22:54 PM
My mother has always told me that old clothes never come back into fashion until the season after you throw them out .
So I should have guessed it would happen , but it 's still sad that box - shaped cars came back in as soon as I sold my beloved ' 82 Volvo .
Posted by : Graham Lea | Oct 6 , 2005 8:51:40 PM
The comments to this entry are closed .
A failure to shut off the service of satellite phones stolen in Iraq has left UK taxpayers almost £ 600,000 ( $ 1.1 m ) the poorer .
Light - fingered robbers were able to use the nicked phones for up to a year before Foreign Office officials twigged that anything was amiss .
The crooks went to elaborate lengths to make the most of the phones .
The Daily Telegraph reports that the thieves established a premium rate phone line in the South Pacific islands of Wallis and Futuna .
Using one of the hi-tech phones to call the premium rate number raked up bills of around £ 290,000 ( $ 537,000 ) over just two months , earning crooks a tidy percentage .
The scope of the scam emerged following an investigation by the National Audit Office , the government 's spending watchdog , which criticised the Foreign Office for inadequate controls .
Ten satellite phones were dispatched to diplomats in Iraq in September 2003 but staff on the ground were n't told the kit was coming and no provision was made to store phones securely until they were needed .
No records were kept of who collected the phones which , handily from the thieves 's point of view , were activated in Britain before they were dispatched to the Middle East .
Three phones went missing in early 2004 but the last of the phones was n't barred until June 2005 .
By that stage , crooks had run up a bill of £ 594,370 ( $ 1.1 m ) at the expense of the Foreign Office .
A junior official queried the size of the bills as early as September 2004 but nobody took any action , an oversight that wound up costing the British taxpayer a packet . ®
It was the climax of George W. Bush 's video introduction at the Republican convention : the moment at Yankee Stadium during the 2001 World Series when he threw a pitch all the way to home plate .
The video ended , and the conventioneers cheered as Mr. Bush strode onto a stage shaped like a pitcher 's mound .
Well , live by the pitch , die by the pitch .
When you campaign as the man on the mound , the great leader whose arm rescues Americans in their moment of need , they expect you to deal with a hurricane , too .
Mr. Bush made a lot of mistakes last week , but most of his critics are making an even bigger one now by obsessing about what he said and did .
We can learn more by listening to men like Jim Judkins , particularly when he explains the Magic Marker method of disaster preparedness .
Mr. Judkins is one of the officials in charge of evacuating the Hampton Roads region around Newport News , Va .
These coastal communities , unlike New Orleans , are not below sea level , but they 're much better prepared for a hurricane .
Officials have plans to run school buses and borrow other buses to evacuate those without cars , and they keep registries of the people who need special help .
The many problems with this Go to top ]
Posted by : Mike Brown
Posted on : February 17 2006 08:39 EST
in response to Tom Donoghue I have noticed that Java developers seem to have this impression that all other languages are dead and no one uses them .
This is simply not true .
" Dead like COBOL " I would waiger that there are more lines of active COBOL code in the world today than Java .
Also , if COBOL is dead , then it had a good 4 decade run .
I hope Java has the same .
Useless we can actuall look at what he did in Java and what was done in Ruby , we should n't conclude that he is correct .
Just because he wrote some books , does n't make him an expert .
4 months Java = 2 days Ruby ?
Reply to this Reply to original
COBOL IS NOT DEAD FOR SURE
Go to top ]
Posted by : Ilya Sterin
Posted on : February 18 2006 10:14 EST
in response to Adel Alrashidi " COBOL is dead " >>>
where I work , there are more COBOL programmers then any other langauge !!
so I do n't think that COBOL is dead or will be dead in the next 10 years .
Java is strong , and it is getting stronger and stronger in the server side .
however , yes , we really need to work a lot in the client side .
Adel
Yes , but I bet you do n't have many or any new projects starting in COBOL .
Or course COBOL will exist as long as there is still software written in it , for maintenance and additional feature reasons .
Some companies can't justify rewriting an inhouse application , if the current one is efficient and meets their needs .
Ilya
Yes , but I bet you do n't have many or any new projects starting in COBOL .
Or course COBOL will exist as long as there is still software written in it , for maintenance and additional feature reasons .
Some companies can't justify rewriting an inhouse application , if the current one is efficient and meets their needs .
Ilya Reply to this Reply to original
RoR vs Java Again ???
Go to top ]
Posted by : Rogerio Saulo
Posted on : February 17 2006 08:46 EST
in response to Tom Donoghue Ruby on Rails really has a chance to make a dent in many of the web UI / database problems that Java was designed to solve .
Come on people , this is not a valid comparison , RoR does not compete with JEE , I like to see how they do an complex application with an DB with 100 + tables with ActiveRecord , you cannot base your application 100 % on the DB design , it is a poor design , the DB and business rules need to be separated .
RoR IMHO does not work for legacy DBs and RoRis JUST for smaller projects , TSS need to stop posting articles that make wrong comparisons ...
Come on people , this is not a valid comparison , RoR does not compete with JEE , I like to see how they do an complex application with an DB with 100 + tables with ActiveRecord , you cannot base your application 100 % on the DB design , it is a poor design , the DB and business rules need to be separated .
RoR IMHO does not work for legacy DBs and RoRis JUST for smaller projects , TSS need to stop posting articles that make wrong comparisons ...
Reply to this Reply to original
Open Source
Go to top ]
Posted by : Paul Beckford
Posted on : February 17 2006 09:32 EST
in response to Rogerio Saulo Ruby on Rails really has a chance to make a dent in many of the web UI / database problems that Java was designed to solve .
Come on people , this is not a valid comparison , RoR does not compete with JEE , ..
I do n't think this was the main thrust of Bruce 's interview .
I think the point he was making is how should we go about innovating .
He makes the point that the open source model is a lot better at doing this .
I agree .
I do n't think this was the main thrust of Bruce 's interview .
I think the point he was making is how should we go about innovating .
He makes the point that the open source model is a lot better at doing this .
I agree .
Reply to this Reply to original
RoR vs Java Again ???
Go to top ]
Posted by : Hans Prueller
Posted on : February 17 2006 10:56 EST
in response to Rogerio Saulo Ruby on Rails really has a chance to make a dent in many of the web UI / database problems that Java was designed to solve .
Come on people , this is not a valid comparison , RoR does not compete with JEE , I like to see how they do an complex application with an DB with 100 + tables with ActiveRecord , you cannot base your application 100 % on the DB design , it is a poor design , the DB and business rules need to be separated .
RoR IMHO does not work for legacy DBs and RoRis JUST for smaller projects , TSS need to stop posting articles that make wrong comparisons ...
I just can say : +++ +++ +++ +++!!!
You definitely mentioned the right think .
See also
http://hanzz.lbs-logics.at/index.php?option=com_content&task=view&id=64&Itemid=2
for my comments .
I just can say : +++ +++ +++ +++!!!
You definitely mentioned the right think .
See alsofor my comments .
Reply to this Reply to original
Dead like PL/1 ?
Go to top ]
Posted by : Ilya Sterin
Posted on : February 17 2006 09:10 EST
in response to Victor C. Fact : 1. Upcoming JSE 6 does not include GroupLayout ( Netbeans Matise layout ) 2.
Upcoming JEE 5 does not include Portlets .
End of story .
Not even fair to mention what other features other tech stack DO include now relative .
Clients and Developers are being chased away from where I see ..V
What in the world are you talking about ?
This is why clients are being chased away ?
Because of GroupLayout and lack of JEE support for portlets ?
Ruby or other languages have that support ?
Even if the portlets are not going to be included in the JEE 5 support , I 'm sure there will be great quality implementations out there you can use .
Ilya
What in the world are you talking about ?
This is why clients are being chased away ?
Because of GroupLayout and lack of JEE support for portlets ?
Ruby or other languages have that support ?
Even if the portlets are not going to be included in the JEE 5 support , I 'm sure there will be great quality implementations out there you can use .
Ilya Reply to this Reply to original
Dead like PL/1 ?
Go to top ]
Posted by : Victor C .
Posted on : February 17 2006 12:45 EST
in response to Ilya Sterin
lack of JEE support for portlets ? < snip > other languages have that support ?
I know that last year C# 2 shiped support for WebParts and Master paages , and that it works out of the box in the free SDK !
How hard do developers and clients have to work to integrate vendors " left behinds " ?
And then explain hours you had to do bit - twidling in the tech stack .
Can they at least try to compete .
JEE including or not including Portlets is important .
. V Ilaya , I know that last year C# 2 shiped support for WebParts and Master paages , and that it works out of the box in the free SDK !
How hard do developers and clients have to work to integrate vendors " left behinds " ?
And then explain hours you had to do bit - twidling in the tech stack .
Can they at least try to compete .
JEE including or not including Portlets is important ..V
Reply to this Reply to original
Dead like PL/1 ?
Go to top ]
Posted by : Ilya Sterin
Posted on : February 17 2006 13:19 EST
in response to Victor C. Ilaya , lack of JEE support for portlets ? < snip > other languages have that support ?
I know that last year C# 2 shiped support for WebParts and Master paages , and that it works out of the box in the free SDK !
How hard do developers and clients have to work to integrate vendors " left behinds " ?
And then explain hours you had to do bit - twidling in the tech stack .
Can they at least try to compete .
JEE including or not including Portlets is important ..V
But C# has other drawbacks , single vendor , one platform , etc ...
I never compare JEE to C# , I do n't see why other do .
Unless we 're ready to switch to a single platform enterprise , and all but windows , it takes a last seat in my book .
It 's great for analytical client applications though , or maybe putting a lightweight front end to OLTP .
Ilya But C# has other drawbacks , single vendor , one platform , etc ...
I never compare JEE to C# , I do n't see why other do .
Unless we 're ready to switch to a single platform enterprise , and all but windows , it takes a last seat in my book .
It 's great for analytical client applications though , or maybe putting a lightweight front end to OLTP .
Ilya Reply to this Reply to original
Dead like PL/1 ?
Go to top ]
Posted by : damian frach
Posted on : February 17 2006 13:45 EST
in response to Victor C. Ilaya , lack of JEE support for portlets ? < snip > other languages have that support ?
I know that last year C# 2 shiped support for WebParts and Master paages , and that it works out of the box in the free SDK !
How hard do developers and clients have to work to integrate vendors " left behinds " ?
And then explain hours you had to do bit - twidling in the tech stack .
Can they at least try to compete .
JEE including or not including Portlets is important ..V
I do not know , but any modern J2EE portal supports portlets .
And some of them are also free .
I do not see a problem .
Also you can bundle your specific
Swing layout manager with your app if you want .
I do not see it as an overkill ... I do not know , but any modern J2EE portal supports portlets .
And some of them are also free .
I do not see a problem .
Also you can bundle your specific
Swing layout manager with your app if you want .
I do not see it as an overkill ...
Reply to this Reply to original
Ruby is great , but ...
Go to top ]
Posted by : Ilya Sterin
Posted on : February 17 2006 09:07 EST
in response to Tom Donoghue Before I actualy looked into Ruby ( I have n't really worked with RoR much , other than read a few article and tried a simple sample app ) , I did n't give it any credit .
Well , that has changed , Ruby is truly a beautiful language , but ...
Ruby does not and I doubt ever will , have the commercial support and standards committee like Java .
These are the most important factors for enterprise technologies .
If you 're an independent consultant and are writting an app for a small / midsize client ( who does n't have a clue ) , they 'll let you write it in anything to save the bucks .
In that scenerio , if you love Ruby ( RoR ) , it might be a good choice .
In most enterprise application cases , there is more to writting an app than the beauty of the language .
The other day , I was trying to make a case to make a client of mine use RoR , so that I can learn it and they can save some development time associated costs ( so I 've been hearing : - ) .
I was done in about 2 minutes , after I could n't come up with a viable enterprise quality / grade deployment platform for RoR .
Even in the RoR book , they describe multiple deployment scenerios , lighttpd with FastCGI , apache with mod_ruby or fastCGI where the only two recommended for production .
The first is said to be unstable sometimes ( these words are directly from the book ) , and the second is no longer actively supported / developed .
So how comfortable would a company feel in deploying their app in an unstable and / or unsupported environment .
So until Ruby has a viable platform , commercial and / or open source , which has a lot of traction , money behind it , etc ... , it 's a huge risk for any corporation to take on .
For some reason , Ruby folks are not jumping on building a quality server platform , as say mod_perl / Apache , and even Python enjoys .
I mean , what good is RoR without anywhere to deploy it ?
Ilya Reply to this Reply to original
Ruby is great , but ...
Go to top ]
Posted by : Radu - Adrian Popescu
Posted on : February 23 2006 02:40 EST
in response to Ilya Sterin [...] lighttpd with FastCGI , apache with mod_ruby or fastCGI where the only two recommended for production .
The first is said to be unstable sometimes ( these words are directly from the book ) , and the second is no longer actively supported / developed .
Where does it say that FastCGI support is no longer actively supported / developed ?
It seemed to me that this was by far and large the best deployment option .
Any links ?
Cheers .
Where does it say that FastCGI support is no longer actively supported / developed ?
It seemed to me that this was by far and large the best deployment option .
Any links ?
Cheers .
Reply to this Reply to original
Yes , but ..
Go to top ]
Posted by : David Peters
Posted on : February 17 2006 09:12 EST
in response to Tom Donoghue
If I have to learn another language , wont I find myself getting confused when I switch back and forth between languages ?
Wont I need another set of tools and scripts for compiling / deploying ?
Wont I lose the ability to re-use my favorite libraries - i.e ; DOM4J , Spring , Log4j , Hibernate , JUnit , etc ..?
For a language that is not yet mainstream , wont it be harder to " google " for answers to your technical questions , and find documentation and a community ?
Definately , we need to evolve and develop new languages as time goes by .
But there has to be something BIG to get me to leave my comfort zone and community .
From C++ to Java , it was the OS independence .
I dont see it yet , with ROR .
Reply to this Reply to original
Yes , but ..
Go to top ]
Posted by : Stefan Arentz
Posted on : February 17 2006 09:36 EST
in response to David Peters
If I have to learn another language , wont I find myself getting confused when I switch back and forth between languages ?
Wont I need another set of tools and scripts for compiling / deploying ?
Wont I lose the ability to re-use my favorite libraries - i.e ; DOM4J , Spring , Log4j , Hibernate , JUnit , etc ..?
For a language that is not yet mainstream , wont it be harder to " google " for answers to your technical questions , and find documentation and a community ?
Definately , we need to evolve and develop new languages as time goes by .
But there has to be something BIG to get me to leave my comfort zone and community .
From C++ to Java , it was the OS independence .
I dont see it yet , with ROR .
I miss a lot of things when I work in RoR .
Simple example , I needed an app to generate secure PayPal buttons .
In Java this is about 40 lines of code that uses the JCE APIs .
In Ruby there is nothing similar so you are simply not able to do this .
End of story .
I ended up with writing a simple web service in Java to do the crypto work so that the Ruby app can still have this functionality .
Works ok , but it is not ideal .
Many other things .
I really miss JMS in the Ruby world .
I miss the well defined APIs of the standard Java runtime .
I miss the quality documentation .
The many more resources available in books and online .
I miss simple things like an IoC container , a choice of web servers , Jakarta Commons .
I miss things like JMX to monitor my app , etc .
I 've asked people on for example Ruby newsgroups and in chatrooms about the above things and I usually get the same reaction as from the Python people : " you do n't think in a Ruby way " .
Personally I think these people simply do n't know any better .
Java is a very rich platform with many choices and available tools .
Ruby and other scripting languages are much more limited .
Sure , the language is really nice and has many features that make it so much less verbose and more powerful than something like Java .
But a language is just one side of it .
I need frameworks to get my job done .
Most advocates do n't understand that .
Sorry for the rant .
I 'm actually a happy user of both , you just need to know when to use the right tool for the right job :-)
S. I miss a lot of things when I work in RoR .
Simple example , I needed an app to generate secure PayPal buttons .
In Java this is about 40 lines of code that uses the JCE APIs .
In Ruby there is nothing similar so you are simply not able to do this .
End of story .
I ended up with writing a simple web service in Java to do the crypto work so that the Ruby app can still have this functionality .
Works ok , but it is not ideal .
Many other things .
I really miss JMS in the Ruby world .
I miss the well defined APIs of the standard Java runtime .
I miss the quality documentation .
The many more resources available in books and online .
I miss simple things like an IoC container , a choice of web servers , Jakarta Commons .
I miss things like JMX to monitor my app , etc .
I 've asked people on for example Ruby newsgroups and in chatrooms about the above things and I usually get the same reaction as from the Python people : " you do n't think in a Ruby way " .
Personally I think these people simply do n't know any better .
Java is a very rich platform with many choices and available tools .
Ruby and other scripting languages are much more limited .
Sure , the language is really nice and has many features that make it so much less verbose and more powerful than something like Java .
But a language is just one side of it .
I need frameworks to get my job done .
Most advocates do n't understand that .
Sorry for the rant .
I 'm actually a happy user of both , you just need to know when to use the right tool for the right job :-) S. Reply to this Reply to original
Java is no longer compelling
Go to top ]
Posted by : U G
Posted on : February 26 2006 06:55 EST
in response to Stefan Arentz Java has run its course .
SUN and IBM are now trying to figure out how to take all this open source and invent vendor lockin by making things so complex that only established vendors will have the money and the interest to do things nobody is really that interested in in the first place .
Finally Java developers are realizing that hey , we are OVER ENGINEERING EVERYTHING .
Partially because we are getting our asses kicked by overseas outsourcing to companies that get paid to write C in Java .
We have been snowed by the heavyweight MVC police for so long that there is not even one RAD solution in Java .
Because we are * above * RAD .
But if Java is good for heavy it should be good for light .
But then you would have to compete with .NET or Rails and it cant ... so the whole standards copout and " whaaa I need a J2ee container coput get played " .
Whats the copout going to be when Spring kills J2ee containers ?
Reply to this Reply to original
Java is no longer compelling
Go to top ]
Posted by : Steve Zara
Posted on : February 26 2006 15:27 EST
in response to U G Java has run its course .
I love posts like these .
They normally turn up on Slashdot , and go something like ' Intel is doomed ' , or ' Windows is on the way out ' , and , of course , ' Java is finished ' .
SUN and IBM are now trying to figure out how to take all this open source and invent vendor lockin by making things so complex that only established vendors will have the money and the interest to do things nobody is really that interested in in the first place .
Strange , then , that many of the reference implementations of JSRs are open source , and not implemented by vendors at all !
An example I am particularly interested in is JPOX , will will be the RI of JDO 2.0 .
Strange form of vendor lock - in .
Another interesting example is Oracle donating JSF components to Apache MyFaces - a sort of ' anti ' lock - in !
Finally Java developers are realizing that hey , we are OVER ENGINEERING EVERYTHING .
Partially because we are getting our asses kicked by overseas outsourcing to companies that get paid to write C in Java .
We have been snowed by the heavyweight MVC police for so long that there is not even one RAD solution in Java .
So what is RAD ?
Fast development - perhaps with a visual tool , with integrated debugging ?
Well , for client - side development there is NetBeans 5.0 with its awesome GUI tool .
For server - side development there is Studio Creator , with its ability to produce data - linked web applications in a matter of minutes .
That sure looks like at least two RAD solutions to me !
Because we are * above * RAD .
Well , I am not a fan of Studio Creator myself , but that is just me .
But if Java is good for heavy it should be good for light .
Like J2ME ? Hmm ....
But then you would have to compete with .NET or Rails and it cant ...
Sure .... look at all those thousands of .NET apps on Linux , Solaris , HPUX ...
And those thousands of Rails jobs advertised out there .....
so the whole standards copout and " whaaa I need a J2ee container coput get played " .
Whats the copout going to be when Spring kills J2ee containers ?
Er - perhaps things like JDO and JPA , which do n't need J2EE containers ?
Standards with open source implementations ?
I love posts like these .
They normally turn up on Slashdot , and go something like ' Intel is doomed ' , or ' Windows is on the way out ' , and , of course , ' Java is finished ' .
Strange , then , that many of the reference implementations of JSRs are open source , and not implemented by vendors at all !
An example I am particularly interested in is JPOX , will will be the RI of JDO 2.0 .
Strange form of vendor lock - in .
Another interesting example is Oracle donating JSF components to Apache MyFaces - a sort of ' anti ' lock - in !
So what is RAD ?
Fast development - perhaps with a visual tool , with integrated debugging ?
Well , for client - side development there is NetBeans 5.0 with its awesome GUI tool .
For server - side development there is Studio Creator , with its ability to produce data - linked web applications in a matter of .
That sure looks like at least two RAD solutions to me !
Well , I am not a fan of Studio Creator myself , but that is just me .
Like J2ME ? Hmm .... Sure .... look at all thoseof .NET apps on Linux , Solaris , HPUX ...
And thoseof Rails jobs advertised out there ..... Er - perhaps things like JDO and JPA , which do n't need J2EE containers ?
Standards with open source implementations ?
Reply to this Reply to original
Java is no longer compelling
Go to top ]
Posted by : David McCoy
Posted on : February 26 2006 21:08 EST
in response to U G Java has run its course .
SUN and IBM are now trying to figure out how to take all this open source and invent vendor lockin by making things so complex that only established vendors will have the money and the interest to do things nobody is really that interested in in the first place .
Finally Java developers are realizing that hey , we are OVER ENGINEERING EVERYTHING .
Partially because we are getting our asses kicked by overseas outsourcing to companies that get paid to write C in Java .
We have been snowed by the heavyweight MVC police for so long that there is not even one RAD solution in Java .
Because we are * above * RAD .
But if Java is good for heavy it should be good for light .
But then you would have to compete with .NET or Rails and it cant ... so the whole standards copout and " whaaa I need a J2ee container coput get played " .
Whats the copout going to be when Spring kills J2ee containers ?
Speak for yourself .
Just because * YOU * are overengineering and * YOU * are getting your ass kicked does n't mean that Java is compelling .
Have you consider that YOUR stuff is overengineered and your ass is being kicked because you suck ?
Speak for yourself .
Just because * YOU * are overengineering and * YOU * are getting your ass kicked does n't mean that Java is compelling .
Have you consider that YOUR stuff is overengineered and your ass is being kicked because you suck ?
Reply to this Reply to original
Java : Dead Like COBOL , Not Like Elvis ?
Go to top ]
Posted by : William Childers
Posted on : February 17 2006 09:22 EST
in response to Tom Donoghue Is Tate living in a cocoon .
He says in the article " Well , look at it from a historical context .
The problem Java grew up around solving was slapping a web UI around legacy stuff , mostly relational databases .
The thinking was , and still is : ‘ If you can solve that web - database problem very quickly , most of the time you will be important . "
Well , I 've been doing Java and and JEE for a number of years in the enterprise space and " slapping a web UI " has rarely if ever been the focus for our use of Java .
In Java 's early days it was n't even the web .
People in corporations kept trying to write fat clients with Java .
They thought they had a better more portable VB .
Attempts to use it on the web beyond applets came later .
The people who did think that Java was primarily for solving UI problems where the weenies and kids - the same types who think the world 's important problems could / should be solved by spinning widgets in VB .
As years have gone by and JEE has matured , we are increasingly using it to replace the backend systems and not just integrate with them .
Tate says that in the article , but his tone implies that he thinks that sort of work is somehow less important .
Well Bruce , its the sort of computing that runs the world .
The UI 's are just the icing .
Amazon 's one - click web interface would n't be very important if they could n't obtain the product , ship it to you and collect the money .
That 's not done by a web UI .
So for everyone like Bruce who thinks its all about the UI - please go chase after the next big UI toy and leave the real work to the adults .
All that being said , I agree with a number of Tate 's points and there is a lot to criticize about the JCP and the role of vendors in gunking up the platform and the ridiculous proliferation of " frameworks " and " standards " .
However , all this activity is actually proof that Java is not dead " like COBOL " .
The COBOL world has not experience that much diversity and change in decades , if ever .
Reply to this Reply to original
UI is what the users / clients see :-)
Go to top ]
Posted by : Gennadiy Civil
Posted on : April 10 2007 14:31 EDT
in response to William Childers
Yes the back end processing is important .
IMPORTANT .
However - one has to understand the importantce of the UI , if you think that UI is somehow secondary this is exactly the arrogance that gets an IT group in trouble with the clients .
Tate is simply stating that existing J2EE set is not suitable for creating nice looking and functional UIs quckly as it should be in this day and age .
I agree .
Many , may times I would have to write some JavaScript in web application spending hours and sometimes days that I would not even think about if I was using Microsoft platform ...
I would dare to reverse your example - if Amazon did not have a nice UI there may not have been all this need to write a robust back end to process all these orders .
How about 1 - Click orders on Amazon ?
This is one of their most prised posessions , if I am not mistaken there was a legal proceedings at some point with someone else for the right do to a 1 - Click orders .
Reply to this Reply to original
Bruce does anything to sell his books
Go to top ]
Posted by : Stefan Arentz
Posted on : February 17 2006 09:25 EST
in response to Tom Donoghue I do n't buy this story for several reasons .
You cannot tell me that an experienced team of two Java programmers spend 4 months working on an application , getting the job not done and then doing a rewrite in less than a week .
Either the numbers do n't add up , Bruce is not telling the whole story or the experience of those developers was not so brilliant after all .
Sure , RoR is great , and I can also crank out a complex data model in minimal time .
But really , with Hibernate 3.1 I can do it in the same time .
In RoR I edit SQL code and create mostly empty model classes and with Hibernate I just write model classes with some annotations added .
Maybe Bruce spend 4 months building this app in a classic J2EE / 1.3 environment ; Struts , Entity Beans , etc .
Well , we all already knew that it is pretty difficult to be agile with that combination .
So , invitation to Bruce : why not give us fill disclosure about what went really wrong in the original project ?
S. Reply to this Reply to original
Java : Dead Like COBOL , Not Like Elvis ?
Go to top ]
Posted by : Bruce Tate
Posted on : February 17 2006 09:41 EST
in response to Tom Donoghue Boy , the TSS knows how to pick out a quote ... do n't they ?
Maybe I should provide a little context .
So when someone reads Beyond Java , the question inevitably comes up like this :
" So Java is dead , right ? "
And I need to respond without reciting a dissertation including all of the ideas in the book .
And I think this quote captures the idea : old languages will someday be pushed to the back burner and new ideas will be expressed in something else , and the community will move on to something else .
But old successful languages do n't die .
And the economy around them does n't disappear .
Since new languages come around every 10 years or so , Java is very much in danger of joining that camp .
So when I say " Java is in danger " , I mean it 's in danger of losing the mindshare , community and innovation that go with being a dominant market leader .
And I very much stand by that .
I hope that Java can move more aggressively as a language , and I hope that we can take it forward as a platform that serves multiple languages .
But I hardly think one sensationalized quote captures the spirit of the whole interview , the book , or my opinions , and I think that pushing out such a quote as a headline is a cheap trick to generate traffic .
Certainly no conversation of substance will come out of it .
Reply to this Reply to original
Java : Dead Like COBOL , Not Like Elvis ?
Go to top ]
Posted by : Darryl Smith
Posted on : February 17 2006 10:30 EST
in response to Bruce Tate Since new languages come around every 10 years or so , Java is very much in danger of joining that camp .
So when I say " Java is in danger " , I mean it 's in danger of losing the mindshare , community and innovation that go with being a dominant market leader .
And I very much stand by that .
I hope that Java can move more aggressively as a language , and I hope that we can take it forward as a platform that serves multiple languages .
What shape is ruby in ?
Its birthday will be in 13th birthday will be in 7 days
http://www.ruby-lang.org/en/20030224.html
What shape is ruby in ?
Its birthday will be in 13th birthday will be in 7 days Reply to this Reply to original
Java : Dead Like COBOL , Not Like Elvis ?
Go to top ]
Posted by : Darryl Smith
Posted on : February 17 2006 10:32 EST
in response to Darryl Smith Since new languages come around every 10 years or so , Java is very much in danger of joining that camp .
So when I say " Java is in danger " , I mean it 's in danger of losing the mindshare , community and innovation that go with being a dominant market leader .
And I very much stand by that .
I hope that Java can move more aggressively as a language , and I hope that we can take it forward as a platform that serves multiple languages .
What shape is ruby in ?
Its birthday 13th birthday will be in 7 days
http://www.ruby-lang.org/en/20030224.html
preview preview preview
What shape is ruby in ?
Its birthday 13th birthday will be in 7 days Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : lecharny emmanuel
Posted on : February 18 2006 05:36 EST
in response to Bruce Tate Your assertion that ' Java is in danger ' based on its age is just strange , to say the less .
The facts :
FORTRAN : 1954
LISP : 1958
COBOL : 1959
C : 1971
ADA : 1979
C++ : 1983
Perl : 1987
Python : 1991
Ruby : 1993 <--- !!!
PHP : 1995
JAVA : 1995 <---
C# : 2000
Ok .
Ruby is two years older than Java .
If Java is dying , are you just necrophil to play with Ruby ?
Let 's face the facts ...
It took more than 10 years to build a framework ( RoR ) out of Ruby , while the first usable MVC framework for Java came out around 2000 , 6 years before RoR .
I found it pretty reactive for a dying body ...
Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : Arcadius Ahouansou
Posted on : February 18 2006 13:22 EST
in response to lecharny emmanuel Your assertion that ' Java is in danger ' based on its age is just strange , to say the less .
The facts : FORTRAN : 1954LISP : 1958COBOL : 1959C : 1971ADA : 1979 C++ : 1983 Perl : 1987 Python : 1991 Ruby : 1993 <--- !!!
PHP : 1995JAVA : 1995 <--- C# : 2000
Ok .
Ruby is two years older than Java .
If Java is dying , are you just necrophil to play with Ruby ?...
Good points .
I had a look at some RoR tutorials at onlamp.com .
And I must admit that RoR looks very impressing .
So , my guess is that in the near future we'd see more and more PHP / Python / Perl web developers and hobbyists moving to RoR .
But Java and .
Net would remain for real enterprise developers .
Arcadius .
Good points .
I had a look at some RoR tutorials at onlamp.com .
And I must admit that RoR looks very impressing .
So , my guess is that in the near future we'd see more and more PHP / Python / Perl web developers and hobbyists moving to RoR.
But Java and .
Net would remain for real enterprise developers .
Arcadius .
Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : Ilya Sterin
Posted on : February 18 2006 14:45 EST
in response to Arcadius Ahouansou
So , my guess is that in the near future we'd see more and more PHP / Python / Perl web developers and hobbyists moving to RoR.
But Java and .
Net would remain for real enterprise developers .
Arcadius .
Your first comments , I agree with .
Majority of developers to move to Ruby will come from these environments .
I do n't understand what you mean by Java and .
Net would be for " Real " enterprise developers .
What 's the definition of a real ?
Using a language ( rather platform ) that provides most of enterprise service implementations for you ?
Some might argue that it actualy creates an abstraction layer that makes the developers clueless as to the underlying implementation and though not as intelligent .
I disagree with that , but also disagree with the fact that entperprise software has to be created in Java and / or .NET .
I know of many enterprise grade software implementations written in Perl , Python , and Ruby is probably next .
Why do n't you ask Google about their heavy use of Python for underlying services ?
Or amazon for powering all of their web services in Perl ?
Or even British Telecom for implementing their Call Management Information system ( in Perl ) .
There are thousands more , that I 'm not as familiar with .
Enterprise developers , are just that , enterprise developers , classified by knowledge of the problem domain , technologies , implementation , possibly low level implementation , OO methodologies , patterns , etc ... , but in no way is someone who knows J2EE and / or .NET be classified as an enterprise developer .
That 's like calling someone who drives a BMW a race car driver .
Ilya
Your first comments , I agree with .
Majority of developers to move to Ruby will come from these environments .
I do n't understand what you mean by Java and .
Net would be for " Real " enterprise developers .
What 's the definition of a real ?
Using a language ( rather platform ) that provides most of enterprise service implementations for you ?
Some might argue that it actualy creates an abstraction layer that makes the developers clueless as to the underlying implementation and though not as intelligent .
I disagree with that , but also disagree with the fact that entperprise software has to be created in Java and / or .NET .
I know of many enterprise grade software implementations written in Perl , Python , and Ruby is probably next .
Why do n't you ask Google about their heavy use of Python for underlying services ?
Or amazon for powering all of their web services in Perl ?
Or even British Telecom for implementing their Call Management Information system ( in Perl ) .
There are thousands more , that I 'm not as familiar with .
Enterprise developers , are just that , enterprise developers , classified by knowledge of the problem domain , technologies , implementation , possibly low level implementation , OO methodologies , patterns , etc ... , but in no way is someone who knows J2EE and / or .NET be classified as an enterprise developer .
That 's like calling someone who drives a BMW a race car driver .
Ilya Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : Arcadius Ahouansou
Posted on : February 18 2006 15:45 EST
in response to Ilya Sterin
So , my guess is that in the near future we'd see more and more PHP / Python / Perl web developers and hobbyists moving to RoR.
But Java and .
Net would remain for real enterprise developers .
Arcadius .
Your first comments , I agree with .
Majority of developers to move to Ruby will come from these environments .
I do n't understand what you mean by Java and .
Net would be for " Real " enterprise developers .
What 's the definition of a real ?
By " real enterprise developers " , I meant those who work on big projects for large companies in the financial , healthcare , automotive , telecom , etc industry .
Why do n't you ask Google about their heavy use of Python for underlying services ? ...
About google ...
Google uses Java internally .
If you followed the news , you 'd have learnt that , some of the core Java engineers moved from SUN to Google ( no need to cite names here ) .
Moereover , there have been an article at sun.com about Google migration from Java 1.4 to 5.0 .
Arcadius .
By " real enterprise developers " , I meant those who work on big projects for large companies in the financial , healthcare , automotive , telecom , etc industry .
About google ... Google uses Java internally .
If you followed the news , you 'd have learnt that , some of the core Java engineers moved from SUN to Google ( no need to cite names here ) .
Moereover , there have been an article at sun.com about Google migration from Java 1.4 to 5.0 .
Arcadius .
Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : Ilya Sterin
Posted on : February 18 2006 17:25 EST
in response to Arcadius Ahouansou About google ... Google uses Java internally .
If you followed the news , you 'd have learnt that , some of the core Java engineers moved from SUN to Google ( no need to cite names here ) .
Moereover , there have been an article at sun.com about Google migration from Java 1.4 to 5.0 .
Arcadius .
Oh , I 'm sure they do , actually Google is hiring Java , C/C++ , Perl , Python , etc ... developers .
So I 'm not discounting their heavy Java use .
They leverage each technology for it's best features and not argue over what should be the true " one and only " standard within the enterprise .
With various technologies , like CORBA and / or SOAP , you can leverage verious services within the enterprise , without sacrificing agility .
I think languages will become less and less predominant , as they have been , and we 'll see the usage of many languages and technologies within each company , interoperating with each other , in cross platform / language neutral way .
Again , noone can argue the popularity and usage of other technologies I mentioned , Perl , Python , etc ... in large enterprise - level applications .
Each has it's own strength and weakness .
Ilya Sterin
Oh , I 'm sure they do , actually Google is hiring Java , C/C++ , Perl , Python , etc ... developers .
So I 'm not discounting their heavy Java use .
They leverage each technology for it's best features and not argue over what should be the true " one and only " standard within the enterprise .
With various technologies , like CORBA and / or SOAP , you can leverage verious services within the enterprise , without sacrificing agility .
I think languages will become less and less predominant , as they have been , and we 'll see the usage of many languages and technologies within each company , interoperating with each other , in cross platform / language neutral way .
Again , noone can argue the popularity and usage of other technologies I mentioned , Perl , Python , etc ... in large enterprise - level applications .
Each has it's own strength and weakness .
Ilya Sterin Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : Cameron Purdy
Posted on : February 18 2006 21:49 EST
in response to Ilya Sterin I know of many enterprise grade software implementations written in Perl , Python , and Ruby is probably next .
I 'm not sure what " enterprise grade " is , but I do know that most software that purports to be " enterprise software " is not " enterprise software " .
Why do n't you ask Google about their heavy use of Python for underlying services ?
Or amazon for powering all of their web services in Perl ?
Or even British Telecom for implementing their Call Management Information system ( in Perl ) .
FWIW , all three of those companies do most of their heavy lifting ( in apps built in the past five years anyhow ) using Java .
Peace ,
Cameron Purdy
: Clustered Shared Memory for Java
I 'm not sure what " enterprise grade " is , but I do know that most software that purports to be " enterprise software " is not " enterprise software " .
FWIW , all three of those companies do most of their heavy lifting ( in apps built in the past five years anyhow ) using Java .
Peace , Cameron Purdy Tangosol Coherence : Clustered Shared Memory for Java Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : Ilya Sterin
Posted on : February 19 2006 19:37 EST
in response to Cameron Purdy I know of many enterprise grade software implementations written in Perl , Python , and Ruby is probably next .
I 'm not sure what " enterprise grade " is , but I do know that most software that purports to be " enterprise software " is not " enterprise software " .
Well , the definition to enterprise software is very subjective any ways , I was more relating to software that is robust , scalable , extensible , interoperable , etc ...
Basically most properties that one would consider as " Enterprise Software " .
There are many of those written in variety of technologies .
Yes , Java might enable some of these with it 's frameworks / libraries vs. having to write one yourself , but it still does n't mean that the same ( or even better ) can't be accomplished in any other general purpose language .
I use Java 90 % of the time , I would n't use anything else write now at client sites for most of the OLTP systems , but I 'm always looking at and learning alternatives .
And I will definitely employ RoR if I find a low risk project with a good fit .
Why do n't you ask Google about their heavy use of Python for underlying services ?
Or amazon for powering all of their web services in Perl ?
Or even British Telecom for implementing their Call Management Information system ( in Perl ) .
FWIW , all three of those companies do most of their heavy lifting ( in apps built in the past five years anyhow ) using Java .
Peace , Cameron PurdyTangosol Coherence : Clustered Shared Memory for Java
Well , I do n't know about most , I know ( as I mentioned in their post ) , that they use variety of technologies .
And I would n't be surprised if they used Java heavily , it would be a great choice on their behalf , but ...
I know Amazon backend web services are all done in Perl , as well as BT is using Perl for very heavy data intensive tasks , etc... , as well as their Call Management Information system .
Again , all I 'm trying to say is that there is more than Java out there .
I love Java , I 'm not here trolling about other technologies : -) , but it 's just too many folks on here that act is if Java is irreplaceable and the global IT backbone would collapse without it .
My post was merely for folks that say , I would n't write Enterprise Software in anything else .
Ilya
Well , the definition to enterprise software is very subjective any ways , I was more relating to software that is robust , scalable , extensible , interoperable , etc ...
Basically most properties that one would consider as " Enterprise Software " .
There are many of those written in variety of technologies .
Yes , Java might enable some of these with it 's frameworks / libraries vs. having to write one yourself , but it still does n't mean that the same ( or even better ) can't be accomplished in any other general purpose language .
I use Java 90 % of the time , I would n't use anything else write now at client sites for most of the OLTP systems , but I 'm always looking at and learning alternatives .
And I will definitely employ RoR if I find a low risk project with a good fit .
Well , I do n't know about most , I know ( as I mentioned in their post ) , that they use variety of technologies .
And I would n't be surprised if they used Java heavily , it would be a great choice on their behalf , but ...
I know Amazon backend web services are all done in Perl , as well as BT is using Perl for very heavy data intensive tasks , etc... , as well as their Call Management Information system .
Again , all I 'm trying to say is that there is more than Java out there .
I love Java , I 'm not here trolling about other technologies : -) , but it 's just too many folks on here that act is if Java is irreplaceable and the global IT backbone would collapse without it .
My post was merely for folks that say , I would n't write Enterprise Software in anything else .
Ilya Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : Steve Zara
Posted on : February 20 2006 05:43 EST
in response to Ilya Sterin I 'm not here trolling about other technologies : -) , but it 's just too many folks on here that act is if Java is irreplaceable and the global IT backbone would collapse without it .
My post was merely for folks that say , I would n't write Enterprise Software in anything else .
Ilya
Well , what would you use for the core of any software system - the part that does the ' heavy lifting ' ?
The part that needs to be efficiently multi- threaded and truly high performance ?
Perl , Python , Ruby ?
Traditionally this has been the area where C , and then C++ have dominated .
Now Java is taking over , simply because it is easier to develop with .
The reason that Java can take over is because it is a general - purpose language with proven concepts .
My test for a language being general purpose is if you can write a high - performance compiler or database with it .
You can with Java .
Well , what would you use for the core of any software system - the part that does the ' heavy lifting ' ?
The part that needs to be efficiently multi- threaded and truly high performance ?
Perl , Python , Ruby ?
Traditionally this has been the area where C , and then C++ have dominated .
Now Java is taking over , simply because it is easier to develop with .
The reason that Java can take over is because it is a general - purpose language with proven concepts .
My test for a language being general purpose is if you can write a high - performance compiler or database with it .
You can with Java .
Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : Bruce Tate
Posted on : February 20 2006 06:09 EST
in response to Steve Zara I 'm not here trolling about other technologies : -) , but it 's just too many folks on here that act is if Java is irreplaceable and the global IT backbone would collapse without it .
My post was merely for folks that say , I would n't write Enterprise Software in anything else .
Ilya
Well , what would you use for the core of any software system - the part that does the ' heavy lifting ' ?
The part that needs to be efficiently multi- threaded and truly high performance ?
Perl , Python , Ruby ?
Traditionally this has been the area where C , and then C++ have dominated .
Now Java is taking over , simply because it is easier to develop with .
The reason that Java can take over is because it is a general - purpose language with proven concepts .
My test for a language being general purpose is if you can write a high - performance compiler or database with it .
You can with Java .
I think this post is a pretty good indication of where we 've come .
So is it a good idea to write databases , middleware and applications in the same language ?
That 's the heart of the issue to me .
I 've decided that it 's not , after coding applications in Java for 10 years .
Most of Beyond Java , and the subsequent interviews were about Java as an applications language .
Most Java developers are definitely applications developers .
The SOA - type architectures will enable the heavy lifting and the light applications on top to be written in different languages .
I think this post is a pretty good indication of where we 've come .
So is it a good idea to write databases , middleware and applications in the same language ?
That 's the heart of the issue to me .
I 've decided that it 's not , after coding applications in Java for 10 years .
Most of Beyond Java , and the subsequent interviews were about Java as an applications language .
Most Java developers are definitely applications developers .
The SOA - type architectures will enable the heavy lifting and the light applications on top to be written in different languages .
Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : Karl Peterbauer
Posted on : February 20 2006 06:57 EST
in response to Bruce Tate I think this post is a pretty good indication of where we 've come .
So is it a good idea to write databases , middleware and applications in the same language ?
That 's the heart of the issue to me .
I 've decided that it 's not , after coding applications in Java for 10 years .
Most of Beyond Java , and the subsequent interviews were about Java as an applications language .
Most Java developers are definitely applications developers .
The SOA - type architectures will enable the heavy lifting and the light applications on top to be written in different languages .
I think this post is a pretty good indication why Bruce Tate 's arguments have come to a dead end : RoR is not designed as lightweight tier sitting on top of some SOA - type architecture .
RoR is simply " slapping a web UI around relational databases " .
I think this post is a pretty good indication why Bruce Tate 's arguments have come to a dead end : RoR is not designed as lightweight tier sitting on top of some SOA - type architecture .
RoR is simply " slapping a web UI around relational databases " .
Reply to this Reply to original
Simple is better or complex ?
Go to top ]
Posted by : Victor C .
Posted on : February 20 2006 09:36 EST
in response to Karl Peterbauer ... " slapping a web UI around relational databases " .
Which is more sophisticated ?
Simple , or Complex .
What say the unwashed masses ?
Scales ?
Maintain ?
Time to market ?
Looks better ( ex : negative space ) ?
.
V
ps :
It be simpler if vendors included Portlets in JEE , otherwise , I have to budget for i... i Planet ( glassfish ) or Tomcat and I have to integrate and explain why we are not using MasterPages and WebParts ... that are integrated .
Otherwise call it an EJB server .
There has to be something for non EJB apps .
Which is more sophisticated ?
Simple , or Complex .
What say the unwashed masses ?
Scales ?
Maintain ?
Time to market ?
Looks better ( ex : negative space ) ?.
Vps :
It be simpler if vendors included Portlets in JEE , otherwise , I have to budget for i... i Planet ( glassfish ) or Tomcat and I have to integrate and explain why we are not using MasterPages and WebParts ... that are integrated .
Otherwise call it an EJB server .
There has to be something for non EJB apps .
Reply to this Reply to original
Ruby on Rails on top of Component instead of DB Go to top ]
Posted by : Paul Beckford
Posted on : February 20 2006 14:01 EST
in response to Karl Brodowsky Even though RoR is designed to be running on top of a database , I do see a perspective of running on top of components communicated to using something like XML - RPC , Corba , Soap or whatever ( SOA ) .
In a way the database is nothing else than this , but we do n't see it like that , because databases are such an integral part of most applications .
I agree .
In reality very few " enterprise " components have been produced .
When EJB's and J2EE was first launched we were promised distributed enterprise wide components , there was even talk of a market in EJB components .
But mostly due to the difficulties in distribution most applications are merely presentation on top of a database .
I agree using " SOA " as component glue will merely result in presentation on top of SOAP .
Which something like Rails could tackle readily .
IMO
Sun lost all ambition when they decided to follow Microsoft down the " SOA " path , whatever happened to JINI ?
Conservatism , and trying to out market Microsoft , has lead to what can only be described as technological stagnation .
What surprises me is how everyone is getting so upset because someone dared to mention what many of use have been quitely thinking for a long time .
Paul .
I agree .
In reality very few " enterprise " components have been produced .
When EJB's and J2EE was first launched we were promised distributed enterprise wide components , there was even talk of a market in EJB components .
But mostly due to the difficulties in distribution most applications are merely presentation on top of a database .
I agree using " SOA " as component glue will merely result in presentation on top of SOAP .
Which something like Rails could tackle readily .
IMO
Sun lost all ambition when they decided to follow Microsoft down the " SOA " path , whatever happened to JINI ?
Conservatism , and trying to out market Microsoft , has lead to what can only be described as technological stagnation .
What surprises me is how everyone is getting so upset because someone dared to mention what many of use have been quitely thinking for a long time .
Paul .
Reply to this Reply to original
Simple is better or complex ?
Go to top ]
Posted by : Ilya Sterin
Posted on : February 21 2006 03:44 EST
in response to Victor C. ... " slapping a web UI around relational databases " .
Which is more sophisticated ?
Simple , or Complex .
What say the unwashed masses ?
Scales ?
Maintain ?
Time to market ?
Looks better ( ex : negative space ) ?.
Vps :
It be simpler if vendors included Portlets in JEE , otherwise , I have to budget for i... i Planet ( glassfish ) or Tomcat and I have to integrate and explain why we are not using MasterPages and WebParts ... that are integrated .
Otherwise call it an EJB server .
There has to be something for non EJB apps .
What ?
I 'm not trying to be rude , but what are you talking about ?
Ilya What ?
I 'm not trying to be rude , but what are you talking about ?
Ilya Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : Steve Zara
Posted on : February 20 2006 07:28 EST
in response to Bruce Tate I 'm not here trolling about other technologies : -) , but it 's just too many folks on here that act is if Java is irreplaceable and the global IT backbone would collapse without it .
My post was merely for folks that say , I would n't write Enterprise Software in anything else .
Ilya
Well , what would you use for the core of any software system - the part that does the ' heavy lifting ' ?
The part that needs to be efficiently multi- threaded and truly high performance ?
Perl , Python , Ruby ?
Traditionally this has been the area where C , and then C++ have dominated .
Now Java is taking over , simply because it is easier to develop with .
The reason that Java can take over is because it is a general - purpose language with proven concepts .
My test for a language being general purpose is if you can write a high - performance compiler or database with it .
You can with Java .
I think this post is a pretty good indication of where we 've come .
So is it a good idea to write databases , middleware and applications in the same language ?
That 's the heart of the issue to me .
I 've decided that it 's not , after coding applications in Java for 10 years .
Most of Beyond Java , and the subsequent interviews were about Java as an applications language .
Most Java developers are definitely applications developers .
The SOA - type architectures will enable the heavy lifting and the light applications on top to be written in different languages .
Firstly , you are missing the point of what I posted .
We were talking about ' the global IT backbone ' .
By that term I was assuming we meant more than the niche that is web applications or client - side software .
Secondly , simplu disagree .
I have , over decades , seen so many projects fail because the latest RAD approaches collapse when there is some ' heavy lifting ' required , which in my experience inevitably happens when a project grows above a certain size - when what starts as some lightweight interface over a database or other services grows into something more substantial .
I also find it is hard to predict which projects will grow in this fashion .
So , my view is that it is right to use a language that has the performance so that it can be used at all scales of development .
I have seen too many projects crash and burn because they did n't .
Firstly , you are missing the point of what I posted .
We were talking about ' the global IT backbone ' .
By that term I was assuming we meant more than the niche that is web applications or client - side software .
Secondly , simplu disagree .
I have , over , seen so many projects fail because the latest RAD approaches collapse when there is some ' heavy lifting ' required , which in my experience inevitably happens when a project grows above a certain size - when what starts as some lightweight interface over a database or other services grows into something more substantial .
I also find it is hard to predict which projects will grow in this fashion .
So , my view is that it is right to use a language that has the performance so that it can be used at all scales of development .
I have seen too many projects crash and burn because they did n't .
Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : Paul Beckford
Posted on : February 20 2006 08:57 EST
in response to Steve Zara
So , my view is that it is right to use a language that has the performance so that it can be used at all scales of development .
I have seen too many projects crash and burn because they did n't .
I agree with Bruce on this one .
Why use the same language that you use to write device drivers to build enterprise applications ?
It just does n't make sense .
In the long run different languages will be used for different things , trading performance and accessibility .
Martin Fowler has discussed this in his writings on DSL's and language work benches .
Croquet , which I ’ve mentioned before is also taking this approach .
In a sense it is an extension of what we are already doing .
I would guess that most Java VMs are written in C .
So why not use a dynamic domain specific business language to script together Java components ?
In Croquet they are experimenting with end user scripting using a language called TVML , scripting together Smalltalk objects ( components ) .
The Smalltalk objects make use of an underlying C/C++ OpenGL library for rendering .
As I said before one cap does n't necessarily need to fit all .
Paul .
I agree with Bruce on this one .
Why use the same language that you use to write device drivers to build enterprise applications ?
It just does n't make sense .
In the long run different languages will be used for different things , trading performance and accessibility .
Martin Fowler has discussed this in his writings on DSL's and language work benches .
Croquet , which I ’ve mentioned before is also taking this approach .
In a sense it is an extension of what we are already doing .
I would guess that most Java VMs are written in C .
So why not use a dynamic domain specific business language to script together Java components ?
In Croquet they are experimenting with end user scripting using a language called TVML , scripting together Smalltalk objects ( components ) .
The Smalltalk objects make use of an underlying C/C++ OpenGL library for rendering .
As I said before one cap does n't necessarily need to fit all .
Paul .
Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : Steve Zara
Posted on : February 20 2006 09:30 EST
in response to Paul Beckford I agree with Bruce on this one .
Why use the same language that you use to write device drivers to build enterprise applications ?
It just does n't make sense .
In the long run different languages will be used for different things , trading performance and accessibility .
I know this may sound like an extreme position , but I think it can make sense ( well , perhaps not device drivers , but certainly high - performance things like databases ) .
If a language is efficient enough to write such things , you have a guarantee that it will cope with whatever you throw at it .
You know that it will run well multi- threaded .
You know that it can efficiently handle memory .
So why not use a dynamic domain specific business language to script together Java components ?
Because I have so often seen the horrors than can result from this ; bad decisions can be made about where the dividing line should be between languages .
I know this may sound like an extreme position , but I think it can make sense ( well , perhaps not device drivers , but certainly high - performance things like databases ) .
If a language is efficient enough to write such things , you have a guarantee that it will cope with whatever you throw at it .
You know that it will run well multi- threaded .
You know that it can efficiently handle memory .
Because I have so often seen the horrors than can result from this ; bad decisions can be made about where the dividing line should be between languages .
Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : Paul Beckford
Posted on : February 20 2006 10:22 EST
in response to Steve Zara
So why not use a dynamic domain specific business language to script together Java components ?
Because I have so often seen the horrors than can result from this ; bad decisions can be made about where the dividing line should be between languages .
This is what I meant when I said nothing is certain .
I agree that this use to be the case , but times are changing .
For example the language workbench implementations Martin Fowler talks about that allow you to seamlessly move the dividing line .
In some situations the dividing line is clearer .
Spring makes use of this and provides the ability to " script " together components using XML .
So people using a three tier architecture can link together the tiers of their application in XML .
Now looking forward we will want to link together enterprise wide components ( actually we were promised this with EJB1.0 ... ) rather than just components within a single app .
What type of language will we need then ?
For sure it will need to be dynamic .
Paul .
This is what I meant when I said nothing is certain .
I agree that this use to be the case , but times are changing .
For example the language workbench implementations Martin Fowler talks about that allow you to seamlessly move the dividing line .
In some situations the dividing line is clearer .
Spring makes use of this and provides the ability to " script " together components using XML .
So people using a three tier architecture can link together the tiers of their application in XML .
Now looking forward we will want to link together enterprise wide components ( actually we were promised this with EJB1.0 ... ) rather than just components within a single app .
What type of language will we need then ?
For sure it will need to be dynamic .
Paul .
Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : David McCoy
Posted on : February 20 2006 11:31 EST
in response to Paul Beckford
So why not use a dynamic domain specific business language to script together Java components ?
Because I have so often seen the horrors than can result from this ; bad decisions can be made about where the dividing line should be between languages .
This is what I meant when I said nothing is certain .
I agree that this use to be the case , but times are changing .
For example the language workbench implementations Martin Fowler talks about that allow you to seamlessly move the dividing line .
In some situations the dividing line is clearer .
Spring makes use of this and provides the ability to " script " together components using XML .
So people using a three tier architecture can link together the tiers of their application in XML .
Now looking forward we will want to link together enterprise wide components ( actually we were promised this with EJB1.0 ... ) rather than just components within a single app .
What type of language will we need then ?
For sure it will need to be dynamic .
Paul .
I do n't believe that your analogy holds , because Spring does n't script together anything using XML or otherwise .
I do n't believe that your analogy holds , because Spring does n't script together anything using XML or otherwise .
Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : Paul Beckford
Posted on : February 20 2006 12:04 EST
in response to David McCoy I do n't believe that your analogy holds , because Spring does n't script together anything using XML or otherwise .
So why do they call it a bean factory ?
And why all that AOP style interceptor semantics ?
XML does n't look like a scripting language granted , but that is exactly what it is being used for .
Incidently EJB descriptors are used for a similar purpose .
In dynamic languages none of this " IoC " is needed .
Loose coupling and runtime binding come for free .
Paul .
So why do they call it afactory ?
And why all that AOP style interceptor semantics ?
XML does n't look like a scripting language granted , but that is exactly what it is being used for .
Incidently EJB descriptors are used for a similar purpose .
In dynamic languages none of this " IoC " is needed .
Loose coupling and runtime binding come for free .
Paul .
Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : David McCoy
Posted on : February 20 2006 14:12 EST
in response to Paul Beckford I do n't believe that your analogy holds , because Spring does n't script together anything using XML or otherwise .
So why do they call it a bean factory ?
And why all that AOP style interceptor semantics ?
XML does n't look like a scripting language granted , but that is exactly what it is being used for .
Incidently EJB descriptors are used for a similar purpose .
In dynamic languages none of this " IoC " is needed .
Loose coupling and runtime binding come for free .
Paul .
They do n't call it scripting .
AOP definitely has nothing to do with scripting .
No offense , but it does n't seem like you understand IOC , AOP , or Spring , which is why your analogy fails .
They do n't call it scripting .
AOP definitely has nothing to do with scripting .
No offense , but it does n't seem like you understand IOC , AOP , or Spring , which is why your analogy fails .
Reply to this Reply to original
Ruby will be dead before Java ...
Go to top ]
Posted by : Frank Bank
Posted on : February 20 2006 14:40 EST
in response to Paul Beckford
No offense , but it does n't seem like you understand IOC , AOP , or Spring , which is why your analogy fails .
No they do n't call it scripting ...
No offence but it does n't seem that you are capable of opening your mind and thinking for yourself :^)
The wife and I were watching Ellen DeGeneres standup on TV earlier this morning and she was talking about " just kidding " .
" I hope you did n't pay for that haircut .... just kidding "
" I do n't think you know the meaning of just kidding or we'd both be laughing "
" No offense , but ... "
The wife and I were watching Ellen DeGeneres standup on TV earlier this morning and she was talking about " just kidding " .
" I hope you did n't pay for that haircut .... just kidding " " I do n't think you know the meaning of just kidding or we'd both be laughing "
" No offense , but ... "
Reply to this Reply to original
I 'm out Go to top ]
Posted by : Paul Beckford
Posted on : February 20 2006 15:09 EST
in response to Paul Beckford Hi All ,
I 've partcipated in all three " beyond Java " discussions on TSS .
And they 've all gone the same way .
Now in response to the last " blind ignorant " comment - I could of dug up papers on IoC such as the PicoContainer work at ThoughtWorks and evidence of the link between scripting languages and IoC , but why bother ?
Why educate the wilfully ignorant ?
I think the main issues here are not technical , but have to do with people and their comfort zones .
So in conclusion here is what I 've learnt :
1 . If you want to use a dynamic language for Agile development anytime soon , forget the JVM or the CLR - use a native dynamic language along with a native VM .
2 . Sun gave up on the idea of technical excellence long ago , and are busy trying to beat Microsoft at it 's own game .
3 . The Java community are admiring their own navels and are n't interested in ideas from outside the Java world .
4. Because of 3 . the " next big thing " will not come from Java
5 . The " next big thing " will not come from the business sector either , due to their conservatism and the entrenchment of Java / J2EE and .NET ( which are pretty much the same thing ) .
6 . Look to other sectors like Academia for true innovation - just like the creation of the Internet and the World Wide Web in the past .
In this regard Croquet looks promising .
Eventually the business sector will catch up ... they always do .
Peace and Out
Paul .
Reply to this Reply to original
I 'm out Go to top ]
Posted by : David McCoy
Posted on : February 20 2006 22:14 EST
in response to Paul Beckford
Here are some examples of what 's been done by us in Spring
I 've got , for example , a junior developer who was able to take modify one piece of code that handles searching using Hibernates Query by example , query by criteria , and Spring 's convienience classes ALL without really understanding how it works simply by examining the existing code .
In a similar vein , I 've added caching support to one of our objects using AOP and the open source OSCache .
I wrote an interface that uses OSCache for this particular implentation and the caching is configured via Spring .
By using the put or get method on the interface contained in that inteceptor one can add caching to one of our Business Object interfaces all without understanding AOP , Spring , or even OSCache .
Also , a added a simple interceptor for profiling , in about 2 hrs , that prints for every Business object interface call the name of the object in question , method , execution time , arguments , and memory used before and after the call .
By adding this interceptor to the business object definition in our business.xml file , one can add this to any call , again , without fully understanding AOP , Spring , or even the profile interceptor itself .
The issue is that once a month an ROR article appears and eventually , someone says that you get all the ROR stuff with the excellent Java software available .
Usually , the doubters have never used the stuff , like Spring , that is mentioned .
Inevitably , it comes down to value add and whether or not Ruby adds it .
I do n't think it does .
We 've been hearing about scripting and dynamic languages replacing static ones for years and it has yet to happen .
So when healthy skepticism is offered , and worse , counter - examples , accusations of closed - mindeness abound .
Foolishness .
I submit that not only does ROR not offer any real innovation , but it does n't offer any real advantage beyond the current generation of software , like Spring , Hibernate , JDO , etc offers .
I further submit that as long as one can come close to matching ROR perceived dev speed , and still scale up to more complex task ( something that even ROR proponents say ROR cannot do ) ROR will fail to evolve beyond any niche tool that has advocates , but fails to garner any mainstream use .
Reply to this Reply to original
I 'm out Go to top ]
Posted by : Paul Beckford
Posted on : February 21 2006 00:43 EST
in response to David McCoy
Here are some examples of what 's been done by us in SpringI 've got , for example , a junior developer who was able to take modify one piece of code that handles searching using Hibernates Query by example , query by criteria , and Spring 's convienience classes ALL without really understanding how it works simply by examining the existing code .
In a similar vein , I 've added caching support to one of our objects using AOP and the open source OSCache .
I wrote an interface that uses OSCache for this particular implentation and the caching is configured via Spring .
By using the put or get method on the interface contained in that inteceptor one can add caching to one of our Business Object interfaces all without understanding AOP , Spring , or even OSCache .
Also , a added a simple interceptor for profiling , in about 2 hrs , that prints for every Business object interface call the name of the object in question , method , execution time , arguments , and memory used before and after the call .
By adding this interceptor to the business object definition in our business.xml file , one can add this to any call , again , without fully understanding AOP , Spring , or even the profile interceptor itself .
The issue is that once a month an ROR article appears and eventually , someone says that you get all the ROR stuff with the excellent Java software available .
Usually , the doubters have never used the stuff , like Spring , that is mentioned .
Inevitably , it comes down to value add and whether or not Ruby adds it .
I do n't think it does .
We 've been hearing about scripting and dynamic languages replacing static ones for years and it has yet to happen .
So when healthy skepticism is offered , and worse , counter - examples , accusations of closed - mindeness abound .
Foolishness .
I submit that not only does ROR not offer any real innovation , but it does n't offer any real advantage beyond the current generation of software , like Spring , Hibernate , JDO , etc offers .
I further submit that as long as one can come close to matching ROR perceived dev speed , and still scale up to more complex task ( something that even ROR proponents say ROR cannot do ) ROR will fail to evolve beyond any niche tool that has advocates , but fails to garner any mainstream use .
I said I was n't going to do this but a Single google search and what do I find : NanoContainer builds on top of PicoContainer the support for several scripting meta- languages ( XML , Groovy ,
Bsh , Jython and Rhyno ) , AOP , Web frameworks ( Struts and WebWork ) , Persistence ( Hibernate ) SOAP , JMX , and much more .
Straight on the PcoContainer website 's front page :
http://www.picocontainer.org/
This is what I mean by closed minds .
A massive rant on " what I am doing with Spring .
And he has n't even taken the time to look at the next most popuplar IoC framework in Java - never mind looking at other languages - never mnd realise that IoC containers are just not needed in dynamic languages etc ...
This is my point .
Blind allegiance to what some one else as correctly described as a proprietary technology ( Java ) .
Last person I heard ranting like this was a Microsoft VB geek .
The truth is that Sun and Microsoft are looking pretty similar these days .
Bruce they 'll never here you .
Just get on with saving your clients time and money ( that what they pay you for ) .
These lot have got their egos tied up in a programming language for heavens sake .
Now do you think the geek will have the decency to apologise ..?
Or even admit that he was wrong ..?
I doubt it .
Paul .
I said I was n't going to do this but a Single google search and what do I find : Straight on the PcoContainer website 's front page :
This is what I mean by .
A massive rant on " whatam doing with Spring .
And he has n't even taken the time to look at the next most popuplar IoC framework in Java - never mind looking at other languages - never mnd realise that IoC containers are just not needed in dynamic languages etc ... This is my point .
Blind allegiance to what some one else as correctly described as a proprietary technology ( Java ) .
Last person I heard ranting like this was a Microsoft VB geek .
The truth is that Sun and Microsoft are looking pretty similar these days .
Bruce they 'll never here you .
Just get on with saving your clients time and money ( that what they pay you for ) .
These lot have got their egos tied up in a programming language for heavens sake .
Now do you think the geek will have the decency to apologise ..?
Or even admit that he was wrong ..?
I doubt it .
Paul .
Reply to this Reply to original
I 'm out Go to top ]
Posted by : Bruce Tate
Posted on : February 21 2006 03:09 EST
in response to Paul Beckford Thanks , Paul .
Drop me an email some time .
In any industry , there are early adopters , pragmatics and skeptics / conservatives .
It 's a long wave .
People riding different parts of the wave can see vastly different things .
If you 're riding the crest of the wave as I am , and you 're concerned about a specialized niche as I am , you can really see a loss of momentum .
If you 're a pragmatic , you 're just starting to notice Rails , and only the front end of the pragmatics are even recognizing Rails or alternatives .
But if you are a skeptic / conservative , or if you are an early adopter / pragmatic in another space like mobile , Java is really just getting reved up for you .
It really is a massive wave .
So in many ways , the replies are understandable .
There are just so many unknowns out there .
The biggest question in my mind has been can any other wave accumulate enough mass to survive all of the noise ?
I think I have the answer for one niche , for one customer set ... but it 's a very important niche .
Reply to this Reply to original
I 'm out Go to top ]
Posted by : Jason Carreira
Posted on : February 21 2006 10:32 EST
in response to Bruce Tate Thanks , Paul .
Drop me an email some time .
In any industry , there are early adopters , pragmatics and skeptics / conservatives .
It 's a long wave .
People riding different parts of the wave can see vastly different things .
If you 're riding the crest of the wave as I am , and you 're concerned about a specialized niche as I am , you can really see a loss of momentum .
If you 're a pragmatic , you 're just starting to notice Rails , and only the front end of the pragmatics are even recognizing Rails or alternatives .
But if you are a skeptic / conservative , or if you are an early adopter / pragmatic in another space like mobile , Java is really just getting reved up for you .
It really is a massive wave .
So in many ways , the replies are understandable .
There are just so many unknowns out there .
The biggest question in my mind has been can any other wave accumulate enough mass to survive all of the noise ?
I think I have the answer for one niche , for one customer set ... but it 's a very important niche .
Bruce ,
This is the crap that pisses people off ...
" If you were as out ahead of the curve as I am you 'd understand , but since you 're stuck back in the pack ... "
Please .
Ca n't you accept that some of us , while understanding that Java is n't the be -all end - all and wo n't be the best tool forever , also think that RoR is a BAD IDEA , not merely for large enterprise applications , but also for smaller data - driven web apps ?
Some of us feel that hacking together your web app in less time is meaningless compared to the maintenance costs and extensibility to handle more and more features , including integration with other systems and scaling to much larger user - bases .
Just because you got stuck doing crappy little CRUD webapps and got bored , do n't shake your new shiny toy in our faces and say " See ! See !
It 's much cooler than the tools you 've been using ! " .
I 'm sure what you were doing WAS boring , but building distributed processing , JMS / Database 2 PC systems , and systems integration is sufficiently challenging for a lot of us that we do n't really need to try to do it on a platform that can't be deployed reliably .
Bruce , This is the crap that pisses people off ...
" If you were as out ahead of the curve as I am you 'd understand , but since you 're stuck back in the pack ... "
Please .
Ca n't you accept that some of us , while understanding that Java is n't the be -all end - all and wo n't be the best tool forever , also think that RoR is a BAD IDEA , not merely for large enterprise applications , but also for smaller data - driven web apps ?
Some of us feel that hacking together your web app in less time is meaningless compared to the maintenance costs and extensibility to handle more and more features , including integration with other systems and scaling to much larger user - bases .
Just because you got stuck doing crappy little CRUD webapps and got bored , do n't shake your new shiny toy in our faces and say " See ! See !
It 's much cooler than the tools you 've been using ! " .
I 'm sure what you were doing WAS boring , but building distributed processing , JMS / Database 2 PC systems , and systems integration is sufficiently challenging for a lot of us that we do n't really need to try to do it on a platform that can't be deployed reliably .
Reply to this Reply to original
Don´t blame - learn !!!
Go to top ]
Posted by : Andreas Andreakis
Posted on : February 21 2006 10:58 EST
in response to Jason Carreira
Thanks , Paul .
Drop me an email some time .
In any industry , there are early adopters , pragmatics and skeptics / conservatives .
It 's a long wave .
People riding different parts of the wave can see vastly different things .
If you 're riding the crest of the wave as I am , and you 're concerned about a specialized niche as I am , you can really see a loss of momentum .
If you 're a pragmatic , you 're just starting to notice Rails , and only the front end of the pragmatics are even recognizing Rails or alternatives .
But if you are a skeptic / conservative , or if you are an early adopter / pragmatic in another space like mobile , Java is really just getting reved up for you .
It really is a massive wave .
So in many ways , the replies are understandable .
There are just so many unknowns out there .
The biggest question in my mind has been can any other wave accumulate enough mass to survive all of the noise ?
I think I have the answer for one niche , for one customer set ... but it 's a very important niche .
Bruce ,
This is the crap that pisses people off ...
" If you were as out ahead of the curve as I am you 'd understand , but since you 're stuck back in the pack ... "
Please .
Ca n't you accept that some of us , while understanding that Java is n't the be -all end - all and wo n't be the best tool forever , also think that RoR is a BAD IDEA , not merely for large enterprise applications , but also for smaller data - driven web apps ?
Some of us feel that hacking together your web app in less time is meaningless compared to the maintenance costs and extensibility to handle more and more features , including integration with other systems and scaling to much larger user - bases .
Just because you got stuck doing crappy little CRUD webapps and got bored , do n't shake your new shiny toy in our faces and say " See ! See !
It 's much cooler than the tools you 've been using ! " .
I 'm sure what you were doing WAS boring , but building distributed processing , JMS / Database 2 PC systems , and systems integration is sufficiently challenging for a lot of us that we do n't really need to try to do it on a platform that can't be deployed reliably .
I understand full loyality to Java from the following people :
1 ) You work for SUN
2 ) You get paid from SUN to defend Java´s pride
3 ) Your business is tightly coupled on a continoued Java success - for instance you are a vendor and provide Service´s on Java based products .
4 ) Your heart pacemaker is controlled by a JVM and thus your health is based on Java .
If you dont find yourself in one of this categories the time has come to reboot your brain and reinit your " Language get_The_Best_Solution( Problem problem ) " Method ( notice : I´m using java syntax , Parameter is from type Problem , return value is Language )
cheers ,
Andreas
Like said , it is save to say that Java will not ( and maybe never ) disapear .
Also it will remain an leading choice for Enterprise Computing , like to descripted .
I understand full loyality to Java from the following people : 1) You work for SUN2 ) You get paid from SUN to defend Java´s pride3 )
Your business is tightly coupled on a continoued Java success - for instance you are a vendor and provide Service´s on Java based products .
4 ) Your heart pacemaker is controlled by a JVM and thus your health is based on Java .
If you dont find yourself in one of this categories the time has come to reboot your brain and reinit your " Language get_The_Best_Solution( Problem problem ) " Method ( notice : I´m using java syntax , Parameter is from type Problem , return value is Language ) cheers , AndreasLike said , it is save to say that Java will not ( and maybe never ) disapear .
Also it will remain an leading choice for Enterprise Computing , like to descripted .
Reply to this Reply to original
Don´t blame - learn !!!
Go to top ]
Posted by : Jason Carreira
Posted on : February 21 2006 12:25 EST
in response to Andreas Andreakis Bruce , This is the crap that pisses people off ...
" If you were as out ahead of the curve as I am you 'd understand , but since you 're stuck back in the pack ... "
Please .
Ca n't you accept that some of us , while understanding that Java is n't the be -all end - all and wo n't be the best tool forever , also think that RoR is a BAD IDEA , not merely for large enterprise applications , but also for smaller data - driven web apps ?
Some of us feel that hacking together your web app in less time is meaningless compared to the maintenance costs and extensibility to handle more and more features , including integration with other systems and scaling to much larger user - bases .
Just because you got stuck doing crappy little CRUD webapps and got bored , do n't shake your new shiny toy in our faces and say " See ! See !
It 's much cooler than the tools you 've been using ! " .
I 'm sure what you were doing WAS boring , but building distributed processing , JMS / Database 2 PC systems , and systems integration is sufficiently challenging for a lot of us that we do n't really need to try to do it on a platform that can't be deployed reliably .
I understand full loyality to Java from the following people : 1 ) You work for SUN2 ) You get paid from SUN to defend Java´s pride3 )
Your business is tightly coupled on a continoued Java success - for instance you are a vendor and provide Service´s on Java based products .
4 ) Your heart pacemaker is controlled by a JVM and thus your health is based on Java .
If you dont find yourself in one of this categories the time has come to reboot your brain and reinit your " Language get_The_Best_Solution( Problem problem ) " Method ( notice : I´m using java syntax , Parameter is from type Problem , return value is Language ) cheers , AndreasLike said , it is save to say that Java will not ( and maybe never ) disapear .
Also it will remain an leading choice for Enterprise Computing , like to descripted .
Did you read what I said ?
I 'm being pragmatic about what solves REAL PROBLEMS RIGHT NOW , not gawking at the shiny new toys .
I KNOW Java solves these problems right now .
Everything I 've read says Ruby DOES NOT SOLVE these problems right now ( especially since there does n't even seem to be a stable deployment environment for it ) .
In what way am I being a Java fan - boy ?
Did you read what I said ?
I 'm being pragmatic about what solves REAL PROBLEMS RIGHT NOW , not gawking at the shiny new toys .
I KNOW Java solves these problems right now .
Everything I 've read says Ruby DOES NOT SOLVE these problems right now ( especially since there does n't even seem to be a stable deployment environment for it ) .
In what way am I being a Java fan - boy ?
Reply to this Reply to original
Don´t blame - learn !!!
Go to top ]
Posted by : David McCoy
Posted on : February 21 2006 12:35 EST
in response to Jason Carreira Bruce , This is the crap that pisses people off ...
" If you were as out ahead of the curve as I am you 'd understand , but since you 're stuck back in the pack ... "
Please .
Ca n't you accept that some of us , while understanding that Java is n't the be -all end - all and wo n't be the best tool forever , also think that RoR is a BAD IDEA , not merely for large enterprise applications , but also for smaller data - driven web apps ?
Some of us feel that hacking together your web app in less time is meaningless compared to the maintenance costs and extensibility to handle more and more features , including integration with other systems and scaling to much larger user - bases .
Just because you got stuck doing crappy little CRUD webapps and got bored , do n't shake your new shiny toy in our faces and say " See ! See !
It 's much cooler than the tools you 've been using ! " .
I 'm sure what you were doing WAS boring , but building distributed processing , JMS / Database 2 PC systems , and systems integration is sufficiently challenging for a lot of us that we do n't really need to try to do it on a platform that can't be deployed reliably .
I understand full loyality to Java from the following people : 1 ) You work for SUN2 ) You get paid from SUN to defend Java´s pride3 )
Your business is tightly coupled on a continoued Java success - for instance you are a vendor and provide Service´s on Java based products .
4 ) Your heart pacemaker is controlled by a JVM and thus your health is based on Java .
If you dont find yourself in one of this categories the time has come to reboot your brain and reinit your " Language get_The_Best_Solution( Problem problem ) " Method ( notice : I´m using java syntax , Parameter is from type Problem , return value is Language ) cheers , AndreasLike said , it is save to say that Java will not ( and maybe never ) disapear .
Also it will remain an leading choice for Enterprise Computing , like to descripted .
Did you read what I said ?
I 'm being pragmatic about what solves REAL PROBLEMS RIGHT NOW , not gawking at the shiny new toys .
I KNOW Java solves these problems right now .
Everything I 've read says Ruby DOES NOT SOLVE these problems right now ( especially since there does n't even seem to be a stable deployment environment for it ) .
In what way am I being a Java fan - boy ?
Apparently , if you do n't agree that ROR is the next , best , cutting , edge thing , you are tacitly a fan - boy .
However , if you agree with Bruce , then you are admitted to the cutting edge club . ;-)
Apparently , if you do n't agree that ROR is the next , best , cutting , edge thing , you are tacitly a fan - boy .
However , if you agree with Bruce , then you are admitted to the cutting edge club . ;-)
Reply to this Reply to original
Don´t blame - learn !!!
Go to top ]
Posted by : Andreas Andreakis
Posted on : February 21 2006 12:38 EST
in response to Jason Carreira
Bruce ,
This is the crap that pisses people off ...
" If you were as out ahead of the curve as I am you 'd understand , but since you 're stuck back in the pack ... "
Please .
Ca n't you accept that some of us , while understanding that Java is n't the be -all end - all and wo n't be the best tool forever , also think that RoR is a BAD IDEA , not merely for large enterprise applications , but also for smaller data - driven web apps ?
I agree that my response , which you quoted was a little bit nasty , sorry for that :)
Read my forther responses on that , there I clearify what I mean .
Did you read what I said ?
I 'm being pragmatic about what solves REAL PROBLEMS RIGHT NOW , not gawking at the shiny new toys .
I KNOW Java solves these problems right now .
Everything I 've read says Ruby DOES NOT SOLVE these problems right now ( especially since there does n't even seem to be a stable deployment environment for it ) .
In what way am I being a Java fan - boy ?
I´ll be nasty again , because if you dont consider alternativ approaches you are a " fan-boy " .
Don´t get me wrong , I really like working with Java - in the correct usecases .
In many cases java is not # 1 choise .
Guess which language is mostly used for dynamic Pages out there .
Tip 1 ) it is not Java
Tip 2 ) it starts with " P " and ends with " P "
cheers ,
Andreas
My response was based on this sentence of yours : I agree that my response , which you quoted was a little bit nasty , sorry for that :) Read my forther responses on that , there I clearify what I mean .
I´ll be nasty again , because if you dont consider alternativ approaches you are a " fan-boy " .
Don´t get me wrong , I really like working with Java - in the correct usecases .
In many cases java is not # 1 choise .
Guess which language is mostly used for dynamic Pages out there .
Tip 1 ) it is not JavaTip 2 ) it starts with " P " and ends with " P" cheers , Andreas Reply to this Reply to original
Don´t blame - learn !!!
Go to top ]
Posted by : Steve Zara
Posted on : February 21 2006 12:46 EST
in response to Andreas Andreakis Guess which language is mostly used for dynamic Pages out there .
Tip 1 ) it is not JavaTip 2 ) it starts with " P " and ends with " P" cheers , Andreas I forgot to mention , that it is # 1 , because it is really simple to use .
Not in my experience ; not for substantial projects .
After occasionally struggling with obscure PHP code ( with no tools for compile - time checking or refactoring ) , and trying to deal with conflicts between different versions of Apache and PHP , ' easy ' is not a term I would use .
It is # 1 partly because it is easy to get started with , and easy for novices to use , and very easy for companies to host .
Not in my experience ; not for substantial projects .
After occasionally struggling with obscure PHP code ( with no tools for compile - time checking or refactoring ) , and trying to deal with conflicts between different versions of Apache and PHP , ' easy ' is not a term I would use .
It is # 1 partly because it is easy to get started with , and easy for novices to use , and very easy for companies to host .
Reply to this Reply to original
Don´t blame - learn !!!
Go to top ]
Posted by : Andreas Andreakis
Posted on : February 21 2006 13:05 EST
in response to Steve Zara Guess which language is mostly used for dynamic Pages out there .
Tip 1 ) it is not JavaTip 2 ) it starts with " P " and ends with " P" cheers , Andreas I forgot to mention , that it is # 1 , because it is really simple to use .
Not in my experience ; not for substantial projects .
After occasionally struggling with obscure PHP code ( with no tools for compile - time checking or refactoring ) , and trying to deal with conflicts between different versions of Apache and PHP , ' easy ' is not a term I would use .
It is # 1 partly because it is easy to get started with , and easy for novices to use , and very easy for companies to host .
Whether it is part of your experience or not PHP is # 1 in dynamic webabbs .
This this actually not a matter of experience or personal opinion .
This is a matter of fact .
cheers ,
Andreas
Whether it is part of your experience or not PHP is # 1 in dynamic webabbs .
This this actually not a matter of experience or personal opinion .
This is a matter of fact .
cheers , Andreas Reply to this Reply to original
Don´t blame - learn !!!
Go to top ]
Posted by : Jason Carreira
Posted on : February 21 2006 12:44 EST
in response to Andreas Andreakis
My response was based on this sentence of yours : Bruce , This is the crap that pisses people off ...
" If you were as out ahead of the curve as I am you 'd understand , but since you 're stuck back in the pack ... "
Please .
Ca n't you accept that some of us , while understanding that Java is n't the be -all end - all and wo n't be the best tool forever , also think that RoR is a BAD IDEA , not merely for large enterprise applications , but also for smaller data - driven web apps ?
I agree that my response , which you quoted was a little bit nasty , sorry for that :) Read my forther responses on that , there I clearify what I mean .
Did you read what I said ?
I 'm being pragmatic about what solves REAL PROBLEMS RIGHT NOW , not gawking at the shiny new toys .
I KNOW Java solves these problems right now .
Everything I 've read says Ruby DOES NOT SOLVE these problems right now ( especially since there does n't even seem to be a stable deployment environment for it ) .
In what way am I being a Java fan - boy ?
I´ll be nasty again , because if you dont consider alternativ approaches you are a " fan-boy " .
Don´t get me wrong , I really like working with Java - in the correct usecases .
In many cases java is not # 1 choise .
Guess which language is mostly used for dynamic Pages out there .
Tip 1 ) it is not JavaTip 2 ) it starts with " P " and ends with " P" cheers , Andreas
And how maintainable are those sites ?
If I need to add integration with other organizations via asynchronous messaging , how do I do it ?
There is definitely a disconnect here if you 're going to invoke PHP .
Sorry , I do n't build bulletin boards or blogs , although the best product I 've ever seen in that space ( Confluence from Atlassian ) is written in Java ( and even uses WebWork :-) ) .
And how maintainable are those sites ?
If I need to add integration with other organizations via asynchronous messaging , how do I do it ?
There is definitely a disconnect here if you 're going to invoke PHP .
Sorry , I do n't build bulletin boards or blogs , although the best product I 've ever seen in that space ( Confluence from Atlassian ) is written in Java ( and even uses WebWork :-) ) .
Reply to this Reply to original
Don´t blame - learn !!!
Go to top ]
Posted by : Andreas Andreakis
Posted on : February 21 2006 13:02 EST
in response to Jason Carreira
And how maintainable are those sites ?
If I need to add integration with other organizations via asynchronous messaging , how do I do it ?
There is definitely a disconnect here if you 're going to invoke PHP .
Sorry , I do n't build bulletin boards or blogs , although the best product I 've ever seen in that space ( Confluence from Atlassian ) is written in Java ( and even uses WebWork :-) ) .
Just to get to uptodate : PHP is # 4 @ Sourceforge about 13.000 projects .
Java has 18.000 .
There are also messaging projects available , but I cant tell you more on that .
Also if you think they dont meet your needs go for Java , PHP is your friend in specific cases not your enemie .
Also there a dozens of complex PHP app´s out there .
You can have a look yourself .
Just to get to uptodate : PHP is # 4 @ Sourceforge about 13.000 projects .
Java has 18.000 .
There are also messaging projects available , but I cant tell you more on that .
Also if you think they dont meet your needs go for Java , PHP is your friend in specific cases not your enemie .
Also there a dozens of complex PHP app´s out there .
You can have a look yourself .
Reply to this Reply to original
Business A - B - C
Go to top ]
Posted by : Andreas Andreakis
Posted on : February 21 2006 11:24 EST
in response to Jason Carreira
Thanks , Paul .
Drop me an email some time .
In any industry , there are early adopters , pragmatics and skeptics / conservatives .
It 's a long wave .
People riding different parts of the wave can see vastly different things .
If you 're riding the crest of the wave as I am , and you 're concerned about a specialized niche as I am , you can really see a loss of momentum .
If you 're a pragmatic , you 're just starting to notice Rails , and only the front end of the pragmatics are even recognizing Rails or alternatives .
But if you are a skeptic / conservative , or if you are an early adopter / pragmatic in another space like mobile , Java is really just getting reved up for you .
It really is a massive wave .
So in many ways , the replies are understandable .
There are just so many unknowns out there .
The biggest question in my mind has been can any other wave accumulate enough mass to survive all of the noise ?
I think I have the answer for one niche , for one customer set ... but it 's a very important niche .
Bruce ,
This is the crap that pisses people off ...
" If you were as out ahead of the curve as I am you 'd understand , but since you 're stuck back in the pack ... "
Please .
Ca n't you accept that some of us , while understanding that Java is n't the be -all end - all and wo n't be the best tool forever , also think that RoR is a BAD IDEA , not merely for large enterprise applications , but also for smaller data - driven web apps ?
Some of us feel that hacking together your web app in less time is meaningless compared to the maintenance costs and extensibility to handle more and more features , including integration with other systems and scaling to much larger user - bases .
Just because you got stuck doing crappy little CRUD webapps and got bored , do n't shake your new shiny toy in our faces and say " See ! See !
It 's much cooler than the tools you 've been using ! " .
I 'm sure what you were doing WAS boring , but building distributed processing , JMS / Database 2 PC systems , and systems integration is sufficiently challenging for a lot of us that we do n't really need to try to do it on a platform that can't be deployed reliably .
Business is driven by requirements , not by illusions .
You will hardly find customers , who are ready to pay money for the case their webapp " would " have visitors like Amazon / ebay .
If that is about to happen , you will be reconsulted to upgrade the system - be happy .
If someones is about to buy a car , you will never be able to sell him a space shuttle , for the case he would like to fly to the Moon .
Remeber : go for simplicity , the simplest solution is the b
Programming Considered Harmful Erann Gat
Positition paper presented at the Feyerabend Workshop , Oopsla 2001 Welcome , Reddit readers !
Please note that this paper was written specifically to spark discussion in a workshop focused on " reinventing computing . "
Its content should be taken with a small grain of salt .
Where we are
On this dark horizon there are some significant beacons of hope .
The Internet somehow managed to grow into a mass - market phenomenon without any corporations gaining a significant measure of control over it ( yet ) .
Linux and Perl have had perceptible impacts on the computing landscape .
And while I would not hold up Perl as a shining example of what computing ought to be , it does demonstrate that it is possible for some individual 's vision ( or some small group of individuals ' vision ) of what computing ought to be ( or what some aspect of it ought to be ) to succeed .
Nonetheless , none of these efforts address what I see as the fundamental problem , which the wide gulf that separates programmers and users .
As long as this gulf exists life will be miserable .
The reason is simple : the money comes from users , so the users ' desires trump the programmers ' .
Unfortunately , the producers of shoddy software have managed to hoodwink users into believing that software in * inherently * unreliable and brittle .
Having to reboot your machine three times a day is like getting the oil changed on your car : annoying , but necessary maintenance .
In such a world one has only three choices : either join the producers of shoddy software , become a consumer of shoddy software , or find a way to make a living that does n't involve computers .
It may be that producing good software is just so much harder than producing shoddy software that the market has made a rational decision in opting for shoddy software because good software would cost so much more .
In fact , the opposite is true : good software is almost always cheaper than shoddy software .
For example , Linux , which is vastly more reliable than Windows , is free .
Why does n't the market flock to it ?
Because Linux ( and unix in general ) appeals to programmers , not users .
Only people on the programmer side of the programmer - user divide understand enough about software to recognize the advantages of Linux .
But these people do n't drive the market , the users do .
There have been efforts in the past to " bring programming to the masses " ( e.g. Logo ) that have failed , prompting many to conclude that programming is just inherently difficult , and it is this inherent difficulty that leads to the programmer - user divide .
Certainly some aspects of programming are difficult .
It is probably unreasonable to expect the average user to grok the Y combinator .
On the other hand , there have been some accidental successes at bringing programming to the masses .
HTML , for example , is a programming language ( not a general - purpose language to be sure , but a programming language nonetheless ) that has proven accessible to many non-programmers , despite ( or perhaps because of ) not having been designed for that purpose .
Where we should be
How we got here
Solving a math problem is an activity with a distinctive structure .
For example , parts of the process are mechanizable and can be performed by a machine .
Moreover , it is not necessary to build a new machine for each math problem one wishes to solve .
It is possible to build a universal machine that can in principle solve any solvable math problem ( for some suitable definition of solvable ) .
Another feature of solving math problems is that at some point the process generates a * result * , at which point the process * ends * .
The economic value of solving math problems generally lies in the result , and not in the process .
( There are exceptions , such as when one is solving math problems for entertainment . )
It turns out that the sort of machines one ends up building to solve math problems is also good for other things , like editing documents or playing video games .
The structure of these activities is fundamentally different than the structure of math problem solving .
The economic value of video game playing or document editing lies in the process , not the result .
In the case of video game playing there is no result .
In the case of document processing there is arguably a result ( the document ) but the value of computer assisted document processing lies in the fact that the process of creating the document is more efficient using a computer than using other tools like typewriters and carbon paper .
The computer contributes little to the result , the content of the document ( the exception being things like spelling correction , and even there it is not clear that the computer is making a net contribution ) .
The problem is that the methods we have developed for creating software , while they work reasonably well for results - oriented computations , do n't work nearly as well for process - oriented ones .
The fundamental problem is that our methods make an unwarranted assumption , namely , that the process of creating software , like the process of computing , * ends * and generates a * result * called a * program * .
The fact that the parts of the software creation process itself can be couched as a math problem tends to reinforce this view .
How to get there
There are existing systems that take tentative steps towards a program - free world .
Users of Lisp and Smalltalk create software by " interacting with an environment " rather than " writing a program . "
Labview users create software by dragging and dropping graphical icons .
The concept of " a Lisp program " or " a Labview program " is not so crisply defined as " a C program . "
But I think we need to go much further than just putting a graphical or interactive window dressing on business - as - usual .
" Program " manifests itself not only in the creation of software but also , and much more significantly , in its delivery .
Delivering software is nowadays synonymous with delivering executable code , and more often than not , delivering a complete self - contained application .
Programmers are trained to believe that getting the algorithm to work is not enough .
You have to put the user interface on it before the program is " done " .
As a result , an enormous amount of programmer time ( I conjecture that it is actually a majority of programmer 's time , though I do n't have any data ) is wasted continually and laboriously reinventing the same things over and over again : window - based UI 's and ( bad ) command - line parsers .
It does n't have to be this way .
Lisp programmers , for example , rarely write command line parsers because they can simply use S - expressions and use the Lisp reader to parse them .
Moreover , Lisp programmers rarely have to learn new command line syntaxes for the same reason .
S- expressions are a universal command - line syntax .
Everything can be expressed as an S - expression .
Contrast this state of affairs with the unix command line syntax ( or lack thereof ) .
Because there is no universal syntax , the unix world is a Babel of dozens of different syntactic conventions .
For example , sometimes the ' -' sign is an operator ( subtraction ) , sometimes it is a keyword indicator ( the conventional command syntax ) , sometimes it indicates a function call ( in conditionals in some shells ) , sometimes it denotes a range ( e.g. in some regular expression syntaxes ) , etc. etc. etc .
In lisp ' -' has no special syntactic meaning .
It is merely a constituent character like the letters of the alphabet .
( NOTE : S - expressions have been around long enough that it is clear that they will not bring about the synthesis I seek .
I cite them merely as an existence proof that vast simplification of the current state of affairs is possible . )
The situation on the user side of things is not much different .
Every application has a different set of user interface conventions .
Things have gotten so complicated that people have started to take it for granted that they have to be " trained " to use a computer .
Again , it does n't have to be this way .
In the early days of the Macintosh there were programs that required no training ( and no documentation ! ) to use .
Today 's applications require training because they have more features than MacDraw .
Users have been conditioned to think that features are a good thing .
A spreadsheet that has a spelling checker seems better than a spreadsheet that does n't .
I disagree .
A spreadsheet should n't * have * a spelling checker .
It should be able to somehow * interface * to a spelling checker , but I should be able to use that * same * spelling checker to check the spelling in the documents that I edit using my word processor , which should n't * have * a spelling checker either .
For that matter , I should be able to use my word processor to edit the text inside a cell of my spreadsheet .
I should be able to use my spreadsheet to update the numbers in my word processor .
( Microsoft OLE actually lets you do some of these sorts of things , but the granularity is much coarser than what I envision . )
So , to sum up : today we live in a world where software is organized as different kinds of programs .
There are operating systems , applications , middleware , compilers , but they are all programs .
They tend to be big and encompass a lot of functionality , and making two of them work together to perform a task neither one can do alone is often a major chore .
Programs are hard to write * and * hard to use , and the skills required to create a program are different from the skills required to use one .
More details on where we should be
Creating software ( which is the same thing as " using a computer " ) consists of assembling modules to do the things you want to do .
For example , one can take a module for a simple but inefficient compiler and connect it to a module that performs a certain class of optimization to obtain a more efficient compiler .
Of course , what is called a compiler in my world is a different beast than what is called a compiler in the real world .
They both produce machine code as output , but in my world the input to a compiler is not a programming language .
( There are no programming languages because there are no programs . )
There are various ways of specifying the behavior of modules , some of which are textual , but the " parsers " for these are of course modules as well and are therefore interchangeable .
( This is very similar to Charles Simonyi 's ideas for intentional programming , though Simonyi still wants to use these techniques for generating programs . )
One of the big conceptual differences between manipulating modules and writing programs is in the relationship between size and generality .
Small programs ( in terms of source code size ) tend to run faster than larger ones , and have less capability .
By contrast , a " small " module ( that is , a module with a small amount of the human input , the modular equivalent of " source code " ) tends to run slow but have a lot of capability .
In order to produce a module that runs fast you have to give the module compiler additional information , like type declarations .
Engineering effort when writing programs tends to center on adding features and generality .
By contrast , engineering effort in module design focuses on * removing * features and generality in order to gain efficiency .
Thus , in the programming world , by default you get fast programs that do n't work well .
In the module world by default you get slower programs that do work well .
By and large the fact that modules run less efficiently than programs is n't noticeable , since machines are so fast .
But what is noticeable is that people have become accustomed to software that is robust and easy to understand .
If someone overoptimizes a module by removing a necessary feature , computer users reject that module as unacceptable .
Likewise , if someone produces a module that has too many features and is therefore too complex that module also fails .
A few other common concepts have gone by the wayside .
For example , there are no more " files " .
Every interaction one has with a computer changes the state of some module , and by default modules know how to render themselves non-volatile by storing themselves in what we would call a database .
By default , modules come with sophisticated access control , authentication , and revision control functionality ( implemented by other modules ) .
Thus , a given object knows who created it , who owns it , who is allowed to access it , who is allowed to modify it , and how to back out changes .
Of course , it is possible to create modules without these capabilities , which would give you something close to what we would call an " in-memory object " .
( One could also make a module that behaved like a " file " by removing the authentication and revision control features , but you'd be considered a little backward if you did that . )
Every parent wants their child to have the best in life .
But would this extend to picking the best genes for them ?
To date , genetic technology has only been used to treat serious disease in children .
But as ways are developed to manipulate our DNA , there are those who think that parents will inevitably want to choose their children 's genes , and create ' designer babies ' .
A designer baby today
Philippa Handyside 's son Ruiaridh is a genetically selected baby .
Some might call him a designer baby .
But Philippa was n't aiming to create a perfect child and there is nothing unusual about her child 's genes .
Genetic technology seemed the only way she could have a baby at all .
Philippa had a problem with her DNA .
It did n't affect her health , but it meant that most of her eggs did n't carry all the genes needed for a baby to grow healthily .
The result was that each time she became pregnant , she miscarried .
Doctors suggested that Philippa try a technique called pre-implantation genetic diagnosis ( PGD ) .
Using PGD scientists can screen embryos outside the womb , long before they develop into babies .
They can select just those embryos that carry healthy genes .
This ensures the baby is free from genetic abnormalities .
Ruiaridh might have grown from a specially selected embryo , but he 's not really a designer baby at all .
The embryo was created from one of Philippa 's eggs and her husband 's sperm , just as in IVF .
His genes have not been altered , or enhanced in any way .
The doctors simply chose an embryo that did n't carry Philippa 's genetic disorder .
It would actually be very difficult to make a true designer baby using PGD .
Today , it can only be used to look at one or two genes at a time .
On the other hand , most character traits we might want to choose – anything from height to intelligence – are influenced by a whole range of genes .
What 's more , there is no way of altering the genes inside an embryo using PGD .
If you do n't carry the genes to be intelligent , sporty or good - looking , then there 's no way any of your embryos will either .
To have a real designer baby , we 'd need to be able to choose any genes we wanted and insert them into our children .
Inserting new genes
In 1998 Dr French Anderson put forward a radical proposal .
He thought he would soon be able to insert new genes into babies in the womb .
The idea was to treat genetic diseases caused by a single damaged gene by inserting a new , healthy gene into a foetus 's cells .
French Anderson had already used this technique – called gene therapy – in children with faulty white blood cells , with some success .
But the cells with healthy genes would eventually die , so the patients would have to have the procedure all over again .
French Anderson wanted to try gene therapy in the womb because then he could get the healthy genes into special blood cells called stem cells .
These cells grow all the blood cells in the body .
If the healthy gene could be injected into the stem cells , then the patient 's body would produce new white blood cells with healthy genes on its own .
In short , they would be cured .
But for all Anderson 's plans , this technique has never been used on human babies in the womb .
There turned out to be problems with gene therapy .
In 1999 an 18 - year - old died during a gene therapy trial , and there have been cases of children developing leukaemia after gene therapy treatment .
For now , using it on babies in the womb is far too risky .
A human clone : the ultimate designer baby
There is however potentially another way to insert genes into an embryo long before birth – cloning .
No scientific discovery has created as much hysteria as the cloning of Dolly the sheep .
She was the first mammal cloned from the DNA of an adult cell .
It was a process that brought human cloning one step closer .
Shortly after Dolly , Polly was born .
She was n't just a clone .
A human gene had been added early on in the cloning process .
She was a true , genetically modified , " designer sheep " .
Since Polly , there has been a flurry of claims that humans have been , or soon will be , cloned .
But no one has yet produced evidence that a human clone has been created .
Most serious scientists wo n't even consider the idea of cloning a human .
The procedure is not very effective .
Less than 10 per cent of non-human cloning attempts are successful .
And many of the pregnancies result in miscarriage or deformities .
It is a procedure that is simply too dangerous to use to produce a human baby .
But cloning technology is being used on human eggs .
Scientists from Newcastle University and the Newcastle Fertility Centre are using cloning to create stem cells .
The research has only just begun , but the ultimate aim is to create cloned stem cells from the DNA of a patient with a degenerative disease .
These cells could then be turned into whatever types of cells are needed to treat their damaged organs .
It could one day lead to cures for diabetes , Alzheimer 's or heart disease .
There will always be a risk that genetic technology will be hijacked to create designer children .
But for now , the technical difficulties make it unlikely anyone will be able to create a true designer baby in the near future .
Back to top Back to the Horizon homepage
By Jo Twist
BBC News technology reporter
Qing Xu Wei earns a real - life living in China looking after player characters
Enlarge Image
Millions around the world play , meet up , battle , buy and sell in online games and virtual worlds , such as Second Life and World of Warcraft .
But to many , these virtual goings - on can be a total mystery .
Armed with his lens , photo journalist Robbie Cooper has been facing up to gamers , revealing their intricate lives and identities to the rest of the world .
Last year , his Alter Egos exhibition in London showed off the people behind the avatars - their virtual representations .
It was a fascinating and comforting peek into the very ordinary and familiar faces of gamers and virtual worlders .
This year , he has cast his lens further afield into China and Korea to get the stories behind the avatars .
" I wanted to build on what I had done before and get more cultural variety and more personal variety , " he told the BBC News website .
Part of life
" I wanted to see people who use female avatars , women who use male avatars , and also people who earn their living from doing this - from buying and selling virtual goods , or creating programs to operate people 's characters . "
One player he met in the virtual world , Second Life , earns $ 70,000 a year creating female avatar clothing , he says .
Another player , Mark ( aka Marcos Fonzarelli in Second Life ) has turned himself into a " robot tailor " , designing robot costumes that characters can wear .
Admittedly , it is a niche market , says Mark , but he still earns $ 250 a month .
According to the robot tailor , the real money is in the female clothing market .
Mr Cooper says that makes sense when one considers the hugely lucrative beauty and clothing market in the physical world .
It seems natural that the same kinds of rules and practices that occur in physical life will happen in virtual worlds too .
That became evident when residents were urged to donate to the Katrina Hurricane aid effort , via the game .
A virtual memorial with candles was even created .
" We live in a virtual world anyway , " says Mr Cooper .
" Democracy is virtual , politics is virtual ; all this stuff and information we get in the newspaper - a lot of it is public relations stuff . "
When virtual turns real
But Mr Cooper 's pictures show that those boundaries between the virtual and the " real " are blurring in other parts of the world , particularly in Asia .
The photos captured the fascinating and largely unseen world of workers in China and Korea who earn their keep by looking after people 's characters in games while they are at work , or asleep .
A commodity is a commodity .
If it is worth something , people are going to work hard to make the money .
In China , there is matter of fact attitude about it
Robbie Cooper
The programs he creates runs on seven computers , each churning out power points so that gamers can get their characters up to a certain strength and status .
" From their point of view it is understandable .
When a new game comes out , do you want to start at the bottom or have someone do that for you to get to level at which it is fun to play ? " he explains .
One shot shows what , at first glance , might be mistaken for a virtual room from within a game .
With newspapers as wallpaper , posters of fantasy figures , and scruffy bedding , it is in fact a room in a net cafe in Tianjin , China .
It is used by employees who work for a dollar a day levelling up player 's characters .
Up to 30 will work for 16 hours , using the room to sleep in shifts .
Dark economics ?
To Chinese gamers , it does not seem unusual that there would be people working on every level of the economic food chain , says Mr Cooper .
The gamers there , he added , had reams of stories about in - game cheating and stolen accounts .
Buying and selling gaming items such as imaginary weapons is a booming business on the web .
The internet games section of Ebay saw more than $ 9 m ( £ 5 m ) in trades in 2003 alone .
" A commodity is a commodity .
If it is worth something , people are going to work hard to make the money .
In China , there is matter of fact attitude about it , " he says .
A room in a Chinese net cafe used by employees who work and sleep in shifts
Enlarge Image
This kind of criminal activity which happens as a result of events occurring in a game could become more common .
China has no laws to deal with the theft of virtual property .
But in South Korea , where gaming is treated as a mainstream sport , there is a police unit that investigates in - game crime .
According to Mr Cooper , this shows how seriously gaming is being taken , especially when real - life money and value plays a part .
" A lot of people I met did not have as much sentiment about the games as they do in the West .
In China you do what you have to do to get by , " he explains .
But there is more to " value " in game playing than just economics , says Mr Cooper .
" This whole thing is about value and if people are willing to pay money for something , it has some kind of value to them .
Value is more than money ; it is emotional value , time , and work . "
When gamers find emotional value and a sense of accomplishment through online games and virtual worlds , that can sometimes be just as worthy .
Mr Cooper 's most recent photos will be on show at a PlayStation 2 supported exhibition tour starting 9 November in Amsterdam .
Favicon Icon Drawing Program Online Free
Drawing Area Zoom : Close Normal Large Drawing Colors
Hold down CTRL
Hold down ALT
Transparent - Hold down SHIFT Generate Icon
Preview : IFrame support required Color Pallete
Draw your own favicon or icon online for free using this entirely web - based , non-Java icon generator .
All you need is a modern web browser like Firefox .
The tool creates a 16x16 pixel icon in 16 colors with optional transparency .
You can customize the color pallete by typing the color code in the color pallete text boxes .
To draw , hold down one of CTRL , ALT , or SHIFT keys on your keyboard and move the mouse over the drawing area .
Do not press any mouse buttons while you are drawing .
Hold down the SHIFT key to make areas transparent .
Here is what the buttons do :
Select - Choose the color as the primary CTRL drawing color
Swap Colors -
Swap the CTRL and ALT drawing colors
Reset Colors - Reset all color codes to defaults
Clear Icon -
Erase the drawing and fill it with the ALT drawing color
Preview Icon -
View the icon in the preview box
Download Icon -
Send the favicon.ico to your browser
Favicons are the small thumbnail images that appear in your web browser when you visit a website .
The icons typically appear in the address bar and next to bookmarks .
To install a favicon on your own website , copy the favicon .ico to the root folder of your web server .
Sorry , but you can not save the icons online or load existing icons .
Instead , click the Generate Icon button to save the icon to your hard disk .
The icons you generate are not recorded anywhere .
Carbon nanotubes could help release and hold electrical energy , for potential use in everything from microchips to hybrid cars , experts told UPI 's Nano World .
The nanotube devices are known as capacitors .
While a battery stores compounds known as electrochemicals , a capacitor is made of a pair of electrodes separated by an insulator that each stores an opposite charge .
Batteries release energy by reacting electrochemicals together , while capacitors do so when they are hooked into circuits .
While capacitors might not be capable of storing as much energy as batteries of the same size , they could be much better at delivering more energy over a short time , explained researcher Gehan Amaratunga , an electronic engineer at Cambridge University in Britain .
Amaratunga and his colleagues have developed nanoscale capacitors made from multi-walled carbon tubes roughly 70 nanometers or billionths of a meter wide .
These nanotubes were grown vertically from nickel catalyst dots on niobium films .
The scientists went on to cover this nanotube forest and its niobium floor with a silicon - nitride layer and then an aluminum film .
The resulting capacitor is made from niobium and aluminum electrodes separated by an insulating silicon - nitride layer and carbon nanotubes .
The nanotubes dramatically boost the amount of surface , and thus electrical charge , that each metal electrode can possess .
The potential for smaller and more powerful capacitors might prove crucial in developing microchips with ever denser circuitry , Amaratunga said , which need high power " in the minimum area possible . "
Developing the kind of nanoscale capacitors needed for such ultra - dense circuitry has until now proven very complicated or unreliable .
Moreover , such nanoscale capacitors might help improve the development of compact and cost effective supercapacitors , which has direct bearing on " electric or hybrid electric vehicles such as the Toyota Prius , " Amaratunga said .
These supercapacitors could help reduce the amount of battery weight these vehicles carry , thus improving their fuel consumption or performance or both , he explained .
The researchers are currently pursuing supercapacitors for portable electronics " such as PDAs , where the optimization of battery weight and lifetime remains a significant issue , " Amaratunga added .
He and his colleagues published their findings in the journal Applied Physics Letters .
The nanoscale capacitors might also serve in advanced memory chips , said Manish Chhowalla , a materials scientist at Rutgers University in Piscataway , N.J. , who did not participate in this study .
He noted that nanocapacitor conductance was high when they stored charge and low when they did not , which could serve as the equivalent of zeroes and ones " that are the basis of any memory device . "
The advantage nanotube capacitors might have over competing memory storage methods is the fact that they take up most of their space vertically , allowing more of them to be packed together onto a surface .
In the future , Amaratunga hopes to move away from electron beam lithography , their current method of placing the nickel catalyst dots on the niobium films , to other techniques more viable for larger surfaces .
He anticipated it would take six to eight years before their nanoscale capacitors are use in products .
Their work is sponsored by Samsung , who " will guide the commercialization of the research , " Amaratunga said .
Copyright 2006 by United Press International
By Daniel Sandford
BBC News , Matera , Italy
A cave city , abandoned in the 1950s , has become the base for several high - technology companies .
As you arrive in Matera by car , it looks like many other Italian cities in the poor south - slightly scruffy , but with a lively feel .
It is only when you drive off the plateau where the new town was built , into the old town clinging to the side of a valley , that you realise it is actually an extraordinary place .
Carving out a future : Modern Matera ( pic : Unesco / M.Modoveanu )
The historic area known as the " Sassi " ( the stones ) is a cave city .
Some dwellings are little more than caves with a door on the front .
Others have elaborate fronts , hiding the cave quarters behind .
In the 1950s Matera was a slum city .
Tens of thousands of people lived in the Sassi in unhygienic troglodyte conditions , and malaria was prevalent .
The prime minister at the time declared it was " Italy 's shame " .
The solution was to evict everyone from the old town and build shiny new blocks into which the population moved happily .
The Sassi were abandoned completely and left empty .
Hi-tech future
Now the empty caves are coming back to life .
We found large computer servers , with their lights blinking , tucked away in cave rooms once occupied by people and animals .
A call centre company called Datacontact has taken over a whole complex .
Their computers are in one cave , the people answering calls are in others .
The Datacontact call centre where 500 people work is now the third - biggest employer in Matera .
A software house has also been operating in the caves for several years .
The Sassi of Matera are now a Unesco World Heritage Site .
Pietro Laureano , the architect who led the rebirth of the caves , is enthusiastic about the arrival of the hi-tech companies .
" Sassi de Matera is a prehistoric town .
It is the future of technology and it's a town which can be linked to the whole world .
It is very interesting to see the city go from Stone Age to the future age , " he said .
Matera is also a fast - developing tourist centre , with atmospheric hotels and restaurants opening in the caves .
But tourism is seasonal , and the Sassi might not be fashionable forever .
The people of Matera hope the servers blinking in the caves will be the best answer to their long - term unemployment problems .
Posted by Red in A sad health update on 2019-07-02 11:31:04
And this morning 's total lack of progress :
Here we go again .
Tired of this shit does n't even come close .
Receptionist rang this morning to say our notes were on the system as of then - when they 'd told us YESTERDAY MORNING they'd be on for the evening call !!
So if the GP * had * bothered to call , he would n't have our notes .
Receptionist was unaware GP had n't called us .
She called back saying the head dr had put a note on the system telling us to go through ( get treatment from ) dr Wrigley - that 's the **** that wrote I was " housebound due to anxiety " about severe ME , & who said for 6 months he was looking for an ME specialist , then gave me a number for phone CBT .
So ... no . We 'd already told the head GP allllll this , we * still * have a c ...
Posted by Red in A sad health update on 2019-07-02 11:27:17
Copied from instagram , a post from last night - I 've tried to edit out all curse words : I am SO ANGRY .
We both are .
The head GP did n't ring , did he ?
* rage screams *
Lyle phoned the surgery this morning to check the call was happening & notes were on the system ( they were n't , staff then promised they would be by 5.30 pm ) .
At 5.40 pm Lyle rang the surgery , double checking we were still getting called ( entirely because they 're useless & we do n't trust them ) .
Receptionist assured us we were definitely getting called , between then & 7.30 pm . .
Since then we have done NOTHING but anxiously review our notes , goals , & wait for the phonecall ... and he DIDN'T RING .
Honestly , angry does n't even come close - fuming , tearful , terrified ... .
It is ...
Posted by LynnW in watch this space on 2019-06 - 29 20:52:56
Kate , That Is Wonderful !!!!
Posted by Kateb in A sad health update on 2019-06 - 26 22:33:49
Sounds like you 're getting there slowly - hopefully they 'll take you seriously and investigate and not fob you off .
Keep in contact with PALS and keep up the good fight !
Posted by Red in A sad health update on 2019-06 - 25 13:31:26
Hey all !
I know Lyle has done a fantastic job of keeping this thread up to date , & thank you for the support .
Here are some measurements we got today ( CXA , Grabb - Oakes & Harrison ) that are used to indicate CCI & spinal abnormalities .
I hit 3/3 .
This is particularly awful knowing that this was in JANUARY 2018 !
That 's ... terrifying
But this is more arsenal to fight drs , there 's simply no way they can brush this off or continue to petulantly blame MH - they * must * listen & DO something now .
We 're going to print these out & drop them off at the surgery with an explanation of what they mean .
Hopefully the seemingly good dr will look at them before the telephone appt next Monday .
And hopefully this will give him incentive to rush a ref ...
Posted by Edge in A sad health update on 2019-06 - 24 21:04:46
Thank you for your help Kate , it is really appreciated .
Dally has found from the CCI group the names of the private hospitals that do upright MRIs , so we will most likely contact them , also .
Makes sense to get the ball rolling and know what the price would be if needed .
We had some really good news today .
Firstly I called PALS and was given advice when calling the surgery back , which readily helped .
We have a phone appointment with the good GP ( who is away for several months ) next Monday , so will at least be able to speak to a doctor who we know will listen and seems to actually want to help .
Secondly today I phoned up the hospital that did Dally 's brain MRI , January 2018 .
We were never given the results just assured by a GP they wer ...
Posted by Kateb in A sad health update on 2019-06 - 23 18:56:54
Hi Lyle / Dally , that is such good news about Finlay - you could n't have wished for better and I hope it works out and they are able to take him .
You 've put so much effort into training him and he in return has worked so hard with you he deserves this new family .
I did think that Kasper was probably too nervous for walk my doggy or whatever it 's called , but it was just a thought if you get to desperation point .
I spoke to my friend at work whose husband is a Consultant Radiologist .
I explained about the upright CT and she 's going to ask him if he knows of anywhere that has one .
She 's pretty sure the NHS do n't - unfortunately as much as we all love the NHS it really is only geared up for the majority and anyone with a rare condition isn ...
Posted by Edge in A sad health update on 2019-06 - 22 20:54:59
Finley has found a wonderful family , and we could not have been luckier .
There 's a family that live down in Cornwall , but visit the village by us several times a year .
They have an 8 year old chocolate Lab , but lost their black Lab last January .
The wife happened to look on rehoming sites whilst she was up here , she does n't look often and only contracts dogs she feels extremely strongly about , she saw Finley and thought he was the one .
I met up with Finley , Bella , and her owner both yesterday and today , and we 're meeting up daily for morning walks .
The woman is at home 24/7 and the dogs are very much part of their family - they are allowed on furniture , have there own human - size double bed to sleep on , are walked hours on the beach every ...
Posted by Edge in A sad health update on 2019-06 - 22 20:48:42
Update - currently we are sending our time researching ways to try prevent Dally 's CCI from getting worse .
This involves wearing a specialist neck brace ( which we learnt about through the online CCI group ) & doing hourly PT exercises ( again learnt from the CCI group ) .
These are to stop the muscles in Dally 's neck weakening as a result of wearing the brace , and to strengthen them to try enable their neck to hold the skull up better .
The CCI group is very helpful , but they can only offer minimal advice .
Most their advice revolves around which drs in the US are good / have knowledge about CCI .
They can't help in the UK , because there are n't any .
It 's heartbreaking reading UK posts there , all saying the same thing and begging for help .
Yes ...
Posted by Edge in A sad health update on 2019-06 - 22 20:33:08
Thank you NN this means a lot to us .
Posted by Edge in A sad health update on 2019-06 - 22 20:32:39
Hi Kate , we have been told by our dr that she is " unwilling " to treat Dally , as she has " no experience with ME or CCI " .
I do n't see how this is at all legal , and this is after fighting through several other diabolical GPs ... so currently we can't even access a GP , never mind more .
We are literally out of options , drs WILL NOT treat us , and we do n't know where to turn .
I am contacting PALS and our MP on Monday , in desperation .
The issue is that CCI and the amount of damage done , can only be seen on an upright MRI .
The NHS does not offer this test .
From our ( admittedly mild so far ) research into the cost , we 're looking at a minimum of � 1700 .
But I think we need a referral to be able to get in touch with the private hospital (? ) , & we 're str ...
Posted by Edge in A sad health update on 2019-06 - 22 20:21:52
Hi Diane , the cost of surgery is around 100 - 180 thousand pounds total .
I do n't think that fund raising was for all of the funds , I think it was done by a family member who wanted to help ( if I 'm thinking of the same one ) .
This one , for example , is raising several thousand pounds , & it 's just to see a private specialist who can perform the scan needed to send abroad for the CCI specialist ; this is before his prices , & then the extortionate amount for the surgery itself .
https://www.justgiving.com/crowdfunding/getlaurentolondon
This patient needs � 250 k for the surgery , & is fund raising : https://www.thesun.co.uk/news/8129570/samantha-smith-ehlers-danlos-syndrome-gofundme-life-saving-surgery/he
Also a surgeon in the US , but � 150 k : ...
Posted by DianeonWhidbey in A sad health update on 2019-06 - 22 17:57:14
Just googled ' surgery for CCI in England ' and the first thing that popped up was a crowdfunding campaign ( " Just Giving " ) for someone 's niece with hEDS and CCI .
Her surgery cost 1,645 pounds and they raised that amount on there , with just 21 people responding .
It appears she got her surgery in Spain .
Posted by Kateb in A sad health update on 2019-06 - 19 23:19:24
Oh wow - devastating does n't really cover it .
I 'm so so sorry .
Of course you know how we all feel about this - you and your family ( human and animal ! ) have become a part of our families over the years too .
I can only imagine what you 're going through .
All those years of misdiagnosis .
On a positive note , you have each other and are so strong together .
I have always been amazed at how you keep going and find solutions to the issues you 've had in the past .
On a practical level , my friend has joined a group called ' borrow my dog ' or something like that .
It 's for people who want a dog but for some reason can't have one so they help out with other peoples dogs - walking them , having them overnight , that sort of thing .
Maybe it would be ...
Posted by nanny north in A sad health update on 2019-06 - 19 19:59:58
I do n't know what to say , I just feel totally devastated for you both .
Enjoy your time together to the full , Thinking of you with so much love will chat again real soon .
xxxxxxxxxxx
Posted by Edge in A sad health update on 2019-06 - 19 15:51:33
Hi CC , Lyle here .
I 've been filling in for Red helping answer questions as much as I can .
I will pass your love along .
The issue with Finley is n't his pulling , but his size or weight .
One small jolt could kill Dally .
The neck brace slows Dally 's spine crumbling , but will leave them weaker to knocks - they have been told they must never bend their neck back or look up , for example .
Having large dogs in the house becomes very scary .
We are hoping we can keep Kasper as he is old , not boisterous ( he does n't play , for example ) , and he is excellent in his crate .
Walks are n't an issue as Dally does n't come on them , although Kasper only has two very short walks a day so that is better too , as they are alone less .
It 's likely we will have to trav ...
Posted by chief chicken in A sad health update on 2019-06 - 19 15:20:37
Red , I 'm both sad and happy for you ; sad that they can't help you yet happy because you now know the root of the problem .
It 's good that the neck brace is helping you so much - such an improvement in the number of episodes !
Are you sure you need to rehome Finley ?
He 's been such a star in his training I 'm sure he could be trained not to pull on the lead .
My thoughts and prayers are with you all .
xxxxxxxxxxx
Posted by Red in A sad health update on 2019-06 - 18 23:41:50
Long time no update everybody .
This is n't a good update .
It seems that my spine is pressing against my brain stem , & that 's what has been causing all these lovely symptoms that the NHS has been blaming on my mental health all these years .
It 's called Craniocervical Instability , & has happened thanks to my ehlers danlos syndrome ( why I 've always been so bendy ) .
But yeah , that 's the cause of my ME , seizures etc etc
Unfortunately the NHS do n't treat / manage / really do anything for CCI , & the only place fusion surgery is available is abroad .
There are only 4 surgeons worldwide who do the surgery , it 's high risk ( because duh , fusing my spine ) & costs � 150 +k , so not an option .
In the meantime we 're trying to find ways to stop my spine deg ...
Posted by DianeonWhidbey in watch this space on 2019-06 - 13 17:50:49
That is awesome .
Posted by Kateb in watch this space on 2019-06 - 11 21:11:00
Yes !
They sent pictures the next day of him relaxing and enjoying his new home - it was like he'd been there years !!
Posted by Kateb in Where is everybody ? on 2019-06-11 21:09:24
I do n't understand why these on - line sites do n't let you specify a garage .
Get fed up reading loads of stuff before realising it has n't got your ' must have '
Posted by chief chicken in watch this space on 2019-06 - 10 16:15:56
Fabulous .
Did she go ahead with it ?
Posted by chief chicken in Where is everybody ?
on 2019-06-10 16:14:28
Amazing is n't it ; you ask for a cottage with two bedrooms and a garden and get details for 6th floor flats with no garden and 4 bedrooms ...
Posted by DianeonWhidbey in Our Street on 2019-06-09 16:53:02
GN and Kev! Amazing .
Yes , true heroes .
So glad this story turned out well .
WOW .
Posted by Kateb in watch this space on 2019-06-02 21:49:54
Good news !!!
A lady and her daughter came into the centre on Saturday and saw him , fell in love , read about his condition , had a chat to her daughter , and spent some time with him .
I asked the deputy manager if she'd have a chat with her about him .
She was still really keen .
Then she spent some time thinking , chatted to another couple who come in every now and then , and decided ... he 's the one !!!
So lovely ginger and white boy Jock hopefully has a new home - fingers crossed she does n't change her mind , but if she does it 's OK .
It 's all about the right cat and the right home .
Posted by Kateb in Where is everybody ? on 2019-06-02 21:43:44
That 's what HE'S doing !!!
Posted by chief chicken in watch this space on 2019-06-02 16:16:37
Posted By : Kateb .
I did n't realise he was diabetic - we have a diabetic boy at rehoming and no one wants him because it's too much responsibility and expense .
But he 's such a lovely boy he really is worth it - I think we should send a poster to the hospital diabetes dept to see if anyone will take pity on him and take him in .
>
Genius idea !!!
Posted by chief chicken in Where is everybody ?
on 2019-06-02 16:14:18
Start sending off for details for houses approximately twice your price limit ; he 'll be jolted into action ...
Posted by LynnW in Our Street on 2019-06-01 19:02:53
OMG , NN .. you are married to a true hero !!!
Posted by Kateb in watch this space on 2019-05-30 22:02:33
Caitlyn and Eva ( Danny 's fiance 's daughter ) were funny on Sunday - Eva had a sleep over here and apparently woke up early , so Caitlyn told her it was 5 am and to go back to sleep .
When they got up she admitted it was probably about 8 am but she wanted to go back to sleep so fibbed to Eva !!
They get on really well which is lovely to see .
I did n't realise he was diabetic - we have a diabetic boy at rehoming and no one wants him because it's too much responsibility and expense .
But he 's such a lovely boy he really is worth it - I think we should send a poster to the hospital diabetes dept to see if anyone will take pity on him and take him in .
He tolerates the injections well - was Sootz OK having his ?
It 's so hard to let them go , but so ...
Posted by Kateb in Where is everybody ? on 2019-05-30 21:53:41
I 've started decorating room by room - have done the downstairs loo , en-suite , and bathroom .
Kitchen next .
Hubby has realised that I 'm doing it to get ready to move and is claiming he 's found " the " house ( he has n't - it was tiny , overpriced , and sandwiched between to A roads ! ) and thinks our house is worth � 50 k more than it is .
Funny how he does n't offer to help decorate though !!
Posted by Kateb in Our Street on 2019-05-30 21:45:45
They are both true heroes !!!
People can be thoughtless sometimes - I would be so grateful I 'd be driving him mad with thanks !!
Do they realise it was GN and not a fireman that got him out ?
Very exciting in a scary way though is n't it !
Posted by chief chicken in Our Street on 2019-05 - 29 23:15:09
People are odd , are n't they ?
As you say , a thank you is the least they could do !
How brave of GN and Kev ; you 'll have to knit them a medal each !
Well done , GN and Kev. WE appreciate your courage !
Posted by nanny north in watch this space on 2019-05 - 28 19:17:09
Thank you so much kate , that is so sweet of you to feel proud of him as well .
he is here tonight so will pass it on to him .
Got him and the girls for five days .
starting tomorrow .
G/N is busy upstairs he has turned door to open on opposite side so we can get a second bed in the back room .
We also had to get the wardrobe out to make room and I nearly had a broken my wrist when he let it slip on me !!!
Boy it made me swear ...�. felt better after though nothing like a good ole swear to sort things out ha ha The girls have been sharing a bed and boy they squabble when they wake up it usually starts about six in the morning way to early for me so hopefully a bed each will solve that problem !
Soots had diabetes Kate we kept him as long as we c ...
Posted by nanny north in Our Street on 2019-05 - 28 19:02:37
We had a right ole drama two doors away from us ( posh bungalow side ) on Sunday night .
G/N works on Sunday and does n't get home till about 23.20 .
He always come up stairs to say he 's safe home and then I nod off for the night and he watches about an hours worth of TV to unwind .
Well just after one I woke up and thought goodness his TV is loud , then I realised it was some one shouting outside .
So I look out of the window and am shocked to see said bungalow on fire I scream down to G/N to go and see if help is needed .
Kev next door has run out and hammering on the windows and shouting .
G/N sees man who lives there in hallway surrounded in smoke and manages to drag him out and thankfully the woman and dog come round from the back with Kev.
Then ...
Posted by nanny north in Where is everybody ?
on 2019-05-28 18:43:11
Ha ha ha can I come and watch please ?
Posted by chief chicken in Where is everybody ?
on 2019-05-28 17:54:12
Do it .... do it ... do it ...
Posted by Kateb in Where is everybody ? on 2019-05-27 20:33:16
Tempting ...!!!
Posted by chief chicken in Where is everybody ?
on 2019-05-24 19:55:31
Depends who 's looking , really ...
Posted by prettyhen23 in Introduce yourself here ! on 2019-05-23 18:49:12
Hi im liz hart does anyone want knitted jumpers for there hens let me know pls
Posted by Kateb in Where is everybody ? on 2019-05-16 22:32:05
I 'd rather hammer them but for some reason it 's not allowed !!
Posted by chief chicken in Where is everybody ?
on 2019-05-15 18:48:10
Hammer some nails into the fence , barely longer than the thickness of the fence .
POP !
Posted by Kateb in watch this space on 2019-05 - 14 20:20:52
I saw the FB post about your son .
It 's fantastic news !
I do n't know him ( of course ) but I felt really proud of his dogged determination - I hope his girls will realise when they 're older just what they mean to him , as well as you and GN .
I 'm dreading my son moving out when they can afford somewhere - I 'll miss my grandkids so much !!
What happened with Sootz ?
Was it ill health or accident ?
Posted by Kateb in Where is everybody ? on 2019-05-14 20:10:18
My neighbours needle me !
Dreading the next bank holiday - rarely take a day off because of the bloody footballs .
You never know though , it might rain !!
Posted by chief chicken in watch this space on 2019-05 - 13 16:49:19
Lovely to hear from you , NN : so sorry to hear about poor Sootz though , bless him .
Glad your son's dogged persistence paid off - must be lovely getting family back !
The foiled UK terrorist plot has wreaked havoc with air travel in the country :
All short - haul inbound flights to Heathrow airport have been cancelled .
Some flights in and out of Gatwick have been suspended .
Security has been increased at Channel ports and the Eurotunnel terminal .
German carrier Lufthansa has cancelled flights to Heathrow and the Spanish airline Iberia has stopped UK flights .
British Airways has announced it has cancelled all its short - haul flights to and from Heathrow for the rest of Thursday .
The airline added that it was also cancelling some domestic and short haul services in and out of Gatwick airport during the remainder of the day .
A COUP D’ETAT IS BREWING in Mexico .
Even as he runs out of legal ways to challenge the July 2 presidential election results , the contest ’s sore loser , Andres Manuel Lopez Obrador , is planning to proclaim himself president and establish a parallel “ people ’s government ” on the national Day of Independence , Sept. 16 .
The defiance by the leftist former mayor of Mexico City comes after a unanimous ruling Monday by the nation ’s top electoral tribunal , which rejected claims filed by Lopez Obrador ’s party of massive fraud .
Lopez Obrador , who finished second in the balloting , has been waging an increasingly desperate campaign to have the election nullified .
The independent panel of seven electoral justices reviewed 9 % of polling places where it had reason to suspect error , and it threw out tens of thousands of ballots .
The net result of the review was to reduce conservative candidate Felipe Calderon ’s nearly quarter - million - vote margin by about 4,000 votes .
The tribunal has until next Wednesday to certify the election results .
Lopez Obrador ’s supporters have shut down much of Mexico City in acts of civil disobedience , and they appear intent on making the country ungovernable .
The hope had been to pressure the tribunal into overlooking legal niceties -- reformed election laws defer to the election - day count conducted by citizens chosen at random -- to annul the vote .
Advertisement
Lopez Obrador and the Democratic Revolution Party , or PRD , are crying out against the imposition of a president backed by the nation ’s business elite , but the whining is misplaced .
Lopez Obrador , who obtained roughly a third of the ballots cast , became an activist in the dark days of the autocratic rule of the Institutional Revolutionary Party , or PRI , but Mexico ’s electoral institutions are now fully independent .
There has been no convincing proof of any widespread fraud .
The election was conducted by nearly a million citizens selected to serve , and foreign observers have all praised the balloting as exemplary .
Indeed , if there is any threat to democracy in Mexico , it is Lopez Obrador and his sense of entitlement .
The vast majority of Mexicans , including many of those who voted for him , find his antics tiresome .
But even if only 10 % or 15 % of the population believes its candidate is being unfairly denied the presidency , it can create quite a bit of havoc if egged on by a demagogue exploiting their sense of victimization .
The next weeks and months pose a different challenge for the country ’s democracy , as Lopez Obrador ’s supporters will seek to disrupt President Vicente Fox ’s final State of the Union address on Friday , as well as Independence Day celebrations later in September .
Fox ’s government has shown admirable restraint , but Lopez Obrador is hoping for some violent confrontation with federal authorities to score him sorely needed public opinion points .
Meanwhile , it ’s time for democratic voices on the left in Mexico to distance themselves from Lopez Obrador ’s destructive coup attempt .
The likes of Cuauhtemoc Cardenas , the PRD ’s founder who probably was victimized by electoral fraud in his 1988 bid for the presidency , should say basta and encourage everyone to respect the election ’s outcome .
Insider Risks in Elections
Many discussions of voting systems and their relative integrity have been primarily technical , focusing on the difficulty of attacks and defenses .
This is only half of the equation : it ’s not enough to know how much it might cost to rig an election by attacking voting systems ; we also need to know how much it would be worth to do so .
Our illustrative example uses the most recent available U.S. data , but is otherwise is not intended to be specific to any particular political party .
In order to gain a clear majority of the House in 2002 , Democrats would have needed to win 13 seats that went to Republicans .
According to Associated Press voting data , Democrats could have added 13 seats by swinging 49,469 votes .
This corresponds to changing just over 1 % of the 4,310,198 votes in these races and under 1/1000 of the 70 million votes cast in contested House races .
The Senate was even closer : switching 20,703 votes in Missouri and New Hampshire would have provided Democrats with the necessary two seats .
Of course , it is n’t possible to anticipate exactly how much fraud or undetected error would alter the winner of each race .
It would also be suspicious if Democrats won 13 districts by exactly one vote .
As a result , modestly more votes would need to be changed .
In 2002 , fraud that changed 2 % of the votes in a few contested races ( or 1/250 of the total votes ) would have completely changed the balance of power in Congress .
According to the Federal Election Commission , some House candidates spent up to $ 8 million in 2002 , although expenditures of $ 3 to $ 4 million were typical .
Thus , it is easily worth $ 3 million for a candidate to change a race from a statistical dead heat into a certain victory .
Each 1 % that is added to a candidate ’s odds of victory ( and hence each 1 % removed from the opponent ’s odds ) is worth $ 60,000 .
The outcomes of the 13 closest Democratic losses in 2002 would have changed by swinging an average of 3,805 votes each .
If shifting 5,000 votes is worth $ 3 million , each vote is worth $ 600 .
A discount is required to reflect the additional legal risks and moral problems involved in committing fraud , although these effects depend on the people and situations involved .
The following analysis makes the conservative assumption of $ 400 per vote .
So , what is it worth to compromise a voting machine ?
Suppose one machine collects 250 votes , with roughly half for each candidate in a close election .
Rigging the machine to swing all of its votes in one race would be worth $ 50,000 .
To avoid detection , fraudsters may be less greedy .
Swinging 10 % of the opposition ’s votes on any given machine would be worth $ 5,000 in a close race .
Thus , it is necessary to assume that attacks against individual voting machines are a serious risk , particularly if a few dozen machines could be affected .
For example , machine tampering is worthwhile if machines are stored without strong physical security .
Election data is also useful for understanding the threats against voting machine designs .
Any voting machine type deployed in 25 % of precincts would register enough votes that malicious software could swing the balance of power without creating detectable statistical abnormalities .
According to the FEC , Congressional candidates together legally raised over $ 600 million in 2002 .
One might conservatively estimate that stealing control over the House of Representatives is worth over $ 100 million to the party that would otherwise lose .
In practice , the threats are even greater , since one attack could affect many elections .
Who are the adversaries ?
Elections face threats from system developers and election insiders , foreign governments , radical extremists , partisan operatives , and others .
Voting systems must be able to face attackers with extraordinary creativity and dedication– much more so than the rather simplistic and unmotivated creators of viruses and worms –because there are strong rational ( though perverse ) motives for election fraud .
Compared with violence and other illegal activities extremists use , electoral fraud is much safer and much more likely to have a desired effect .
The evidence clearly shows voting systems must be designed to counter very well - funded and sophisticated opponents , including those with massive financial resources and the ability to join design teams , infiltrate manufacturing facilities , fabricate malicious integrated circuits , tamper with compilers , and mount a wide range of other attacks .
Checks and balances , such as local party observers , help against some attacks but not others .
The threats are real , making openness and verifiability critical to election security .
Categories : Elections
Mélissa Theuriau is an anchor for the French channelwhich is a 24 hour news channel .
As you can see below she is just absolutely stunning !
I 'm not sure if she has a fashion coordinator or if she picks her own clothes , but she always seems to show up in something new and inviting daily .
Not only do her clothes change , but so does her hair , with a new style .
While I have a preference for Asian women , Mélissa is probably one of the most beautiful women I 've ever seen .
Now if there was just some way to get her on American channels so I could ogle her day and night .
See all the women I like in the Women I Like Archive .
Update – Update ..
This List has Grown to 345 …
Update : – I will be updating this list very shortly , many of the links were taken from http://www.programmingebooks.tk/
How to Be a Programmer
http://samizdat.mines.edu/howto/HowToBeAProgrammer.html
How to Design Programs
http://www.htdp.org/2002-09-22/Book/
Practical Theory of Programming
http://www.cs.toronto.edu/%7Ehehner/aPToP/
Software Engineering for Internet Applications
http://philip.greenspun.com/seia/
Structure and interpretation of computer programs
http://mitpress.mit.edu/SICP/
More programming books
http://2020ok.com/3839.htm
The Programmers Stone
http://www.reciprocality.org/Reciprocality/r0/
Subversion Version Control : Using the Subversion Version Control System in Development Projects
http://www.phptr.com/promotions/promotion….84&redir=1&rl=1
Ada
Ada 95 Rational
http://www.adaic.org/standards/95rat/RATht…5-contents.html
Ada 95 Reference Manual
http://www.adahome.com/rm95/
Changes to Ada 1987 – 1995
http://www.oopweb.com/Ada/Documents/Change…lumeFrames.html
Ada 95 : The Lovelace Tutorial
http://www.adahome.com/Tutorials/Lovelace/master.htm
The Big Online Book of Linux Ada Programming
http://www.pegasoft.ca/resources/boblap/book.html
Algorithms
Algorithms and Complexity
http://www.cis.upenn.edu/%7Ewilf/AlgComp.html
Programming Algorithms
http://2020ok.com/3870.htm
Information Theory , Inference , and Learning Algorithms
http://www.inference.phy.cam.ac.uk/mackay/itprnn/book.html
Assembly
Assembly Language Tutorial
http://www.oopweb.com/Assembly/Documents/a…lumeFrames.html
Programming From the Ground Up
http://download.savannah.gnu.org/releases/pgubook/
Assembly Language Programming http://2020ok.com/3954.htm
Ralph Brown's Interrupt List
http://www.oopweb.com/Assembly/Documents/I…lumeFrames.html
The Art of Assembly Language Programming
http://www.oopweb.com/Assembly/Documents/A…lumeFrames.html
The Assembly Language Database
http://www.oopweb.com/Assembly/Download/NortonGuide.zip
Win32 Programming for x86 Assembly Language Programmers
http://www.oopweb.com/Assembly/Documents/W…lumeFrames.html
C
A Tutorial on Pointers and Arrays in C
http://www.oopweb.com/CPP/Documents/CPoint…lumeFrames.html
C Programming
http://www.oopweb.com/CPP/Documents/CProgr…lumeFrames.html
Object Orientated Programming in ANSI -C
http://www.planetpdf.com/developer/article…?contentid=6635
The C Book
http://publications.gbdirect.co.uk/c_book/
Writing Bug - Free C Code
http://www.duckware.com/bugfreec/index.html
C – Elements of Style
http://www.computer-books.us/c_3.php
Learning GNU C
http://www.linuxtopia.org/online_books/pro…nu_c/index.html
C++
An Overview Of The C++ Programming Langauge
http://www.oopweb.com/CPP/Download/crc.zip
C++ Annotations
http://www.oopweb.com/CPP/Documents/CPPAnn…lumeFrames.html
C++ Annotations
http://www.oopweb.com/CPP/Download/cplusplus.zip
C++ Coding Standard
http://www.oopweb.com/CPP/Documents/CodeSt…lumeFrames.html
C & C++
http://2020ok.com/3956.htm
C++ Course
http://www.oopweb.com/CPP/Download/CPPCourse.zip
C++ How To
http://www.oopweb.com/CPP/Documents/CPPHOW…lumeFrames.html
C++ In Action
http://www.relisoft.com/book/index.htm
C++ : A Dialog
http://www.steveheller.com/cppad/cppad.htm
How To Think Like A Computer Scientist with C++
http://www.oopweb.com/CPP/Documents/ThinkC…lumeFrames.html
Introduction To OOP Using C++
http://www.oopweb.com/CPP/Documents/Intro2…lumeFrames.html
Introduction To OOP Using C++
http://www.oopweb.com/CPP/Download/Intro2OOP.zip
Objects First
http://www.oopweb.com/CPP/Documents/Object…lumeFrames.html
Optimizing C++
http://www.steveheller.com/opt/
STL Guide
http://www.oopweb.com/CPP/Documents/STLGui…lumeFrames.html
STL Guide
http://www.oopweb.com/CPP/Download/stl.zip
The Function Pointer Tutorials
http://www.oopweb.com/CPP/Documents/Functi…lumeFrames.html
The Standard Template Library Tutorial
http://www.oopweb.com/CPP/Documents/STL/VolumeFrames.html
Thinking in C ++
http://www.planetpdf.com/developer/article…?ContentID=6634
Thinking in C++ , Second Edition ( Volumes 1 & 2 )
http://mindview.net/Books/TICPP/ThinkingInCPP2e.html
An Introduction to C++ Programming
http://www.computer-books.us/cpp_1.php
Programming in C++ – Rules and Recommendations
http://www.computer-books.us/cpp_6.php
A Beginners C++ Book
http://www.uow.edu.au/~nabg/ABC/ABC.html
C++ GUI Programming with Qt 3
http://www.phptr.com/promotion/1484?redir=1
Cross -Platform GUI Programming with wxWidgets
http://www.phptr.com/promotion/1484?redir=1
C #
C# in Detail
http://www.computer-books.us/csharp_0005.php
C# – The Basics
http://www.computer-books.us/csharp_0004.php
C# Language Specification
http://www.computer-books.us/csharp_1.php
Data Structures and Algorithms with Object - Oriented Design Patterns in C#
http://www.computer-books.us/csharp_2.php
C# Programming http://2020ok.com/697342.htm
Dissecting a C# Application – Inside SharpDevelop
http://www.computer-books.us/csharp_3.php
C# tutorial ( 2 .pdf's )
http://www.ssw.uni-linz.ac.at/Teaching/Lec…Sharp/Tutorial/
CGI
CGI Programming on the World Wide Web
http://www.oreilly.com/openbook/cgi/
CGI Programming http://2020ok.com/4025.htm
COBOL
zingCOBOL – A Beginners Guide to COBOL Programming
http://www.computer-books.us/cobol_0006.php
Teach Yourself COBOL in 21 Days
http://www.computer-books.us/cobol_0005.php
WebSphere Studio COBOL for Windows – Language Reference
http://www.computer-books.us/cobol_1.php
COBOL Programming Course
http://www.computer-books.us/cobol_2.php
COBOL Programming http://2020ok.com/3969.htm
WebSphere Studio COBOL for Windows – Programming Guide
http://www.computer-books.us/cobol_3.php
HP COBOL II /XL Reference Manual
http://www.computer-books.us/cobol_4.php
Databases
MySQL Reference Manual
http://dev.mysql.com/doc/
Database http://2020ok.com/549646.htm
Oracle 10g Database Book and Documentation Library
http://wtcis.wtamu.edu/oracle/
Delphi / Pascal
Delphi 2005 Tutorial for Beginners
http://www.xcalibur.co.uk/training/Delphi2005/index.php
Delphi Training
http://www.xcalibur.co.uk/training/delphi/oldindex.html
Essential Delphi
http://marcocantu.com/edelphi/default.htm
Essential Pascal
http://marcocantu.com/epascal/default.htm
Delphi Language Guide – Delphi For The Microsoft .NET Framework
http://www.computer-books.us/delphi_2.php
Delphi Database Application Developers Guide
http://www.computer-books.us/delphi_1.php
Fortran
Numerical Recipes with Fortran 77
http://www.library.cornell.edu/nr/cbookfpdf.html
Numerical Recipes with Fortran 90
http://www.library.cornell.edu/nr/cbookf90pdf.html
Professional Programmer 's Guide to Fortran 77
http://www.computer-books.us/fortran_3.php
User Notes on Fortran Programming ( UNFP )
http://www.ibiblio.org/pub/languages/fortran/
HTML
HTML 4.01 Specifications
http://www.oopweb.com/HTML/Documents/HTML4/VolumeFrames.html
Web Development http://2020ok.com/3510.htm
Writing HTML
http://www.oopweb.com/HTML/Documents/Writi…lumeFrames.html
Java
How to Think Like a Computer Scientist with Java
http://www.oopweb.com/Java/Documents/Think…lumeFrames.html
Introduction to Programming Using Java
http://www.oopweb.com/Java/Documents/Intro…lumeFrames.html
Introduction To Programming Using Java
http://www.linuxtopia.org/online_books/pro…ming/index.html
Java Programming Tutorial : Introduction to Computer Science
http://www.oopweb.com/Java/Documents/JavaN…lumeFrames.html
Thinking in Java , 3rd Edition
http://www.mindview.net/Books/TIJ/
Thinking in Enterprise Java
http://www.ibiblio.org/pub/docs/books/eckel/
More Java Books
http://kickjava.com/freeBooks.html
Java AWT Reference
http://www.oreilly.com/catalog/javawt/book/index.html
Enterprise JavaBeans
http://www.computer-books.us/java_1.php
Essentials of the Java Programming Language – Part 1
http://www.computer-books.us/java_2.php
Essentials of the Java Programming Language – Part 2
http://www.computer-books.us/java_3.php
Exploring Java
http://www.computer-books.us/java_4.php
Introduction to Computer Science using Java
http://www.computer-books.us/java_5.php
Java Development
http://2020ok.com/3608.htm
Java Language Reference
http://www.computer-books.us/java_8.php
Java Servlet Programming
http://www.computer-books.us/java_9.php
Java Web Services Tutorial
http://www.computer-books.us/java_10.php
Java Look and Feel Design Guidelines , Second Edition
http://java.sun.com/products/jlf/ed2/book/index.html
The Design Patterns : Java Companion
http://www.patterndepot.com/put/8/JavaPatterns.htm
1000 Java Tips e-Book
http://javaa.com
Apache Jakarta Commons : Reusable Javaâ „ ¢ Components
http://www.phptr.com/promotion/1484?redir=1
Javaâ „ ¢ Application Development on LinuxÂ ®
http://www.phptr.com/promotion/1484?redir=1
Practical Artificial Intelligence Programming in Java
http://www.markwatson.com/opencontent/javaai_lic.htm
Javascript
Voodoo's Introduction to Javascript
http://www.oopweb.com/JavaScript/Documents…lumeFrames.html
Javascript Programming http://2020ok.com/3617.htm
Linux
Linux Device Drivers , Third Edition
http://lwn.net/Kernel/LDD3/
The Linux Development Platform
http://www.phptr.com/promotion/1484?redir=1
Understanding the Linux Virtual Memory Manager
http://www.phptr.com/promotion/1484?redir=1
Self - Service LinuxÂ® : Mastering the Art of Problem Determination
http://www.phptr.com/promotion/1484?redir=1
LinuxÂ® Quick Fix Notebook
http://www.phptr.com/promotion/1484?redir=1
Managing Linux Systems with Webmin : System Administration and Module Development
http://www.phptr.com/promotion/1484?redir=1
An Introduction to GCC
http://www.linuxtopia.org/online_books/an_…_gcc/index.html
Linux http://2020ok.com/3756.htm
Using the GNU Compiler Collection ( GCC )
http://www.linuxtopia.org/online_books/pro…tion/index.html
Bash Reference Guide
http://www.linuxtopia.org/online_books/bas…uide/index.html
Bash Guide for Beginners
http://www.linuxtopia.org/online_books/bas…ners/index.html
Advanced Bash Scripting Guide
http://www.linuxtopia.org/online_books/adv…uide/index.html
Linux Kernel Module Programming Guide
http://www.linuxtopia.org/online_books/Lin…uide/index.html
Red Hat Linux Developer Tools Guide
http://www.linuxtopia.org/online_books/red…uide/index.html
Linux Debugging with gdb Guide
http://www.linuxtopia.org/online_books/red…_gdb/index.html
Using cpp , the C Preprocessor Guide
http://www.linuxtopia.org/online_books/pro…ssor/index.html
Lisp
Loving Lisp – the Savy Programmer 's Secret Weapon
http://www.markwatson.com/opencontent/lisp_lic.htm
List Programming http://2020ok.com/3981.htm
Online Computer Degrees
Computer Engineering Technology Degree
Computer and Programming Degree Information
Open Source
Rapid Application Development with Mozilla
http://www.phptr.com/promotion/1484?redir=1
Creating Applications with Mozilla
http://books.mozdev.org/chapters/index.html
Free as in Freedom
http://www.oreilly.com/openbook/freedom/index.html
Managing Projects with GNU make , 3rd Edition
http://www.oreilly.com/catalog/make3/book/index.csp
OpenSources : Voices from the Open Source Revolution
http://www.oreilly.com/catalog/opensources/book/toc.html
Understanding Open Source and Free Software Licensing
http://www.oreilly.com/catalog/osfreesoft/book/
Embedded Software Development with eCos
http://www.phptr.com/promotion/1484?redir=1
Open Source Security Tools : A Practical Guide to Security Applications
http://www.phptr.com/promotion/1484?redir=1
Perl
HTMLified Perl 5 Reference Guide
http://www.oopweb.com/Perl/Documents/Perl5…lumeFrames.html
Perl 5 Documentation
http://www.oopweb.com/Perl/Documents/PerlD…lumeFrames.html
Perl for Perl Newbies
http://www.oopweb.com/Perl/Documents/P4PNe…lumeFrames.html
Perl for Win32 FAQ
http://www.oopweb.com/Perl/Documents/PerlW…lumeFrames.html
Picking Up Perl
http://www.oopweb.com/Perl/Documents/Picki…lumeFrames.html
Picking Up Perl
http://www.linuxtopia.org/online_books/perl/index.html
Perl Programming
http://www.2020ok.com/4045.htm
Practical Perl Programming
http://www.oopweb.com/Perl/Documents/ppp/VolumeFrames.html
Beginning Perl
http://www.perl.org/books/beginning-perl/
Impatient Perl
http://www.perl.org/books/impatient-perl/
Extreme Perl
http://www.extremeperl.org/bk/home
MacPerl : Power & Ease
http://macperl.com/ptf_book/r/MP/i2.html
Embedding Perl in HTML with Mason
http://www.masonbook.com/
Perl for the Web
http://www.globalspin.com/thebook/
Practical mod_perl ( 1st edition )
http://modperlbook.com/
Web Client Programming with Perl
http://www.oreilly.com/openbook/webclient/
Perl 5 By Example
http://www.computer-books.us/perl_0010.php
An Introduction to Perl
http://www.linuxtopia.org/Perl_Tutorial/index.html
PHP
Practical PHP Programming
http://www.hudzilla.org/phpbook/
A Programmer 's Introduction to PHP 4.0 - http://www.apress.com/free/
PHP 5 Power Programming
http://www.computer-books.us/php_2.php
PHP Programming http://2020ok.com/295223.htm
Practical PHP Programming
http://www.computer-books.us/php_3.php
Prolog
Adventure in Prolog
http://www.amzi.com/AdventureInProlog/
Building Expert Systems in Prolog - http://www.amzi.com/ExpertSystemsInProlog/
Prolog programming
http://2020ok.com/295223.htm
Prolog Programming A First Course
http://computing.unn.ac.uk/staff/cgpb4/prologbook/
Python
Non-Programmers Tutorial for Python
http://rupert.honors.montana.edu/~jjc/easy…ut/easytut.html
Official Python Documentation
http://www.python.org/doc/current/
Text Processing in Python - http://gnosis.cx/TPiP/
Python Reference Manual
http://docs.python.org/ref/ref.html
Python Imaging Library Handbook - http://www.pythonware.com/library/the-python-imaging-library.htm
How to Think Like a Computer Scientist – Learning with Python
http://www.greenteapress.com/thinkpython
Dive Into Python - http://diveintopython.org/
Python Programming http://2020ok.com/285856.htm
Thinking in Python
http://mindview.net/Books/TIPython
A Byte of Python
http://www.ibiblio.org/g2swap/byteofpython/read/
Ruby
Programming Ruby – The Pragmatic Programmer 's Guide ( First Edition )
http://www.ruby-doc.org/docs/ProgrammingRuby/
Why 's ( Poignant ) Guide to Ruby
http://poignantguide.net/ruby/
< – the funniest programming book I have ever seen !
Samba
Samba - 3 by Example : Practical Exercises to Successful Deployment
http://www.phptr.com/promotion/1484?redir=1
Samba - 3 by Example : Practical Exercises to Successful Deployment , 2nd Edition
http://www.phptr.com/promotion/1484?redir=1
The Official Samba-3 HOWTO and Reference Guide
http://www.phptr.com/promotion/1484?redir=1
Implementing CIFS : The Common Internet File System
http://www.phptr.com/promotion/1484?redir=1
SQL
Comparison of Different SQL Implementations
http://www.computer-books.us/sql_0004.php
SQL – A Practical Introduction
http://www.managedtime.com/freesqlbook.php3
Introduction To Structured Query Language
http://www.computer-books.us/sql_2.php
Practical PostgreSQL
http://www.opendocspublishing.com/ppbook/
UNIX
FreeBSD Handbook
http://www.freebsd.org/doc/en_US.ISO8859-1…book/index.html
Unix http://2020ok.com/3778.htm
The UNIX - HATERS Handbook
http://research.microsoft.com/%7Edaniel/unix-haters.html
Visual Basic and VB.net
Programming VB.NET – A Guide For Experienced Programmers
http://www.apress.com/free/
Upgrading Microsoft Visual Basic 6.0 to Microsoft Visual Basic .NET
http://msdn.microsoft.com/vbrun/staythepat…s/upgradingvb6/
Visual Basic http://2020ok.com/3996.htm
Introducing Visual Basic 2005 for Developers
http://msdn.microsoft.com/vbrun/staythepat…05/default.aspx
XML
OpenOffice.org XML Essentials
http://books.evc-cit.info/
Misc. stuff that is worth reading
FREE Trade Magazine Subscriptions & Technical Document Downloads
http://i.nl03.net/ltr0/?_m=01.009i.nv.mfm.nv
The Future does not compute
http://www.praxagora.com/stevet/fdnc/toc.html
The Cathedral and the Bazaar
http://www.catb.org/~esr/writings/cathedral-bazaar/
In the 10th century B.C. , in the hill country south of Jerusalem , a scribe carved his A B C's on a limestone boulder -- actually , his ale ph - beth - gimel 's , for the string of letters appears to be an early rendering of the emergent Hebrew alphabet .
Archaeologists digging in July at the site , Tel Zayit , found the inscribed stone in the wall of an ancient building .
After an analysis of the layers of ruins , the discoverers concluded that this was the earliest known specimen of the Hebrew alphabet and an important benchmark in the history of writing , they said this week .
If they are right , the stone bears the oldest reliably dated example of an abecedary -- the letters of the alphabet written out in their traditional sequence .
Several scholars who have examined the inscription tend to support that view .
Experts in ancient writing said the find showed that at this stage the Hebrew alphabet was still in transition from its Phoenician roots , but recognizably Hebrew .
The Phoenicians lived on the coast north of Israel , in today 's Lebanon , and are considered the originators of alphabetic writing , several centuries earlier .
Software design is together a process and a model .
The design Softwares process is a series of steps that enables the designer to portray all aspects of the software for building .
Imaginative skill , past knowledge , a sense of what makes “ good ” software , and on the whole commitment to quality are examples of critical success factors for a competent design .
It is significant to note , however , that the design process is not always a straightforward process .
The design model that is shaped for software provides a variety of different views of the computer software .
Basic design principles facilitate the software engineer to navigate the design process .
Principals which are to be Adapted
Experts propose a set of principles for software design , which have been adapted and extended in the list below :
A good designer should deem alternative approaches , judging each based on the necessities of the problem , the resources available to do the job .
Because a single element of the design model can frequently be traced back to multiple requirements , it is essential to have a means for tracking how necessities have been satisﬁed by the design model .
Systems are constructed using a set of design sample , many of which have likely been encountered before .
These patterns should always be selected as an alternative to reinvention .
The structure of the software design should , whenever possible , impersonate the structure of the problem domain .
The design is uniform if it appears fully logical .
In order to achieve this outcome , policy of style and format should be deﬁned for a design team before design work commence .
The design should be reviewed to minimize Conceptual errors
Well - designed software should never “ blast ” ; it should be designed to hold unusual circumstances , and if it must finish processing , it should do so in an elegant manner .
Even when detailed ceremonial designs are created for program components , the level of construct of the design model is higher than the source code .
The only design conclusion made at the coding level should address the small implementation details that enable the procedural design to be coded .
There is sometimes a tendency to focus on minutiae when the design is reviewed , missing the forest for the trees .
A design team should make sure that major conceptual elements of the design ( omissions , ambiguity , and inconsistency ) have been addressed before upsetting about the syntax of the design model .
Design Deliberation
There are many aspects to deem in the design of a piece of software .
The importance of each consideration should imitate the goals and expectations that the software is being shaped to meet .
Some of these aspects are :
The software is able to work with other products that are intended for interoperability with another product .
New potential can be added to the software without major changes to the original architecture .
New potential can be added to the software without major changes to the original architecture .
The resulting software includes well defined , self - determining components which lead to better maintainability .
The mechanism could be then executed and tested in isolation before being integrated to form a preferred software system .
A measure of how easily bug fixes or functional modifications can be accomplished .
High maintainability can be the creation of modularity and extensibility .
The software is able to carry out a required function under stated conditions for a specified period of time .
The skill to use some or the entire feature of the preexisting software in other projects with modest to no alteration .
The software is able to function under stress or tolerate erratic or invalid input .
Making Haskell programs faster and smaller
Is Haskell 's laziness actually a Good Thing ?
In writing code to process large data sets in Haskell I 've come across more instances where laziness has been harmful than instances when it is beneficial .
When everything needs processing and all calculations will be used , laziness just means that programs take up extortionate amounts of heap space while they delay all computation until the last minute .
This is a review of some of the processes I 've been using to deal with the problems caused by processing large amounts of data , for my own reference , and for anyone else who would like similar help , as this is not usually found in the Haskell textbooks .
Algorithm / Data structures
First of all change the algorithm and / or data structure .
Although obvious , it is worth restating since this is the solution that will usually give most benefit .
This is not Haskell specific , though it could well be easier in Haskell than some other languages , given
the good support for abstract data types - users can easily define new types
modularity of code - a whole module for a particular ADT or algorithm can be easily replaced
lack of side effects - any new functions the user writes to replace or update existing algorithms are guaranteed not to interfere with existing code .
Time and heap profiling are great for spotting which parts of your code need changing .
Handy algorithms are available in Chris Okasaki's book ( Okasaki1999 ) , and from the Haskell web page ( http://www.haskell.org/libraries/).
The Haskell mailing lists ( http://www.haskell.org/mailinglist.html) sometimes carry solutions that people post for various problems , such as Ralf Hinze 's collection of sorting algorithms ( 8/10/97 , " Re : heap sort or the wonder of abstraction " ) .
I 've used the wrong type of sort and the wrong type of data structure ( lists rather than prefix trees ) before and getting this right speeds things up no end .
Similarly , time profiling showed that one of my functions was taking up all the time not because it was slow but because it was being called so often .
This pointed to using a screening function first , which did a less expensive test to work out whether the function really did need to be called , which saved half the time .
There are huge gains to be made by using better algorithms and data structures .
Unfortunately , profiling can be slow ( usually around 10 times slower in my experience ) and it can take a long time to get all the information you need .
And even then , the right choice of algorithm or data structure is not easy .
Continuation Passing Style
If a heap profile shows that code is being detrimentally lazy , Continuation Passing Style ( CPS ) is one purely functional way of forcing evaluation .
Using CPS is a way of ensuring the evaluation order of functions .
For example , consider the following code :
g a b c = let intermediate_result = f a in h intermediateresult b c f a = blah
As Haskell 's evaluation order is outermost first , function f will not be applied until necessary , and will be saved as is without being reduced .
If these unevaluated instances of f take up much more memory than the evaluated answer , this is wasteful .
To force reduction , we need to bring f to the outside of the computation .
This happens as follows :
We set f as the outermost function by introducing a new argument to f , and using a lambda expression as follows
g a b c = f a ( \intermediateresult -> h intermediateresult b c )
Now f has to take an extra argument , say k , the " continuation function " .
This function is to be applied whenever f produces a result .
f a k = k blah
If the previous type of f was
f :: a -> b
then the new type of f with a continuation function will be
f :: a -> ( b -> c ) -> c
If f is recursive , say f was
f p [ ] = [ ] f p ( x : xs ) = if p x then x : f p xs else f p xs
then the continuation function and the result which is being built up must be passed through together .
f always stays on the outside , even in the recusive call :
f p [ ] k = k [ ] f p ( x :xs ) k = if p x then f p xs ( k . ( x : ) ) else f p xs k
As an concrete example , here is some code which extracts particular parts of a parsed text file , building up a sorted list using insertion sort .
addElem position listSoFar ( parsedLine:otherLines ) = let valueWanted = extract position parsedLine newSoFar = insert valueWanted listSoFar in add Elem position newSoFar otherLines insert x [ ] = [ x ] insert x l@( y : ys ) = if x < y then x:l else y : insert x ys
As it is , the insert function will not be evaluated until the end , and all calls to this function will remain on the heap , wasting space .
The code is rewritten so that the call to the " insert " function of the insertion sort is now on the outside , and takes a continuation function as argument .
addElem position listSoFar ( parsedLine:otherLines ) = let valueWanted = extract position parsedLine in insert valueWanted listSoFar $ (
ewSoFar -> add Elem position newSoFar otherLines ) insert x [ ] k = k [ x ] insert x l@( y : ys ) k = if x < y then k ( x :l ) else insert x ys ( k . ( y : ) )
Why does this work ?
Claus Reinke and Olaf Chitil pointed out that this works because we have been given a handle on " what comes next " ( the continuation ) .
So we can then move this around to control evaluation order .
If we move it over some expression which forces evaluation such as a pattern match , a case expresion or the branches of a conditional , then we can control when the evaluation occurs .
Of course , if you do not have some evaluation - forcing expression such as these , then the CPS code will be no more strict than the original .
On small examples such as this , CPS is ideal .
But as code becomes larger and more complex , CPS can have its problems .
Take the following example
main = do result
Both the file compilation and the counting process will be lazily deferred , and all the files will be read in before any calculation actually happens .
This can be checked by forcing evaluation at each stage with a redundant " == " , and comparing the heap profile with the original .
If the last line of the addDataFromFile function is changed as follows : addDataFromFile initialData fileName = do compiled File then everything runs beautifully and the heap stays small and constant from file to file .
To convert to CPS the following would be necessary addDataFromFile initialData fileName = do compiled File return newData )
This means lifting the countData function into the IO monad .
If countData then goes on to call several other functions , which themselves call other functions , this will require using CPS on these also , and hence lifting a lot of the program into the IO monad .
Although possible , this begins to look untidy and begins to obscure the benefits of using Haskell in the first place .
The advantages of CPS are that it is still purely functional , standard Haskell .
It stops laziness by changing the evaluation order , sometimes brilliantly reducing the memory overhead .
The disadvantages are that it can make your code far less readable , and in some cases completely unintelligible .
If a function is complicated , involving many sub functions then this can involve re-writing a large amount of code in CPS .
I 've made use of a CPS version of fold which can help if you have a suitably evaluating f : cpsfold f a [ ] = a cpsfold f a ( x : xs ) = f x a ( \y -> cpsfold f y xs ) Valery Trifonov emailed me to point out that cpsfold f = flip ( foldr ( flip . f ) id ) " so depending on how it appears in the program it may be easier to use ( foldr f ' id ) instead of ( cpsfold f ) , for f ' defined appropriately and instead of f .
For defining short - circuit computations I recall to have found useful the version : " cpsfold ' = flip .
flip foldr id Gertjan Kamsteeg also notes that : cpsfold f a xs = foldr ( \x k y -> f x y k ) id xs a and defines a version that ' consumes ' elements from left to right : cpsfold ' f a xs = foldr ( \x k y -> f y x k ) id xs a Strict datatypes , seq , ( $ ! ) , DeepSeq and Strategies The Haskell language provides support for strictness annotations to data and functions .
On offer are the datatype annotation ! , and the strict sequencing operator `seq` and its often more useful form as the infix operator ( $! ) .
The datatype annotation is used on user - defined datatypes as in the following example : data Shape = Circle !
Int !
Int ! Colour | Square !
Int ! Colour http://www.haskell.org/onlinereport/decls.html#strictness-flags gives more detail on the usage of these .
Each argument that has a ! will be evaluated when the constructor is applied .
That is , it will be evaluated as if it had had ( $! ) applied to it ( see following discussion on how much ( $! ) actually evaluates ) .
The seq operator is seq :: a -> b -> b x `seq` y will evaluate x , enough to check that it is not bottom , then discard the result and evaluate y .
This might not seem useful , but it means that x is guaranteed to be evaluated before y is considered .
( $! ) is defined in terms of seq : f $ ! x = x seq f x
This can then be used in a similar fashion to the ordinary function application operator ( $ ) .
For example : f x = g $ ! h $ ! x
This will evaluate x first , then h x , then apply g to the result .
However both seq and ( $ ! ) evaluate their argument only enough to check that it is not bottom .
If the argument is a list , this means it only has to check the first cons cell .
If a complex datatype , it only has to check the topmost level , not the parts .
So using seq and ( $! ) does not necessarily mean that anything will be fully evaluated .
Using these combined with the strict datatype operator can help further but if this is not applicable to your code , then a deeper evaluation is needed .
DeepSeq is a module which provides operators `deepSeq` and ( $ !! ) .
These are the equivalents of seq and ( $! ) in how they are used , but they force complete evaluation rather than the partial evaluation of seq and ( $ ! ) .
This module was posted by Dean Herington and posted to the Haskell mailing list on 21/8/00 ( did he write it ? ) .
The module is included as Appendix A . However , all such ways of enforcing evaluation and strictness are the users 's responsibilty .
DeepSeq is not yet deriveable , and instances must be written for all your datatypes ( though John Meacham 's DrIFT can now derive instances of rnf , which is equivalent , see Strategies below ) .
Finding the correct places in the code to use ( $ ! ) or ( $ !! ) is not always obvious , and code can still be lazy if any necessary places are overlooked .
It can be an additional time overhead : if a computation is repeatedly carried out on an ever - growing datastructure , then it may be necessary to re-deepSeq the whole structure each iteration , even though most of it will have already been evaluated the previous time .
Sometimes it can be difficult to find a place to put the ( $ ! ) or ( $ !!) operators and I end up writing extra redundant code such as the " do " and " return " in tree1 in order to force the result of a pure function which would normally have been defined with a let statement , before continuing in an IO monad .
Scott Turner states on the haskell mailing list ( 17/6/04 ) :
The concept of DeepSeq bothers me , because usually more limited use of strictness will do the job , and sometimes total strictness can't be used .
Alternatives are strictList_ and strictList as defined in the " Prelude Extensions " at http://haskell.org/hawiki/PreludeExts
strictList evaluates every element of the list when any part of the list is examined , and strictList_ evaluates the entire list , but not its elements , when the head is evaluated .
Strategies are another way of controlling evaluation and are available in the Strategies .
lhs module distributed with GHC ( just import Strategies ) .
They 're used in Glasgow parallel Haskell ( GpH ) , but can be used in ordinary Haskell too , and are used in a similar fasion to deepSeq et al.
r0 , rwhnf , rnf :: Strategy a r0 - does no evaluation , rwhnf - reduces its argument to Weak Head Normal Form ( WHNF ) .
rnf - reduces its argument to normal form ( i.e. containing no redexes ) .
See http://www.mail-archive.com/haskell@haskell.org/msg11441.html and http://www.cee.hw.ac.uk/~dsg/gph/papers/ for more info .
rnf can be derived by DrIFT .
Read vs Happy , Binary and others
If Haskell is to be used in earnest for real - world programs it will have to have good methods of reading and writing persistent data .
Using Read for complex data structures ( for example large trees ) is not an option .
Apart from being slow , it is also difficult to force code using Read to be strict .
Ints will take less space than the Strings which represent them , but Haskell will be lazy and leave them as Strings until they are required .
Happy ( http://www.haskell.org/happy/) is a parser generator tool for Haskell .
It is suprisingly easy to use .
Simply write a grammar for the data you want to parse , in the Happy format , use Happy to convert the file into a Standard Haskell module , then the module can be used as ordinary code .
This gives enormous speed - ups over using Read , and once you 've written one Happy parser , all others are much the same , so parsing data will be simple in future .
The disadvantages are the slight initial learning curve ( in my opinion well worth the investment ) and the difficulty in tracking down the source of type errors in generated code ( Happy itself provides little in the way of error checking , and type errors come to light only when using the generated Haskell ) .
The advantages are a large speed increase in reading files , and also some memory reduction .
As arbitrary Haskell code can be included in the parser , sequencing operators and strictness annotations can be added where needed .
I have found in the past that Happy can still leave unwanted " read "s and " span "s on the heap .
I have n't used Happy for several years now and it 's probably much better now .
Simon Marlow said several years ago : " I 've looked a little at making Happy more strict recently , because it turns out that it always returns the parse tree as a huge tree of thunks to the caller - this would n't be so bad if it was actually lazy , but it 's not !
It does n't return anything until the whole input is parsed , and then it returns a huge wad of thunks .
If you compile up a recent Happy from CVS ( see GHC 's building guide for info on setting up CVS ) , then you can use the -- strict flag in conjunction with - agc to make all the productions strict . "
If stricter , faster data I/O is needed then use a Binary library .
See for example Malcolm Wallace and Colin Runciman 's Binary library ( Wallace1998 ) ( http://www.cs.york.ac.uk/fp/nhc98/libs/Binary.html, only available for the nhc compiler ) , or Bulat Ziganshin's ( http://article.gmane.org/gmane.comp.lang.haskell.cafe/10803.
Data can be read and written to file or to memory , and due to the compression used , the amount of data stored will generally be an order of magnitude smaller than if it were stored as text .
I 've found that this also means an order of magnitude saving in memory costs too , as there are no strings to remain on the heap , because the data is read in directly .
The single disadvantage of Binary at the moment is that it is not Standard Haskell .
However the support is good : instances of Binary are derivable automatically for any user defined data type , or if better compression is needed , the instances can be hand - written .
Discussions were taking place in 2003 on the libraries mailing list to devise a general Binary library .
I have n't kept up with the status of this now .
If you can provide a summary , please do .
Another alternative to Binary is Julian Seward 's Sequential code , which provides a simple Standard Haskell module for strict data I /O to files .
This module is included as Appendix B .
This does not give as good compression as Binary , and instances are not deriveable , and must be hand - written for all user datatypes .
But it does provide simple strict reading of Haskell data .
hGetContents , hClose , readFile
Some time ago there was an interesting discussion on the Haskell mailing list ( 21/5/03 ) of hGetContents and hClose which again relates to laziness not behaving as you might like .
This has come up on the mailing list a few times now , and questioners have been referred to read about semi-closed handles ( see IO library report , section 21.2.2 http://www.haskell.org/onlinereport/io.html).
If you open a file , and do some reading from the file , then close the file , how do you guarantee that the reading and closing of the file happens in the order you require ?
Edward Z.
Yang points out that there is now ( since at least 2008 ) a package available on hackage called strict that provides strict versions of hGetContents , getContents , readfile and interact ( author Roman Leshchinskiy , maintainer Don Stewart ) .
This is surely the easiest way to deal with the problem .
For historical record , understanding of the problem that the strict package solves , convenience and easy reading I include here three of the emails to the haskell mailing list .
These postings can be found in the thread that starts here .
Graham Klyne wrote :
There seems to be a difficult - to - justify interaction between lazy evaluation and monadic I/O : [ [ -- file : SpikeIOMonadCloseHandle.hs --
Does hClose force completion of lazy I /O? import IO showFile fnam = do { fh If I load this into Hugs and run it , the output is a single blank line .
If I reverse the order of hClose and putStr , the source code is displayed .
Ketil Z. Malde wrote hClose is a strict operation , hGetContents is a lazy one .
You want hClose to be strict , since the next action may be writing to the same file ; having an unevaluated hGetContents around to be evaluated after other operations may not give you the result you expect .
For a simple example like the above , use read File , which reads lazily and closes the file when it 's done .
For complex examples , use handles with strict IO operations ( but be prepared for high memory cost for those lists of chars ) Hal Daume III wrote : Yes .
This is because hGetContents ( and hence read File , etc. ) use lazy IO .
Just as in this case you might want hClose to force the file to be read , in a case like : > do h c >= return .
head >
hClose h > return c you probably do n't want the close to read the whole file .
I 'd argue that that problem is not with hClose , but with hGetContents .
Really , a strict version should be used in most situations .
Something like : > hGetContents
Strict h = do > b if b then return [ ] else do > c r return ( c:r ) of course , you could be smarter with buffering , etc .
Another way would be to do something using seq / deepSeq .
See also http://www-fp.dcs.st-and.ac.uk/~kh/papers/io-tutorial/subsubsectionstar3_3_2_2.html
( the HTML is rather broken and does n't display well on Firefox but it's a short piece so it 's possible to read it anyway ) .
This subject reappeared when another person asked about the same issue .
Various responses appeared .
I include here one from Cale Gibbard and a followup from Simon Marlow .
( 2/Aug/05 ) Cale Gibbard wrote :
Your problem is , as you pointed out , that read File does lazy IO .
Although the semantics of it can be a bit confusing at times , it is useful for applications where you have a large file which is being consumed , and you do n't want to allocate all of the memory for it before doing any processing .
Laziness lets you read the file as needed -- you may not even need it all , depending on what is being done .
This is quite helpful when you have something like a couple gigabytes of data on disk which needs processing .
It can however be confusing at first that it may not finish reading the file before the file is altered , or , in situations involving handles , before the handle is closed .
You can write a strict IO version of readFile in Haskell as follows : import IO hGetContents ' hdl = do e If you use read File ' , it will ensure that the entire file is read and memory for the string is allocated before continuing .
This ought to solve your problem .
Simon Marlow added the following response : Note that hGetContents ' is likely to be slow , because it does repeated hGetChar .
Also it is not tail - recursive , so it will run out of stack for a large file .
It would be better to read the whole file into memory but lazilly convert it to a String , like so : import System .
IO import System .IO .
Unsafe import Foreign import Data .
Char readFile ' f = do h hGetBuf h buf ( fromIntegral s ) lazySlurp fp 0 len lazySlurp :: ForeignPtr Word8 -> Int ->
Int ->
IO String lazySlurp fp ix len | ix == len = return [ ] | otherwise = do c peekElemOff p ix cs Actually , I recommend always using this version unless you need to deal with really large files .
Performance wo n't be quite as good as read
File , but I 've attached a tweaked version that performs much better .
See Appendix C for Simon 's tweaked code .
See hackage for the strict package that provides strict versions of hGetContents , getContents , readfile and interact .
Summary
In practice , I 've needed all of the above , and wrestling with laziness is something that happens with every serious Haskell program I write .
There must be many more useful techniques .
Thanks to all who 've pointed out mistakes , and useful additions .
Further tips and suggestions are extremely welcome , please email afc@aber.ac.uk if you can add to this list .
Refs
Okasaki1999 : C. Okasaki , ( 1999 ) Purely Functional Data Structures .
Cambridge University Press
Wallace1998 : M. Wallace and C. Runciman ( 1998 )
The bits between the lambdas : Binary data in a lazy functional language .
Proceedings of the International Symposium on Memory Management 1998
Appendix A
Subject : DeepSeq.lhs [ was : Re : [ Haskell ] Force evaluation ]
Date : Tue , 7 Dec 2004 01:25:15 - 0500 From : Dean Herington DeepSeq.lhs -- deep strict evaluation support
The `DeepSeq` class provides a method `deepSeq` that is similar to `seq` except that it forces deep evaluation of its first argument before returning its second argument .
Instances of `DeepSeq` are provided for Prelude types .
Other instances must be supplied by users of this module .
$ Id : DeepSeq.lhs , v 1.5 2002/04/01 20:58:24 heringto Exp $ > module DeepSeq where > class DeepSeq a where deepSeq :: a -> b -> b > infixr 0 `deepSeq` , $ !! > ( $!! ) :: ( DeepSeq a ) => ( a -> b ) -> a -> b > f $ !! x = x `deepSeq` f x > instance DeepSeq ( ) where deepSeq = seq > instance DeepSeq Bool where deepSeq = seq > instance DeepSeq Char where deepSeq = seq > instance ( DeepSeq a ) => DeepSeq ( Maybe a ) where > deepSeq Nothing y = y > deepSeq ( Just x ) y = deepSeq x y > instance ( DeepSeq a , DeepSeq b ) => DeepSeq ( Either a b ) where > deepSeq ( Left a ) y = deepSeq a y > deepSeq ( Right b ) y = deepSeq b y > instance DeepSeq Ordering where deepSeq = seq > instance DeepSeq
Int where deepSeq = seq > instance DeepSeq Integer where deepSeq = seq > instance DeepSeq Float where deepSeq = seq > instance DeepSeq Double where deepSeq = seq > instance DeepSeq ( a -> b ) where deepSeq = seq > instance DeepSeq ( IO a ) where deepSeq = seq > instance ( DeepSeq a ) => DeepSeq [ a ] where > deepSeq [ ] y = y > deepSeq ( x:xs ) y = deepSeq x $ deepSeq xs y > instance ( DeepSeq a , DeepSeq b ) => DeepSeq ( a , b ) where > deepSeq ( a , b ) y = deepSeq a $ deepSeq b y > instance ( DeepSeq a , DeepSeq b , DeepSeq c ) => DeepSeq ( a , b , c ) where > deepSeq ( a , b , c ) y = deepSeq a $ deepSeq b $ deepSeq c y > instance ( DeepSeq a , DeepSeq b , DeepSeq c , DeepSeq d ) => DeepSeq ( a , b , c , d ) where > deepSeq ( a , b , c , d ) y = deepSeq a $ deepSeq b $ deepSeq c $ deepSeq d y > instance ( DeepSeq a , DeepSeq b , DeepSeq c , DeepSeq d, DeepSeq e ) =>
DeepSeq ( a , b , c , d , e ) where > deepSeq ( a , b , c , d , e ) y = deepSeq a $ deepSeq b $ deepSeq c $ deepSeq d $ deepSeq e y > instance ( DeepSeq a , DeepSeq b , DeepSeq c , DeepSeq d, DeepSeq e , DeepSeq f ) =>
DeepSeq ( a , b , c , d , e , f ) where > deepSeq ( a , b , c , d , e , f ) y = deepSeq a $ deepSeq b $ deepSeq c $ deepSeq d $ deepSeq e $ deepSeq f y > instance ( DeepSeq a , DeepSeq b , DeepSeq c , DeepSeq d, DeepSeq e , DeepSeq f , DeepSeq g ) =>
DeepSeq ( a , b , c , d , e , f, g ) where > deepSeq ( a , b , c , d , e , f , g ) y = deepSeq a $ deepSeq b $ deepSeq c $ deepSeq d $ deepSeq e $ deepSeq f $ deepSeq g y
Appendix B
Small children rated most malicious creatures in the world , study says
The study says that two or three - year - old children belong to a specific age group known for extreme aggressiveness , fierceness , and cruelty
You got it wrong if you thought we were going to talk about tigers , lions , wolves , alligators , or sharks .
It is really hard to guess who is the most malicious and cruelest of all species .
The little boy 's name is Maxim .
His huge brown eyes are innocent and clear as a child 's eye should be .
Maxim could be good or bad .
When he is good , he is ready and willing to recite the ABC , he can help his mother cook kasha or he can sing a little in his angelic voice at the request of guests .
But he is not simply bad when he is bad , he is just terrible .
He used to scream and yell as his little fists were pounding on his mother .
On one occasion he beat up a boy with a plastic fire engine toy in the kindergarten .
He was reported to be pushing around , scratching , fighting , spitting etc .
He would defy any authority .
He would go frantic if his smallest whim happens to be disregarded .
His face would turn red and purple and he would cough hysterically until he induced a bout of vomiting .
The adults had the impression that two different persons were living inside the child .
The situation does not worry Maxim 's young mother yet .
All in all , the boy is just two and a half years old .
He is going to change for the better when he grows older .
However , a study conducted by Canadian researchers says that children of the same age as Maxim belong to an age group known for extreme aggressiveness , fierceness , and cruelty .
For decades aggressiveness was associated with hormones .
Teenagers knocking on puberty 's door were regarded as humans at the wildest and most dangerous age .
It was thought that parents and teachers should concentrate on young teenagers in order to prevent the development of aggressiveness .
Contrary to the above theory , new studies show that children whose age ranges from two to three years are the most “ terrible ” creatures .
Those little boys and girls can already walk but can not control their emotions .
They are driven by animal instincts .
And those instincts can trigger wicked actions .
Jean Jacques
Rousseau believed that all of us are born morally clean and innocent , we are like a canvas with nothing on it .
Our moral character and attitudes will depend on a palette of colors to be used by the world .
On the other hand , St. Augustine wrote that all children are born corrupt , and they learn how to behave themselves in society later on .
Where is the truth ?
Richard Trembley , a researcher at the University of Montreal , is one of the leading scientists involved in the study of the nature of aggressiveness .
He would rather share the viewpoint of St. Augustine .
In fact , Dr. Trembley likes to quote St. Augustine .
Having conducted hundreds of various studies , Dr. Trembley arrived at the conclusion that children 's aggressiveness is not a product of experience , it is an innate character trait .
It is one of the rudiments of our early evolution stage when man had fight ferociously for his survival .
Man learned how to keep that natural force under control .
However , a human being shows the worst examples of behavior when he is small and weak i.e. during the early years of his childhood .
Dr. Trembley was astounded with the conclusion he made .
“ I felt as though I was seeing the world in a completely different light , ” said he .
“ Physical aggression is not a contagious disease .
It is a natural kind of behavior , and one should learn how to control it .
Well , our education falls short of perfection .
Our socialization resembles plywood , it is very fragile , ” said Dr. Trembley in an interview to The Globe and Mail .
The fragility of a plywood socialization will crack and split into pieces when a quite and reportedly reserved teenager suddenly pulls up a pistol and starts shooting at any person who happens to be around .
Dr. Trembley has never come across a case study about a passive child turning into an aggressive adult .
A wrathful adult has always been a wrathful child who failed to tame his wrath .
According to Dr. Trembley 's theory , there is no difference between a toddler who took a toy from his mate without asking permission , and a burglar who knocked you down after you caught him in the act of stealing your brand - new stereo system .
“ The behavioral pattern in both cases is the same .
The point is that the gorilla has grown up a little , ” says Dr. Trembley .
Dr. Trembley started his first major research in 1982 .
He arrived at the first conclusions ten years later .
For example , he understood that almost every child at six years old is slightly more aggressive than at the age of 16 .
Yet aggressiveness reveals at an earlier age .
Finally , Dr. Trembley had to deal with the newborn as he slid down the age scale in his research .
Dr. Trembley concentrates his studies on the social roots of aggressiveness .
Needless to say , geneticists look for the biological factors .
Researchers focus on frontal lobes of the brain , especially on one particular area where neuron communicators control the emotions .
That area of the cerebral cortex in a human child is much more developed than that in the offspring of an animal .
The Canadians discovered a link between aggressiveness and frontal lobes a long time ago .
In 1848 a foreman of a railroad team was injured during the explosion in Vermont .
A metal bar went into his forehead .
The foreman survived but his personality changed dramatically after the accident .
He was reported to have suffered from “ fits of anger ” and showed a “ lack of respect ” to everybody .
People who had head injuries during an armed conflict or car crash sometimes experience similar symptoms .
We use cookies and similar technologies to recognize your repeat visits and preferences , to measure the effectiveness of campaigns , and improve our websites .
For settings and more information about cookies , view our Cookie Policy .
By clicking “ I accept ” on this banner or using our site , you consent to the use of cookies .
About Me Name : Extremetech Location : San Diego , California , United States Don is a Technophile , Gearhead , and an Übergeek , among other things .
He sees technology as " a route to growth that is almost without end " .
To read his BIO , click here .
To CONTACT Don , click here .
Technophile : n. , ( tek ´ - no • fyl ) :
One who has a love of or enthusiasm for technology , especially computers and high technology .
Gearhead : n. , ( geer´• hed ) :
A person who is extremely interested and knowledgeable about computers , electronics , technology , and gadgets .
Übergeek : n. , ( ew´ - bur • geek ) :
Someone regarded as a paragon of geek achievement and virtue .
View my complete profile
Dan's Choice : Extreme Hosting Monster !
" HostMonster " offers 20 gigabytes of hosting space , UNLIMITED domains , 5000 Pop / Imap email accounts , SSH ( Secure Shell ) access , 500 gigabytes of transfer , SSL , FTP , stats , CGI , Ruby ( RoR ) , Perl , PHP , MYSQL , Front Page Extensions , a free top level domain forever , free site builder , free SES ( Search Engine Submission ) , and the best support in the industry !
All for only $ 7.95 a month .
" HostMonster.com " is the host with the most !
For more " extreme consumer values and gotta - haves ( Dan 's Choices ) , just scroll down ( for smooth scrolling , rotate the center wheel on your mouse ) .
Pacific Standard Time
UTC / GMT Offset = - 7 Hours
View our stats here !
Since March 22 , 2006 , has welcomed the following number of unique ( first time ) visitors : is currently ranked number : out of 964 Technology Blogs ( according to blogtopsites.com ) .
Note from Technophile : Babel Fish does a great job of translating individual posts , but cannot deal with my homepage ( which contains many posts ) .
To translate an individual post ( article ) , just scroll down to the bottom of the article and click on the time of the post ( your cursor will turn into a hand when you move it over the time - called a " mouseover " - when it does , just click on it ) .
A new page will load containing just the individual post ( article ) .
When it does , just click on the flag , contained within the graphic below , that represents your country and Babel Fish will translate the post ( article ) into your language ( a little techno - magic - and sort of like a reverse tower of babylon ) !
Following are today 's NeoCOUNTER stats :
Top technology stories
Subscribe to my blog !
A free subscription through Feedblitz will allow you to receive email alerts when a new post is added to my blog !
They will only email you if there is a new post .
You can unsubscribe at any time .
If you like my blog , go ahead and subscribe .
( It 's as EZ as techno - pie ! )
Just Enter Your Email Address
Powered by FeedBlitz
Previous Posts
Autotech
Biotech
Biztech
Environtech
Infotech
Nanotech
Spacetech
Magazines
Television
Personal Tech
Physics
Science
Cool Blogs
Futurists
" We live in a society exquisitely dependent on science and technology , in which hardly anyone knows anything about science and technology . "
~ Carl Sagan
" It has become appallingly obvious that our technology has exceeded our humanity . "
~ Albert Einstein
Click on the play button above to view streaming video of the first ever walking , talking Einstein robot with human - like expressions .
( Free Flash player required . )
" This is perhaps the most beautiful time in human history ; it is really pregnant with all kinds of creative possibilities made possible by science and technology which now constitute the slave of man - if man is not enslaved by it . "
~ Jonas Salk
" Any sufficiently advanced technology is indistinguishable from magic . "
~ Arthur C. Clarke
" The future has already arrived .
It 's just not evenly distributed yet . "
~ William Gibson
Dan Lelevier is the Consumer Product Advisor for Extreme Technology ( ET ) .
Have you ever run across a product or service that you just could not live without ( " gotta - haves " ) ?
Or a deal so good , you just could not pass it up ( extreme consumer value ) ?
Whether it represents an exceptional value , or exceptional usefulness , Dan searches the web for just such products and services to add to our ( soon to launch ) ET Store !
He is proud to offer the following extreme consumer values and " gotta - haves " ( Dan 's Choices ) .
Check them out , you 'll be glad you did !
Dan's Choice : Extreme Cell Phone Deal !
" LetsTalk " is an independent reseller of cellular phones and services plans .
They activate phones for Alltel , Cingular , Nextel , Sprint , T- mobile , and Verizon .
They also offer pre-paid solutions from MetroPCS and Cricket .
Their website offers user - friendly features such as find and compare , quick search , and top sellers .
You can get a better deal buying your phone through LetsTalk.com than going directly to a carrier .
They typically offer phones at $ 150 to $ 200 less than the carriers .
The bottom line : Same plan , better phone , less out of pocket expense !
Get your FREE Motorola RAZR V3 phone now !
Dan's Choice : Extreme Turbo Charge !
" Turbo Charge " is an electronic , reusable , portable cell phone charger .
This revolutionary product was recently chosen as one of the " Top 5 Products of 2006 " at the famed Consumer Electronics Show ( CES ) in Las Vegas .
Shortly thereafter , the product was picked up by QVC , highlighted on Good Morning America and has captured news headlines across the United States .
Turbo Charge can be used anywhere in the World .
It is equipped with exclusive Dual AlgorChip technology for extra power , is digitally controlled for a safely regulated charge , and is made of lightweight aluminum .
The ultra small device runs on a single " AA " battery and provides up to 3 - hours of talk time , and it works with ALL cell phones !
Dan's Choice : Extreme DISH Deal !
If you would like to have satellite television in your home , this DISH deal cannot be beat :
Up to 4 rooms of equipment for free ( a $ 2,000 value ) .
Free home protection plan .
Free Digital Video Recorder .
Free lifetime equipment warranty .
Three months of movie channels for free .
$ 10 off for the first 10 months .
The lowest priced all - digital service in America ( $ 19.95 a month for the basic channels ) .
Free professional installation , and free home theatre system ( with a DVD player ) !
Click on the banner below to get it all from the # 1 provider in America ( according to the American Customer Satisfaction Index - ACSI ) :
Dan's Choice : Extreme Ink Cartridge Deals !
It does n't matter what you paid for your printer ( or how good a deal you got ) , you pay for it over and over again by buying over - priced ink cartridges for it .
The solution : Compatible Cartridges !
Save up to 74 % when you buy ink for your printer from " 123Inkjets " ( instead of the manufacturer ) .
There is a 1 year guarantee on all orders , and you will receive generous discounts if you buy more than 2 cartridges .
In addition , if your order totals more than $ 55 you will receive $ 70 worth of gifts , plus 5 entries into their Printer - A - Day giveaway !
[ The gifts include : 1 ) Ulead 's " My Scrapbook 2â scrap booking software - a $ 29.99 value , 2 ) Pinnacle 's " Instant PhotoAlbumâ  digital photo software - a $ 29.95 value , and 3 ) Sepom 4x6 Glossy High Grade photo paper - a $ 9.95 value . ]
Dan's Choice : Extreme Software Prices !
Top Selling Software For $ 9.99 - $ 4.99 ! " Just999 " sells only the top selling consumer software ( titles from brand name publishers like Broderbund , Edmark , The Learning Company , M2K , DK and others ) on CD - Rom and they sell everything for only $ 9.99 or less .
Each month they bring in fresh new programs and get rid of the non-sellers .
So check back with them ( by clicking on the banner below ) each and every month .
You 're wallet will be glad you did !
Dan 's Choice : Extreme Internet Answering and Fax Machine !
Never miss an important call again !
While online , CallWave users SEE the Caller ID of the person calling , and instantly HEAR the caller 's message on their PC speakers !
And best of all , click a button and talk to the caller on any phone they choose ( home , office , or cell ) .
Users can also get a local fax - to - email number that delivers faxes directly to their email inbox where they can read , print , save , or forward them instantly !
Dan's Choice : Extreme Headset Specialists !
" Headsets.com " has been providing headset solutions since 1997 .
The company was founded by Mike Faith , who remains the President and CEO .
Whether you are looking for the versatility of the Plantronics products , the support of legacy hardware that GN Netcom provides , or the cost effectiveness of the Headsets.com Executive line , you will find all your headset solutions on their site .
They are a young team of headset experts who pride themselves on excellent customer service .
In nine years , they have become America 's leading headset specialists !
Dan's Choice : 26,000 DVDs for $ 7.99 ( or less ) !
" Half.com " offers unmatched value and selection for textbooks , books , movies , music , video games , and game systems !
Dan's Choice : Extreme ( Free ) Computer Lessons !
" Video Professor " has been in the computer learning business for over 15 years and offers two great ways to learn computer skills .
Access Video Professor lessons instantly anytime , anywhere ONLINE !
Over 100 hours of learning to explore with 5 days free access to the complete online library , FREE !
Or , order lessons on CD for a free trial !
( All that is paid is a small shipping and processing fee ) .
Dan's Choice : Extreme Electronics Store !
Folks , you gotta check this store out !
" OnSale " offers more options and lower prices on everything from digital cameras and iPods to computer systems and peripherals .
If it 's electronic , they 've got it , and you will not believe the prices !
Dan's Choice : Extreme Book Store !
If Abe Lincoln where alive , he would love this store !
" Abebooks " is the world 's largest online marketplace for books .
Whether itâs new , used , rare , or out - of - print , it can be found through their community of over 13,500 independent booksellers from around the globe .
In Abebooksâ inventory of over 80 million books , readers find bestsellers , collectors find rare books , students find textbooks , and bargain hunters find books discounted up to 90 % !
Dan's Choice : Extreme Jewelry Store !
Folks , this store is incredible ( you wo n't believe the prices ) !
They offer exquisite fine jewelry , gorgeous watches , and stunning gemstones .
" Jewelry Television " is one of the largest retailers of loose gemstones in the world .
You will appreciate their excellent selection and LOVE their amazing prices !
Dan's Choice : Extreme Contact Management Tool !
Your contacts are important !
Why not make it easy to manage them ?
" CardScan " is a small desktop device that quickly and accurately reads the printed information from business cards into the fields of a powerfully searchable , highly compatible contact database .
Rapid scanning , easy operation , and superior interpretive technology makes CardScan the must - have contact management tool !
In seconds , CardScan enters more cards than you could type in hours .
Then , over 50 powerful software features help you search , sort , and use that contact information more efficiently .
Dan's Choice : Extreme Audio Book Rental Service !
" JiggerBug " is the " Netflix " of the Audio Book rental service .
They offer unlimited audio rentals and downloads for one low monthly price ( and free shipping ) .
JiggerBug was founded to offer the BEST service for audio book listeners , at competitive prices .
As the TOP online audio book rental company , with THOUSANDS of audio books , they are growing larger everyday and they want YOU to benefit from it !
Sign up for a FREE TRIAL today and try their excellent service !
Dan's Choice : Extremely Fast Life Insurance Policy ( No Medical Exam Required ) !
Traditionally , buying life insurance meant dealing with pushy sales agents , scheduling medical exams and waiting weeks or months to have your policy put â In -Forceâ .
" American Life Direct " has taken the pain out of the process by doing away with the agents and the medical exams .
ALD is an " E - Commerce " life insurance site .
In less than 10 minutes consumers can apply on - line , pay on - line , and print their " In - Force " policy on - line .
It does n't get much better than that !
Dan's Choice : The Last Ladder You Will Every Buy !
This fits in the " Gotta - Have " category .
For over 30 years " Little Giant Ladders " have been the # 1 choice of homeowners and contractors throughout the world .
Only the Little Giant Ladder System offers the convenience and flexiblity of 33 traditional ladders in 1 versatile ladder system !
Dan 's Choice : The Best Way To Create A Presence On The Web ! With " NetObjects Fusion " , anyone can go from concept to a live site quickly and easily ( and without any knowledge of HTML code ) .
Whether you are a beginner or an experienced Web developer , " NetObjects Fusion " provides you with all the necessary tools to build , publish and maintain fresh , exciting websites efficiently and effectively .
" NetObjects Fusion " is packed with new features that will make you look great on the Web .
With " NetObjects Fusion " you can build a site so hot that it will melt your host 's servers !
By Peter Feuilherade
BBC Monitoring
TV sets are dominant in the home but they are evolving
US researchers found that Americans spend nine hours a day watching TV , using the web or talking on a mobile .
One - third of that time is devoted to using two or more media at once , noted Bob Papper , a Ball State University professor who co-authored the report .
" This is arguably in excess of anything we would have envisaged 10 years ago , " Prof Papper said .
Media mad
The team at Ball State University in Indiana looked at media take - up over 5,000 hours among a small sample of 400 people .
They tracked how consumers used 15 different media and gadgets including television , books , magazines , mobile phones , the internet , instant messaging and e-mail .
Media use was the biggest single activity in each observed day and , the researchers said , was undoubtedly the biggest life activity of all .
Top media activity was still watching TV .
But in second place was the time that people spent with their laptop and desktop computers .
" When we combine time spent on the web , using e-mail , instant messaging and software such as word processing , the computer eclipses all other media with the single exception of television , " said Prof Papper .
However , the medium that reaches most people in any given day , 94.6 % , was the telephone .
Most people , 56.9 % , used media in the home but 21.1 % did so at work , 8.3 % in the car and 13.7 % in other locations .
TV viewing
The study confirms many long - held assumptions about how Americans use the media , including the television set 's dominance in American homes .
Separate figures produced by Nielsen Media Research confirm that American families are watching more TV today than they were a decade ago .
In the 12 months up to September 2005 , the average American family viewed eight hours and 11 minutes of TV programming a day , a 2.7 % increase from the previous year .
A decade ago , from September 1994 - 95 , average total viewing was seven hours and 15 minutes .
But the Ball State study appears to overturn the cliché that younger people are the heaviest users of the web .
It found that 18 to 24 - year - olds spend less time online than any other age group , except for the over - 65s .
A survey earlier this year by the US Pew Internet and American Life project found that on a typical day in late 2004 , 70 million Americans went online , a figure 37 % higher than four years previously .
These numbers are set to rise in the future as new networking technologies , such as Wimax and 3G , reach millions more consumers .
Spending on internet advertising is projected to increase in 2006 by anywhere from 12 to 27 % , according to US media analysts .
But newspapers , despite circulation concerns and competition from the internet , continue to attract more advertising than any other major media , amounting to $ 46.7bn ( £ 26.84bn ) in 2004 .
By John Sudworth
BBC News , Colombo
After this change I feel that many troubles have been caused to Sri Lanka .
Tsunamis and other natural disasters have been taking place
The Venerable Gnanawimala
Sri Lanka is a country divided not just by war , but also by time .
Officially the country is six hours ahead of GMT .
But in Tamil Tiger controlled areas , the time difference is five and a half hours ahead of GMT , the same as in India .
Now that may change .
The change in time zone is under discussion .
If it happens , it is likely to coincide with the Tamil and Sinhala New Year on 14 April .
It would be Sri Lanka 's third official time change in 10 years and will take the country back to where it stood in 1996 .
Some of the country 's Buddhist clergy are rejoicing at the prospect of a change because they say Sri Lanka 's " old " time fitted better with their rituals .
They believe a decade living in the " wrong " time has upset the country 's natural order with terrible effect .
The Venerable Gnanawimala says the change moved the country to a spiritual plane 500 miles east of where it should be .
" After this change I feel that many troubles have been caused to Sri Lanka .
Tsunamis and other natural disasters have been taking place , " he says .
" I agree that this half an hour must be changed again . "
' Good for business '
Back in 1996 , the idea behind the decision to advance the clocks was pragmatic - to save electricity by making the evenings lighter .
Confused ?
Clocks in the BBC Sinhala service are now on British Summer Time , not GMT
At first , the clocks were put forward by one hour .
Later that year , that was reduced to 30 minutes .
And that is where the nation , officially , has remained ever since - at a compromise GMT+6 .
Sri Lanka 's Minister of Enterprise and Development , Rohitha Bogollagama , believes a return to the same time zone as India , a major trading partner , would be good for business .
Children would also benefit from an extra half - hour of daylight for their bus journey to school in the morning .
" The adjustment for our schools , our children , our workers , matters a lot , " Mr Bogollagama says .
He accepts that the Buddhist clergy , a powerful interest group , has always been unhappy with the decision to start tinkering with time .
" Our clergy finds it extremely difficult to adjust themselves because the society is different from the time zone they are believing in . "
Clock fight
But not everyone is in agreement .
Science fiction guru Arthur C Clarke has spent many hours pondering the great mysteries of space and time .
We should be in line with the rest of the world
Author Arthur C Clarke
He has written to newspapers here saying it is foolish to return to a time zone half an hour out of step with GMT .
" We should be in line with the rest of the world , " he argues .
" It 's very inconvenient if we 're not .
" If you 're trying to make international calls and you do n't know quite what the time is , it 's very inconvenient to you and to the person at the other end . "
Asked about the points made by Buddhist monks , he responds : " Any argument bringing religion into the discussion is fallacious . "
The whole debate is being wryly observed by the Tamil Tiger rebels , who control large parts of the island 's north and east .
They ignored the 1996 change , leading to two de facto time zones within the country .
As Sri Lankans in the south get ready for a possible adjustment of their watches , some have observed that at least there is one thing that the two sides finally agree on .
The Victoria & Albert Museum in London is hosting an exhibition of high - fashion hearing aids , called Hearwear , in a bid to rehabilitate the devices and make them seem more attractive to those who might need them .
The exhibition , supported by the Royal National Institute for Deaf People ( RNID ) , will showcase a range of designs , from more attractively designed hearing aids to devices that could be used by anyone to play around with sound , the BBC reports .
The exhibition , which opens this week , will include a concept called Goldfish .
It records and can replay the last 10 seconds of a conversation , in case the wearer misses a person 's name when they are introduced .
It also includes hearing aids that have been designed to look like jewellery or gadgets , a device for blocking out annoying sounds , and another to reduce background noise .
The RNID 's chief executive , John Low , says that it is time for more investment in the consumer appeal of hearing aids .
" Millions of people who could benefit from wearing a hearing aid or hearing protection are reluctant to do so , " he told the BBC .
" There has been an incredible revolution is the design of glasses , why not in hearing aids ? "
The RNID says hearing loss will become a significant health issue in the future .
It expects the number of people dealing with some level of impaired hearing will rise from the current one - in - seven , because of increased noise pollution , and increasing life expectancy .
The exhibition opens this week and will run until March 2006 . ®
Related stories
UK computer boffins build sign language avatar
WAP really is useful
Nokia launches mobile phone for the deaf
Each individual will embark on a unique journey to recovery , but specific similarities may exist before treatment , after treatment , and throughout the continuous effort to stay clean .
Initially , individuals may experience an emotional feeling of reaching “ rock bottom . ”
Making a commitment to overcome his / her addiction by admitting into rehab is the first step to recovery .
Throughout recovery , each individual will need to recognize the existing problems or triggers that led to drug abuse .
Recognizing and learning to fix those problems or resist those triggers will greatly strengthen one ’s character and positively affect one ’s future .
In the early stages after treatment , both mental and physical adaptations will occur in order to begin a life - long recovery without drugs .
Below are six steps that individuals may experience on the road to recovery .
1. Overview
People have tried to understand space , time , motion , and the notion of " continuum " for thousands of years .
This pursuit lead to the Pythagoreans discovery of irrational numbers , Zeno 's paradoxes , infinitesimal calculus , transfinite set theory , relativity theory , quantum physics , and many more intriguing ideas .
What do we mean when we say " continuum " ?
Here 's a description Albert Einstein gave on p. 83 of his Relativity : The Special and the General Theory :
The surface of a marble table is spread out in front of me .
I can get from any one point on this table to any other point by passing continuously from one point to a " neighboring " one , and repeating this process a ( large ) number of times , or , in other words , by going from point to point without executing " jumps . "
I am sure the reader will appreciate with sufficient clearness what I mean here by " neighbouring " and by " jumps " ( if he is not too pedantic ) .
We express this property of the surface by describing the latter as a continuum .
Hermann Weyl said " let us stick to time as the most fundamental continuum " and gave the following description on p. 92 of his The Continuum :
So we can gather the following concerning objectively presented time : an individual point in it is non-independent , i.e. , is pure nothingness when taken by itself , and exists only as a " point of transition " ( which , of course , can in no way be understood mathematically ) .
it is due to the essence of time ( and not to contingent imperfections of our medium ) that a fixed time - point cannot be exhibited in any way , that always only an approximation , never an exact determination is possible .
Corresponding remarks apply to every intuitively given continuum ; in particular , to the continuum of spatial extension .
1.1 What is the Continuum Hypothesis ?
In 1874 Georg Cantor discovered that there is more than one level of infinity .
The lowest level is called " countable infinity " and higher levels are called " uncountable infinities . "
The natural numbers are an example of a countably infinite set and the real numbers are an example of an uncountably infinite set .
In 1877 Cantor hypothesized that the number of real numbers is the next level of infinity above countable infinity .
Since the real numbers are used to represent a linear continuum , this hypothesis is called " the Continuum Hypothesis " or CH .
Let c be the cardinality of ( i.e. , number of points in ) a continuum , aleph 0 be the cardinality of any countably infinite set , and aleph 1 be the next level of infinity above aleph 0 .
Here are six ways to state CH : Sets - of - Reals Versions of CH
Any set of real numbers is either finite , countably infinite , or has the same cardinality as the entire set of real numbers .
Any infinite set of real numbers is either countably infinite or has the same cardinality as the entire set of real numbers .
Any uncountable set of real numbers has the same cardinality as the entire set of reals numbers .
Cardinal - Number Versions of CH
There is no cardinal number between aleph 0 and c .
and .
c = aleph 1
= 2aleph 0 = aleph 1 ( explained in section 3.1.1 )
The Continuum Hypothesis has been , and continues to be , one of the most hotly pursued problems in mathematics .
It was the first problem in Hilbert 's list of 23 important unsolved problems , ten of which he presented to the Second International Congress of Mathematicians at Paris in 1900 .
Pursuit of the Continuum Hypothesis has motivated a lot of useful and interesting mathematics in real analysis , topology , set theory , and logic .
1.2 Current Status of CH
Despite nearly 120 years of investigation , CH is still debated and continues to motivate a lot of mathematics , especially in set theory and logic .
Like the Axiom of Choice ( AC ) , Gödel showed that CH is consistent with standard set theory and Cohen showed that ~CH is consistent with standard set theory ( and thus CH is independent of standard set theory ) .
But , unlike AC , CH has not been adopted as an axiom of set theory .
Instead , mathematicians either live with this incompleteness in set theory or try to find more intuitive axioms that will help to decide CH .
In the " Introduction " of the Israel Mathematical Conference Proceedings , Vol. 6 , 1993 Haim Judah said :
We still think that the study of the size of the continuum should be our guiding light for further research in set theory .
2. Style , Assumptions , and Terminology
2.1 Style I link only the first occurrence of a word or phrase .
I use a minimal amount of graphics in order to : speed up downloads .
make it appear reasonable to people who have images turned off or who are using Lynx .
I 'm trying to figure out the best way to display the aleph character and some other mathematical symbols .
Possibilities include : ISO - 10646 / Unicode alefsym ℵ = ℵ
< FONT FACE = " symbol " > À
w
ℵ </FONT >
</FONT > À 0
2 À 0 Some good information about using extended character sets with web browsers is at Alan Flavell 's Notes on Internationalization .
2.2 Assumptions
2.2.1 Mathematical Assumptions
For most of this article , I assume :
The real numbers can be used to represent a linear continuum .
ZF is consistent .
ZFC .
I assume Choice , which is a standard assumption , so that for any two cardinal numbers , k and l , one of the following holds :
k < l k = l k > l This " Trichotomy of Cardinals " tells us that any two cardinals are comparable and all cardinals can be lined up in one ( very ! ) long well - ordered sequence , called the " aleph sequence . "
Trichotomy of Cardinals is actually equivalent to the Axiom of Choice .
( See my Axiom of Choice article for other equivalents of AC . )
In the metamathematics section I discuss CH in the absence of some of these assumptions .
2.2.2 Audience Assumptions
2.3 Terminology
2.3.1 The Word " continuum " Many people use the phrase " the continuum " to mean the real number line but be aware that there are many types of continua , including :
One dimensional linear continua - line , line segment , curve ( path of a point )
Euclidean space - one , two , three , or n dimensional
dimensional Einstein's four - dimensional spacetime
String theory 's ??- dimensional spacetime
Any manifold ( definition of `manifold ' is at UC Davis and Eric's Treasure Trove )
2.3.2 Ordered Sets Ordered sets are usually surrounded by angle brackets rather than square brackets .
Unfortunately , it 's hard to produce good angle brackets in HTML .
The best I could come up with is something like this :
< set , order relation > but these angle brackets look too much like less than and greater than signs ( which is what they are ! ) , so , I 'm using square brackets for ordered sets , i.e. :
[ set , order relation ]
2.3.3 More Terms and Notation Term Meaning AC The Axiom of Choice CH The Continuum Hypothesis GCH The Generalized Continuum Hypothesis ZF Zermelo Fraenkel set theory without Choice ZFC Zermelo Fraenkel set theory with Choice A#B A is not equal to B , e.g. : V#L ~A not A , e.g. : ~CH T |- S Statement S is a theorem of theory T or " T entails S. " E.g. : ZF +GCH |- AC
N set of natural numbers = { 0 , 1 , 2 , ...} ( order does n't matter ) R set of real numbers P ( X ) power set of X = set of all subsets of X card ( X ) cardinality of X w first infinite ordinal = set of natural numbers in their natural order = [ {0 , 1 , 2 , ...} , < ] = [ N , < ] ; pronounced " omega " w 1 first uncountable ordinal = set of all countable ordinals in their natural order = [ {0 , 1 , 2 , ... , w , w + 1 , ... , w + w , ... , w x w , ...} , < ] aleph 0 first infinite cardinal = card ( N ) = card ( w ) = card ( any countably infinite set ) aleph 1 first uncountable cardinal = card( w 1 ) c cardinality of a continuum = card ( R ) = card ( P( N ) ) countable finite or countably infinite isomorphic order isomorphic measure Lebesgue Measure
3. Mathematics of the Continuum and CH
The existence of irrational numbers , the uncountability of the reals , and the self - repeating , fractal - nature of the continuum show us that our intuition can't always be trusted .
To avoid problems with intuition , we formalize our intuitive notions and try to rigorously prove or disprove statements about these notions .
Notions related to the continuum and CH include measure , Baire category , density , separability , connectedness , continuity , completeness , compactness , and of course cardinality .
We start with cardinality , the main concept related to CH .
3.1 Sizes of Sets : Cardinal Numbers Before Cantor , collections were either finite or infinite and there was no notion of different levels of infinity .
Only Wallis 's infinity symbol , oo , was needed to represent the notion of infinity .
While investigating questions about singularities of Fourier series , Cantor made the revolutionary discovery that not all infinite sets are the same size .
Cantor showed that the natural numbers ( N ) , the integers ( Z ) , and the rational numbers ( Q ) are all the same size by constructing one - to - one correspondences between them ( for details see Seton Hall University 's Interactive Real Analysis ) .
Cantor described these as " countably infinite " or having " cardinality aleph 0 . "
Cantor also showed that the real numbers can not be put into one - to - one correspondence with a countably infinite set and thus are not countably infinite .
After this surprising discovery , Cantor proposed the Continuum Hypothesis and developed transfinite set theory , the " paradise of the infinite " from which Hilbert hoped we would never be driven !
3.1.1 aleph 0 < c = 2aleph 0
We now step through a sketch of the proof of the following , which will help us to define the continuum hypothesis ( CH ) and the generalized continuum hypothesis ( GCH ) .
aleph 0 < card ( R ) = c = card ( ( 0,1 ) ) = card ( P( N ) ) = 2aleph 0
3.1.1.1 aleph 0 < card( R ) = c Cantor showed , using his famous diagonal argument , that the real numbers ( R ) can not be put into one - to - one correspondence with the natural numbers .
Since the reals are a superset of N , their cardinality must be larger than aleph 0 .
He called the cardinality of the real numbers c for " continuum . "
3.1.1.2 card( R ) = card ( ( 0,1 ) )
When proving things about c it's sometimes easier to work with a set other than R that has cardinality c.
An example of such a set is the set of reals between 0 and 1 , which is called " the open interval zero one " and denoted : ( 0,1 ) There are many ways to show that all the reals can be put into one - to - one correspondence with ( 0,1 ) .
One way to do this mapping is to use the great and powerful arctan function .
You can use arctan with different multipliers and shifters to construct a one - to - one correspondence between R and any open interval of reals .
Exercise f( x ) =arctan( x ) maps R continuously one - to - one and onto ( - pi/2 , pi/2 ) .
What function of arctan maps R continuously one - to - one and onto ( 0,1 ) ?
Since this function of arctan maps R continuously one - to - one and onto ( 0,1 ) and its inverse -- a function of tan -- maps ( 0,1 ) continuously one - to - one and onto R , we see that R and ( 0,1 ) , in addition to having the same cardinality , are homeomorphic .
3.1.1.3 card ( ( 0,1 ) ) = card ( P( N ) ) = 2aleph 0
The set of reals between 0 and 1 can be represented by the set of all countably infinite sequences of 0's and 1's .
Think of these as representing binary " decimals " between .000000 ... and .111111 ... .
In this representation .
1=1/2 , .01=1/4 , .11=3/4 , etc .
The power set of the natural numbers , P ( N ) , can also be represented by the set of all countably infinite sequences of 0's and 1's .
Each sequence represents a subset of N by interpreting a 0 in position n to mean that the number n is not in the subset and a 1 in position n to mean the number n is in the subset .
This way of specifying a set is called the " characteristic function " of the set .
One way to represent all countably infinite sequences of 0's and 1's is to use Cartesian product notation : { 0 , 1} x {0 , 1} x {0 , 1} x ... = {0 , 1}aleph 0
Since in set theory {0 , 1} = 2 , we can also write this as : 2aleph 0
So we now have : aleph 0 < c = card ( R ) = card ( ( 0,1 ) ) = card ( P( N ) ) = 2aleph 0
3.1.2 CH and GCH Since CH is the proposal that c is the next level of infinity above aleph 0 , namely aleph 1 , and we have just shown that c = 2aleph 0 , another way to state CH is : 2aleph 0 = aleph 1
This is sometimes called the " arithmetic version of CH . "
In 1908 Felix Hausdorff proposed the following generalization of CH : For any cardinal aleph a , 2 aleph a = aleph a +1 This is the Generalized Continuum Hypothesis or GCH .
Another way to state GCH is : { card ( N ) , card ( P( N ) ) , card ( P( P ( N ) ) ) , card ( P( P ( P ( N ) ) ) ) , . . .} = {aleph 0 , aleph 1 , aleph 2 , aleph 3 , . . .}
Obviously CH follows from GCH and we have : ZF + GCH |- CH
Note that ZF +GCH |- AC so it would be redundant ( and misleading ) to put ``ZF C + GCH '' on the left side of the turnstile .
3.1.3 Sample Cardinalities After Cantor showed that there are different levels of infinity , Cantor and others quickly discovered the cardinality of many sets , including the following .
Cardinality Samples aleph 0 N = natural numbers
= natural numbers w = [ N , <] = natural numbers in their natural order
= [ , <] = natural numbers in their natural order Z = integers
= integers Q = rational numbers
= rational numbers algebraic numbers
set of all finite sets of natural numbers
set of all cofinite sets of natural numbers ( sets whose complements are finite )
< ww = < wN = set of all finite sequences of natural numbers aleph 1 w 1 = set of all countable ordinals c = 2 aleph 0 R = real numbers
= real numbers C = complex numbers
= complex numbers irrational numbers
transcendental numbers
R 2 = 2 - dimensional Euclidean space
= 2 - dimensional Euclidean space R 3 = 3 - dimensional Euclidean space
= 3 - dimensional Euclidean space R n = n-dimensional Euclidean space
= n-dimensional Euclidean space any non-empty open set of reals
any perfect set of reals
any Cantor set
any uncountable closed set of reals
any uncountable Borel set of reals
any uncountable analytic set of reals
any set of reals with positive measure
any set of reals of second category ( not meager )
P( N ) = set of all subsets of the natural numbers
) = set of all subsets of the natural numbers w w = w N = set of all countably infinite sequences of natural numbers
= = set of all countably infinite sequences of natural numbers w 2 = set of all countably infinite sequences of 0's and 1's
2 = set of all countably infinite sequences of 0's and 1's set of all coinfinite sets of natural numbers ( sets whose complements are infinite )
set of all infinite coinfinite sets of natural numbers
set of all open sets of reals
set of all closed sets of reals
set of all Borel sets of reals
set of all analytic sets of reals
C( R ) = set of all continuous functions from R to R
) = set of all continuous functions from to set of all analytic functions from R to R 2 c = 22 aleph 0 P( R ) = set of all subsets of the real numbers
) = set of all subsets of the real numbers R R = set of all functions from R to R
= set of all functions from to P ( P ( N ) ) = set of all subsets of the power set of N
In this hierarchy of cardinalities , CH is the claim that the aleph 1 and c levels should be merged into one level .
And GCH would mean that 2c = aleph 2 , 22 c = aleph 3 , etc .
3.2 Ordering Sets : Ordinal Numbers
To fully understand CH in the context of ZFC you need to understand the second infinite cardinal , aleph 1 , which is the cardinality of w 1 , the set of all countable ordinals .
Ordinal numbers tell you both the size of a set and the way its members are ordered .
Ordering sets is important because it is the way we extend the notion of counting to infinite sets .
For a finite set , ordering is a breeze .
No matter how you order a set with n members , its order type is isomorphic to : 0 1 2 3 . . . n- 1
This is sometimes written as [ {0 , 1 , 2 , ... , n - 1} , < ] or [ n , < ] to emphasize that it is an ordered set .
For infinite sets , the situation is quite different .
It turns out that for a countably infinite set , there are uncountably many non-isomorphic ways to well order it .
Here are some examples of ways to well order a countably infinite set .
The letters listed in the right column are used as place holders -- no member of the set is actually repeated in its ordering .
Countable Ordinal Order Type ( what it looks like ) w a b c... w + 1 a b c... a w + 2 a b c... a b w x 2 = w+w a b c... a b c... w2 = w x w = w+w ...+w... a b c... a b c... . . . abc... . . .
The collection of all countable ordinals is w 1 and the cardinality of this collection is the next level of infinity after aleph 0 , namely aleph 1 .
( A proof that the cardinality of the set of all countable ordinals is the next cardinal after aleph 0 is in Leary . )
Now , try to wrap your mind around the question of whether a continuum has the same number of points as this !
For more information about cardinal and ordinal numbers , see Infinite Ink's Cardinal Numbers .
3.3 Analysis of the Continuum
One path to finding out if CH is true is to look for sets of real numbers that have cardinality greater than aleph 0 and less than c .
If such sets exist , then CH is false .
While looking for these sets mathematicians have decomposed the reals into different types of sets and come up with characterizations of the reals , continua , and continuity .
3.3.1 Decomposing the Reals
There are many ways to decompose the reals .
We can split the reals into two sets , such as the rational and irrational numbers or the algebraic and transcendental numbers , or we can look at types of subsets of the reals , such as Borel sets and non-Borel sets .
The hope is that these decompositions will help us to characterize the entire set of reals .
For example , the rationals provide a good approximation to the reals because any real number can be approximated " as closely as you please " by a rational number .
This should serve as a warning though .
Despite the rationals ' great ability to represent the reals they are of a different cardinality than the reals .
So , just because a collection of sets is a good approximation of the reals does n't mean that it will give us much useful information about cardinality questions .
Bearing this in mind , let 's try to understand CH by looking at sets that , in some sense , represent the reals .
CH is true for closed , Borel , and analytic sets , i.e. : any infinite closed set either has cardinality aleph 0 or c .
or . any infinite Borel set either has cardinality aleph 0 or c .
or .
any infinite analytic set either has cardinality aleph 0 or c .
This means that if there is a set that falsifies CH , i.e. , a set with cardinality between aleph 0 and c , it will not be one of these types of sets .
Since there are only c of these types of sets and there are 2 c subsets of R , there are plenty of sets left which might falsify CH !
3.3.2 Characterizing the Reals R is a complete ordered field .
Any total ordering [ X , < ] satisfying the following three conditions is isomorphic to [ R , < ] .
X has no first or last element X is connected in the order topology X is separable in the order topology ( more to come )
3.3.3 Characterizing Continuity Hermann
Weyl said that " Precisely what eludes us is the nature of the continuity , the flowing form point to point ; in other words , the secret of how the continually enduring present can continually slip away into the receding past . "
The Hahn - Mazurkiewicz Theorem
A topological space X is a continuous curve iff X is a compact Hausdorff space which is second countable , connected , and locally connected .
3.4 What ZFC Does and Does Not Tell Us About c ZFC does not tell us much about c , it only tells us that c : is a cardinal number .
is larger than aleph 0 .
. is aleph a for some ordinal a .
for some ordinal .
must have uncountable cofinality .
For example , it can not be aleph w or aleph w + w , each of which have cofinality w .
or , each of which have cofinality .
can be any cardinal with uncountable cofinality .
For example , it can be any infinite successor cardinal including aleph 1 , aleph 2 , ... aleph n , ... aleph w + 1 , aleph w + 2 , ... aleph w + n , ... , where n is a natural number .
, , ... , ... , , ... , ... , where n is a natural number .
is not inaccessible ( this follows immediately from the definition of strongly inaccessible ) .
inaccessible ( this follows immediately from the definition of strongly inaccessible ) .
might be a very large cardinal .
ZFC gives no upper bound on the size of c .
4. Metamathematics and CH
The results of Gödel and Cohen about the consistency and independence of CH are metamathematical theorems .
Questions that are not within the framework of standard mathematics , but are rather about the framework of mathematics , are part of metamathematics .
Today the standard framework for mathematics is first - order logic and ZFC .
Most interesting results in logic are about the interplay between formal theory and model theory .
An example of this type of result is Gödel 's First Incompleteness Theorem , which tells us that if we have : a formal theory , T , which contains arithmetic
a model of that theory , M then there is a statement U that is true in the model but cannot be proved in the formal theory .
This type of statement is consistent with T but " undecidable " in T. Gödel 's Completeness theorem tells us that if T is consistent then U is undecidable in T if and only if models exist for both T+U and T+~U. Since ZFC contains arithmetic , it has been known since 1938 , when Gödel proved his incompleteness theorems , that it is incomplete .
CH was suspected to be one of its undecidable statements but it was n't until 1963 that Cohen proved the independence of CH .
He did this by constructing a model of ZFC in which CH is false ( i.e. , a model of ZFC + ~CH ) .
The technique he used to construct the model is called " forcing . "
In 1966 Cohen received a Fields Medal for his work .
A good discussion of these topics is in What is Mathematical Logic by J.N. Crossley and others .
The last chapter gives a nice description of forcing and the construction of a model of ZFC +~CH .
4.1 Models ( standard model , non-standard analysis and the hyperreal line , Hensel 's p-adics , forcing models )
One way to resolve CH would be to come up with a model of the reals , which we all accept as being the " correct " interpretation of the reals , in which CH is true or false .
A candidate is Robinson 's hyperreal line .
4.2 Adding Axioms to ZFC
Most mathematicians work within ZFC but some , usually set theorists , venture into the strange world of ZFC with additional axioms .
Many of these axioms were proposed because they shed light on the continuum and CH .
4.2.1 Why Not Just add GCH or ~GCH ?
The most obvious axiom to add is one that explicitly asserts GCH or its negation , ~GCH .
Since neither GCH nor its negation is " intuitively obvious , " this is not done .
Whenever someone proves something using either GCH or ~GCH it is explicitly stated .
Contrast this with AC , which is used freely in mathematics and its use is often not mentioned .
4.2.2 Large Cardinal Axioms Large cardinals are cardinals that cannot be constructed using only the axioms of ZFC .
Examples of large cardinals are inaccessible cardinals , hyperinaccessible cardinals , Mahlo cardinals , measurable cardinals , and supercompact cardinals .
There are lots more .
Surprisingly , some of these shed light on questions about the real numbers and the continuum .
MC = there exists a measurable cardinal
SC = there exists a supercompact cardinal ZFC+MC |- V#L
ZFC+SC |- Projective Determinacy
4.2.3 Martin's Axiom : A Weak Version of CH
ccc or countable chain condition or countable antichain condition A topological space is ccc if every family of disjoint open sets is countable .
Example : R with the usual topology ( open sets = open intervals ) is ccc .
MA or Martin's Axiom
If X is a ccc compact Hausdorff space , then X is not the union of less than 2 aleph 0 nowhere dense sets .
Suslin line A connected , linearly ordered , ccc space which is not separable ZFC +CH |- MA
ZF +GCH |- ( inaccessible = weakly inaccessible )
ZFC +MA + ~CH |-
There is no Suslin line .
4.3 ZF and Adding Axioms ( other than Choice ) to ZF Without the Axiom of Choice , there is no guarantee that infinite cardinal numbers are comparable .
Cardinal numbers can form a partially ordered set and aleph 1 and c might be on two incomparable branches of the partial order .
( Note : c is comparable to aleph 0 in ZF but in ZF there can be infinite sets that do not contain a countably infinite subset .
These are called " Dedekind finite " sets . )
4.2.1 ZF+GCH
4.3.1 V=L : Shrinking the Set Theoretic Universe ZF+V=L |- AC
ZF+V=L |- GCH
ZF+V=L |-
ZF + |- CH
4.3.2 ZF +AD : A Set Theoretic Universe that 's Incompatible with ZFC The Axiom of Determinacy ...
In ZF +AD the Axiom of Choice is false and the reals cannot be well ordered and , thus , are not equal to any aleph .
But , within this system every set of reals is either countable or has the cardinality of all the reals so the first three of the six versions of CH listed in section 1.1 hold .
4.4 Alternate Mathematical Frameworks
Another path to resolving CH is to view all of mathematics through a framework other than the standard first - order logic and Zermelo Fraenkel set theory .
Possibilities include using Second - Order Logic , Linear Logic , Intuitionist Logic , or the meta framework , Category Theory , which can be used to encompass all frameworks .
Intuitionist Logic
If we restate the question in this form : " Is it impossible to construct infinite sets of real numbers between 0 and 1 , whose power is less than that of the continuum , but greater than ale ph - null ? " , then the answer must be in the affirmative ; for the intuitionist can only construct denumerable sets of mathematical objects , and if on the basis of intuition of the linear continuum , he admits elementary series of free selections as elements of construction , then each non-denumerable set constructed by means of it contains a subset of the power of the continuum .
- Brouwer , 1912 , p. 134 of Collected Works
5. Philosophy of CH
Is there a truth about CH and , if there is , can we know this truth ?
What does CH have to do with reality , both mathematical reality and physical reality ?
These type of philosophical questions have been debated since at least the time of Ancient Greece when the Pythagoreans discovered irrational numbers and the mystery of the continuum started to unfold .
The two main philosophical viewpoints are realist and antirealist .
The quote below by René Thom characterizes pretty well these two views .
Kronecker represents the antirealist view and Thom represents the realist view .
Much emphasis has been placed during the past fifty years on the reconstruction of the geometric continuum from the natural integers , using the theory of Dedekind cuts or the completion of the field of rational numbers .
Under the influence of axiomatic and bookish traditions , man perceived in discontinuity the first mathematical Being : " God created the integers and the rest is the work of man . "
This maxim spoken by the algebraist Kronecker reveals more about his past as a banker who grew rich through monetary speculation than about his philosophical insight .
There is hardly any doubt that , from a psychological and , for the writer , ontological point of view , the geometric continuum is the primordial entity .
If one has any consciousness at all , it is consciousness of time and space ; geometric continuity is in some way inseparably bound to conscious thought .
5.1 Mathematical Realism : CH is True or False As ??? said , most mathematicians are realists during the week and formalists on the weekend .
The following are some mathematicians ( with their realist hats on ! ) who 've stated their opinion about the truth of CH : True : Cantor
Cantor False : Cohen , Gödel , Martin , Solovay
Here 's a quote from Cohen .
( He uses C , instead of c , for continuum . )
A point of view which the author feels may eventually come to be accepted is that CH is obviously false .
The main reason one accepts the Axiom of Infinity is probably that we feel it absurd to think that the process of adding only one set at a time can exhaust the entire universe .
Similarly with the higher axioms of infinity .
Now aleph 1 is the set of countable ordinals and this is merely a special and the simplest way of generating a highter cardinal .
The set C is , in contrast , generated by a totally new and more powerful principle , namely the Power Set Axiom .
It is unreasonable to expect that any description of a larger cardinal which attempts to build up that cardinal from ideas deriving from the Replacement Axiom can ever reach C .
Thus C is greater than aleph n , aleph w , aleph a , where a= aleph w , etc .
This point of view regards C as an incredibly rich set given to us by one bold new axiom , which can never be approached by any piecemeal process of construction .
Perhaps later generations will see the problem more clearly and express themselves more eloquently .
- Paul Cohen on p. 151 of Set Theory and the Continuum Hypothesis
5.1.1 CH and the Physical World For the advancing army of physics , battling for many a decade with heat and sound , fields and particles , gravitation and spacetime geometry , the cavalry of mathematics , galloping out ahead , provided what it thought to be the rationale for the real number system .
Encounter with the quantum has taught us , however , that we acquire our knowledge in bits ; that the continuum is forever beyond our reach .
Yet for daily work the concept of the continuum has been and will continue to be as indispensable for physics as it is for mathematics .
In either field of endeavor , in any given enterprise , we can adopt the continuum and give up absolute logical rigor , or adopt rigor and give up the continuum , but we can't pursue both approaches at the same time in the same application .
- John Archibald
Wheeler on p. xii of Weyl's The Continuum
5.2 Not Mathematical Realism
The two mainstream antirealist views are formalists and constructivists .
( For now see my descriptions of formalism and constructivism in the Axiom of Choice section of the sci.math FAQ )
6. Conclusion
Maybe the conclusion from all this is that trying to reduce the continuum to a set of individual points is the wrong way to think about it .
This reductionist strategy has also had problems in physics .
Today there are many physicists moving away from reductionism and towards holism .
Maybe a similar path should be taken in mathematics , away from thinking of point sets as the fundamental objects and towards thinking of structures and relations as the fundamental objects of mathematics .
There is a fundamental error in separating the parts from the whole , the mistake of atomizing what should not be atomized .
Unity and complementarity constitute reality .
- Werner Heisenberg
Appendix 1 : Timeline
c.540 BCE Pythagoras c.515 BCE
Parmenides of Elea c.490-c.435 BCE
Zeno of Elea c.408-355 BCE
Eudoxos 384-322 BCE
Aristotle c.287-212 BCE
Archimedes 1564 -1642 Galilei , Galileo 1571 - 1630 Kepler , Johannes 1642 - 1727 Newton , Isaac 1646 - 1716 Leibniz , Gottfried Wilhelm 1777 - 1855 Gauss , Karl Friedrich 1781 - 1848 Bolzano , Bernard 1789 - 1857 Cauchy , Augustine Louis 1815 - 1897 Weierstrass , Karl 1831 - 1916 Dedekind , Julius 1845 - 1918 Cantor , Georg 1862 - 1943 Hilbert , David December , 1873 Cantor proved R uncountable 1877 Cantor proposed CH 1878 Cantor 's proposal of CH published 1908 Hausdorff proposed GCH 1934 - Cohen , Paul born April , 1963 Cohen circulated notes about independence of CH May 3 , 1963 Cohen lectured on independence of CH
Appendix 2 : Confusion About CH in Popular Literature
The most common confusions about CH in popular literature ( and in Internet discussions ! ) are a writer : Assuming CH or GCH is true without stating this assumption .
Since CH is not a standard assumption in mathematics and , in fact , most set theorists think it is false , it is important for a writer to state her assumptions about CH .
Misstating CH .
A common misstatement of CH is c = 2aleph 0 .
As we saw in section 3.1.1 , this statement is a fairly simple theorem to prove within ZFC .
An example of confusion is in George Gamow 's One Two Three ... Infinity .
On page 34 he says :
The sequence of numbers ( including the infinite ones ! ) now runs : 1 2 3 4 5 ... aleph 1 aleph 2 aleph 3 ... and we say " there are aleph 1 points on a line " or " there are aleph 2 different curves " ...
Another example of confusion is on page 46 of Michael Guillen 's Bridges to Infinity : an aleph 0 set ... has precisely 2 aleph 0 conceivable subsets ...
It is the first stepping stone beyond infinity , the first transfinite number , which Cantor named aleph 1 ...
A set with aleph 1 elements in turn , has precisely 2 aleph 1 conceivable subsets .
This is the second stepping stone , the second transfinite number aleph 2 , and so forth .
Guillen continues his confusion on page 50 : To this day we still do n't know exactly how many irrationals there are , although it has been established that the total number cannot be more than aleph 1 .
Cantor himself guessed that the total number of irrationals is exactly aleph 1 , mainly since aleph 1 is the next largest infinity after aleph 0 defined by set theory .
His guess came to be known as the Continuum Hypothesis .
But there is still the uneliminated possibility that the number of irrationals actually lies between aleph 0 and aleph 1 .
Your mission , should you choose to accept it , is to find all the mistakes in these quotes .
After you 've done that , take a look at the mistakes I found and let me know if you find any more ( or disagree with the ones I found ) .
If you know of other misstatements of CH , please let me know .
Acknowledgments
Thanks to Jeremy Henty who found a mistake in my sample cardinalities list .
More thanks coming ...
Search the Net for " continuum hypothesis "
The following canned searches will give you a quick start at searching the Net for the phrase " continuum hypothesis " - have fun !
MetaCrawler
SavvySearch
MetaSearch
The next section gives links for searching Usenet news archives .
Public Discussion
Good news groups for discussing these topics are : sci.logic
sci.math
sci.math.research ( moderated )
sci.philosophy.tech
You can also search the Deja News archives using the following canned searches : continuum & hypothesis ( ( ~g sci.math * ) continuum ) | ( ( ~g sci.math * ) continua ) ( ( ~g sci.logic ) continuum ) | ( ( ~g sci.logic ) continua ) ( ( ~g sci.physics * ) continuum ) | ( ( ~g sci.physics * ) continua ) ( ( ~g * philosophy * ) continuum ) | ( ( ~g * philosophy * ) continua ) ( ~s continuum ) | ( ~s continua )
( ¡¡ Draft Draft Draft Draft Draft Draft !!)
Join me in saying F - YOU to my tastebuds .
Steve , Do n't Eat It !
Vol. 1
Potted Meat Food Product
There are n't too many products that feel the need to reassure you that they are , in fact , " food . "
Already not a good sign .
The list of ingredients is long and horrifying , coming right out of the gate with " MECHANICALLY SEPARATED CHICKEN . "
Oddly enough , I 'm about to be separated from my lunch , and I have n't even opened the can yet .
Other ingredients include BEEF TRIPE , BEEF HEARTS , AND " PARTIALLY DE - FATTED COOKED PORK FATTY TISSUE " How does one de -fat fat ?
Bizarre .
God knows what else is in here .
Okay , I 'm going to go try it now .
If i'm not back in ten minutes , call Poison Control ...
I 'm back .
Oofah .
Okay , here we go -- Pulling back the lid ( not recommended ) lets loose an odor that punches you in the nose like a stinky fist .
If you 've ever smelled a can of dog food , it 's just like that .
Only imagine you are opening the can while your head is wedged in a horse 's ass .
Inside is a smooth , oddly pink meat paste .
So smooth , in fact , I dare call it " creamy . "
( I actually got a little gaggy just typing that . )
Surprisingly , it was a little spicier than I expected .
Although , that sensation may have been a by - product of my tastebuds dying .
The can shows a serving suggestion of the Potted Meat being served on squares of toast .
I would also suggest squares of toilet paper .
Or maybe a nice diaper .
All I can tell you is , I survived the first installment of " Steve , Don't Eat It . "
And I have to admit it may have even been a little educational .
I know I learned at least one thing from " Ralph's Potted Meat " -- Ralph is a fucking dick .
Not surprisingly , I 've come up with a little slogan the peeps who handle Potted Meat Marketing can use ( no charge , as always ) : POTTED MEAT FOOD PRODUCT : Made By , For , And With Assholes .
Steve , Do n't Eat It !
Vol. 2
Pickled Pork Rinds
While perusing the " Good Lord , NOOOO ! " aisle of the supermarket , I came across the atrocity known as Dolores Brand Pickled Pork Rinds .
These are not the crunchy pork rinds you 'll often see over by the chips .
These are their grosser , soggier , potentially botulism - ier cousins .
The label says " Ready to Eat . "
They left off " By Dumb - Asses . "
There is also a red starburst proudly proclaiming " Nuevo Envase de Vidrio Reusable " .
Not knowing much Spanish , I could only assume that meant " Oh Crap -- A Jar of Skin ! " I was wrong .
It means : " New Reusable Glass Container " which I think is their subtle way of saying you can also use the jar to puke in .
Okay .
I 'm going to go consume .
If I do n't make it back to finish this review , tell my wife I love her .
And not to eat the pork rinds .
****** ****** I 'm back .
First off , I would like to say to Dolores , I am sorry .
I do n't know what it is I did to you , but you have gotten me back and we 're even .
I knew I was in trouble as soon as I opened the jar , and heard no reassuring vacuum seal .
I must admit that made me nervous , but what are the odds of a dusty jar of warm pig skin going bad , right ?
Lifting the lid revealed a weird sour smell , something akin to mild vinegar and stale meat .
I almost want to say it was like a freshly douched pork chop .
But I wo n't .
Why ?
Because I 'm a fucking gentleman .
As I attempted to fish out a " good one , " I could n't help notice the alarming skin texture .
For all those times I wondered what it would be like to gnaw on my grandmother 's thigh , I was about to find out .
Taking a bite , I quickly realized the swatch of fat was n't chewy at all .
In fact , it was eerily soft , not unlike my own swatches of fat .
This was a blessing because less chewing meant less actual contact with my mouth .
I think it 's fair to say it was everything you 'd expect from a sliver of briney fat .
It was also the only time in my life my brain formed the sentence : " I have a mouth full of cellulite . "
While I cannot endorse the eating of Pickled Pork Rinds , I do endorse playing with it like a puzzle .
I did have some fun trying to put the pig back together , but eventually that got boring as I lost the will to live .
I have a feeling Dolores and I are not done .
As long as she continues to market such treats as Pickled Pork Lips and the bewildering Chili Brick , I have no doubt she and I will do battle again .
Steve , Do n't Eat it !
Vol. 3
Beggin ' Strips Beggin ' Strips are bacon - shaped , bacon - flavored treats for dogs .
In the commercial a dog runs around the house like a maniac shouting BACON , BACON , BACON , BACON , BACON !
It 's weird , because I do the exact same thing .
Beggin ' Strips slogan is " Dogs do n't know it 's not bacon ! "
Newsflash : Dogs are retarded .
Mine used to eat his own vomit , and wag his tail while he did it .
I 'll be the one to decide if this stuff tastes like bacon or not .
I know these snacks are n't made for human consumption , but while I was in the store the ingredients list looked pretty tame so I was n't too concerned .
Somehow I had missed one extremely dubious word sitting there all by itself .
" MEAT " .
That 's all it says ... meat .
Meat is a pretty large umbrella .
Beef is meat .
Pork is meat .
Horses , monkeys , and allegedly Arby 's roast beef are meat .
Even Bea Arthur 's ball sack is meat .
Okay , maybe I 've gone too far .
I have no idea what that is they are serving at Arby 's , but you get my point .
Alas , there is no turning back now .
Despite the fact that I am a grown man with children , I 'm off to go eat dog food .
And what better way to have Beggin ' Strips than in a Beggin ' , Lettuce , and Tomato Sammich !
**********
********** I 'm back .
And I 'm sad to report that I did not run around the house yelling " Bacon ! " I did , however , run around the house yelling " Call 911 ! " GodDAMN these are foul .
Do n't try this at home .
I 'm not sure it 's safe , and I am sure your tongue may kill itself .
While they were a little too artificially colored red to pass for real bacon , I was pleased to see they were not all the same shape .
Similar to slices of real bacon , they each have their own curvy and shriveled identity .
( Just like my aunts and uncles . )
And somehow these Beggin ' Strips also managed to smell just like bacon .
Oopsie .
Typo .
I meant to say " the smoky puke of a thousand maniacs . "
To put it simply , this is the devil 's bacon .
Even a healthy dose of bread , mayo , lettuce and tomato could n't come close to masking the evil .
The bitter nastiness literally got worse with every chew , and I was overcome by the urge to go in the backyard and eat grass until it was all out of me .
The following is a message to all dogs who read The Sneeze : First , sit .
Sit !
Good boy .
Now listen to me .
Beggin ' Strips do NOT , I repeat , DO NOT TASTE LIKE BACON .
You are all being played for chumps !
Alright , now give me your paw .
Okay , roll over !
Good boy !
Now go take a steamy dump in your master 's shoe .
Go on !
Get !
In closing , the only silver lining to this dark dark cloud is I have figured out why so many dogs lick their own assholes .
They are trying to kill the taste of Beggin ' Strips .
( By the way , it does n't work . )
( All Steve , Do n't Eat It 's can be found here . )
Steve , Don't Eat It ! -- 1991 Urkel-Os
Years ago , my friend Lisa gave me an autographed box of Urkel - O's cereal .
It is signed : " To Steve -- God Bless , Jaleel White . "
I do n't know , but if I were God , I 'm not sure I 'd listen to Urkel .
In fact , I think my Godly response might be something like , " Hey , fuck you , Urkel .
Do n't tell me who to bless . "
Incidentally , I 'm not the " Steve " it was signed for .
Lisa found the box in a collectibles store , but that 's okay .
I do n't mind being a second - hand Steve .
I had always been a little creeped out that the cereal was still in the box since 1991 .
But the Urkel - Os are now 14 years old , and I am no longer creeped out .
I 'm psyched , because I realized what I have in my possession is not just a box of old cereal ( and possibly some larvae ) , but a chance to taste history .
This particular box of Urkel - O's is unique because it 's some kind of weird sales sample , and has " marketing features and benefits " on the back .
One of the " features " is actually listed as : Fun , circle - shaped product .
I had no idea circles were so fun .
At least now I know what to get the kids next Christmas .
A fucking circle .
I 'd also like to point out , that the cereal itself does n't have a single thing to do with Urkel .
It 's just strawberry and banana flavored rings .
If there was an episode where Urkel lost his virginity to a strawberry flavored ring , I missed it .
You'd think for a celebrity tie - in , they 'd at least make half an effort to actually " tie " it in to something .
Even if they just connected the loops together , I 'd buy that they were supposed to be Urkel 's glasses .
In fact , C3 PO 's cereal would have been a better Urkel - O's -- look at 'em .
Come to think of it , what the hell were C3 P0 's supposed to be anyway ?
His eyes ?
That there is some jedi bullshit .
Well , it 's cereal time , and I 'm gonna go eat me a big ol ' bowl of 1991 ...
********** **********
I 'm back , and I 'm not exactly sure how to say this , but ...
THE CEREAL IS STILL GOOD !
I swear to God .
I 'm a little freaked out .
Should I call the Pope ?
This is a miracle , right ?
I mean , I used to think the idea of suspended animation and cryogenics was pretty cool , but the hell with that .
If I die , do n't freeze my brain -- just bury me in a box of Urkel - O's .
Apparently it has the ability to stop time .
And what 's even more ridiculous is the milk I used was only 2 days past the expiration date , and it tasted funkier than the cereal .
( Which , by the way , was only 4,380 days past its expiration date . )
My wife does n't like it when I eat potentially life - threatening stuff .
I do n't know what her problem is .
Maybe she 's just afraid to raise our children alone .
What a baby .
When I told her that the cereal was still good , she was amazed for a moment and then she said , " Good .
Now you can throw it away . "
Throw it away ?!
She 's a loon .
I told her I 'm putting it right back in the box so I can try eating it again in six years when it turns 20 .
It looks like this episode of Steve , Do n't Eat It has a happy ending .
Although , I am glad Urkel signed the box " God Bless . "
I may need it in heaven tonight , after I die from strawberry - flavored maggots hatching in my rectum .
( All Steve , Do n't Eat It 's can be found here . )
Steve , Do n't Eat It !
Vol. 5
Breast Milk Until now , the foods I 've sampled for this section have all come from the supermarket .
Then one day I realized that a perfectly viable " Steve Don't Eat It " candidate has been sitting right under my nose for months .
Right in my very own refrigerator .
And it came right out of my wife !
No , I 'm not talking about that giant cucumber , perv .
I 'm talking about breast milk .
That 's right .
And not just a little drop off the odd finger , but a genuine slug of freshly - pumped wife juice .
( I 'll go ahead and ignore the shiver I just got , and keep typing . )
Thinking about actually drinking breast milk has caused me to ponder the question :
Is it not weirder to drink cow 's milk which is truly intended for baby cows ?
The answer :
Hell no !
The only thing weirder than me drinking breast milk , is the fact that milk is coming out of my wife 's chest in the first place .
It sure as hell did n't do that when I met her .
I 'm telling you , the whole thing is lunacy .
I love my wife , but does she really have to be such a mammal ?
Okay , I have put this off long enough .
The time has come .
I 'm off to The Booby Bar to see what they 've got on tap ...
Oh , where do I begin ?
Well , I did feel the need to find the appropriate glass .
Drinking it from a baby bottle seemed too on the nose ( not to mention too creepy ) , and I did n't have enough milk to justify a martini glass .
( Although with a splash of Bailey 's I suppose you 'd have yourself a nice " Nippletini . " )
Luckily the " Dumbass Website Gods " smiled down upon me .
I came across the only shot glass we happened to have in the house , and it was actually from Wisconsin -- The Milk State !
I must admit that my aversion to drinking breast milk is something of a double - standard .
Let me try to put this as delicately as I can out of respect to my female readers ... but some women have been known to willingly " ingest " a certain dubious " body fluid " made by men , during moments of " intimacy . "
( These moments are known as " blow jobs . "
These women are known as " awesome . " )
Nevertheless , I could n't bring myself to just do the whole shot at once , so I started out with a little girly sip .
And the truth is it 's not that bad at all .
It tastes like milk , just slightly more sweet .
And mentally , just slightly more making me want to gargle with Clorox and assume the fetal position while I question my life .
Now , while I may have issues with drinking this stuff , I have been a huge fan of its packaging for years .
You may be interested to know that breast milk is now available in a variety of convenient sizes : from the portable , half - pint container ... to the more economical one gallon jugs .
To make things more interesting , and a little bit easier on myself , I decided to break out the Hershey 's syrup and whip up some chocolate breast milk .
This time I just knocked the shot right back , and two words immediately came to mind : Yoo Hoo .
It tasted just like good ol ' Yoo Hoo .
I almost want to say that drinking breast milk is n't so bad , except the other two - word phrases that also came to mind were " stomach pump " and " kill me . "
I 'm officially leaving all future breast milk drinking in the capable hands of my baby boy -- the one guy who now gets to second base with my wife way more than I do .
But , I do n't mind .
I love that little asshole .
( All volumes of Steve , Do n't Eat It can be found here . )
Steve , Do n't Eat It !
Vol. 6
Natto I recently came across a container of fermented soybeans in the supermarket .
I do n't mean an old container of soybeans some stockboy forgot to toss .
These are fermented - on - purpose soybeans from Japan .
That 's what Natto is .
I remembered hearing about this stuff on Iron Chef one time when it was the secret ingredient .
The judges in the show were commenting on what a great job the chefs had done to " supress the smell " of the natto .
I 'm no Iron Chef , but I 've got a clever way to supress the smell .
Do n't put it in your fucking food .
I might not win " Battle Natto , " but I promise you my dinner wo n't smell like stank - ass soybeans .
I found it slightly unsettling that the sealed styrofoam container had creepy little airholes in it .
As if what was inside needed to breathe .
I dared to lift the lid , which made me regret that I needed to breathe .
The natto was coated in some kind of sick slime and had the complex yet playful aroma of a dumpster in July .
Actually , the little pile inside looked kinda like baked beans .
It also smelled kinda like baked beans .
If they were baked in the filthy heat of Satan 's asshole .
This particular batch was made by a company in Japan called Shirakiku .
I have n't been able to determine if Shirakiku is a food manufacturer , or just a store that sells gag gifts and practical jokes .
It might be both .
Not unlike Michael Jackson , these harmless soybeans had undergone some kind of hideous transformation .
They were now a freakish version of their former selves .
( Which , coincidentally , should also be kept away from your children . )
The most disturbing aspect of this stuff is it seems to get " activated " when you stir it .
What I mean by this is , ( and I may actually weep , but ... ) the slimy coating on the beans develops into stringy , stretchy , marshmallow - like strands that will forever haunt my dreams .
Basically , if you move it back and forth enough , you 're left with a gross , sticky mess .
( Hey , natto and I have at least one thing in common ! )
And now that I think about it , that 's exactly what it looks like the pranksters back at Shirakiku did into my beans .
You guuuys !
I force - fed myself a big ol ' spoonful , and found it to be slightly rancid and extremely bitter .
Unfortunately , swallowing did n't help dissipate the flavor because the strings of bean jizz melted , coating my mouth and lips with a glistening sheen of sadness .
The entire experience is difficult to describe , but if you can remember back to the very first time you made out with a hobo's ass , it 's a lot like that .
What I find most hilarious is that there is an expiration date on the package .
What could they possibly expect to happen to the product on this date THAT HAS NOT ALREADY OCCURRED ?!!!
Also , nestled in this mound of compost was a li'l packet of mustard .
In its place , I would strongly suggest a written apology .
I do have one last theory about the date on the package .
It may be an expiration date , but not for the beans .
If you finish the container , that 's the day you die .
( All episodes of " Steve , Don't Eat It ! " can be found here . )
Steve , Do n't Eat It !
Vol. 7
Cuitlacoche Cuitlacoche is a black fungus that infects corn fields , making the kernels bulbous and swollen as they fill with spores .
It also goes by the name Huitlacoche .
If you 're having trouble with the pronounciation , it 's : Cuitlacoche ( kweet - lah - KOH- chay ) or Huitlacoche ( dat- sfuckin - NAS - tee ) .
It 's safe to say this is the first time I 've ever paid for an infection .
I am , of course , not counting the one I got from your mother .
( YES !
You walked right into that . )
I 've read that U.S. farmers consider it a disease and destroy it .
Farmers in Mexico put it in cans and sell it as a delicacy .
I travelled far and wide to find my own precious can of Cuitlacoche .
Okay , it was at my supermarket , but I had to drive like two miles to get there and got stuck at a couple of lights .
Enough chit-chat .
I 'm gonna go dine on a can of disease .
But before I do , I really do feel bad about that cheap mother joke .
My sincere apologies to you and your lovely mom .
( The filthy whore . )
Be right back !
Oh , sweet Christ .
Visually , I think the bar for Steve , Do n't Eat It ! is about to be set at a new low .
So I 'm going to ease you people into this one .
Let 's begin with a single spore - filled kernel before we examine the entire contents .
The following picture is a swear - to - God - unretouched - side - by - side comparison of a normal kernel of corn and an infected huitlacoche kernel , both from the same can .
These results can also be achieved by bombarding a kernel of corn with gamma rays and then making it angry .
( But be warned .
You wo n't like it when it 's angry . )
Alright , you 've waited long enough .
Presenting the entire can of imported sludge ( that I was actually charged money for ) ...
Do n't worry , I checked the ingredients before I tasted it .
" Smoker 's lung " was not on there .
Before I even got the whole can open , I detected a vague aroma of sweet corn , along with what I can only describe as a deep musky funk .
Put 'em together and it smells like corn that forgot to wipe .
In just a single serving , you 'll experience a wide array of textures .
Without getting too gross , it 's because the disease is more advanced in some kernels than others .
One bite might be kinda chewy , while the next might burst in your mouth like a black pus-filled blister .
( Whoops , forgot about the not - too - gross thing .
Oh well .
Nuts to you ! )
So , how does Huitlacoche taste ?
Does it matter ??
LOOK AT IT !
I guess it would be fair to say it does n't taste as truly horrible as it looks .
The flavor is elusive and difficult to describe , but I 'll try : " Kinda yucky . "
Hey , that was n't so hard after all .
( Sometimes I forget I 'm a goddamn wordsmith . )
For any connoisseurs , I 'm not sure if this stuff would go better with red wine or white .
How about with a bottle of Bactine ?
I 've always found that goes great with infections .
Huitlacoche also goes by some other names .
It 's frequently called Maize Mushroom , Corn Smut , and Mexican Truffle .
I 've even heard it referred to as " Devil Poop " -- but that was only after I said it .
( For God 's sake , it comes with little bits of corn already in it !
Talk about a time - saver . )
I thought it was interesting that Monteblanco chose to make their company logo the focal point of the can .
I also found a can of huitlacoche from Goya .
They , too , have downplayed the visuals by hiding it in a mild - mannered burrito .
I went ahead and made a new can label for the gang back at Cuitlacoche Central .
As always , this is a free service .
Well , that brings us to the end of a long overdue Steve , Do n't Eat It !
And now I have a belly full of diseased corn .
Maybe I should go see a doctor about a penicillin shot .
For your mom .
( YES !
In your face !
Oh man ... )
All Steve , Do n't Eat Its can be found here .
Follow me on Twitter RIGHT HERE .
Steve , Do n't Eat It !
Vol. 8
Prison Wine I 'm simply not cut out for jail .
Where I really shine is watching Tivo on a couch .
As soon as you need me to survive a sharpened - spoon attack , ( or even a regular spoon attack ) -- I 'm just not your guy .
Nevertheless , if I do ever end up in the big house , there 's a chance I 'll make it out alive as the prison brewmeister .
I know this for I have read the 1994 book " You Are Going To Prison " by Jim Hogshire .
( Well , I actually only skimmed through the book , so I 'll probably be dead in a day and a half . )
The following book excerpt contains the prison wine recipe ...
" Prison hooch can be made in your cell toilet ( as long as you do n't mind using other people 's toilets or finding some other solution ) , or more often , in plastic trash bags .
The recipe is simple : make a strong bag by double or triple - bagging some plastic trash bags and knotting the bottoms .
Into this , pour warm water , some fruit or fruit juice , raisins or tomatoes , yeast , and as much sugar as you can get ahold of ( or powdered drink mix ) .
Now tie off the top of the bag , letting a tube of some kind protrude so the thing wo n't explode while it gives off carbon dioxide .
Now hide the bag somewhere and wait at least three days .
A week is enough .
One of the problems you have right away with making wine in prison is the difficulty getting yeast .
It 's a strictly forbidden item and you might not be able to get any .
In this case you can improvise the by using slices of bread , preferably moldy ( but not dry ) and preferably inside a sock for easier straining .
If you choose to brew your wine in your cell , you 'll need to hide it behind your bunk and do what you can to hide the smell .
Burning cinnamon as incense is one way .
Spraying deodorant around is another .
Normal wine takes at least a month if not six weeks to make at all properly -- but in hell , this is all you get . "
With that , I give you the longest , scrolliest , bandwidth destroyingest Steve , Do n't Eat It to date .
Phooey on you sobriety !
I 'm makin ' some hooch !
I gave serious thought to whether the straining sock should be clean or not .
I came to the conclusion that it should n't .
In the spirit of Steve , Do n't Eat It , I need to take it to the extreme !
Plus , I was already wearing dirty socks and my clean ones were in the bedroom , like 20 feet away .
Here are all the ingredients necessary .
I thought it would be nice to make both red and white prison wine to match well with whatever dishes the prison chef might prepare .
I 'm sure Martha Stewart did the same if / when she brewed this stuff in her cell toilet .
But she probably used a clean sock , being as she 's fancy .
Getting slightly moldy bread proved to be more difficult than I expected .
I bought the cheapest white bread I could find and waited for it to go green .
I swear to God it stayed good for a month .
Whenever I WANT bread in my house , it 's moldy .
Now that I actually needed it to happen , it would n't .
Luckily , I discovered an old green hot dog bun in a bag on top of the fridge and put that in with the bread to teach it the ways of the mold .
In this way , the green bun was Yoda .
It worked perfectly .
And it did n't even sound suspiciously like Grover .
It was finally time to begin the brewing process .
I reflected on the artisans around the world who 've dedicated their lives to the craft of winemaking , as I lovingly shoved moldy bread in my socks .
I decided to break up the two wine recipes thusly ...
The Red Prison Wine ( pictured above ) would be made with red grape juice , tomatoes , raisins , sugar , the dirty sock filled with moldy bread , and one packet of yeast .
( I thought it would be interesting to add yeast to one batch and not the other , and compare the results . )
As stated in the book , yeast is definitely contraband , but for the sake of this culinary experiment we 'll just assume I gave the prison baker a hand - job .
But then the guy would n't give me the yeast !
SO I STABBED HIM WITH A PEN IN THE EYE AND TOOK IT !
And I was all , " DON'T FUCK WITH STEVE ! " Yes .
This is what we should assume .
As for the White Prison Wine , it would contain :
White grape juice and the moldy bread sock .
No extra yeast added .
For the requisite sugar , I went with some powdered drink mix , a few packets of ketchup and a handful of Tigger fruit snacks .
Hmm ...
I can't put my finger on why , but I could swear these ingredients almost look at home in this garbage bag .
It must be the lighting .
( Incidentally , I realized I forgot to take a picture of this one with the grape juice , but then I remembered that 's okay because ... in Hell , this is all you get ! )
I knotted up the bags , poked a straw in the top as the recipe called for and tucked them away in our bathroom for safe keeping .
If you 're wondering why I did n't actually make this stuff in my toilet -- give me a break .
I 'm all too aware of my previous creations in that toilet .
Just be glad I 'm drinking moldy sock juice at all for you fuckers .
Within a day or two , the bathroom had taken on a strong sour smell .
That " bar at 4 AM " smell .
Everytime my wife went in there she complained about it .
Everytime I went in there I just had the urge to pick up a skank .
7 long days later it was time to crack open the bags and see what we had ...
I started with the red , and it somehow smelled amazingly good !
Like fresh , sweet grapes .
You know , there 's an old expression that says
In wine , there is truth .
In this case , I could also make out some chunks and what appeared to be a severed foot .
Then there was the " white " wine .
This one 's aroma was slightly more earthy .
Do you know that smell of grass right after it 's cut ?
That 's nice .
I was just making chit-chat , because this smelled like rotten eggs tucked into the anus of a dead cat .
I really do n't understand what could have gone wrong !
I used moldy bread and socks , EXACTLY LIKE THE RECIPE SAID !
I purchased two large decanters , carefully transferred my fruity after - birth into them , and brought it to my friends Anthony and Steve for a group tasting .
I did n't strain the red , just in case anybody wanted Prison Sangria .
First we sampled the red prison wine .
It was sour , but certainly not terrible .
And the good news was it was definitely wine ... like ... ish .
It was surprisingly dry .
All the sugar was gone .
Then again , if you were sugar , would you have stayed in that shitty - ass garbage bag ?
We were all pleasantly surprised .
Regarding Red Prison Wine Anthony : " I would drink this in prison . "
Steve : " I would drink this in high school ! "
It was time for the white .
Wine tasters refer to a wine 's aroma as its " nose . "
This wine 's nose was a rectum .
If this was n't wine , I had somehow stumbled upon the recipe for Prison Stink Bombs .
Forget about drinking it , I was afraid of getting it on me .
Through some miracle , it actually tasted nothing like it smelled .
In fact , there was very little flavor other than sour , watery alcohol .
It 's hard to believe this started out as a bag of fruit snacks and grape juice .
Yet somehow these ingredients went from sweet and child - like to harsh and alcoholic quicker than Lindsay Lohan .
Now that I think about it , prison inmates frequently turn to religion .
I 'm not very religious , but maybe I should be .
Sure , Jesus made wine from water , but I did it with a dirty sock and fruit snacks !
You tell me what the bigger miracle is .
And I 'm not even the son of God ... or am I ?
Out of curiousity , I purchased a device from a brewing supply house that allowed me to measure the wine 's alcohol content .
The red came in at 10.5 % alcohol .
The white was a whopping 14 % alcohol !
All of this led me to a simple conclusion : I miss old Lindsay Lohan , with the big boobies .
WARNING : Do n't try this yourself .
Brewing alcohol in unsterile conditions is an obvious health risk .
Stay safe , and leave the food stupidity to me .
Thanks .
( That goes for you too , Lohan . )
All episodes of Steve , Don't Eat It ! can be found here .
Purchase " You Are Going To Prison " here .
Steve , Do n't Eat It ! - Silkworm Pupas
Imagine a cute little silkworm all snug in his cocoon .
Perhaps his name is Arthur .
He rubs his tiny hands together and thinks , " Finally .
Tomorrow I get my wings ! "
Arthur drifts off to sleep with dreams of floating across a summer breeze ... until he 's unceremoniously slapped in a can , now destined to float through the intestines of a dumbass named Steve .
( Cue : comical trombone . )
And so begins Steve , Don't Eat It - Vol.
9 . Someone recently told me they do n't eat peanut butter because the FDA permits it to legally contain a certain amount of insect parts .
This person might not want to buy a can of Silkworm Pupas .
The amount of bugs in here is downright wacky .
The writing on the can is all in Korean .
It just so happens that I have a Korean aunt who was happy to provide a translation .
The big red letters say " Bun Dae Ki " or " Silkworm Snacks . "
Apparently " Snacks " is a very powerful word .
It 's all you need to transform any putrid item into a fun new treat .
The next time you see some kid go two knuckles deep in his nose and then consume the treasures within , do n't be grossed out .
He 's just enjoying some Booger Snacks !
I wo n't bore you with every word on the can , but I 'll hit the highlights ...
Any words in an oval demand attention .
The yellow oval on this can says " High Protein - Great side dish when drinking alcohol . "
I imagine this came from the silkworm marketing team when faced with the nagging question " Who the fuck 's gonna eat this ? ! "
The answer : DRUNKS !
On the back of the can is a list of bullet points .
One of them is : " Warning !
Some people may be allergic to silkworms , and get blotches or break out from eating the contents of this can . "
Luckily I can't read Korean , so I 'm good .
Sadly there is no " Serving Size " listed -- ruining my hopes that the serving size might be zero .
Alright , I 've stalled as long as I can .
It 's time for me to get pupified ...
I found it odd that the pull - tab was actually on the bottom of the can , until I realized this is just a time - saver for people who'd rather open it right over the garbage .
Below is a " beauty shot " of just one of the 106 pupae found in the can .
Mmmm .
Is it me , or does that penny suddenly look delicious ?
The silkworm pupas gave off a subtle , nutty aroma .
Not strong like my nuts after a weekend with no shower , just more like their usual , end - of - the - day twang .
These little guys only cost me 79 cents .
That 's a mere 0.7 cents per pupa .
Quite the bargain ... for a can of dead , turd - like moths ... in their own gravy ... why God ... WHY ??
The pile of moist cocoons looked so sad sitting there ( like so many piles of moist cocoons will ) that I decided to cheer them up .
Make 'em feel fancy !
One doily , some frilly toothpicks and a few dry heaves later , and I 'd say mission accomplished !
With pinky extended , I chose an an extra pupy one and popped it in my mouth .
The silkworm pupas did n't have a strong flavor .
In fact , they had the somewhat familiar flavor of bad canned peas .
With just a hint of mildew .
Overall , not terrible .
But what caught me off guard was the crunchy cocoon .
Silk my ass .
This was like chewing on tiny bones .
The good news is I was immediately distracted by the unexpected squirt of briny liquid that shot out into my mouth .
A little heads up would have been nice .
( Am I right , ladies ? )
Having gotten the tasting out of the way , I decided to conduct a miniature pupa autopsy .
Armed with an X - acto blade I carefully tried to peel away the cocoon to see what I could find .
What I found was , I have the knife skills of an epileptic monkey .
The cocoon just gave way to a mushy pile of moth guts .
Or as I like to call them , Moth Gut Snacks !
The best I could hope for was a clean split , right down the middle .
Which is ironic , because this type of cut is referred to as a " butterfly . "
( See , cuz it 's a caterpillar ... and the cocoon with the ... thing ...
Look I did n't say it was funny , I said it was ironic .
Get off my back , alright ?
What did I do to you ?!)
That X - Acto would go so nicely across my wrists just about now .
All of this reminded me of something I had seen in one of my sons ' board books .
After a bit of searching I found it in the next to last page of " The Very Hungry Caterpillar . "
At the end of the story the little guy emerges as a beautiful butterfly and the transformation is complete .
Please note the hole in the page .
That was chewed there by my son .
I used to think he did it because he was teething .
Now I know he was just trying to eat the butterfly , and he takes after his daddy .
That 's my boy !
Alright , I 'm gonna go get loaded .
Who am I to disobey an oval ?
But before I do , I 've been feeling bad about our pal Arthur .
Since he gave his life in the name of Steve , Do n't Eat It , I thought it would be nice to give him the gift of flight after all .
Go Artie , go !
Fly and be free !
( All volumes of Steve , Don't Eat It ! can be found here . )
Steve , Do n't Eat It ! - The Tree Brain
June 15
U.S. Postal Service To Recognize Space Memorabilia Show AtNASA
Center
The United States Postal Service ( USPS ) will issue a special pictorial stampcancellation on June 17 , in honor of the 2nd Annual Space Memorabilia Show atNASA Glenn Research Center ( GRC ) in Cleveland , Ohio .
The ink cancellation , which appears in the current issue of the USPS PostalBulletin , features an image of a spacewalking astronaut and the show 's title .
The Space Memorabilia
Show will feature items from the US space program as wellas from programs throughout the world .
Confirmed exhibitors include CountdownEnterprises , Boggs SpaceBooks , Nick Proach Models and Historic Space Systems .
The show will also include a public tour of GRC's Zero - Gravity Facility andpresentations by Neil Armstrong - biographer James R. Hansen .
USPS representatives will be present at the GRC Visitor Center on Saturday toapply the cancellation to visitor mail and commemorative envelopes .
Those whocannot attend can send their mail to be canceled
with the special postmark via the Cleveland Post Office for up to 30 days afterthe event .
For more information and an image of the cancellation , see collectSPACE.com .
- Robert Z. Pearlman , collectSPACE.com
June 13
Oklahoma Spaceport Okayed
The Federal AviationAdministration 's Office of Commercial Space Transportation ( AST ) issued on June12 a launch site operator license to the Oklahoma Space Industry DevelopmentAuthority ( OSIDA ) .
That makes it the sixthspaceport in the United States , said James Stasny , AST spokesman .
The OSIDA - run spaceportwould be based at the Clinton - Sherman Industrial Airpark , located adjacent tothe town of Burns Flat , Oklahoma .
Since 1996 , AST has issuedsite operator licenses to five other spaceports : California Spaceport atVandenberg Air Force Base , Spaceport Florida at Cape Canaveral Air ForceStation , the Virginia Space Flight Center at Wallops Island , Mojave Airport inCalifornia , and Kodiak Launch Complex on Kodiak Island , Alaska .
-- Leonard David
June 8
OpportunityRover Rolls Onward
The Opportunity Mars rover is free and once again driving southward at MeridianiPlanum .
Wheelingits way ever closer to the large Victoria Crater , the robot extracted itselffrom a wheel - stopping sand trap , now dubbed Jammerbugt .
" I honestly do n't know how difficult the driving is going tobe between here and Victoria , " said Steve Squyres , lead scientist for the MarsExploration Rover project .
" The terrain we 're in right now has little exposedbedrock , and that makes it more treacherous than when there 's bedrock around .
So we 're going to tread cautiously .
But what lies farther ahead is difficult tosay ... we 'll find out as we go , " he told SPACE.com .
Squyressaid that the main difference between Jammerbugt and Purgatory - a dune that snaredOpportunity in April 2005 -- is that an onboard slip - check stopped the rover atJammerbugt before it had dug in very far .
" This iswhy we use the slip - checks , to keep us from getting deeply embedded ifsomething happens , " Squyres said .
" And because we had n't dug in as badly as atPurgatory , we got out with significantly greater ease .
It also helped , ofcourse , that we'd been through this once before ... it 's always easier when youknow what you 're doing ! "
-- Leonard David
June 7
Bigelow Module Launch Delayed
Word from Bigelow Aerospaceis that launch of their prototype inflatable module is being delayed .
Given nofollow - on technical issues , the hardware could now roar skyward , sometime inthe July 4 - 14 time frame , explained Chris Reed , a spokesman for Las Vegas - basedBigelow Aerospace in a June 6 communique .
The Genesis I module isoutfitted with a total of 13 cameras inside and outside the spacecraft .
Financed by wealthy hotel operator , Robert Bigelow , the test flight is part ofan ever - expanding set of modules to be flown .
To loft the module intoEarth orbit , Bigelow Aerospace has booked a Dnepr booster under contract withISC Kosmotras , a Russian and Ukrainian rocket - for - hire company .
Bigelow Aerospace isdedicated to flight - verifying larger and larger inflatable modules - eyeing acommercial business of providing habitable space for experimental purposes , andeven using the structures to create an orbiting hotel .
-- Leonard David
June 5
Former future CEV dropsinto museum
The U.S. Space & RocketCenter accepted today the donation of a full scale boilerplate crew explorationvehicle built by Lockheed Martin for water landing tests in 2005 .
The future " CEV " was made in support of NASA 's former Orbital Space Plane Program at MarshallSpace Flight Center in Huntsville , Alabama .
Adjacent to the museum 's Saturn V , the CEV 's exhibit " serves as a reminder to those who see it that soon wewill return to the moon and travel beyond , " said USSRC's Chief ExecutiveOfficer Larry Capps at this morning 's ribbon cutting ceremony .
The capsule , primarily madeof hand laid - up fiberglass with a Nomex honeycomb core , was debuted only hoursbefore NASA Headquarters announced MSFC 's role in the modern CEV / CLVprogram .
For photographs from theceremony and more details , see collectSPACE
-- Robert Z. Pearlman
Copyright 2006 collectSPACE.com .
All rights reserved .
June 2
Opportunity Mars RoverHits Sandy Stop
NASA 's Opportunity Marsrover has experienced high slip in the sands of Meridiani Planum .
The result isthat the robot's wheels are embedded .
Early looks at the situation show thatthe rover has made very little progress after almost 80 feet ( 24 meters ) ofwheel spin .
The immediate plan is toassess the state and health of the vehicle .
Opportunity has beenslogging its way over sand ripples , finding the best traction by moving betweenpatches of flat - lying rock outcrops .
The robot has been wheeling toward largeVictoria Crater - an enormous depression , measuring a half - mile ( 800 meters ) indiameter .
Over a year ago - in April2005 - Opportunity was stilled by a sand ripple , later dubbed " Purgatory Dune " with ground controllers needing more than five weeks of planning , testing andcarefully monitored action to free the robot .
The rover 's sand trapsituation is not viewed as bad as Purgatory Dune .
-- Leonard David
May 29
Voltage GlitchAfflicts Submarine - Launched Russian Satellite
MOSCOW ( Interfax - AVN ) - Equipment faults on the Russian Kompas - 2 satellite launched bya Shtil ballistic rocket from the Yekaterinburg submarine in the early hours of May 27 ( local time ) occurred due to a voltage drop in the satellite 's battery , Roskosmos press secretary Igor Panarin told Interfax - AVN on Monday .
" Wehave conducted ten linkup sessions with Kompas - 2 after it was orbited , duringwhich a number of faults resulting from a loss of pressure in an on - boardbattery were revealed , " he said .
A specialgroup led by a TsNIIMASH representative was set up to look into the situation , he said .
Thesatellite is monitored from the ground - based facilities of the Russian Academyof Sciences .
" Wehope work of the on - board batteries will be normalized , " Panarin said .
-- Interfax
May 25
Polls Opento Name Racing League 's First Rocket Plane
The pollsare open to name the first rocket plane slated to compete in a fast - paced raceacross the sky .
Organizers of the fledgling Rocket Racing Leagueare holding a naming contest for their premier vehicle - the Mark - 1 X Racer - which will be unveiled on Oct. 20 during the 2006 X Prize Cup in Lac Cruces , New Mexico .
Tencandidate names have been culled from a list of nearly 2,000 entries submittedto the league since Jan. 30 , 2006 .
Voters can root for their choice by clickinghere .
The pollsclose on June 5 .
" On behalf of the [ Rocket Racing League ] , I 'd like tothank the thousands of fans who brought their enthusiasm and creativity to thiseffort , " said Granger Whitelaw , the league 's CEO , in a statement .
" And for the fan out there with the winning entry , I can't wait to shakeyour hand . "
Thatwinning fan , the final name and the first Mark - 1 X Racer - to serve the RocketRacing League 's house team - will be unveiled together during the X Prize Cup , league officials said .
A league bomber jacket , astronaut - guided tour andone - year VIP membership will be awarded to the winner , they added .
The RocketRacing League blends rocket aircraft and auto racing into a high - flying sportaimed at awarding prize money awaiting winning teams and spurring interest inrocketry and spaceflight .
The league 's core vehicle is derived from the EZ - Rocketdesign by Mojave , California - basedXCOR Aerospace .
In additionto the league 's house team , two F - 16 fighter pilots have joined the competitionwith their LeadingEdge racing group .
Voters canpick their favorite X Racer name from the top 10 choices by visiting here : http://reference.aol.com/space/rocket-racing.
-- SPACE.com Staff
May 24
Florida Couple Finds Depleted Uranium in OldNASA Tool Box
Crescent City , Florida ( AP ) - A PutnamCounty couple got a startling surprise when they found a piece of depleteduranium at the bottom of a box of tools .
Susan and Lance Greninger called NASA becausethey had bought the box at an auction near the Kennedy Space Center .
A Hazmat teamfrom the fire department examined the metal and said it was a solid piece ofdepleted uranium about the size of a child 's fist .
They closed the road in the front of the homefor about five hours just to be safe .
The state Bureau of Radiation Control retrieved the cylinder .
They said the piece is toxic , but does not pose a health hazardto the community .
They did say that if the couple had walked around the housewith the uranium in their pocket , they would get radiation sickness .
Authorities said the piece may have been part ofa tool .
Depleted uranium can be used as a radiation shield and is sometimesused as a ballast in commercial airliners and ships .
-- Associated Press
May 23
MicrosatelliteTested Aboard Space Station
NASA astronautJeffrey Williams has put a small satellite through its initial paces aboard the International Space Station ( ISS ) , deploying the free - flying craft insideoutpost 's Destiny lab .
Williams , NASA science officer and ISS Expedition 13 flight engineer , piloted the SPHERESmicrosatellite in the first of a series of test aimed at demonstratingfundamental concepts for autonomous docking in small vehicles and formationflying .
The tests could lay the groundwork for cooperative satellites andhelper robots to aid spacewalking astronauts , NASA officials said .
SPHERES - short for Synchronized Position Hold Engage Re-orient Satellite - is anexperiment designed by researchers at the Massachusetts Institute of Technology ( MIT ) to aid the development of future cooperative space robots .
Williamswatched over the single SPHERES satellite last week as it approached twobeacons - one handheld and one wall - mounted - during simulated rendezvous anddocking maneuvers .
The satellite 's first flight included up to 15 pre-plannedmaneuvers , each of which lasted 10 minutes , to check attitude control , stationkeeping , collision avoidance , target tracking and fuel balance performance , NASA officials said .
Theeight - inch ( 20 - centimeter ) wide , seven - pound ( three - kilogram ) SPHERES satelliteis the first of three to launch toward the ISS and arrived at the space stationaboard Progress21 on April 26 .
Two additional units are expected to launch toward thestation on future NASA shuttle visits .
-- Tariq Malik
May 19
Russia , Malaysia Sign Deal to Train , Launch Astronaut for ISS
The Russianstate arms trading agent Rosoboronexport and the Malaysian government havesigned a contract for training the first Malaysian cosmonaut and sending him tothe International Space Station ( ISS ) .
On the Russian side , the contract was signed by Rosoboronexport Deputy GeneralDirector Viktor Komardin ; on the Malaysian side , by Defense Ministry SecretaryGeneral Tan Sri Subhan Jasmon , an Interfax correspondent reported from theceremony .
-- Interfax
FormerNazi Removed From Space Hall of Fame
ALAMOGORDO , N.M. - A former Nazi scientist who was linked to experiments on prisoners inthe Dachau concentration camp in Germany has been ousted from the InternationalSpace Hall of Fame .
HubertusStrughold , who had been honored in 1978 for work in developing the spacesuitand space capsule and for his contributions to space medicine , was removed lastweek by unanimous vote of the New Mexico Museum of Space History 's commission .
The German - born scientist was brought to this country by the U.S. military afterWorld War II to work on aerospace projects .
He died in 1987 .
The removalprocess began last fall after a museum visitor noticed Strughold 's name in itshall of fame and notified the New Mexico Anti-Defamation League , said SusanSeligman , the league 's regional director .
The leagueuncovered records of Strughold 's past and presented them to the commission .
Strughold was linked to experiments on concentration camp prisoners in the1940s as the Nazi director of medical research for aviation , Seligman said , though she said she did not know of him personally conducting experiments .
Strughold ' sname was removed from Brooks Air Force Base 's aero-medical library in 1995 andhis picture was removed from the mural " The World History of Medicine " at Ohio State University in 1993 , the Anti-Defamation Leaguesaid .
-- Associated Press
May 18
NASA toLaunch Lunar Reconnaissance Orbiter in 2008
NASA 'sLunar Reconnaissance Orbiter project successfully completed its missionconfirmation review , which deemed the project to be within budget , officialsannounced today .
The project will now proceed to the implementation phase andis slated to launch in October 2008 .
The orbiterrepresents NASA 's first step toward returning humans to the moon after a 30 - year hiatus .
The spacecraft will spend an unprecedented year mapping themoon from an average altitude of 30 miles .
Its main goal will be to conductinvestigations targeted at preparing for future human lunar exploration , whichit will carry out with six on - board instruments and one technologydemonstration .
The orbiteris being built at NASA 's Goddard Space Flight Center in Greenbelt , Md. Theinstruments , provided by various U.S. and Russian organizations , will completeseveral tasks .
The big ones on the list include generating a global map of themoon , determining which potential landing sites are free from hazards , measuring light and temperature patterns at the moon 's poles , search forpotential resources such as water , and assessing the deep - space radiation andits potential effects on humans .
The nextmission milestone is the critical design review , scheduled for later this year .
This review consists of completed and detailed systems designs and marks the transitioninto the manufacturing , assembly , and integration phase of the missiondevelopment cycle .
-- Bjorn Carey
May 17
Old Rocket Rides Againin Super Loki Launch
A small weather rocket tookoff from Cape Canaveral Air Force Station today , marking the first of two testflights aimed at proving the 10 - year - old rockets are safe to fly as part of auniversity launch program .
The 15 - foot Super Loki rocket blasted off about 10 a.m. at Launch Complex 47 , which is operated by the Florida Space Authority under a license agreement withthe Air Force 's 45th Space Wing .
A follow - up flight is expected to take placein June .
Brevard Community College and the Florida Space Institute plan to use almost200 Super Loki rockets in a program geared toward training a new generation ofaerospace technicians and engineers .
-- Todd Halvorson
Publishedunder license from FLORIDA TODAY .
Copyright ?
2006 FLORIDA TODAY .
No portion ofthis material may be reproduced in any way without the written consent of FLORIDA TODAY .
May 15
FirmsPlan Low- cost Workhorse Rocket Engine
Twopropulsion firms - XCOR Aerospace and Alliant Techsystems ( ATK ) - haveannounced they are teamed to develop a low - cost liquid oxygen / methane rocketengine for NASA 's Crew Exploration Vehicle ( CEV ) .
This type of workhorse engineis being designed for possible use in returning the CEV from lunar orbit to the Earth , and to perform in - space maneuvering .
XCORAerospace is based in Mojave , California .
The company won a $ 3.3 millioncontract with ATK , headquartered in Minneapolis , Minnesota , as part of ATK 's $ 10.4 million contract to develop low - cost liquid oxygen / methane rocketpropulsion for NASA .
Methane - fueledengines offer the prospect of better performance and lower cost than existingsystems and are non -toxic .
In addition , such an engine eliminates the need forspecial ground handling procedures associated with traditional propulsionsystems .
Non-toxic engines may significantly reduce the cost of fueling andservicing operations .
Ifsuccessfully demonstrated , the liquid oxygen / methane propulsion system could beused for both the CEV Service Module main engine and on the ascent stage for acrew - carrying lunar lander .
Yet anotherconsideration is that the Martian atmosphere contains methane - and givenNASA 's future red planet plans , this type of engine should prove ideal forgas - up - and - go operations .
" This contractis a great example of a small company teaming with an established provider toprovide innovative solutions to difficult problems , " noted James Busby , an XCORAerospace spokesman .
-- Leonard David
May 12
ScorchingTest for Crew Exploration Vehicle
Heat shieldmaterials that could be utilized in building NASA 's new spaceship -- the CrewExploration Vehicle ( CEV ) -- have been receiving a warm reception at the spaceagency 's Ames Research Center in California 's Silicon Valley .
Small heatshield specimens have undergone arc jet evaluation using what NASA engineersdescribe as a " room - size blowtorch " .
The CEVThermal Protection System , Advanced Development Project at Ames is geared tocreate and test the 16.5 - foot ( 5 - meter ) diameter , Frisbee - shaped heat shieldthat will be attached to the base of the cone - shaped CEV crew capsule .
CEV shieldmaterial must protect the capsule and its crew from incredible heat as thecraft plunges through Earth 's atmosphere from orbit , or plowing in from the Moon .
Eventually , the CEV will haul back to home the first crew from Mars .
-- Leonard David
NASA 'sShuttle Discovery Again Set for Short Trip
CAPECANAVERAL , Fla . - NASA 's space shuttle Discovery is again set to for the shortride from its hangar to the cavernous Vehicle Assembly Building ( VAB ) asengineers prepare to mate the orbiter to its fuel tank and rocket boosters .
Delayedfrom Thursday due to a damaged cranescrew in the VAB , today 's rollover has been pushed back to today to allow amorning meeting for shuttle officials , NASA spokesperson Jessica Rye said .
Theupcoming 30 - minute trip from Discovery 's hangar - like Orbiter Processing Facilityto the VAB will mark the space plane 's first move since it returned to KSCfollowing last year 's STS - 114 mission - NASA 's first shuttle flight since the 2003 Columbia accident .
Shuttleengineers are preparing Discovery for NASA 's second post -Columbia test flight - STS - 121 commanded by veteran astronaut Steven Lindsey - slated to launch no earlierthan July 1 .
In the VAB , the external fuel tank and twin solid rocket boosters that will carry Discoveryto space have already been assembled and stacked atop a Mobile Launch Platform .
Engineers plan to spend about one week attaching Discovery to the launch stackbefore rolling the entire shuttle system out to Pad 39B on May 19 .
Discoverylast launched into space in July 2005 on a 14 - day mission to the InternationalSpace Station ( ISS ) .
The orbiter landedat Edwards Air Force Base in California and was ferriedback to KSC atop its 747 jumbo jet carrier .
NASA Pushes Shuttle Discovery 's Move to Friday
Return to Flight : NASA 's Road to STS - 121
STS - 114 Return to Flight Special Report
-- Tariq Malik
May 9
CaliforniaPolitician Seeks Display Rights for Atlantis Orbiter
California Assemblywoman Sharon Runner has introduced a Joint Resolutionthat , if passed , would transmit an official request to the President andleaders of Congress to grant Palmdale as the future and permanent home of spaceshuttle Atlantis .
Runner 's resolution is the result of a NASA briefing thatsuggested it will ground Atlantisin 2008 , rather than put it through a required maintenance period thatcould exceed the end of the shuttle program in 2010 .
As it is written however , the bill would appear to neglect existing requirements for howNASA must dispose of artifacts and its agreement for their transfer to the Smithsonian .
Runner 's reasons outlined in the bill for Atlantis to moveto Palmdale include the city 's history as where all of NASA 's orbiters werefirst assembled , and to allocate room at Kennedy Space Center for futureexploration vehicles .
" It just makes sense for Atlantis to return home toPalmdale , " said Runner .
" This resolution is an important step in theprocess .
It will demonstrate that California is united behind Palmdale as theproper location . "
-- Robert Z. Pearlman , collectSPACE.com
May 8
RoadkillPosse Cleans Up at NASA Spaceport
CAPE CANAVERAL - TheRoadkill Posse at Kennedy Space Center is cleaning up .
Literally .
More than 800 pounds ( 362 kilograms ) of carrion have been collected around KSC since NASA in mid-April askedworkers to call in roadkill sightings .
Coming in the wake of abird strike during the STS - 114 launch last July , the roadkill reporting program is aimed at ridding thespaceport of black vultures and turkey vultures .
The vultures roost aroundNASA 's twin shuttle launch pads , and a bird strike in flight can cause seriousdamage to an orbiter .
NASA hopes that eliminatinga major food source will prompt the scavengers to go live elsewhere .
-- Todd Halvorson
Publishedunder license from FLORIDA TODAY .
Copyright ?
2006 FLORIDA TODAY .
No portion ofthis material may be reproduced in any way without the written consent of FLORIDA TODAY .
May 5
SupplyShip Boosts Space Station's Orbit
The International Space Station ( ISS ) reached a higher orbit Thursday after a cargoship fired its engines during a brief , but successful , maneuver , NASA officialssaid .
The Progress 21 cargo ship docked at the aft end of the station 's Zvezda modulefired its onboard engines for 6.5 minutes , boosting the orbital laboratory ' sorbit by about 1.7 miles ( 2.8 kilometers ) , NASA Johnson Space Centerspokesperson James Hartsfield told SPACE.com .
NASAofficials said the orbital boost prepared the ISS for the June arrival of Progress 22 , a new cargo ship that will launch from the Baikonur Cosmodrome , Kazakhstan in Central Asia atop a Soyuz rocket .
Progress 22is expected to launch on June 24 and dock at the ISS two days later , Hartsfieldsaid , adding that an older cargo ship - Progress 20 - will be cast off prior to the new spacecraft 's arrival .
Progress20 has been dockedat the Russian - built Pirs docking compartment since December 23 , 2005 .
Thursday 'sISS orbit reboost comes after an abortedtest of the two ISS engines attached to the Zvezdamodule 's aft end .
Russian ISS controllers used the test to check whether the Zvezda engines , which were last used in July 2000 , were still operational .
Thefailed engine firing did not affect the docking of Progress 21 .
Progress 21 arrived at the ISS on April 26 after a two - day spaceflightfrom Baikonur Cosmodrome .
The cargo ship ferried 2.5 tons of food and suppliesto ISSExpedition 13 commander PavelVinogradov and flight engineer JeffreyWilliams .
The two astronauts are in the midst of a six - month mission aboardthe ISS and arrivedat the station on April 1 .
-- Tariq Malik
May 4
ChinaSpace Station , Moon Plans Proceeding
China 'snext piloted space trek will see three crew members inEarth orbit in September 2008 , after the Beijing Olympic Games .
The flight ofthe Shenzhou7 spacecraft will include a space walk to hone skills for building of a 20 - tonspace station .
The LongMarch rocket to place the trio of travelers into space is to be ready at year ' send with selection and training of the crew getting under way .
That 's theupdate from Song Zhengyu , deputy director - designer of Long March II carrier rocketF and research fellow of the first institute of the China Aerospace Science& Technology Corporation ( CASTC ) this week in an article on People ' sDaily Online .
In an earlier People ' sDaily Online story , Luan Enjie , chief commander of China 's lunar explorationproject said their Chang'e Moon orbiter is expected to be lofted next year .
Speaking at a symposium inHong Kong in April , Luan said that if no major problems crop up over the nextyear , China 's Chang 'e lunar probe would head moonward in April 2007 .
-- Leonard David
May 3
BackhoeHo-Down on Mars
The nextrobotic arm headed for the red planet is ready for final testing andinstallation onto NASA 's MarsPhoenix lander , due for liftoff in August of next year .
Thebackhoe - like arm was built by Alliance Spacesystems , Inc. ( ASI ) of Pasadena , California .
Once on Mars in May 2008 , the arm is assigned a key duty of digginga two - foot deep trench in Mars ' north - polar region .
At thebusiness end of the arm is a scoop about the size of a garden trowel that willdo the digging down to an ice layer that is potentially rock - hard .
The arm willdeliver soil samples to a suite of devices on the lander 's deck for detailedanalysis .
A camera mounted on the arm will view layers in the freshly - dugtrench wall .
Theagile arm has a 7.5 - foot reach ( 2.3 meters ) , with the aluminum and titaniumdevice weighing less than 22 pounds ( 9.7 kilograms ) .
The roboticarm - inherited from a shelved 2001 Mars mission to the equator - could not dig intohard icy soils at cold temperatures and had to be completely redesigned .
MarsPhoenix is a three - month mission expected to yield new clues to the history ofwater on Mars and whether the environment was ever conducive to life .
-- Leonard David
NASA 'sFlorida Spaceport Chief Plans Retirement
JamesKennedy , head of NASA 's Kennedy Space Center ( KSC ) in Florida , will retire fromhis post in January 2007 , NASA said this week .
" Servingas the director of the historic Kennedy Space Center where the U.S. spaceprogram was born is an opportunity of a lifetime , " Kennedy said in astatement .
" While I have treasured every minute of every day , now is thetime to announce I 'm stepping aside to allow someone else the opportunity tolead this great center and its incredible work force . "
A native of Riverdale , Maryland , Kennedy is the eighth director of KSC and has spent35 years working in government service - all but four of them with NASA and theU.S. Air Force .
Kennedy oversees about 15,000 government and contractoremployees .
Prior tohis appointment as KSC director , he served as KSC 's deputy director in 2002 , androse to the position of deputy center director at NASA 's Marshall Space FlightCenter in Huntsville , Alabama .
Kennedybegan his career at NASA in 1968 and has served as project manager for severalagency projects , including the X - 43 , DC- XA and solid rocket booster efforts , the space agency said .
He currently resides in Cocoa Beach , Florida with hiswife , Bernadette , and has two grown children , Jeff and Jamie .
NASA willname Kennedy 's successor at a later date , the space agency said .
-- SPACE.com Staff
May 2
Two Trailblazing Pilots Die From Illness
Two test pilots whose work led to the development of thefirst rocketplane to reach space and a flexible wing for the recovery of mannedspacecraft have died , both succumbing to illness .
Alvin S. White , 87 , was backup to the late ScottCrossfield for the X - 15 project at North American Aviation .
Though he neverflew the rocketplane , White flew the first flights of bothXB - 70 " Valkyrie " aircraft and was at its controls when a collisionwith anF - 104 piloted by Joseph Walker claimed the life of the X - 15 astronaut ( White ejected safely ; his co-pilot was killed ) .
According to his friends ,
White died on Saturday , April 29 .
Bruce A. Peterson , 72 , is reported to have passed away onMonday , May 1 .
A NASA pilot since 1960 , Peterson was initially assigned to the Rogallo paraglider ( Paraslev ) that was under consideration for use on the Gemini and Apollo space capsules .
During hisflying career , Peterson logged more than 6,000 hours in nearly 70 types ofaircraft .
He gained a small measure of fame when the story of a M2 - F2 liftingbody crash that he was seriously injured in , but survived , was adapted as thebasis for the 1970s television series " The Six - Million Dollar Man " .
-- Robert Z. Pearlman , collectSPACE.com
May 1
CanadaIssues Coins for Astronaut , Robot Arm
Continuingits Canadian Achievements series , the Royal Canadian Mint will issue on May15 coins celebrating the 5th anniversary of the installation of thenation ' sCanadarm2 robotic arm during the first spacewalk conducted by aCanadian astronaut , Chris Hadfield using the original Canadarm .
The proofcoins will be available in 300 - dollar face value , 14 - karat gold and 30 - dollarface value , sterling silver renditions limited to 1,000 and 20,000 mintages respectively .
The silver edition also features a selective hologram ofthe robotic arm in space .
The goldcoin will be priced at $ 1,089.95 ( CND ) , while the silver will sell for $ 79.95 , or approximately $ 976 and $ 72 US .
Informationon ordering and images of the two coins can be seen on collectSPACE : Canada Issues Coinsfor Astronaut , Arm
-- Robert Z. Pearlman , collectSPACE.com
April 28
RoadkillPickup May Save Lives , NASA Says
CAPE CANAVERAL , Fla . ( AP ) - Picking up roadkill may save astronauts ' lives .
Kennedy Space Centermanagers said Thursday they have launched an effort encouraging workers tonotify road - and - grounds crews when they see roadkill .
The theory is that removingdead animals could cut down on the number of vultures looking for meals at the 140,000 - acre center , part of which is a national wildlife refuge .
A vulturestruck the fuel tank of space shuttle Discovery during last year 's launch , but it did n't cause any major damage .
" We 're trying to avoid thatagain and by doing that we 're trying to reduce the food source , '' said JohnShaffer , a scientist who works at Kennedy 's environmental program office .
" Asfar as shuttle program is concerned , it 's unacceptable if there 's anotherchance of an accident . ''
Roadkillis a common sight at the center , which is home to more than 500 species ofwildlife , including bald eagles , sea turtles , alligators and manatees .
NASAlaunch managers use cameras and radar to make sure there are no birds aroundthe launch pad during shuttle launches .
-- The Associated Press
April 27
STS - 1PilotAwarded Space Medal of Honor
Yesterdayevening , at a gala celebrating the25 thanniversary of the first Space Shuttle mission , RobertCrippen became the 28th astronaut in history to be awarded the Congressional Space Medal of Honor .
Thesurprise presentation by NASA Administrator Michael Griffin was made before thegathered audience at the National Air and Space Museum , including Crippen 'sSTS - 1 commander and 1981 medal recipient John Young .
" Thismedal , awarded by the Congress of the United States , commemorates publicly whatall of us who know Bob Crippen already understood : he is an authentic Americanhero , " said Griffin .
" Itwas such a surprise .
I am totally overwhelmed , " said Crippen in astatement released after the ceremony .
" Just look at the names of thepeople who are onthe list .
They are heroes in the truest sense of the word and I can ' tbelieve someone would think to include me in such distinguished company .
I 'm sohonored . "
The award commendsastronauts whose efforts in space exemplify actions of tremendous benefit tomankind .
The medal , which has also been given to astronauts who died in theline of duty , was last presented in 2004 to the crew of STS - 107 .
The award was firstgiven in 1978 to astronauts Neil Armstrong , Frank Borman , Pete Conrad , John Glenn , Alan Shepard , and posthumously to Virgil " Gus " Grissom .
-- Robert Z. Pearlman , collectSPACE.com
April 25
Contaminationa Likely Culprit in Failed Proton M Launch
The malfunctionof a Russian - built Proton rocket that left an Arab communications satellite inthe wrong orbit after launch was apparently due to contamination in thebooster 's oxidizer system , Russia 's State Commission announced Tuesday .
The commission , which investigated the failed Feb .
28 EDT space shot
, foundthat an anomaly - likely from a foreign particle - interrupted the oxidizersupply for the Proton M rocket 's Breeze M upper stage and forced an earlyengine shutdown , according to a statement from McLean , Virginia - basedInternational Launch Services ( ILS ) , which marketed the flight .
ILS used the ProtonMrocketto launch the ARABSAT4A communications satellite for the Arab SatelliteCommunications Organization of Riyadh , Saudi Arabia .
The satellite neverreached its intended orbit .
Mishapinvestigators believe that the foreign particle blocked oxidizer flow through anozzle that fed the Breeze M engine 's hydraulic pump , the statement said .
ILS andRussian space officials have drawn up a set of corrective actions to beimplemented before the U.S. firm 's next launch .
Those actions should becompleted by the end of May , paving the way for the resumption of launchservices , ILS said .
Proton Rocket Fails to Put Satellite in Proper Orbit
Launch Coverage of ArabSat 4A 's Liftoff
-- TariqMalik
April 24
Russia to TrainMalaysian Astronauts for Spaceflight
KUALA LUMPUR ( Interfax - AVN ) -
Two Malaysian cosmonauts will start training for a journey tothe International Space Station in Russia in the summer of 2006 , a source inthe Russian delegation to the DSA - 2006 weapons show in Kuala Lumpur announcedon Monday .
" The Federal Space Agency Roscosmos is expected to sign an agreement with Malaysiashortly and two cosmonauts will start preparing for the flight at Russia 's StarCity in June or July .
One of them will undergo training as a back - upcosmonaut , " he said .
" Fourcandidates have been selected for the flight .
But only two of them will travelto Russia for training , one of them as a backup cosmonaut , " the sourcesaid .
Malaysia Narrows Astronaut Search to Four Candidates
Malaysian Public to Vote for Nation 's First Astronaut
-- InterfaxNews Agency
April 23
NASA 'sCloudSat and CALIPSO Launch Scrubbed Again
The plannedlaunch of two NASA satellites aimed at taking a three - dimensional look atEarth 's clouds and particle content was called of again Sunday due to aircraft refuelingplane schedule problems , the U.S. space agency said .
For thesecond day in a row , the lack of a refueling aircraft for a radar trackingplane needed to watch over the launch of NASA 's CloudSat and CALIPSO weathersatellites prevented the planned space shot atop a Delta 2 rocket fromCalifornia 's Vandenberg Air Force Base .
The launch countdown had already begunand was about five hours from liftoff when the scrub was called .
NASAofficials said the launch of CloudSat and CALIPSO has been postponed for atleast another 24 hours as mission managers decide on a new flight date .
A similarrefueling plan unavailability on Saturday prompted NASA to shift its CloudSatand CALIPSO launch target to Sunday .
A communications glitch with the French - built CALIPSO spacecraft also scrubbed an April 21 launch attempt just 48seconds before liftoff .
The twospacecraft are expected to join a trio of other Earth - watching satellites - NASA 's Aqua and Aura , and the French Space Agency 's PARASOL - already in Earthorbit .
CloudSat is equipped with a powerful cloud - penetrating radar , while CALIPSO carries a laser ranging lidar instrument , wide - field visible lightcamera and an imaging infrared radiometer .
-- TariqMalik
April 22
Launch of NASAWeather Satellite Pair Reset for Sunday
Launch of the Boeing Delta2 rocket carrying the CALIPSO and CloudSat spacecraftfor NASA has been reset for Sunday at 1002 GMT ( 3:02 a.m. PDT ; 6:02 a.m. EDT ) from Vandenberg Air Force Base in California .
Friday ' scountdown was aborted less than a minute before liftoff when the communicationslink between CALIPSO and its French ground facilities was lost .
Officials hadhoped to reattempt the launch early Saturday .
But NASA spokeswoman Erica Huppsaid are fueling aircraft required to support a launch tracking plane wasunavailable for the new date .
So liftoff ofthe $ 515 million mission to examine clouds and particles in the atmosphere hasbeen pushed back to Sunday .
-- JustinRay , Spaceflight Now
April 20
Legendary Test Pilot's Plane Missing
LAWRENCEVILLE , Georgia ( AP ) - A single - engine airplaneregistered to the first man to fly at Mach 2 and Mach 3 - was missing Thursday , a day after it left Alabama for the Washington , D.C. , area .
Scott Crossfield 's plane was last spotted on radarWednesday in Georgia , north of Atlanta , the Civil Air Patrol 's Georgia Wingsaid .
Capt .
Paige Joyner said officials had no confirmation that Crossfield wasin the plane and the air patrol does not " have any confirmation who the pilotwas . ''
A man who answered the phone at Crossfield 's home inVirginia declined to say whether Crossfield was missing and referred questionsto the Civil Air Patrol .
The plane left Alabama around 9 a.m. Wednesday enroute to Virginia .
Crossfield , now 84 , became the first man to fly attwice the speed of sound piloting the Douglas D - 558 - IISkyrocket to a speed of1,291 mph in November 1953 , according to the Edwards Air Force Base Web site .
Former NASA X - 15 Pilots Awarded AstronautWings
-- AssociatedPress
April 19
CompetitorsWanted for NASA Centennial Challenges Contests
The gates areopen for five NASA contest offering more than $ 1 million in cash prizes for thebest new astronaut glove , power beam , strongest tether and Moon machines aspart the agency 's ongoing Centennial Challenges program .
NASA 'sCentennial Challenges are contests designed to spur technical innovation andinterest in space exploration .
The U.S. space agency already held the firsttwo of its challenges - to rate space tethers and power beaming technologies - last year , and is looking for new competitors for its 2006 meet .
The tetherand power beaming contests - organized for NASA by California 's Spaceward Foundation - eachcarry a prize of $ 200,000 .
Innovators can also nowregister for NASA 's Astronaut Glove Challenge run by Volanz Aerospace and Spaceflight America - which is aimed at developing a dexterous spacesuit handcovering - as well as the space agency 's LunarRegolith Excavation Challenge to build a Moon digging machine organized by the California Space Education and Workforce Institute .
Each of those competitionscarries a $ 250,000 purse .
The same amount is offered by NASA 's Moon Regolith Oxygen ( MoonROX ) contest , which challenges competitorsto pull a set amount of oxygen from mock Moon dirt .
The MoonROX competition isadministered by the Florida Space Research Institute .
Hopeful inventors seeking tosign up for NASA 's Centennial Challenges competitions can do so at the websiteof each competition 's organizer , the space agency said .
The Spaceward Foundation 's tether contest can be found here alongside its power beaming challenge .
The California Space Education and Workforce ' slunar regolith excavator contest is here .
Volanz Aerospace and Spaceflight America 's glove competition is here , while the Florida SpaceResearch Institute 's MoonROX challenge can be found here .
-- TariqMalik
April 12
Japan Preparesfor Unmanned Lunar Lander Mission
TOKYO ( AP ) - Japan 's space agency has set up a team to send an unmanned mission to thesurface of the moon , possibly within the next 10 years , officials saidWednesday .
KeijiTachikawa , chairman of the space agency JAXA , provided no further details ofthe composition of the team , but said he hoped the mission would be launchedwithin a decade .
The unmannedsurface landing is a key element of Japan 's overall space strategy , which wasonce the most ambitious in Asia but has recently fallen behind China .
JAXA 's SELENEmoon orbiter is due for launch in 2007 , and officials announced last year that theyhope to send a manned mission to the moon by 2025 .
Currently , only the United States , Russia and the EU have landed probes on the moon .
ButChina , which leapt ahead of Japan by putting astronauts into orbit in 2005 , hasalso announced it has set its sights on a moon landing .
Japan has yet to launcha manned flight of its own .
No timeline for the manned program has beenannounced , other than the tentative 2025 goal for a landing .
Over the nextdecade , JAXA 's plan calls for scientists to develop robots and nanotechnologyfor surveys of the moon , and design a rocket and space vessel capable ofcarrying cargo and passengers .
By 2015 , JAXA will review whether it 's ready topour resources into manned space travel and possibly building a base on themoon .
A decision topossibly to try for Mars and other planets would be made after 2025 .
Japan ' slong - term plan resembles those of U.S. President George W. Bush and Europeanspace officials , who hope to land astronauts and robots on the moon as a firststep to sending space shuttle missions to Mars .
But Japan ' sprogram has been plagued by delays .
The SELENEprobe - designed to release two small satellites that will measure the moon ' smagnetic and gravitational field - was originally scheduled for launch in 2003 , but that had to be postponed after the failed launch of one of Japan ' sdomestically developed H - 2A rockets .
JAXA also hadto abandon a mission to Mars two years ago and earlier this year the agency nearlylostits most recent mission - a probe sent to collect samples from an asteroid - but managed to re-establish communications with it last month .
-- AssociatedPress
Today the KDE team announces a new project to re-synchronize our HTML engine ,
KHTML , with the WebKit engine .
Code named Unity , the project has so far focused on porting the WebKit engine to Qt 4 with minimal changes to the existing code - base .
WebKit is a derivative of the KHTML engine developed by Apple Computer Inc .
The initial work for this project was done by four KDE core developers at the
KDE Four Core meeting last week in Trysil , Norway .
The contributors were
Dirk Mueller , Zack Rusin , Simon Hausmann , and George Staikos .
The project also builds on lead - up work done over the past year by George Staikos and Maksim Orlovich , which synchronized the KDE and WebKit Javascript engines .
At this stage Unity is a research project to determine the feasibility of
merging much of the KHTML work done over the past few years into WebKit .
This
will provide us a means to synchronizing our engines .
There are no concrete
plans to replace KDE 's current KHTML component , which is also used by Konqueror to render HTML pages , with Unity .
Any such decision will be left to the KHTML and KDE core
development teams in the upcoming months .
It is dependent on many factors such
as our ability to keep the engines synchronized over time , our ability to
produce a high - performance , stable , and complete KPart , our level of comfort
with the new code - base , and our ability to come to a suitable working
arrangement with the other WebKit contributors .
With respect to the technical work , our efforts have resulted in a Qt 4 based WebKit library that is able to render a variety of web pages quite nicely .
There is still a considerable amount of work to do before it can be considered a complete browser engine on our platform but the basic foundations are complete .
The KDE build system , cmake , is integrated into the WebKit sources , rendering uses Qt 's graphics facilities , and a simple test driver has been developed .
A KDE layer will be added to integrate the engine with the desktop facilities provided by KDE as well as creating a KPart which can be loaded by any KDE application requesting a handler for HTML .
Anyone wishing to join the effort should contact the developers on the
k fm - devel mailing list .
Source code is accessible in KDE 's Subversion repository .
For press queries about this and other KDE announcements see the KDE press contacts page .
New Doctor
Who episodes may be available for mobile phones
He announced plans for the MyBBCPlayer - which will allow viewers to legally download seven days of programmes - at the Edinburgh Television Festival .
He said he hoped the service would launch next year .
Mr Thompson said that unless the BBC adapted " we wo n't deserve or get licence - fee funding beyond 2016 ... that is very definitely not our plan " .
A simulcast of BBC One or BBC
Two , letting UK viewers see programmes on the web at the same time as they go out on TV , is also planned as part of MyBBCPlayer .
' Sophisticated ' viewers
" We believe that on - demand changes the terms of the debate , indeed that it will change what we mean by the word ' broadcasting ' , " said Mr Thompson .
" Every creative leader in the BBC is wrestling with the question of what the new technologies and audience behaviours mean for them and their service , " he added .
" An expanding portion " of the BBC 's audio and video material from the archive will also be able to be accessed via MyBBCPlayer .
" It should make it easier for users to find the content they want whenever and wherever they want it , " Mr Thompson said .
Mr Thompson said he hoped the MyBBCPlayer would launch next year
The popularity of the BBC's Bitesize revision series and Beethoven symphonies made available via the internet proves that viewers are already " very sophisticated in the use of this media , " he said .
In a departure from past corporation policy , the player would also enable viewers to buy items via the BBC site .
" The idea that in the age of the iPod that the public would not welcome the opportunity to buy a piece of music they heard on the site seems to me to be ridiculous , " he said .
Mr Thompson said he would be unable to estimate the cost of the MyBBC Player scheme until the government had confirmed a date for digital switchover - when all of the UK 's analogue TV signals will be switched off .
He also responded to Lord Birt 's James MacTaggart Memorial lecture , in which Lord Birt suggested that Channel 4 should receive extra funding to secure its status as a public service broadcaster .
Mr Thompson said this aim should not be achieved by giving the channel a share of the BBC 's licence fee .
" If you want to strengthen public service broadcasting , beginning to unpick the solidity of the BBC funding to shore up other channels is the wrong way to do it , " Mr Thompson said .
Proposals to make clips available on mobile phones are also being speeded up , director of TV Jana Bennett said last week .
The BBC received a " wake - up call " about the demand for new technology in March when the first episode of the new Doctor Who was leaked on to the internet , she said .
Internet debuts
A BBC spokesman said the corporation was aiming to simulcast a channel permanently but would restrict it to UK viewers only .
" These plans are subject to the approval of the board of governors and the resolution of rights clearance issues on content like music and imported shows , " he said .
As well as the simulcast plan , more shows are set to follow the lead of BBC Three comedy The Mighty Boosh and appear on the internet before TV .
Sketch show Titty Bang Bang , sitcom Two Pints of Lager and a Packet of Crisps and Johnny Vegas ' show Ideal will be made available on the internet first .
Clips from the shows will also be made available on mobile phones .
The makers of the new Doctor Who series are among the producers who have been developing ways to use mobile phone and portable players .
And extra content has been filmed for broadband to accompany BBC One 's autumn contemporary Shakespeare series .
Rove said cooperating in CIA leak inquiry Larisa Alexandrovna
Published : Monday March 27 , 2006 Print This | Email This Karl Rove , Deputy White House Chief of Staff and special adviser to President George W. Bush , has recently been providing information to special prosecutor Patrick Fitzgerald in the ongoing CIA leak investigation , sources close to the investigation say .
According to several Pentagon sources close to Rove and others familiar with the inquiry , Bush 's senior adviser tipped off Special Prosecutor Patrick Fitzgerald to information that led to the recent " discovery " of 250 pages of missing email from the office of Vice President Dick Cheney .
Rove has been in the crosshairs of Fitzgerald 's investigation into the outing of covert CIA officer Valerie Plame Wilson for what some believe to be retaliation against her husband , former U.S. Ambassador to Gabon , Joseph Wilson .
Wilson had been an ardent critic of pre-war Iraq intelligence .
While these sources did not provide any details regarding what type of arrangements
Rove 's attorney Robert Luskin may have made with the special prosecutor 's office , if any , they were able to provide some information regarding what Rove imparted to Fitzgerald 's team .
The individuals declined to go on the record out of concern for their jobs .
According to one source close to the case , Rove is providing information on deleted emails , erased hard drives and other types of obstruction by staff and other officials in the Vice President 's office .
Pentagon sources close to Rove confirmed this account .
None would name the staffers and / or officials whom Rove is providing information about .
They did , however , explain that the White House computer system has " real time backup " servers and that while emails were deleted from computers , they were still retrievable from the backup system .
By providing the dates and recipient information of the deleted emails , sources say , Rove was able to chart a path for Fitzgerald directly into the office of the Vice President .
In a comment to RAW STORY late Sunday evening , Robert Luskin denied any deal between Rove and Fitzgerald 's office .
" Mr. Rove has cooperated fully with Mr. Fitzgerald 's investigation , " Rove 's attorney said .
" We have not and will not comment on the nature or substance of any communications with the office of the special counsel . "
" That said , there is no basis whatsoever to the matters you allege that Mr. Rove has related , " Luskin added .
One senior White House official is already under indictment in the leak case .
Cheney 's former chief of staff I. Lewis " Scooter " Libby was indicted on five counts of obstruction and false statements to investigators in October of last year .
Rove eluded indictment late last fall after his lawyer said he recalled a conversation with Time reporter Viveca Novak that he alleged would vindicate his client .
Sources say that while the defense was able to parlay Luskin 's revelation into postponing Rove 's indictment , ultimately a deal would likely have to be cut .
The sources did not say a deal had been reached , but did assert that Rove pointed Fitzgerald to Cheney 's office for the missing emails .
Asked about allegations that Rove is providing Fitzgerald 's office with key information and if his status had changed as a result , Luskin provided a vehement denial .
" Your story is false and utterly without foundation , " he said .
" There has never been any discussion of any deal of any kind involving Mr. Rove .
His cooperation has at all times been voluntary and unconditional . "
One of the sources close to the investigation said he was not surprised by Luskin 's response .
" That would be difficult for Rove to admit , " the source said .
" I think Rove is now considered a special cooperating witness . "
The White House was ordered to turn over all emails by then - White House Counsel and current Attorney General Alberto Gonzales in 2003 , after the Administration received word the Justice Department had launched an investigation into the CIA outing .
According to newspaper reports , Gonzales waited twelve hours to inform White House staff after he had received an order from the Justice Department to surrender materials relating to the case .
In a January letter to Libby 's defense team , Fitzgerald expressed concern that some emails might be missing .
" Some e-mails might be missing because the White House 's archiving system had failed , " he said .
Sources say that the missing emails , which surfaced only a month later were not really " missing . "
Rather , they had been deleted by White House staff .
Fitzgerald may have been aware of this at the time of his January letter when he cited the missing emails .
Fitzgerald 's spokesman , Randall Samborn , was unavailable for comment Monday .
A White House divided Sources say the rift between Rove and the Vice President 's office crystallized when Rove quietly attempted to gauge the temperature for replacing Cheney on the 2004 Presidential ballot last year .
" Rove was the source of ' feelers ' put out before the last presidential election in which he was suggesting that Cheney could be replaced on the ticket with someone who had better poll ratings , " said one of the former experts approached who wished to remain anonymous .
" White House polls were showing that Cheney was a drag on the reelection ticket and that the Iraq war issue might be responsible for about a three percent drop , with Cheney the principal object of voter hostility in this percentage of anti-war sentiment among the general public , " the source added .
Cheney , the source said , got wind of " Rove 's political soundings " and the already tense relationship between the Bush and Cheney camps became almost impossible .
Whether or not Rove 's recent cooperation will spare him an indictment and a Fitzgerald probe remains unclear .
But according to last week 's New York Times , associates say Rove is " increasingly certain " he will not be indicted in the case .
It is universally acknowledged that the British aristocracy is peopled with inbred , chinless twits who range from the mildly eccentric to the utterly bonkers .
Being a member of this illustrious class , I can categorically confirm that all of the above is true .
By all accounts , the late Baroness Strange lived up to the reputation of her social stratum by changing her will on her deathbed on a seeming whim .
It has now emerged that as she lay bedridden and dying at her Perthshire castle , in March 2005 , she summoned witnesses at 4 am and left her entire £ 3 m estate to the youngest of her six children .
No such shock awaits me .
My dad [ the Marquess of Queensbury ] has assured me that I will get his cooking pots - " Because you are such a good cook . "
Flattering .
If I play my cards right , maybe he 'll throw the Hoover in for good measure .
This is actually not a bad share for , true to his lordly condition and historical imperative , he has diligently sired offspring for some 50 years .
He has a great many children , ranging in age from six to 50 .
The mathematics are simple : there will not be an awful lot to go round and , quite frankly , it 's not something I want to think about too deeply anyway .
Even if there were n't so many of us , pickings would be decidedly thin because Dad himself inherited practically nothing .
His forebears gambled and frittered away more or less the whole caboodle .
Sod 's law or what ?
I have the luck to be born the daughter of a marquis and then look around in bewilderment saying , " Where 's the bloody silver spoon ? "
Not a single monogrammed specimen in sight .
Castle ?
Gone .
Stately home ?
You must be joking .
The family seat is a modest terraced house in west London .
The story goes that Dad went to collect what was left of his inheritance on his bicycle .
The police saw this disreputable - looking youth cycling along with a Rolex watch and a mink coat under his arm , so stopped and questioned him .
In those days , class deference was still horribly ingrained ; it 's not hard to imagine the faff it caused when they found out that the lad on the bike was his lordship .
Of all the nutty aristocratic families to be born into , mine has a claim to be nuttiest of all - a long line of dissolute and decadent fruitcakes precedes us .
On top of that , they left us hanging our heads because of poor old Oscar Wilde .
What are we left with ?
All we can point to with pride is the Queensberry Rules .
As for why the peerage is such a national treasury of eccentrics , I suspect that it might be that class , privilege and wealth gives you complete freedom to be yourself .
And that , no doubt , is a double - edged sword .
Google Earth ist aus dem ( deutschen ) Dornröschen - Schlaf aufgewacht , in dem es seit der Veröffentlichung als Beta - Version am 28.06.05 ( siehe auch www.golem.de) lag .
Seitdem waren nämlich weite Teile Deutschlands nur in extrem grober Auflösung verfügbar , die auch vor Großstädten nicht halt machte .
Einen Eindruck der etwas willkürlichen Aussparung von Bilddaten kann man in der aktuellen Google Maps- / Google Local - Darstellung von Köln bekommen : maps.google.com ; englisch , JavaScript erforderlich ) .
Die „ Datenlücken “ wurden auch zur Veröffentlichung der Final - Version von Google Earth am 11.01.06 ( siehe auch www.golem.de) nicht ( bzw. fast nicht ) geschlossen .
Derweil ging der Telefon - Auskunft - Anbieter GoYellow.de Mitte Februar mit einem eigenen Dienst an den Start , der Satelliten - Aufnahmen in guter Qualität bereitstellt : www.goyellow.de/map ( JavaScript erforderlich ) .
Es bleibt reine Spekulation , ob die Einführung dieses Dienstes Google endlich aufgeschreckt hat ; auch die am 06.03.06 erfolgte Bekanntgabe weiterer , noch detaillierter Karten für einzelne Großstädte ( siehe auch www.goyellow.de/insight/blog) könnte dann den Druck weiter erhöht haben .
Jedenfalls ist seit knapp zwei Tagen ganz Deutschland in hoher Auflösung innerhalb von Google Earth verfügbar , wie auch bei „ Keyhole “ , der Quelle der Satellitendaten , nachzulesen ist ( siehe auch bbs.keyhole.com ) :
We have updated the imagery database tonight .
You ’ll need to restart Google Earth to see it , but no new software is needed .
Although updating to the latest is always a good idea .
We now have almost all of Germany covered in high - resolution , plus some really high resolution insets in cities like Berlin , Dortmund , and Frankfurt .
Also we are now using TruEarth for our 15 meter basemap of the world .
Ich muss gestehen , dass ich „ ganz Deutschland “ nur stichprobenartig geprüft habe ; diese Überprüfung ergab allerdings eine deutliche Verbesserung der Bildqualität , sei es in der Eifel oder in Köln , wo nun auch die Innenstadt deutlich zu sehen ist …
Die Daten sind allerdings ( noch ) nicht bei GoogleMaps / Google Local verfügbar , wobei dies vermutlich in absehbarer Zeit folgen dürfte .
Es stellt sich nun die Frage : Könnte das Angebot von GoYellow gegen Google bestehen ?
Im folgenden habe ich daher zwei ähnliche Bildausschnitte zusammengestellt , um zumindest einen ersten Vergleich der Bildqualität zu bekommen …
Darstellung Reichstag bei „ GoYellow Kartensuche “ :
www.goyellow.de/map[2] ( JavaScript erforderlich )
Darstellung Reichstag bei „ Google Earth “ :
Der Vergleich zeigt meines Erachtens , dass sich GoYellow nicht vor dem Riesen Google verstecken muss .
Neben der höheren Qualität der Bilder ( kräftigere Farben , bessere Kontraste ) sind auch die deutschsprachige Oberfläche und der Einsatz sprechender URL Pluspunkte für den deutschen Dienst .
Auch die Einbindung der Straßen in das Satelliten - Bild ist meines Erachtens bei GoYellow besser ( und sichtbarer ) gelöst .
Die Verfügbarkeit weltweiten Datenmaterials bei Google Earth und der schon legendäre „ Flug “ über die Erdkugel dürften da eher für den gelegentlichen Fun-Nutzer oder einen ersten Vorab - Blick auf das exotische Urlaubsziel in Übersee hilfreich sein .
Ich bin auf jeden Fall gespannt , wie sich das weiterentwickelt und ob Google letztendlich doch die Nase vorn behalten wird – es wäre jedenfalls nicht das erste Mal :-/
Weitere Informationen :
Google Earth herunterladen : earth.google.com ( englisch , Systemvoraussetzungen : Windows 2000 / XP oder Mac OS X )
Test von Mario Sixtus unter ( blog.handelsblatt.de/dezentrale )
Kurztest von Robert Basic , der vor allem die „ Kostenlos telefonieren “ - Funktion hervorhebt : www.basicthinking.de/blog
( via www.netzwelt.de, www.heise.de)
Update 12.04.06 , 22:19 Uhr :
Yahoo Maps ist nun auch ( als Beta - Version ) mit Satellitenfotos verfügbar , die – zumindest in den USA – hochauflösend sind , wie sich das für einen amerikanischen Dienst gehört :-/
Interessant finde ich neben der bisher sehr guten Geschwindugkeit auch die Idee , neben der eigentlichen Karte auch rechts oben eine Übersichtskarte zu integrieren , wie im folgenden Screenshot zu sehen ist .
Solange jedenfalls sowohl „ Google Local “ als auch „ Yahoo Local “ Deutschland in groben Pixeln versinken lassen , dürfte es schwer werden , gegen GoYellow zu bestehen – wenn man mal von der Marktmacht von Google absieht .
Es bleibt also weiter spannend …
( via www.golem.de)
Update 16.04.06 , 10:12 Uhr :
Unter www.netzwelt.de[2] beschäftigt man sich mit der Herkunft der „ neuen deutschen Schärfe “ von Google Earth :
Deutschland ist schärfer geworden , aber leider auch in der Zeit zurückgereist .
Bis zu fünf Jahre sind die neuen Bilder alt .
Die Satellitenbilder sind dagegen maximal drei Jahre alt , aber allein mit den Bildern aus dem All konnte Deutschland nicht flächendeckend abgebildet werden .
Deshalb kamen nun Luftbilder hinzu , die Deutschland komplettieren .
Im Artikel verweist man – wie schon der Leser Ole in den Kommentaren – auf die Firma Geocontent ( www.geocontent.de) als Datenlieferant , die übrigens auch www.stadtplandienst.de mit Luftbildern versorgen .
Saturday 27 May 2006 @ 10:42 am
Last night , we debuted “ Clerks II ” at the Cannes Film Festival .
WireImage.com ’s pics of the cast / crew arrival at the Palais , as well as pics from pre-and - post show .
With all the vitriol surrounding some of the press screenings of flicks there this year , I was pretty terrified “ Clerks II ” , also , might be greeted by a chorus of French Boos ( and I ai n’t talking about champagne ) .
However , after last night , I say “ VIVA LA FRANCE ! ”
When the flick ended and the credits started rolling , a standing ovation began that lasted a full eight minutes .
It was surreal and wonderful , and it just kept going and going .
I looked to Harvey ( Weinstein , our boss ) , that old Cannes war - horse , to see if the cast and I should start heading out of the theater : as it was two in the morning and the applause was n’t showing any signs of stopping .
But from two aisles back , he responded with a waving “ No ” finger at me , mouthing the words “ Do n’t move . ”
So we all stayed put .
By the time the credits ended , I figured the audience was done applauding as well .
But they were n’t .
They just kept on clapping .
And thankfully , not only did Zack and Joey get the whole thing on tape to prove it all happened ( watch for it in a new “ Train Wreck ” video blog , up this weekend ) , but Roger Friedman over at Fox411 was there was well , documenting what I have to say was one of the twenty most amazing moments of my life .
Read Roger ’s Piece , “ Clerks II Delights Cannes ” , right here .
But be warned : it also contains a very positive review of the flick that gives away some major plot points .
SPOILERS ABOUND !
The applause finally stopped after eight minutes .
Harvey was over the moon about it .
“ In my thirty years of coming here , I ’ve never seen a standing ovation last that long at a midnight show in Cannes , ” he said .
“ Ever . ”
En route to the theater , I prayed that the notoriously fickle Cannes ’ audience would n’t boo the flick .
During the screening , I prayed that the film would keep playing as gang - busters as it had been playing up ’til that point , and that the audience stayed with us , rather than succumb to mid-flick naps .
After the screening , I started praying that I never forget that insanely special moment that I shared with Jeff , Brian , Rosario , Mos and Jen – when time seemed to stand still , and at the world ’s most famous film festival , we all stared wide - eyed ( and wider - smiled ) at a room - full of cats staring back at us ( with equally wide smiles and palms cooked red from non-stop applause ) who really , really “ got ” what we were trying to communicate with “ Clerks II ” .
Life comes down to a few major moments .
Last night was definitely one of them .
“ Clerks II ” – July 21 , in theaters everywhere .
The URI to TrackBack this entry is : http://silentbobspeaks.com/wp-trackback.php?p=252
No comments yet .
RSS feed for comments on this post .
A Post By : Darren Rowse
Check out our new eBook – CLICK !
How to Take Beautiful Photos of Your Kids
I ’ve been asked by parents of children to photograph their birthday parties numerous occasions and each time it has been a lot of fun .
Photographing children is n’t always easy – and photographing ‘ the birthday party ’ presents it ’s own unique opportunities and challenges as a photographer .
Birthday Parties present us with a lot of emotion , interaction , color and energy in a child ’s party – the highs and a few lows of life are all present .
On the challenging side of things – children ’s parties can be chaotic places with moving subjects , lots of clutter and often little time for those organizing them to pick up a camera and take a shot .
Here are a few tips on Photographing Children ’s Parties that come to mind :
1. Designate a Party Photographer
There ’s nothing worse than getting to the end of a party and realizing that while the camera was out that no one bothered ( or had time ) to pick it up and take some shots .
Give someone the job and release that person from other party duties to just take photos .
This way you ’re guaranteed to get some shots and will have something to remember the day with .
It is also good because it means others are able to relax and enjoy the party and that parents can rest assured that the photos will only be used responsibly .
Get more free weekly digital camera tips like this by Subscribing to our Newsletter or News Feed .
2. Get a Child ’s Perspective
One of the most important tips I can share is to get down low when taking photos of children .
The biggest mistake I see in party photos is adults taking shots from a standing position looking down onto a scene .
While you might take a few shots from this perspective the majority of your photos should be taken at eye level of the subjects you ’re shooting .
3. Mix up Your Shooting Angles and Focal Lengths
Having said this – it can inject a lot of life into party shots if you do mix up your shooting angles and focal lengths at a party .
Try some shots from standing up high ( get on a chair even to accentuate it – this can be great for group shots ) but also get down really low and shoot looking up at kids .
Also try a range of focal lengths ranging from wide angle shots that take in the whole party scene through to zoomed shots of kids and party elements .
Mixing it up like this will mean you end up with a more dynamic and playful series of shots at the end of the day .
4. Adjust White Balance Settings
Most children ’s birthday parties happen inside ( at least in part ) where lighting can be tricky .
In most cases there will be some artificial light which can leave your photos with different types of tinges .
The easiest way to overcome this and ensure your shots are true in color is to learn to use your white balance controls .
This is the subject for another post but most modern digital cameras have a variety of automatic settings that will give you some easy settings for different lighting situations .
Before the party experiment with white balance and get your setting right .
Keep in mind that there are some moments in a party where you do want the temperature of your light to be nice and warm !
5. Look for the Party Details
Another way to add interest to the shots is to focus in on the details of the party .
I find that many of these shots are best taken before the guests arrive and might include shots of the cake , photos of balloons and other decorations , photos of presents stacked , shots of a set party table .
Often it ’s good to get in nice and close to these elements – fill the frame with them ( to the point where they even become a little abstract ) .
You ’ll find that these types of shots look great scattered through an album between shots of people .
6. Use Bounce Flash or a Diffuser
You ’ll probably need some sort of extra lighting if your party is inside .
You can help to eliminate the need for this by increasing your ISO setting a little but unless you have a lot of natural light or an extremely fast lens you ’ll probably need to use a flash .
If you have a flash hot - shoe you ’ll probably get the best results if you bounce the flash off the room or walls or if you use a flash diffuser of some kind so that the flash is not as harsh on your subjects ( a common problem with many party photos ) .
Take things to a whole new level by setting up a photo booth or area that you ’ve lit with some studio lights for some fun portraits .
7. Know the Party Plan
In order to capture all of the important moments in the party you should know how it is planned to run .
Know when everyone will be sitting down , when the blowing out of candles will happen , when presents will be opened etc .
This will mean you can be well positioned for each event just ahead of them happening .
8. Shoot Candidly
Most of your party photos will end up being candid ones of children and adults interacting with one another around the different party activities .
I ’ve written on candid photography previously but you ’ll probably want to take a couple of types of candid photos during the party .
I tend to take quite a few shots from the edge of the party using a longer zoom lens .
These shots are largely of kids interacting with each other , playing , eating etc .
The other thing to do as the party ‘ warms up ’ is to actually get into the party and shoot from within it .
In these instances you will find a wide angle lens more appropriate and you actually join in the circle of activity ( ie sit with the kids , play the games , eat the food ) and photograph the children as you do this .
At times it might even be appropriate to make taking the photos a game of sorts – getting them to pose and then show them the results on your LCD .
9 . Shoot out of Relationship
Photographing from ‘ within ’ the party is fun but it does n’t just happen straight away with many children .
I find that the best shots come as the children warm up to you and their surrounds .
So make an effort to meet the children as they come into the party and to be friendly and fun .
This might even mean putting your camera away for a little towards the start of proceedings .
Also in this I ’d highly recommend that you need to be aware of personal boundaries when photographing children .
Unfortunately we live in a time where the topic of photographing kids is something that makes many of us think about ways that doing so can be misused and abused .
Always get permission of the parents hosting the party before photographing proceedings , always stay with the main group and do n’t get into one to one shooting situations , be aware of giving those you ’re photographing personal space and being appropriate .
10 . Planned Shots
While the majority of your shots will probably be candid shots you should also think ahead about what type of ‘ must have ’ sort of shots you want from the party .
Consult with parents ( if you ’re not one of them ) about what type of shots they want .
These might include some group shots , cake shots , blowing out candles , opening presents , party games or even some posed shots of the birthday boy or girl etc
11 . Take Before and After Shots of the Party
It ’s amazing to see how a room ( and people ) can be transformed in just an hour or two when you have a group of children in it .
For this reason you might want to consider what type of shots you ’ll want to take before the party actually starts .
This might include some of those shots that focus in on different elements of the party but also shots of the birthday boy or girl when they are dressed up and looking ( and behaving ) at their best .
Also take a few shots at the end of the party – they could make a humorous comparison series with your before shots and of course if something gets messy … be ready to capture that too to show how the ‘ after shot ’ was created .
12 . Shoot in Burst Mode
One of the most effective ways to capture parties is to learn how to shoot in continuous shooting ( or burst ) mode when your camera fires a series of shots in quick succession .
This is particularly useful when shooting children as they rarely sit still but is also a good strategy for key moments in the party like blowing out the candles ( which you only get a couple of seconds of opportunity to capture ) .
13 . Include Adults in your Photos
The focus of children ’s parties is generally the children – but the adults attending the party can actually present you with some fascinating shots as they watch on .
Sometimes their reactions to what the children are doing can be quite fascinating and its worth including them in shots – particularly those adults in the immediate family of the child having the birthday .
Enjoy this post on photographing parties ?
– Subscribe to our Newsletter or News Feed .
By Anna Thompson
BBC Sport at the Winter Olympics
Zhang Dan suffered a crashing fall in the middle of the routine
Figure skating is back in the spotlight at the Winter Olympics after a dramatic fall in the pairs event on Monday night .
But not only because Chinese skater Zhang Dan 's crash was so spectacular .
The fact she and partner Zhang Hao were able to resume - after a long delay - and go on to take silver focused attention on the sport 's rules , and their interpretation .
After ' Skategate ' in Salt Lake City four years ago forced the judging system to be overhauled , the International Skating Union ( ISU ) would have been hoping for an easier ride this time round .
But eyebrows were raised again after Zhang Dan 's unsuccessful quadruple salchow .
She suffered a nasty fall and took time to compose herself , before consulting with officials and resuming the routine to an incredibly high standard - and a standing ovation .
Under the new scoring system , the duo were duly docked one point for the element they had messed up .
But there was surprise they had been allowed to take such a long stoppage .
British gold medallist Robin Cousins , who is covering the figure skating for BBC Television , explained that the maximum time - out was two minutes for a bad crash or for a competitor to tie up their laces if they had become undone .
But observers timed the stoppage at three minutes , 40 seconds , and Cousins called for the rules to be clarified .
It was an incredibly motivated performance
Robin Cousins
He told BBC Sport : " What happened in Turin was unprecedented .
It was a freak incident which calls the new judging system into question and it looks as though it is a loophole which needs clarifying . "
The judging system was changed after the International Olympic Committee was forced to award two sets of gold medals in 2002 when a French judge admitted she had been pressured to vote for Russian pair Elena Berezhnaya and Anton Sikharudlidze at the expense of Canadians Jamie Sale and David Pelletier .
So instead of starting at 6.0 and docking points for mistakes , the new system starts at 0.0 and skaters gain marks as each jump , spin or lift is given a base value depending on its difficulty .
The 12 judges each decide how well the element has been executed and then nine marks are drawn randomly to make up the score .
Cousins said the Chinese pair had done nothing wrong in resuming their routine after being given the green light to continue .
" It was an incredibly motivated performance .
But they are at an Olympics and were in a medal position , her coach told her she could do it and most of their technical elements were of the highest tariff . "
The pair regained their composure to successfully resume their routine
ISU spokesman Devra Pitt - Getaz insisted the pair had not exceeded the two - minute break allowed for a fresh start .
" The rule states that the competitor shall continue immediately from the point of interruption if the circumstances which caused the competitor to stop can be rectified without delay , " she said .
" If that is not possible , a period of up to two minutes before the continuation will be allowed .
The two minutes time period commences immediately after the referee 's decison is announced to the competitor .
" In this case , the ISU confirmed the time period commenced from the time the referee announced the decision to the competitors .
" A time period of no longer than two minutes was used . "
That may well have been the case , but on the biggest stage of them all , the fall - and then rise - of the stricken Chinese skater showed lessons may still need to be learned .
The Big Here
You live in the big here .
Wherever you live , your tiny spot is deeply intertwined within a larger place , imbedded fractal - like into a whole system called a watershed , which is itself integrated with other watersheds into a tightly interdependent biome .
( See the world eco-region map ) .
At the ultimate level , your home is a cell in an organism called a planet .
All these levels interconnect .
What do you know about the dynamics of this larger system around you ?
Most of us are ignorant of this matrix .
But it is the biggest interactive game there is .
Hacking it is both fun and vital .
The following exercise in watershed awareness was hatched 30 years ago by Peter Warshall , naturalist extraordinaire .
Variations of this list have appeared over the years with additions by Jim Dodge , Peter Berg , and Stephanie Mills among others .
I have recently added new questions from Warshall and myself , and I have edited or altered most of the rest .
It 's still a work in progress .
If you have a universal question you think fits , submit it to me .
I am extremely interested in hearing from anyone who scores a 25 or better on the quiz on their first unassisted try .
I 'd like to know how you got your Big Here education .
I have a few small prizes for anyone who scores ( on the honor system ) a perfect 30 , without Googling .
The intent of this quiz is to inspire you to answer the questions you can't initially .
I 'd like to collect and then post the best step - by - step suggestions about how to answer a particular question .
These are not answers to the quiz , but recommended paths on how one might most efficiently answer the question locally .
Helpful websites which can provide local answers are wanted .
Because of the severe specificity of local answers , the methods provided should be as general as possible .
The emerging list of answer - paths will thus become the Cool Tool .
Post your methods in the comment section for each question linked in red to my Help Wanted page .
I will award a copy of the next paper - book version of Cool Tools to the person providing what I consider the best solution method (s ) for each question .
30 questions to elevate your awareness ( and literacy ) of the greater place in which you live :
1 ) Point north .
[ Recommendations for answer methods ]
2 ) What time is sunset today ?
[ Recommendations ]
3 ) Trace the water you drink from rainfall to your tap .
[ Recommendations ]
4 ) When you flush , where do the solids go ?
What happens to the waste water ?
[ Recommendations ]
5 ) How many feet above sea level are you ?
[ Recommendations ]
6 ) What spring wildflower is consistently among the first to bloom here ?
[ Recommendations ]
7 ) How far do you have to travel before you reach a different watershed ?
Can you draw the boundaries of yours ?
[ Recommendations ]
8 ) Is the soil under your feet , more clay , sand , rock or silt ?
[ Recommendations ]
9 ) Before your tribe lived here , what did the previous inhabitants eat and how did they sustain themselves ?
[ Recommendations ]
10 ) Name five native edible plants in your neighborhood and the season (s ) they are available .
[ Recommendations ]
11 ) From what direction do storms generally come ?
[ Recommendations ]
12 ) Where does your garbage go ?
[ Recommendations ]
13 ) How many people live in your watershed ?
[ Recommendations ]
14 ) Who uses the paper / plastic you recycle from your neighborhood ?
[ Recommendations ]
15 ) Point to where the sun sets on the equinox .
How about sunrise on the summer solstice ?
[ Recommendations ]
16 ) Where is the nearest earthquake fault ?
When did it last move ?
[ Recommendations ]
17 ) Right here , how deep do you have to drill before you reach water ?
[ Recommendations ]
18 ) Which ( if any ) geological features in your watershed are , or were , especially respected by your community , or considered sacred , now or in the past ?
[ Recommendations ]
19 ) How many days is the growing season here ( from frost to frost ) ?
[ Recommendations ]
20 ) Name five birds that live here .
Which are migratory and which stay put ?
[ Recommendations ]
21 ) What was the total rainfall here last year ?
[ Recommendations ]
22 ) Where does the pollution in your air come from ?
[ Recommendations ]
23 ) If you live near the ocean , when is high tide today ?
[ Recommendations ]
24 ) What primary geological processes or events shaped the land here ?
[ Recommendations ]
25 ) Name three wild species that were not found here 500 years ago .
Name one exotic species that has appeared in the last 5 years .
[ Recommendations ]
26 ) What minerals are found in the ground here that are ( or were ) economically valuable ?
[ Recommendations ]
27 ) Where does your electric power come from and how is it generated ?
[ Recommendations ]
28 ) After the rain runs off your roof , where does it go ?
[ Recommendations ]
29 ) Where is the nearest wilderness ?
When was the last time a fire burned through it ?
[ Recommendations ]
30 ) How many days till the moon is full ?
[ Recommendations ]
The Bigger Here Bonus Questions :
31 ) What species once found here are known to have gone extinct ?
[ Recommendations ]
32 ) What other cities or landscape features on the planet share your latitude ?
[ Recommendations ]
33 ) What was the dominant land cover plant here 10,000 years ago ?
[ Recommendations ]
34 ) Name two places on different continents that have similar sunshine / rainfall / wind and temperature patterns to here .
[ Recommendations ]
Posted on January 6 , 2006 at 11:08 PM
CBD oil has become a popular alternative treatment from certain ailments and illnesses in the body .
It does this by interacting with receptors in your brain and mostly helps keep the body in homeostasis .
It has a lot of health benefits and little to no side - effects compared to other drugs that can have a high chance of damaging the body .
Here we ’ll talk about CBD oil for anxiety and what benefits CBD oil gives to brain health to make you more informed about it .
What is CBD ?
Cannabidiol or CBD is a chemical compound that ’s naturally found in cannabis .
Unlike its counterpart THC , it does not contain any psychoactive properties which give you that “ high ” when ingesting it making it quite safe to use .
It also has a lot of health benefits throughout the body which is why it ’s become a new trend for people who are into health and wellness .
How CBD Affects the Body
The way CBD is able to affect the body is by interacting with the endocannabinoid system , the one responsible for keeping the body ’s internal function in smooth condition .
It ’s able to affect certain receptors in the brain which affects the central nervous system and other receptors that deal with pain and inflammation .
Treating Alzheimer ’s with CBD
CBD has been used to research certain brain diseases such as Alzheimer ’s , which is caused by inflammation and oxygen build - up in the brain .
The way CBD help this is by reducing the oxygen build - up int the brain as CBD is known to have antioxidant properties .
It also helps cell brain growth and development which slows down the decline of memory and brain functions .
Alleviating Depression and Anxiety
Depression and Anxiety can also be alleviated through CBD .
It does this by interacting with the serotonin receptor of the brain which is known to be responsible for various mental disorders .
When the receptors release low amounts of serotonin , it will cause the person to have anxiety , even depression if there ’s little to no release .
CBD helps normalize the amount of serotonin released in the body putting it in a stable condition .
Helping People With Sleeping Disorders
The drug can also be used to help people who have sleeping disorders like insomnia .
It ’s able to minimize factors that can make them unable to sleep like stress and anxiety .
It can even let them go from REM sleep to a deeper , much more restful , NREM sleep .
CBD ’s Effects on Parkinson ’s Disease
Parkinson ’s disease is a neurological disorder that occurs when the dopamine receptors in the brain are damaged or even completely die off .
It can lead to the decline of some cognitive functions such as memory and attention span .
Research has shown that CBD is able to treat symptoms of Parkinson ’s Disease such as pain , uncontrollable muscle movements , and psychosis .
Conclusion
CBD oil has only been a new product in the market and further research is still needed to understand more about it .
There can still be a possibility that it can help more physiological ailments .
The GNUstep project released new versions of its frameworks : Base 1.13 , GUI 0.11 , along with a new version of the Graphical Interface Builder for GNUstep , Gorm ( 1.1 ) .
The new version of Base adds new classes for NSPredicate , better url management , as well as improving support on Windows .
On the GUI side , among the noteworthy changes since the previous release ( 0.10.3 , march 2006 ) is the new support for key encoding in all gui classes – which means you can now load and save OS X nib files .
Organhandel in China Das Geschäft mit den Hingerichteten
Es ist ein blutiges Geschäft : In China floriert einem Zeitungsbericht zufolge das Geschäft mit den Organen hingerichteter Gefangener .
Käufer sind meist ebenso kranke wie wohlhabende Japaner .
Gewissensbisse haben die wenigsten von ihnen .
Science have an interesting snippet on a study that shows that shy children may not only be more sensitive to unpleasant things , and also to pleasurable and rewarding experiences as well .
A brain scanning study led by Dr Amanda Guyer showed that areas of the brain sensitive to both anxiety and reward were more strongly activated in shy children than other children .
The study subjects – who were classified as either shy or outgoing based on psychological testing – were instructed to press a button as quickly as possible after being shown a signal .
If they pressed the button in time , they won money , or at least prevented themselves from losing it .
Both groups performed similarly , and there was no difference in the activity of their amygdalas – the brain region that governs fear .
Shy children , however , showed two to three times more activity in their striatum , which is associated with reward , than outgoing children , the team reports in the 14 June issue of the Journal of Neuroscience .
“ Up until now , people thought that [ shyness ] was mostly related to avoidance of social situations , ” says co-author and child psychiatrist Monique Ernst .
“ Here we showed that shy children have increased activity in the reward system of the brain as well . ”
Link to article ‘ The Rewards of Being Shy ’ .
Link to study abstract .
In college I had a hamster named Hecubus who loved to roll around in his plastic ball .
One day when I was n't paying attention , he accidentally rolled down the stairs .
Now , thanks to local entrepreneur Robert Pelon , I know exactly how poor Hecubus felt that fateful day .
You , too , can feel like a human in a hamster ball , compliments of Pelon , who envisions a Sphere USA chain modeled on the center recently opened in Brighton , the first of its kind in North America .
Pelon , 33 , is originally from Northville , a clean - cut , all - American former MSU Spartan , who just had his first baby with his wife .
A few years ago he was a nice , respectable options trader in Chicago .
Now , as president and CEO of Sphere USA in Brighton , he rolls people down a hill in a giant ball .
As Pelon tells the story , it all started one day in January of last year when he was watching a reality show where poor suckers were strapped into a giant inflatable ball and pushed down a hill .
Intrigued , Pelon wanted to try it for himself  only to find that there was no place in North America where you could , although it 's very popular in Australia , the UK and New Zealand , where it originated in the late '90s via a company called Zorb ( zorb.com ) .
So , the industrious Pelon started researching .
A business trip to England , a couple of recruited buddies and a year - and - a - half of planning later , Pelon acquired all North American rights to the UK company SphereMania ( www.spheremania.com), a competitor of Zorb .
And thus , Sphere USA opened at the Mt. Brighton ski resort in June .
Pelon wo n't go into details about the cost of the operation , but says each sphere costs " about as much as a used car . "
( He did n't specify Volkswagen or Pinto . )
He 's hoping the investment will pay off ; given how popular the activity is in other parts of the world , he thinks sphereing could be huge in the States .
And thus far he's had a solid response ; on word of mouth , he 's getting 10 to 20 riders a day ( he 'd eventually like to have 50 ) and has gotten inquiries about a franchise from business owners in Atlanta .
Pelon has three spheres ; each is 12 feet in diameter , made of clear PVC and weighs about 350 pounds .
In each , an inner chamber is surrounded by a 3 - foot cushion of air and nearly 1,000 nylon support straps tethered to an outer shell .
Pelon has adapted the ski hill 's snowboard half pipe ; the slope is about 700 feet , and bordered by berms .
There are two entry points :
You can either gently roll from the top of the hill ( refered to as the " shooter " ) or you can choose to be pushed off a 20 foot drop before hitting the course  this is referred to as the mixer , because the fall and the resulting bounce cause the sphere to richochet off the berms .
Feeling queasy yet ?
There are two kinds of " sphereing "  aqua and harness .
For the aqua sphere , as many as three riders climb inside along with 5 gallons of water .
When you careen down the hill , you and your co-victims ride on a cushion of water 
Pelon describes it as the spin cycle of a washing machine .
Harness sphereing , however , is an entirely different matter .
You and a partner are strapped to the interior of the sphere before being pushed down the hill .
After the third or fourth roll , centrifugal force takes over and your body is plastered against the sphere wall ; by the time you hit 4 or 5 g's , the 45 - second ride is nearly over .
All patrons are required to sign a waiver , and Pelon , who tested the course extensively before opening to the public , says no one has even been injured in a sphere .
In fact , no one has even thrown up on his track  yet .
" If you do throw up , we 'll give you a free T - shirt , " he says .
Pelon says he plans to eventually franchise Sphere operations across the country .
" It 's for anyone who 's a thrill - seeker , " Pelon says , adding that the choice between the mellower aqua sphere and the intense harness experience has brought both families with small children and suburban weekend warriors looking for an extreme sport experience .
Zorb plans to open up operations in Tennessee in the fall , but until then , Pelon 's little slice of orbital vertigo is the only outfit in North America .
He charges $ 28.50 per person for one ride , and two rides for $ 45 ; kids as young as 3 years old have ridden the aqua sphere , but you must be at least 56 inches high to experience the harness sphere , and there 's a 500 - pound limit .
And what is it like ?
Despite the fact that I have a weak stomach , fear heights and have a propensity toward injury ( and I do n't like my ankles going over my head , unless ... er , as I was saying ) , I do my duty as a reporter .
Which takes me at the bottom of Mt. Brighton , where I stare up at a giant plastic ball containing humans hurtling toward me , the occasional blood - curdling scream and panicked obscenity emanating from the rolling beast .
With me is trusty photographer Cybelle Codish , who 's accompanied me through reporting trenches filled with fire - breathers , pole dancers and medieval knights wielding Nerf weapons in the forest .
But Cybelle ai n't havin ' it .
" No , " she says flatly , when Pelon asks if she 's going to accompany me in the harness sphere .
There 's no argument in her tone .
The girl ai n't going .
Ten minutes later Cybelle and I are at the top of the hill and she 's cursing my existence .
We 're both wearing the awkward harness , and facing the daunting task of getting into the damn thing ; there are two entrances , but it 's a hot day , we 're sweaty and the PVC sticks to the skin as we struggle to squirm inside  kind of like birth in reverse .
Once we 've gracelessly entered , an employee ( having perfected the wiggle entry technique ) effortlessly slides in to strap and lock us into our final positions , one of us on each side of the ball , facing each other .
The transparent plastic sphere is like a mini- greenhouse ; it 's oppressively muggy and stifling inside .
We 're locked , loaded and ready to go .
As they gently roll us toward the 20 - foot drop , all I can see is the wild , terrified look in Cybelle 's eyes .
Then , suddenly I know how a daiquiri in a blender feels .
I quickly lose track of sky and ground as we tumble upside down , left , right  and I 'm suddenly plastered to the wall as the full 4 g's punch me in the face .
We 're both laughing and screaming  and the first 20 seconds feels like a lifetime .
The final leg is the worst  as the ball slows down the ride gets rougher .
My only injury is a small friction burn on my shoulder where the harness rubbed my bare skin .
Breathless , exhilarated and more than a little discombobulated , Cybelle and I stumble like drunks to the bottled water Pelon offers .
Was it fun ?
Hell , yes .
Would we do it again ?
Hell , no .
Sphere USA is located at Mt. Brighton , 4141 Bauer Rd. , Genoa Township ; 810-229-9581 .
On the Web at spheremania.us .
Sarah Klein is the culture editor of .
Send comments to sklein@metrotimes.com
As Mr. Lieberman sees it , this is a fight for the soul of the Democratic Party — his moderate fair - mindedness against a partisan radicalism that alienates most Americans .
“ What kind of Democratic Party are we going to have ? ” he asked in an interview with New York magazine .
“ You ’ve got to agree 100 percent , or you ’re not a good Democrat ? ”
That ’s far from the issue .
Mr. Lieberman is not just a senator who works well with members of the other party .
And there is a reason that while other Democrats supported the war , he has become the only target .
In his effort to appear above the partisan fray , he has become one of the Bush administration ’s most useful allies as the president tries to turn the war on terror into an excuse for radical changes in how this country operates .
Citing national security , Mr. Bush continually tries to undermine restraints on the executive branch : the system of checks and balances , international accords on the treatment of prisoners , the nation ’s longtime principles of justice .
His administration has depicted any questions or criticism of his policies as giving aid and comfort to the terrorists .
And Mr. Lieberman has helped that effort .
He once denounced Democrats who were “ more focused on how President Bush took America into the war in Iraq ” than on supporting the war ’s progress .
At this moment , with a Republican president intent on drastically expanding his powers with the support of the Republican House and Senate , it is critical that the minority party serve as a responsible , but vigorous , watchdog .
That does not require shrillness or absolutism .
But this is no time for a man with Mr. Lieberman ’s ability to command Republicans ’ attention to become their enabler , and embrace a role as the president ’s defender .
•
On the Armed Services Committee , Mr. Lieberman has left it to Republicans like Lindsey Graham of South Carolina to investigate the administration ’s actions .
In 2004 , Mr. Lieberman praised Defense Secretary Donald Rumsfeld for expressing regret about Abu Ghraib , then added : “ I can not help but say , however , that those who were responsible for killing 3,000 Americans on September 11th , 2001 , never apologized . ”
To suggest even rhetorically that the American military could be held to the same standard of behavior as terrorists is outrageous , and a good example of how avidly the senator has adopted the Bush spin and helped the administration avoid accounting for Abu Ghraib .
Channel 4 is to bring mass public masturbation to the small screen .
The broadcaster - once led by Michael Grade , dubbed " pornographer in chief " by the Daily Mail - has commissioned a documentary about the UK 's first " masturbate - a - thon " as part of a series of programmes dubbed " Wank week " , MediaGuardian.co.uk can reveal .
In what must surely be one of the summer 's more bizarre events , hundreds of people are expected to gather in a hall in central London on August 5 to pleasure themselves in aid of charity .
The organiser of the event , the San Francisco - based Centre for Sex and Culture , has run mass masturbation events in the US for the past five years to raise money for safe sex groups and plans to replicate the formula in the UK .
Cameras from independent production company Zig Zag , which made Essex Boys for ITV1 , will follow the organisers and participants for a 60 - minute film , which has the working title of Wank - a - thon .
It is expected to air on Channel 4 towards the end of the year .
The event will encourage Londoners - both male and female - to sign up sponsors and head to Clerkenwell in order to masturbate in front of hundreds of others .
Zig Zag said in its blurb for the show : " This year it 's time to bring the event across the pond to see if the great British public can embrace mass public masturbation .
It 's time to find out if the only things allowed to be stiff in Britain are upper lips . "
Prizes will be on offer for those who clock up the most orgasms and those who can masturbate the longest - the current record , according to the organisers , is a chafing eight - and - a - half hours .
To qualify for the record , the organisers say " at least 55 minutes of every hour shall be spent self - pleasuring by manual or sex toy stimulation " with participants getting just five minutes to " replenish and renew " .
Two other programmes will also air as part of the week , which has been commissioned by the Channel 4 factual entertainment commissioning editor , Andrew MacKenzie .
" Following on from the success of ' Penis week ' , we feel this is exactly the type of provocative and mischievous programming that Channel 4 should be covering in the 11 pm slot .
Masturbation is something many people do but not many people talk about , " Mr MacKenzie told MediaGuardian.co.uk .
· To contact the MediaGuardian newsdesk email editor@mediatheguardian.com or phone 020 7239 9857
· If you are writing a comment for publication , please mark clearly " for publication " .
a g a i n s t T C P A s u c c e s s i o n p r o j e c t t o a r i v e s o o n
29 . Sep 2005 : After a long time , there 's finally a new project on its way that will better fit current developments within both , companies and policy ...
Be ready !
i n f o r m y o u r s e l f n o w
Why so many people and small to medium companies see one of the biggest dangers of this century in TCPA / TCG ( Trusted Computing ) ?
We drafted a small text , after which you shoule be able to answer it for yourself .
More ... b o o k s / s p o n s o r s / i n t e r e s t i n g Trusted Computing Platforms | Siani Pearson | 322 Seiten
An accessible introduction to a new industry standard that is a breakthrough in the field of computer security .
The text explains platforms , how to create website , explores implications and provides illustrated examples using a variety of scenarios relevant to everyday business usage .
More books about this topic t c p a n e w s n e w t o p i c s a t t h e f o r a 3.2 | TCPA - Blamage
There 's a lot of interesting stuff on the web .
Since the beginning , the hard part has been finding it .
In the old days the only tools available were random browsing and directory sites like Yahoo !.
These days it 's more efficient to subscribe to weblogs that you 've found are reliable sources of good links .
But the web keeps growing ; now it 's hard to find the new interesting weblogs , much less all the other interesting pages .
The Ultra Gleeper takes your weblog subscription list and starts from there .
It crawls the web for things you have n't seen and shows you the pages it thinks you 'll like .
Your feedback improves its ability to give accurate ratings .
With the Ultra Gleeper can find new pages and new weblogs to read .
And if you have your own weblog or use del.icio.us , the links you post there will be automatically turned into ratings .
The Ultra Gleeper solves or avoids the problems that give recommendation engines a bad reputation .
It wo n't give you a lot of links you 've already seen , because it knows about your subscriptions and what they 've posted .
It wo n't just recap the most popular links of the day , because its indie rock algorithm distrusts excessive popularity .
It wo n't ask you for a lot of calibration ratings up front : you already gave those ratings by telling it what you subscribe to and pointing it to your weblog and / or bookmark page .
The Ultra Gleeper runs on your server and shows up in your web browser or RSS reader .
It 's free software , so you 're free to use and modify it .
More details
The secrets of the Ultra Gleeper are laid bare in its eponymous paper .
I presented the Ultra Gleeper at CodeCon 2005 , using the paper as my model and these slides .
Download Ultra Gleeper 1.0.4 was released on February 13 , 2005 .
It is made available under a 3 - clause Berkeley license .
You can read the INSTALL document online
Note : The Ultra Gleeper requires version 0.5.3 of SQLObject ( available here ) .
Status The Ultra Gleeper was intended as a proof of concept .
I stopped development once I satisfied my curiosity .
Anyone is welcome to build on the ideas mentioned in the paper , or even on the code , if you can get it to work on a modern system .
The recommendation screen
The control panel
In an RSS reader
All this may sound absurd , but it is the heart of a case that will be argued before the Supreme Court on Tuesday .
In 1986 researchers filed a patent application for a method of testing the levels of homocysteine , an amino acid , in the blood .
They went one step further and asked for a patent on the basic biological relationship between homocysteine and vitamin deficiency .
A patent was granted that covered both the test and the scientific fact .
Eventually , a company called Metabolite took over the license for the patent .
Although Metabolite does not have a monopoly on test methods  other companies make homocysteine tests , too  they assert licensing rights on the correlation of elevated homocysteine with vitamin deficiency .
A company called LabCorp used a different test but published an article mentioning the patented fact .
Metabolite sued on a number of grounds , and has won in court so far .
But what the Supreme Court will focus on is the nature of the claimed correlation .
On the one hand , courts have repeatedly held that basic bodily processes and " products of nature " are not patentable .
That 's why no one owns gravity , or the speed of light .
But at the same time , courts have granted so - called correlation patents for many years .
Powerful forces are arrayed on both sides of the issue .
In addition , there is the rather bizarre question of whether simply thinking about a patented fact infringes the patent .
The idea smacks of thought control , to say nothing of unenforceability .
It seems like something out of a novel by Philip K. Dick  or Kafka .
But it highlights the uncomfortable truth that the Patent Office and the courts have in recent decades ruled themselves into a corner from which they must somehow extricate themselves .
For example , the human genome exists in every one of us , and is therefore our shared heritage and an undoubted fact of nature .
Nevertheless 20 percent of the genome is now privately owned .
The gene for diabetes is owned , and its owner has something to say about any research you do , and what it will cost you .
The entire genome of the hepatitis C virus is owned by a biotech company .
Royalty costs now influence the direction of research in basic diseases , and often even the testing for diseases .
Such barriers to medical testing and research are not in the public interest .
Do you want to be told by your doctor , " Oh , nobody studies your disease any more because the owner of the gene / enzyme / correlation has made it too expensive to do research ? "
Category
Art
Idea
Combination of graffiti with a reality
Links
Alexandre Orion is 27 years old and was born in Sao Paulo , Brazil .
He is an Arts graduate who has collaborated as an illustrator in many major Brazilian publications .
He is a self - taught photographer who has been involved in the theory and practice of photography since 2001 .
Orion ’s combination of painting and photography challenges the way painting and photography is combined and explores the limits of how art is represented and perceived .
Alexandre Órion 's idea can be understood as an urban metaphor that goes beyond institutional limits and beliefs .
He accomplishes this by utilizing three elements : stencils on city walls , passers - by , and a photograph .
He works by combining painting with photography on the walls of São Paulo City megalopolis into the day - to - day life of passers - by with a photographic eye that captures an exact moment in the real lives of the dispossessed , the ignored , the unimportant and the " normals " or , if you prefer , the poor , the prostitutes , the homeless and the " normals " .
This union is what makes his work unique .
He has no need to enhance his art with image editing software .
His canvas is the street .
He composes his photographs with stationary stencils on walls , and life on the move .
He waits for the right moment .
Life is ever changing , but some moments are eternal .
The anonymous that had no value , become priceless
WASHINGTON , July 26  Bush administration officials said Wednesday that they were still debating important aspects of a draft bill laying out new rules for bringing terror detainees to trial , with some of the sharpest disagreements over provisions that would allow defendants to be excluded from their own trials .
The military ’s senior uniformed lawyers , known as judge advocates general , are concerned that those provisions may prompt other governments to put captured American soldiers on trial in absentia , said a senior official involved in the deliberations about the plan .
The debate is also driven in part by concern expressed by the Supreme Court about the exclusion of defendants when it struck down the Bush administration ’s original effort to put terror detainees on trial before military commissions .
Though the draft administration bill provides new rules intended to deal with the Supreme Court objections , the draft plans would still allow defendants to be removed when classified evidence was presented .
Wednesday , December 14 , 2005
Coming Soon to Gmail : Automatic Vacation Responses and More
Caleb Eggensperger tells us there will be two new features coming to Google ’s Gmail soon ( how soon , nobody knows – usually these features are rolled out slowly , and can take anything from weeks to months to show up for everyone ) :
The first feature has already been mentioned here because it was found by translating future Gmail interface texts ; it ’s Gmail Contact Groups .
This is nothing new in the world of email and a feature most other email clients have as well ( at least desktop clients ) .
Instead of emailing a single person , you can group several addresses into one .
.
This is nothing new in the world of email and a feature most other email clients have as well ( at least desktop clients ) .
Instead of emailing a single person , you can group several addresses into one .
The second feature are automatic vacation responses .
That means whenever you ’re away from your computer , you can set up an auto - reply to inform those who email you that you ’re gone at the moment .
( While Google says that they will not send this auto - response to messages flagged as spam , it ’s also true they do n’t correctly identify all messages as spam .
This in return might “ validate ” your email to some spammers . )
>>
More posts
Advertisement
We were party to the development of a nuclear facility in Israel that has been used for the manufacture of nuclear weapons
Jeremy Corbyn
In August , Newsnight revealed that more than 40 years ago , Britain sold heavy water , a key substance , to Israel .
MPs now allege that minister Kim Howells tried to mislead the International Atomic Energy Agency ( IAEA ) over Britain 's role .
The charges come as the head of the IAEA , Mohamed ElBaradei , is about to the receive the Nobel Peace Prize .
Mr ElBaradei will receive the Prize this weekend for his and the IAEA 's work in curbing the spread of nuclear weapons .
The shipments involved heavy water - a key element in producing plutonium - which the UK had originally bought from Norway .
Officially it was sold back to a Norwegian state firm called Noratom .
But Britain knew Noratom would immediately sell 20 tons of the heavy water to Israel , and it was even collected directly from a British port by Israeli ships .
It 's thought that today Israel possesses more than hundred nuclear weapons .
No cover -up
After Newsnight 's original broadcast , the Arab League wrote to the IAEA seeking a full investigation .
But Foreign Office minister Kim Howells told Mohamed ElBaradei that Britain did not sell the material to Israel .
" The UK was not in fact a party to the sale of heavy water to Israel , " he wrote , " but did negotiate the sale back to Norway of surplus heavy water . "
Britain then circulated that response to every IAEA member government ; but opposition MPs are accusing the Foreign Office of using Norway 's involvement as a smokescreen .
Liberal Democrat Foreign Affairs spokesman Sir Menzies Campbell told Newsnight : " There 's an old political dictum that it's not the event that is often the most embarrassing , it 's the cover -up .
" The trouble with this cover - up is that this is not a cover - up .
It simply flies in the face of the known facts , now that we have access to previously classified documents .
Labour MP Jeremy Corbyn is asking the Foreign Affairs Select Committee to investigate Kim Howells ' response to the IAEA .
" It 's simply untrue - right back to the late 1950s we were a party to the transfer of nuclear technology to Israel , " he said .
" We were party to the development of a nuclear facility in Israel that could , and has , been used for the manufacture of nuclear weapons ; Norway was always a smokescreen . "
Surprise in Washington
Newsnight 's initial report last August was based on documents unearthed in the British National Archive , and shocked people around the world .
In Washington President Kennedy 's former Defence Secretary Robert MacNamara , who tried to stop Israel going nuclear , told Newsnight : " The fact Israel was trying to develop a nuclear bomb should not have come as a surprise , but that Britain should have supplied it with heavy water was indeed a surprise to me . "
Newsnight has tracked down Donald Cape , one of the Foreign Office officials involved in deciding that British heavy water should be shipped to Israel .
Mohamed ElBaradei will receive the Nobel Peace Prize
Mr Cape agrees with Kim Howells ' interpretation , however , and insists the heavy water was sold to Norway .
It is " absolute nonsense " , he says , to suggest Norway 's involvement was a " sham " and that the real sale was from Britain to Israel .
But Newsnight has also obtained Israel 's contract with the Norwegian firm Noratom .
It says Noratom would provide heavy water from the UKAEA for Israel - delivered in Britain to Israel .
Noratom would take a commission of two per cent on the four million dollar deal ; its responsibility would be " limited " to that of " consultant " .
Donald Cape says he and his colleagues did not tell ministers about the transaction because there was no reason for either Britain or America to suspect what Israel was up to .
But confidential letters obtained by Newsnight through a Freedom of Information request , written two months before the first delivery was collected by Israel , suggest there were already suspicions about Israel 's intentions .
The documents show the Foreign Office knew Israel had secretly tried to buy uranium from South Africa - without safeguards .
One letter quotes secret CIA reports from 1957 and 1958 , which took the view : " The Israelis must be expected to try and establish a nuclear weapons programme as soon as the means were available to them . "
The man who wrote these Foreign Office letters was Donald Cape himself .
No safeguards
When the existence of the Israel 's nuclear reactor at Dimona was revealed to the world in December 1960 , Britain 's spymasters made an assessment of Israeli capabilities .
In the last few days , Newsnight has obtained the top secret ' UK eyes only ' report - previously only seen by the bosses of intelligence bodies such as MI6 , MI5 and GCHQ .
These minutes are really the only occasion on which the British Government has ever released a detailed assessment of Israel 's nuclear weapons programme , and they show just how important Britain 's 20 tons of heavy water were to that programme .
According to the Joint Intelligence Assessment , it meant that the Dimona reactor would be able to make enough plutonium to build up to six atom bombs a year .
The document concludes : " It has been , and remains our opinion , that Israel wanted an independent supply of plutonium so as to be in a position to make nuclear weapons if she wished . "
Yet we also know that the Foreign Office imposed no restrictions on what the heavy water would be used for .
Donald Cape wrote that it would be " over zealous " to impose safeguards on Norway or Israel .
And he agreed to keep the deal secret even from the US , writing that : " I would prefer not to tell the Americans . "
Says Menzies Campbell : " There 's no doubt we deceived our close allies , the United States ; we knew that there was likely to be a military use to which this heavy water was put .
" The material went from [ the UKAEA at ]
Harwell direct to a British port , to Israeli ships , and was then taken to Israel .
" This assertion that somehow we were n't party to the action simply does not stand up when you analyse the facts . "
Why ePassportPhoto.com ?
Save Money Choose our FREE service or our recommended full service for official application starting from only $ 0.99 / photo .
Save Time
Our wizard will have your passport photos ready in minutes .
Forget about driving , parking and waiting in line !
Get Application Approved
Our passport photo experts validate far more passport photos than any drugstore and we have 99 % approval rate ( and 100 % money back ) .
Travel the World Need a Chinese visa or an Indian passport ?
We 've got all the official passport and visas standards under control .
Make Your Kids Happy
Don't drag your kids to the drugstore hoping that they will cooperate - complete it all at home - 4.9 stars , based on 2,454,300 reviews
" In the United States , your university system is one of the drivers of American prosperity , " said Claude Allègre , a former education minister who tried without success to reform French universities .
" But here , we simply do n't invest enough .
Universities are poor .
They 're not a priority either for the state or the private sector .
If we do n't reverse this trend , we will kill the new generation . "
It was student discontent on campuses across France that fired up the recent protests against a law that would have made it easier for employers to dismiss young workers .
College students were driven by fear that their education was worth little and that after graduation they would not find jobs .
The protests closed or disrupted a majority of France 's universities for weeks , labor unions declared solidarity and eventually the government was forced to withdraw the law .
" Universities are factories , " said Christine le Forestier , 24 , a 2005 graduate of Nanterre with a master 's degree who has not found a stable job .
" They are machines to turn out thousands and thousands of students who have learned all about theory but nothing practical .
A diploma is worth nothing in the real world . "
The problems stem in part from the student revolts of May 1968 , which grew out of an unexceptional event at Nanterre the year before .
One March evening , male students protesting the sexual segregation of the dormitories occupied the women 's dormitory and were evicted by the police .
A liquid magnet , or ferrofluid , is a colloidal mixture of magnetic particles ( ~10 nm in diameter ) in a liquid carrier .
When no external magnetic field is present , the fluid is not magnetic and the orientation of the magnetite particles is random .
However , when an external magnetic field is applied , the magnetic moments of the particles align with the magnetic field lines .
When the magnetic field is removed , the particles return to random alignment .
These properties can be used to make a liquid that changes its density depending on the strength of the magnetic field and can form fantastic shapes .
The liquid carrier of a ferrofluid contains a surfactant to prevent the particles from sticking together .
Ferrofluids can be suspended in water or in an organic fluid .
A typical ferrofluid is about 5 % magnetic solids , 10 % surfactant , and 85 % carrier , by volume .
One type of ferrofluid you can make uses magnetite for the magnetic particles , oleic acid as the surfactant , and kerosene as the carrier fluid to suspend the particles .
You can find ferrofluids in high - end speakers and in the laser heads of some CD and DVD players .
They are used in low friction seals for rotating shaft motors and computer disk drive seals .
You could open a computer disk drive or a speaker to get to the liquid magnet , but it 's pretty easy ( and fun ) to make your own ferrofluid .
Here 's how :
01 of 05 Safety Considerations Fuse / Getty Images
This procedure uses flammable substances and generates heat and toxic fumes .
Wear safety glasses and skin protection , work in a well - ventilated area , and be familiar with the safety data for your chemicals .
Ferrofluid can stain skin and clothing .
Keep it out of reach of children and pets .
Contact your local poison control center if you suspect ingestion .
There is a risk of iron poisoning ; the carrier is kerosene .
02 of 05 Materials jopstock / Getty Images
Here are the materials you 'll need : Household ammonia
Oleic acid ( found in some pharmacies and craft and health food stores )
PCB etchant ( ferric chloride solution ) , available at electronics stores .
You can make ferric chloride or ferrous chloride solution or you can use magnetite or magnetic hematite powder if you have either of those minerals handy .
( Magnetic hematite is an inexpensive mineral used in jewelry . )
Steel wool
Distilled water
Magnet
Kerosene
Heat source
2 beakers or measuring cups
Plastic syringe or medicine cup ( something to measure 10 ml )
Filter papers or coffee filters
While it is possible to make substitutions for the oleic acid and the kerosene , changes to the chemicals will result in changes to the characteristics of the ferrofluid , to varying extents .
You can try other surfactants and other organic solvents ; however , the surfactant must be soluble in the solvent .
03 of 05 Synthesizing Magnetite Ekaterina Lutokhina / Getty Images
The magnetic particles in this ferrofluid consist of magnetite .
If you are n't starting with magnetite , then the first step is to prepare it .
This is done by reducing the ferric chloride ( FeCl 3 ) in PCB etchant to ferrous chloride ( FeCl 2 ) .
Ferric chloride is then reacted to produce magnetite .
Commercial PCB etchant is usually 1.5 M ferric chloride , to yield 5 grams of magnetite .
If you are using a stock solution of ferric chloride , then follow the procedure using a 1.5 M solution .
Pour 10 ml of PCB etchant and 10 ml of distilled water into a glass cup .
Add a piece of steel wool to the solution .
Mix the liquid until you get a color change .
The solution should become bright green ( green is the FeCl 2 ) .
Filter the liquid through filter paper or a coffee filter .
Keep the liquid ; discard the filter .
Precipitate the magnetite out of the solution .
Add 20 ml of PCB etchant ( FeCl 3 ) to the green solution ( FeCl 2 ) .
If you are using stock solutions of ferric and ferrous chloride , keep in mind FeCl 3 and FeCl 2 react in a 2:1 ratio .
Stir in 150 ml of ammonia .
The magnetite , Fe 3 O 4 , will fall out of solution .
This is the product you want to collect .
04 of 05 Suspending Magnetite in a Carrier Westend61 / Getty Images
The magnetic particles must be coated with a surfactant so that they wo n't stick together when magnetized .
The coated particles will be suspended in a carrier , so the magnetic solution will flow like a liquid .
Since you will be working with ammonia and kerosene , prepare the carrier in a well - ventilated area , outdoors or under a fume hood .
Follow these steps :
Heat the magnetite solution to just below boiling .
Stir in 5 ml oleic acid .
Maintain the heat until the ammonia evaporates ( approximately an hour ) .
Remove the mixture from the heat and allow it to cool .
The oleic acid reacts with ammonia to form ammonium oleate .
Heat allows the oleate ion to enter the solution , while the ammonia escapes as a gas ( which is why you need ventilation ) .
When the oleate ion binds to a magnetite particle , it is reconverted to oleic acid .
Add 100 ml kerosene to the coated magnetite suspension .
Stir the suspension until most of the black color has been transferred into the kerosene .
Magnetite and oleic acid are insoluble in water , while oleic acid is soluble in kerosene .
The coated particles will leave the aqueous solution in favor of the kerosene .
If you make a substitution for the kerosene , the solvent must have the same property : the ability to dissolve the oleic acid but not uncoated magnetite .
Decant and save the kerosene layer .
Discard the water .
The magnetite plus oleic acid plus kerosene is the ferrofluid .
What does it take to bring Joe 's Goals down ?
So some of you may have noticed that Joe 's Goals went down today ( August 16th at around 5 : AM Pacific Time ) .
While your first thought may have been that I rolled out some untested code , I wanted to assure you that the problem was much bigger than that .
It appears some good folks doing work outside the datacenter where Web 2.0 is hosted cut the fiber line and all hell hit the fan .
The pictures were so cool I just had to put them up somewhere .
While the Verizon techs initially tried to fix it ( are they out of their minds ?!
Look at that cut !
Brain surgery would be easier than that , and quicker ! ) they gave up after four hours and decided to run a brand new line to the datacenter .
They got it installed and service was restored around 5:15 PM Pacific Time .
Thanks for your patience !
Joe
- Looks like someone posted this to reddit - And now digg .
Coolness !
Care to digg it
Pictures :
Irak
Wer zu früh beten geht , wird festgenommen
Die Behörden im Irak haben in vier Provinzen die nächtliche Ausgangssperre bis in den späten Nachmittag hinein ausgeweitet .
Sie gilt auch für Gläubige , die zum Freitagsgebet wollen .
Die US - Armee meldete die Festnahme eines Bombenbauers der Qaida .
Business travel
Gulliver
News and views to entertain and inform business travellers , and help them make the most of life on the road
Newswise —
A virus that typically infects insects could help with the development of gene therapy treatment for Hemophilia A , a condition in which even a bump on the knee can cause serious internal bleeding in people .
Researchers at the University of Iowa Roy J. and Lucille A. Carver College of Medicine improved a vector -- a vehicle that delivers gene therapy to cells -- in two ways to create a sustained , partial correction to bleeding problems in mice engineered to have Hemophilia A , which is also known as factor VIII deficiency .
The findings appear in the Sept. 1 issue of the journal Blood ( published Aug. 19 online ) .
The team adapted the outer layer , or " coat , " from a baculovirus , a virus that infects butterflies and moths , onto another modified virus .
This hybrid vehicle could more easily attach to certain liver cells and allow the genes within the vehicle to enter the cells .
The genes then caused the liver cells to make the protein that prevents bleeding .
The researchers also modified the vehicle so that it would express these therapeutic genes only in liver cells , thus reducing the likelihood of negative side effects .
The laboratory findings have significant potential for developing improved treatment for hemophilia but are not yet applicable to people , cautioned Paul McCray , UI professor of pediatrics and the study 's corresponding author .
" It 's an exciting finding , but we are still many steps away from a possible gene therapy for people with hemophilia , " he said .
Hemophilia
A is the leading sex - linked bleeding disorder , affecting one in 5,000 to 10,000 males .
People with the condition have a genetic mutation that leaves them with little to no factor VIII protein to prevent uncontrolled bleeding .
Individuals with the severe form of the disease have less than 1 percent of the normal amount of protein .
However , only a relatively small amount of the normal protein level is needed to make the problem milder and , thus , less life threatening .
" Hemophilia is considered an ideal candidate for correction with gene therapy because if you could just raise the factor VIII activity from less than 1 percent of normal to within 5 to 10 percent of normal , the tendency for spontaneous bleeding and need for hospitalization would diminish dramatically , " McCray said .
" In the mouse model in our study , we were able to achieve levels of gene expression that converted the hemophilia A in the mouse from a severe to a mild form .
The correction lasted 30 weeks -- the duration of the study , " he added .
One of the current treatments for hemophilia involves intravenously delivering recombinant ( genetically engineered ) human factor VIII protein to prevent bleeding episodes .
However , the weekly to bi-weekly preventive treatments are extremely expensive , costing up to $ 500,000 per year .
In addition , over time some patients may develop antibodies to the protein , making the treatments less effective .
In earlier studies , McCray 's team , which includes Yubin Kang , M.D. , at the time a UI assistant research scientist in pediatrics ( now a UI resident in internal medicine ) , targeted the liver because its main functional cells , called hepatocytes , can make the factor VIII protein and secrete it into the bloodstream .
However , the investigators recognized the need to target the liver more effectively .
" It has been difficult to conclusively identify the cells that normally make factor VIII , " McCray said .
" Hepatocytes may not be the main source of this protein , but they are relatively easy to target .
So we aimed to find a way to get these cells to make more of it .
In effect , we 're using the hepatocytes as a factory to make this protein and secrete it into the bloodstream . "
To better target the hepatocytes in the mice , the team took the disabled protein coat from the baculovirus Autographa californica and put it on to a modified type of lentivirus called feline immunodeficiency virus ( FIV ) .
FIV causes leukemia in cats but no disease in humans .
The hybrid vehicle efficiently bound to receptors on the liver cells because the modified baculovirus coat serves as a " key " that fits into the " lock , " or receptor .
The percentage of liver cells that took up the virus increased from approximately 5 percent to 20 percent .
The team also modified the part of the FIV that expresses the therapeutic gene so that its promoter that causes gene expression worked only when it was in a liver cell .
" Even if this FIV modified virus goes to other organs of the body , it wo n't express well because its promoter is liver - specific , " McCray said .
" This modification helps prevent negative side effects .
For example , if the gene were expressed in immune cells instead of liver cells , it could lead to a damaging immune response . "
McCray said the team now is studying additional ways to make the hybrid vector express the protein even better .
The study was supported by grants from the National Institutes of Health , the National Hemophilia Foundation and the Hemophilia Association of New York , and by a pilot and feasibility grant from the Center for Gene Therapy for Cystic Fibrosis .
The UI Gene Transfer Vector Core and UI Cell Morphology Core also provided assistance .
For more information on hemophilia , visit the UI Health Care Web site http://www.uihealthcare.com/depts/hemophilia.
University of Iowa Health Care describes the partnership between the UI Roy J. and Lucille A. Carver College of Medicine and UI Hospitals and Clinics and the patient care , medical education and research programs and services they provide .
Visit UI Health Care online at http://www.uihealthcare.com.
JOURNAL CITATION : Blood , 1 September 2005 , Vol. 106 , No. 5 , pp. 1552-1558 . " Persistent expression of factor VIII in vivo following nonprimate lentiviral gene transfer " Yubin Kang , Litao Xie , Diane Thi Tran , Colleen S. Stein , Melissa Hickey , Beverly L. Davidson , and Paul B. McCray , Jr .
ABSTRACT : http://www.bloodjournal.org/cgi/content/abstract/106/5/1552
SITE INFO & FEEDBACK
curious about this site ?
Click here to read about the origin of this site and read some visitor feedback .
|
|
Lou
Ye won the main prize at the Rotterdam Film Festival in 2000
Lou entered romance Summer Palace for competition without clearing it with China 's censors , state media reported .
The film , which features explicit sex scenes , takes place around the Tiananmen Square protests in 1989 .
Lou said at Cannes in June that he would consider changing the film 's content so it could be seen in China .
An official at China 's State Administration of Radio , Film and Television confirmed news of the ban to the country 's official Xinhua News Agency , but declined to give any further comment .
The news agency reported that the film would be confiscated along with any income made from it .
Sensitive
The producer of Summer Palace , Nai An , has also been banned from film - making for five years .
Summer Palace was the only Asian film which competed for the prestigious Palme D'Or at the film festival in France earlier this year .
Hong Kong media reported at the time that Chinese outlets were banned from reporting Lou Ye's appearance at Cannes .
The 1989 protests in Beijing remain a sensitive issue with the Chinese authorities , who still condemn them as " counter - revolutionary " .
Daddy must be proud ....
No , seriously .
Reply
Thread
Link
Their default pictures make the myspace look fake .
Reply
Thread
Link
i agree !
totally fake I think .
Reply
Parent
Thread
Link
** Send me a message and i MIGHT add u ... thanx ** please dont waiste my time !!
Reply
Thread
Link
I was just about to post that haha .
Thez rich , theyz do n't need no edukation !
Reply
Parent
Thread
Link
I love it .
I really do .
Reply
Parent
Thread
Link
I 'd love to go to one of these 20,000 dollar a year private schools to see what they actually teach them , because obviously they ar n't learning anything .
Reply
Parent
Thread
Expand
Link
Uh , LOL at least she got the first 2 and the last 3 letters right ....
Reply
Parent
Thread
Link
lol well if you dont know how to spelll the word the right way , might as well combine both ways of spelling it .
Reply
Parent
Thread
Link
i always wonder why celebrities find it unnecessary to have proper spelling .
Reply
Parent
Thread
Link
I KNOW !
I wanted to smack her for that ... but then again look how they spelled Rumer
Reply
Parent
Thread
Link
everytime i see the picture in your icon , i'm like WHY IS THIS PICTURE OF MY BOYFRIEND ON THE INTERNET !
i fucking suck .
Reply
Parent
Thread
Link
f'n hotties !
woot
jeff
Reply
Thread
Link
rofl
Reply
Thread
Link
yeah their default pics make them seem really fake ... and do n't they live in idaho or something ?
Reply
Thread
Link
private myspaces = no fun
Reply
Thread
Link
you can see them if you switch your age to match the private myspace's .
Reply
Parent
Thread
Link
That does n't always work .
In the settings you can change it so only friends can see your profile .
It 's not always about age on myspace .
Reply
Parent
Thread
Link
That only works sometimes .
Usually its for the stupid people who think they are smart for just switching their age .
Psh you need to do the setting change too .
Reply
Parent
Thread
Link
Mine 's private :D
Reply
Parent
Thread
Link
Lots of people do that when they split their time between two places .. they 'll put a different city with the state
Reply
Parent
Thread
Link
WeHo is n't 90210 .
Reply
Parent
Thread
Link
Gah ... do we have Jennifer Lopez to thank for all this lame abbreviation crap ?
Damn you , JLo .
Reply
Parent
Thread
Link
maybe shes listing all the places she stays
or maybe its an IMPOSTER !!
Reply
Parent
Thread
Link
she got downs ?
Reply
Thread
Link
lolz spelling .
these look fake cause of those picsssss
Reply
Thread
Link
they 're both so unfortunate looking .
Reply
Thread
Link
© All Rights Reserved .
Please do not distribute without written permission from Damn Interesting .
This article is marked as ' retired ' .
The information here may be out of date and / or incomplete .
Traditional batteries : will we finally get a new design ?
Battery science has traditionally been the slowpoke of the technological industry .
Look at a few of its competitors – in the last fifty years , screens have gone from black - and - white to color ; from grainy cathode ray tube screens to high - definition plasma .
Computers that used to be housed in gigantic warehouses , using thousands of vacuum tubes , are now overpowered by tiny boxes that sit on every college students ’ desk .
Processors , found in most modern devices , are built on an atomic scale .
Yet the batteries we use today are still based upon the same technology that was developed by Alessandro Volta over two hundred years ago .
They are large , lose electrical charge with time , can leak dangerous acids , and even sometimes explode with misuse .
But now , there comes new technology to finally replace the old – the nanobattery .
There are a few projects working with nanobattery technology , and one such endeavor comes from MIT ’s Laboratory for Electromagnetic and Electronic Systems ( LEES ) , which is improving on the design of ultracapacitors .
TerraDaily writes :
“ Today ’s ultracapacitors use electrodes made of activated carbon , which is extremely porous and therefore has a very large surface area .
However , the pores in the carbon are irregular in size and shape , which reduces efficiency .
The vertically aligned nanotubes in the LEES ultracapacitor have a regular shape , and a size that is only several atomic diameters in width .
The result is a significantly more effective surface area , which equates to significantly increased storage capacity . ”
Unfortunately , most nanobatteries are still too expensive or impractical to be put to everyday use .
Initially the technology will probably be used mostly in medical devices , military applications , and emergencies .
But as is true with most technology , increases in production will likely result in decreases in cost .
Perhaps one day soon the general public will enjoy laptop batteries which can hold a charge long enough to actually allow one to finish wri
Further reading :
MIT ’s Ventures into Nanotube Batteries
m Phase Technologies , Another Current Researcher
Nanobatteries and Its Use for Artificial Eyes
Most people who have had significant contact with the US medical establishment have had an ultrasound .
The machines are cheap and easy to use , and provide a rough picture of the state of our internal organs without an invasive procedure or exposure to ionizing radiation .
These two safety factors probably contribute heavily to its use for pre-natal checkups that ascertain the health of the developing fetus , the results of which many of you have also seen .
But a just - released study suggests that ultrasound may have some subtle effects on embryonic brain development .
The study looked at the developing cortex of the brain .
This portion of the brain develops through a stereotypical pattern .
The precursors of neurons exist in a single layer of proliferating cells at the base of the cortex .
These cells mature into neurons in waves , each of which migrates to the top of the structure .
Thus , as more waves are produced over time , the cortex begins to resemble a layer cake , with each layer performing a specialized function .
One consequence of this process is that the later waves of cells have to migrate ever further before settling down .
The researchers gave pregnant mice injections with a chemical that marked dividing cells , allowing them to track a single wave of differentiating neurons .
One half of the mice were given ultrasound , while controls were put through the same procedure without the ultrasound device being activated .
In all cases , the migration of neurons in the embryonic cortex was examined after birth .
In both control and exposed samples , a small number of neurons either never made the migration , or got lost along the way , taking up residence in the wrong layer .
The difference was in the numbers ; once the ultrasound exposure went on for a half - hour or more , the number of neurons getting lost was consistently larger in the exposed group .
It 's important to note that these results , although statistically significant , were variable , and the sample size was relatively small .
The net result was also simply an enhancement of a situation that 's apparently perfectly normal .
The authors also discuss the significant differences between the mouse and human brains , not the least of which is that the human cortex develops over a time period that 's three times longer than the entire mouse pregnancy .
At the same time , the distance human neurons travel is over an order of magnitude further , and the complex brains of primates may have a lower tolerance for error .
In short , these results are suggestive ; a cause for further study , but not a cause for alarm .
The discussion of the paper wraps up by noting that the FDA already recommends against unnecessary ultrasounds , and calls for similar studies to be performed in non-human primates .
It 's hard to argue with that conclusion .
Tony Blair and the Labour leadership have said how sorry they are about the 82 year old man rough - housed out of their party conference for heckling .
You bet they are sorry .
They ’re sorry it was caught on camera .
However , the event of real significance was not Walter Wolfgang ’s ill - treatment at the hands of a few bone - headed stewards but the use of anti-terrorism laws to prevent him from re-entering the conference .
Now some of you may be thinking what a disgrace it is , that draconian terrorism legislation supposed used as a last resort to safeguard us from attack might be utilised in this way .
There will be some hand - wringing liberals who might suggest that it is the government ’s obvious downgrading of the importance of civil liberties which has led police into such a casual usage of their powers .
Some of you may be recalling how the terror legislation was also used against demonstrators at an arms fair in London ’s Docklands .
But you could not be more wrong .
This man might easily have been a suicide heckler .
He may only have shouted “ nonsense ” at Jack Straw but police say a search of his duffle - bag revealed abusive quotations downloaded from the internet and large quantities of invective .
The police had to act ; imagine the row if this man had insulted the prime minister .
And while everyone is feeling sorry for this obvious fanatic , we should remember that we still do not know the full story .
Frankly , given the police ’s new shoot - to - kill policy on suspected barrackers , he ’s lucky he ’s still alive .
There will already have to be an urgent review of the intelligence failings which allowed him to slip through the net .
Sir Ian Blair , the Metropolitan Police Commissioner , has warned there may be hundreds , possibly thousands of home - grown barrackers , schooled in the madrassars of Tunbridge Wells and Richmond upon Thames .
Many hone their skills in some of the heckling hotspots of the world - like Speaker ’s Corner and the Comedy Store in Leicester Square .
You will all be left feeling pretty stupid if Ayman al- Zawahiri crops up on al - Jazeera , claiming responsibility for the heckle and warning of more heckling outrages to come .
Indeed the entire incident surely requires a review of the laws to see if they need to be strengthened .
Charles Clarke , the home secretary , should be seeking a cross-party consensus on new offences of incitement to heckle and the glorification of heckling .
Those to disseminate heckling literature must be targeted as must those debating clubs which gull impressionable young political activists into acts of extreme barracking .
Civil rights campaigners are deeply concerned about the police ’s desire to detain and interrogate hecklers for up to 90 days , but the prime minister said the police would not be asking for this power if they did not think it was absolutely necessary .
The British public demands that the government ensure our security .
Our very liberties and freedoms are at stake .
We ignore this threat at our peril .
As a developer , you ’ve probably , at some unfortunate point in your life ( possibly several points , actually ) , been handed an Excel file that has been crammed full of “ data ” by someone in marketing and told to “ do something with it . ”
Columns probably did n’t line up , and a thousand different fonts were used .
Every feature of Excel was probably abused and abused again in order to avoid having to use an actual database application for storage of the data .
Of course , it ’s up to you to make sense of the layout , and they could just give a bleepity - bleep about what a pain in the ass it is to suck weird data out of Excel and “ do something with it ” when little or ( more often ) no thought has been given to possibly making the data consistent or , dare I say , orderly .
To this end , I ’ve put together another art project .
This time , what you will see unfold before your peepers is a process of discovery – My thoughts on how these files are created .
[ Note : I wound up drawing one of the characters with fangs and , eventually , “ crazy eyes ” – I do n’t know why I did this .
It just felt right . ]
Hey – I know what you ’re thinking : “ That was a little weird ”
Published online 11 July 2006 | Nature | doi:10.1038/news060710-2
News
Wiping out one part of the brain can break the thrall of smoking .
Kicking the habbit is easy for some with selective brain damage .
© Getty
Strokes often change a person 's character , depending on where the damage hits .
Some may become more impulsive , others depressed .
Now researchers have shown that damage to a small but very specific brain area can wipe out an addiction to smoking .
Antoine Bechera , of the University of Iowa in Iowa City , has identified 14 patients who all stopped smoking immediately after having a stroke that damaged their insular cortex .
This seems to be not because they were concerned about their health , but because they had lost all interest in cigarettes , he told the Federation of Neuroscience Societies in Vienna this week .
" One or two had even forgotten that they used to smoke , " says Bechera .
The insular cortex is a relatively primitive part of the brain whose functions include providing an emotional context for experiences , such as drug taking , along with some higher - level , decision - making functions involved , for example , in forming memories .
The seemingly huge impact of switching off this area could have implications for addiction research in general , according to Bechera .
Throwing off an addiction for good is tough because cues in the environment — a whiff of tobacco smoke , or the room where you used to shoot up — automatically invokes the emotion associated with the last fix .
But such triggers do n't seem to trouble the patients with a damaged insula .
" We could do everything we wanted to reawaken craving in these patients , " says Bechera .
" We could even light up in front of them but it had no effect at all . "
Inconstant craving
Bechera 's experience with these patients supports his hypothesis that addiction is caused by an imbalance between two neuronal systems — the impulsive system controlled by a brain area ( the amygdala ) that helps to process emotions and a reflective system controlled by the forebrain .
The reflective system anticipates and assesses the consequences , good or bad , that any action will have for the future .
Most addiction research focuses on the impulsive system .
Bechera has previously shown that some drug addicts behave similarly to stroke patients with forebrain damage when it comes to decision making .
In tests designed to assess financial risk - taking behaviour , they impulsively chose to take as much cash as possible up front , even when that option is linked to a major loss of cash in the longer term .
This implies that their impulsive system is winning out over the more logical , risk - assessing system .
But other addicts will make the clever decision — to take less cash up front and benefit long - term .
These kinds of addicts tend to have more functional lives , says Bechera .
" They have not broken up their families , and they hold down their jobs , because their reflective system is not damaged and they make sensible decisions . "
" I think these kinds of addicts will find it easier to stay off drugs if they go clean , " he adds .
Kick the habit
Selective damage to the insula cortex seems to filter out some of the information from the impulsive system when it comes to making a decision .
As a result , smokers whose reflective capacities are functional seem to be able to make the rational decision to give up , without experiencing withdrawal pain , Bechera says .
ADVERTISEMENT
Just how this information could be used to help addicts in general is not yet clear .
" But first of all it is important to pinpoint exactly where the systems can become damaged , " says Bechera .
It may be possible in the future to suppress neuronal activity in the insula , for example , to see if that helps addicts to kick their habits .
Visit our makessmokersforgetth.html " > newsblog to read and post comments about this story .
WEATHER systems , as the world has recently been reminded , have awesome power .
The energy released by a large hurricane can exceed the energy consumption of the human race for a whole year , and even an average tornado has a power similar to that of a large power station .
If only mankind could harness that energy , rather than being at its mercy .
Louis Michaud , a Canadian engineer who works at a large oil company , believes he has devised a way to do just that , by generating artificial whirlwinds that can be controlled and harnessed .
He calls his invention the “ atmospheric vortex engine ” .
His idea works on a similar principle to a solar chimney , which consists of a tall , hollow cylinder surrounded by a large greenhouse .
The sun heats the air in the greenhouse , and the hot air rises .
But its only escape route is via the chimney .
A turbine at the base of the chimney generates electricity as the air rushes by .
A small solar chimney was operated successfully in Spain in the 1980s , and EnviroMission , an Australian firm , is planning to build a 1,000 - metre - high example in New South Wales .
But the efficiency of such a system is proportional to the height of the chimney , notes Mr Michaud , which is limited by practical considerations .
His scheme replaces the chimney with a tornado - like vortex of spinning air , which could extend several kilometres into the atmosphere .
This vortex would be produced inside a large cylindrical wall , 200 metres in diameter and 100 metres tall .
Warm air at ground level enters via tangential inlets around the base of the wall .
Steam is also injected to get the vortex started .
Once established , the heat content of the air at ground level is enough to keep the vortex going .
As the air rises , it expands and cools , and water vapour condenses , releasing even more heat .
This is , in fact , what powers a hurricane , which can be thought of as a heat engine that takes in warm , humid air at its base , releases cold , watery air at the top of the troposphere , about 12 kilometres up , and liberates a vast amount of energy in the process .
( Just as water requires heat to make it boil , it releases heat as it condenses back into a liquid . )
Mr Michaud 's vortex would reach a similar height to that of a hurricane , but its base would remain stationary .
The intensity of the vortex would be controlled by closing the inlets around the base , or by opening another set of inlets to inject air in the opposite direction and so slow the vortex 's rotation .
And , of course , there would be a set of turbines at the base of the vortex that would allow its energy to be harnessed as air rushed through the inlets .
Mr Michaud estimates that an atmospheric vortex engine with a diameter of 200 metres would produce around 200 megawatts of power .
Yes , but would it actually work ?
And if it did , could the resulting vortex really be controlled ?
Mr Michaud admits that the word “ tornado ” tends to worry people .
This summer , 30 years after he had the original idea , and having failed to convince his employer or any other energy firm to take it on , he began tests at a site in Utah , with a cylindrical wall 10 metres in diameter .
His initial aim is to demonstrate that artificial vortices can indeed be created and controlled .
The next phase , he says , would be to modify a cooling tower at an existing power station so that it uses a spinning vortex rather than the usual large fans to generate the necessary airflow within .
The final step would be to add turbines to extract energy from the vortex .
Besides the engineering challenges involved , Mr Michaud must navigate the cultural divide between atmospheric scientists and the weather - modification community .
The scientists regard the weather - modification crowd as cranks .
They , in turn , cannot understand why the scientists are not taking a more hands - on , experimental approach to understanding the weather , rather than simply observing and modelling it .
Mr Michaud has published nine papers in atmospheric - science and meteorology journals , and says his invention relies on principles that are consistent with scientists ' current understanding of how natural weather systems work .
So much for the theory .
Now he must demonstrate that it works in practice .
Pixar tells story behind ' Toy Story '
When Hollywood was churning out movies full of explosions and mindless violence a few years ago , Pixar Animation Studios swam against the stream with " Finding Nemo , " a G - rated feature that received four Academy Award nominations and grossed more than $ 355 million .
Today , of course , Pixar 's filmmaking wisdom is self - evident .
Mention the animation studio and everyone nods wisely .
But Monday , as Pixar celebrated the 10th anniversary of " Toy Story , " its debut film , the creative minds behind the studio for the first time told the real story of how they almost lost the picture .
Not only did the big- money folks at Disney who bankrolled the film not understand the vision of " Toy Story , " they hated it so much they shut down production .
Of course , Pixar made the movie , the movie made millions and Disney watched itself dethroned as the king of animation by a company that Steve Jobs started in a Richmond garage .
It is an instructive story on several levels .
Pixar , as you have probably heard , has had a stormy relationship with Disney -- and Disney , at this point , looks like the loser .
In the 10 years since we met Woody the cowboy , Buzz Lightyear and the rest of the " Toy Story " gang , Pixar has won 16 Academy Awards and grossed over $ 3 billion .
Disney , once the gold standard of animation , is reeling from flops like " Treasure Planet . "
Is Pixar the new model for corporate filmmaking ?
Would n't that be nice ?
Yesterday 's press tour was a rare opportunity to cruise the Emeryville campus , where studio guru John Lasseter can be seen strolling by in one of his trademark Hawaiian shirts , and slacker - chic employees zip the halls on scooters when they are n't playing video games and foosball .
Call it the house that Woody built .
" I do n't think there is any other studio out there like Pixar , " said Lee Unkrich , the co-director of " Finding Nemo , " " Monsters , Inc. " and " Toy Story 2 . "
He 's got that right .
Where else would employees talk about creating " art as a team sport ? "
It is n't just an innovative workplace ; Pixar sounds a little like an alternative lifestyle .
With their beach garb , geek culture and fanatic attention to detail , the folks at Pixar are churning out the must - see movies of their generation .
What no one seems to notice is that , with the huge production costs of computer animation , they are rolling the dice with every new release .
Pixar has only done six feature films in 10 years .
But there has n't been a clunker in the bunch .
" A lot of studios talk about a 12 - to - 1 ratio -- they come in with 12 ideas and one of them makes it , " said Andrew Stanton , who won Oscars for writing and directing " Nemo . "
" We pick one idea , good or bad , and we stick with it until it works . "
That 's not how it happens down south , as Pixar discovered with " Toy Story . "
Disney , which was bankrolling the project , peppered the young animators with notes and suggestions .
The story was too juvenile , the higher - ups said , and the characters had to be edgier .
Afraid to trust themselves , Lasseter and his crew tried to follow all the directions .
It was , nearly everyone agrees , a train wreck .
Disney hated the movie and the idea -- and shut it down .
" Yeah that was fun , " jokes Pete Docter , who was nominated for Oscars for " Toy Story " and " Monsters , Inc . "
" And it happened right around Christmas , too . "
Lasseter recalls that he " begged " for two weeks to fix things .
The animators went back , took out all of Disney 's suggestions and made the movie they wanted to make in the first place .
And , naturally , when they screened the new version , Disney execs loved it .
There 's your corporate minds at work :
First they screw it up and hate it , and then do n't even realize that they 're watching what they hated in the first place .
But if Lasseter 's last - second fixes had n't worked , there would be no
Pixar campus , first in Richmond , and now in Emeryville today , or a potential expansion with building permits available through 2012 .
Nor would the Bay Area be known as the epicenter of computer animation .
It was one of those behind - the - scenes moments that dramatically changes the culture of a community .
And , it has to be said , Pixar has turned out to be a terrific corporate role model .
Not only has it been wildly successful , it has turned out films that nearly everyone finds entertaining and worthwhile .
The studio's movies , except for some uncharacteristically dark moments in " The Incredibles , " are almost always wholesome family fare .
The movies , and the studio where they are made , are as down - to - earth and unaffected as the creators .
How do they make it work ?
Well , a big part of it , they insist , is avoiding what they call " No , but ... . "
The idea is that when someone suggests an idea , others should respond with " Yes , and ... , " not " No , but ... . "
Docter and Stanton say that attitude comes from the improv comedy culture , and they credit Joe Ranft ( Pixar 's 45 - year - old head of storytelling until he died last week in a car accident in Mendocino County ) with bringing it to Pixar .
It all comes with the concept that , as they say on campus , " every idea is a good idea . "
" What you need to create , " says Stanton , the eighth employee hired when Pixar started 20 years ago , " is the most trusting environment possible where people can screw up . "
And follow their own vision .
So far , so good .
Happy birthday , Woody .
Source :
March 25 , 2004 12:04 IST
The Central Intelligence Agency did not target Al Qaeda chief Osama bin laden once as he had the royal family of the United Arab Emirates with him in Afghanistan , the agency 's director , George Tenet , told the National Commission on Terrorist Attacks on the United States on Thursday .
Had the CIA targeted bin Laden , half the royal family would have been wiped out as well , he said .
The 10 - member bipartisan commission is investigating the events leading up to the September 11 , 2001 attacks in the US .
A host of Clinton and Bush administration officials have testified before the commission .
Deputy Secretary of State Richard Amritage told the commission that it was impossible to send troops to Afghanistan against the Taliban and Al Qaeda without Pakistan 's cooperation and building a new relationship with India .
" US sanctions against Pakistan on the nuclear and other issues complicated the matter and these had to be dismantled , " Armitage said .
He also suggested if the US Congress wanted to show displeasure with any country , it should think of other methods than imposing sanctions .
Former White House counterterrorism official Richard Clarke has charged that fighting terrorism was not the top priority with the Bush administration .
The top priority , he suggested , was Iraq , not Al Qaeda , a claim refuted by the White House .
Clarke alleged that the White House delayed implementing the proposals he had made for eight months and adopted them only after 9/11 .
The project is moved to GitHub https://github.com/yoriyuki/Camomile.
The contents of this page are out - of - dated .
Camomile is a Unicode library for objective caml ( a. k. a. OCaml or O'Caml ) language .
Camomile provides Unicode character type , UTF - 8 , UTF - 16 , UTF - 32 strings , conversion to / from about 200 encodings , collation and locale - sensitive case mappings , and more .
The library is currently designed for Unicode Standard 3.2 .
This library is free software ; you can redistribute it and / or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation ; either version 2 of the License , or ( at your option ) any later version , with the exception similar to OCaml standard library ( see README for details ) .
News
2011/05/24 Camomile 0.8.3 is released .
This is a bug - fix release which fixes a bug concerning casefolding and compare_caseless .
2011/04/12 Camomile 0.8.2 is released .
This is a minor update including
File names of data files which is produced and used by camomile are now properly escaped , to avoid security risk and more liberal use of aliases which contain " . " or " / " etc , Charmap tables are updated to the recent ones of glibc .
Download
Recent release : camomile - 0.8.3
Subversion repository
Documentation
Development
Bug report .
Feature request .
Mailing list
Conformance
The library is designed for Unicode Standard version 3.2 .
Normalisers ( NFD , NFKD , NFC , NFKC ) and collator ( string comparison ) pass the conformance tests defined Unicode Technical Reports .
( see the relevant part of camomile - test . )
The collator is also tested to Canadian , Thai and Japanese standards with their locales .
There is no problem except handling ø in Canadian standard .
Known problems
Miscellaneous
Data structures used in camomile .
Acknowledgment
Peter Jolly provided CP932 conversion table .
Kawakami Shigenobu contributed findlib support .
Pierre Chambart contributed StringPrep module .
Sylvain Le Gall provided dynamic configuration module .
Many people provided bug fixes .
This page is hosted in Sourceforge .
You can see ur project information here .
If you have a comment on this page , contact to the author .
WASHINGTON , May 30 — The Supreme Court declared today , in a ruling affecting millions of government employees , that the Constitution does not always protect their free - speech rights for what they say on the job .
In a 5 - to - 4 decision , the court held that public employees ' free - speech rights are protected when they speak out as citizens on matters of public concern , but not when they speak out in the course of their official duties .
Today 's ruling , involving a deputy Los Angeles district attorney who contended that he had been denied a promotion for challenging the legitimacy of a search warrant , came in a case that has been closely watched not just by public workers but by those who have worried that it could discourage internal whistle - blowers from speaking up about government misconduct and inefficiency .
" We hold that when public employees make statements pursuant to their official duties , the employees are not speaking as citizens for First Amendment purposes , and the Constitution does not insulate their communications from employer discipline , " Justice Anthony M. Kennedy wrote for the court .
HIV may be modified by the immune system
A team at the Institute of Tropical Medicine , in Antwerp , compared HIV - 1 samples from 1986 - 89 and 2002 - 03 .
They found the newer samples appeared not to multiply as well , and were more sensitive to drugs - some other studies argue they are becoming more resistant .
The researchers , writing in the journal Aids , stressed their work in no way meant efforts to prevent the spread of HIV should be scaled down .
HIV is still a life - threatening infection
Keith Alcorn
They were only able to compare 12 samples from each time period , and they were unable fully to tease out any effect that drug therapy may have had on the virus .
Hope for future
Researcher Dr Eric
Arts said : " This was a very preliminary study , but we did find a pretty striking observation in that the viruses from the 2000s are much weaker than the viruses from the eighties .
" Obviously this virus is still causing death , although it may be causing death at a slower rate of progression now .
Maybe in another 50 to 60 years we might see this virus not causing death . "
Keith Alcorn , senior editor at the HIV information charity NAM , said it had been thought that HIV would increase in virulence as it passed through more and more human hosts .
But the latest study suggested the opposite is actually true .
" What appears to be happening is that by the time HIV passes from one person to another , it has already toned down some of its most pathogenic effects in response to its host 's immune system , " he said .
" So the virus that is passed on is less ' fit ' each time .
" This would suggest that over several generations , HIV could become less harmful to its human hosts .
" However , we are still far from that point - HIV is still a life - threatening infection . "
Similar trend
Dr Marco Vitoria , an HIV expert at the World Health Organization , said other diseases - such as smallpox , TB and syphilis - had shown the same tendency to weaken over time .
" There is a natural trend to reach an ' equilibrium ' between the agent and the host interests , in order to guarantee concomitant survival for a longer time , " he said .
However , Dr Vitoria stressed that the latest findings should not lull people into a false sense of security .
" This kind of change cannot be adequately measured in years , but in generations , " he told the BBC News website .
He also questioned whether it was possible to draw firm conclusions from such a small study .
Will Nutland , of the charity Terrence Higgins Trust , said : " This latest study adds to the debate on an apparently confusing and contradictory issue .
" Some studies suggest recent strains of HIV are more sensitive to drugs while others claim strains are becoming more resistant .
" The study adds to the body of evidence but HIV is showing no signs of dying out in the near future . "
1956年、コンピュータ科学者のグループがダートマス大学に集まり、当時としては新しいトピックについて議論をかわした。そのトピックとは「人工知能」である。
ニューハンプシャー州ハノーバーで開催されたこのカンファレンスは、コンピュータで人間の認知能力をシミュレートする方法に関する、その後の議論の出発点となった。カンファレンスでは、「コンピュータは言語を使用できるか」「コンピュータは学習できるか」「創造的な思索と非創造的だが有効な思索を分ける要因はランダムさ（偶発性）なのか」といったさまざまな議論が行われた。
議論は、学習能力をはじめとする人間の知能が、原則として、コンピュータのプログラムでシミュレートできるくらい詳細に記述することができるというの大前提のもとで行われた。
出席者には、当時ハーバード大学に籍を置いていたMarvin Minsky氏、ベル研究所 のClaude Shannon氏、IBM のNathaniel Rochester氏、ダートマス大学のJohn McCarthy氏などの有名な学者が名を連ねていた。
この研究分野 は 「
人工知能」と呼ばれているが、この名前は、実はMcCarthy氏がこのカンファレンスの直前に考え出したものだ。今月、ダートマス大学で開催された50回目の同カンファレンスで、現在スタンフォード大学名誉教授のMcCarthy氏に、初期のAI、50年間の研究成果、今後の課題について聞いた。
--「人工知能 （Artificial Intelligence）」という言葉は、1956年のカンファレンスの直前に、あなたが考え出したものとされていますね。この言葉は既存のアイデアに名前を付けただけだったのですか。それとも、当時、構想中の何か新しいアイデアがあったのですか。
ロックフェラー財団からカンファレンスを開くための研究資金を得るために提案書を書く必要があったのですが、そのときに思いついたのが人工知能という呼び名だったのです。実をいうと、こういう名前にしたのは、資金提供者ではなくカンファレンスの参加者のことを考えていたからなのですが。Claude Shannonと私で『オートマトン研究（原題：Automata Studies）』という本を書いたのですが、カンファレンスに提出された論文の中で人工知能をテーマにしているものが少ないと感じたので、何のカンファレンスなのか明確に打ち出すためにインパクトのある名前を考えてみようと思ったのです。
--これまでを振り返ってみて、人工知能という名前は正しい選択だったと思いますか。分かりやすい自明の名前だと思いますが、この分野の研究を表現するもっとうまい言葉はあると思いますか。
「 計算知能 （Computational Intelligence）」という名前に変更したがっている人もいますね。しかし、1955年当時に、この名前を使うことはできなかっただろうと思います。というのは、コンピュータがAIを実現する主な道具になるという考え方は、当時はまだ、ごく一部でしか受け入れられていませんでしたから。ですから、計算知能という呼び名を受け入れる人も少数派だったでしょうね。
--当時、あなたは提案書の中で、コンピュータを使用して脳の高度な機能をシミュレートするというアイデアに関して、「大きな障害となっているのは、マシンの能力不足ではなく、人間の側がマシンの能力をフルに活かすプログラムを書けないことだ」と書いておられますね。これは、ハードウェアは揃っていたが、プログラミングのスキルがなかったとということですか。
スキルという問題ではなく、ハードウェアを活かすための基本的なアイデアがなかったということです。その点は今でも変わっていません。そのことは、コンピュータにチェスと囲碁を同じくらい学習をさせると、チェスはかなり巧くなるけれど、囲碁は全然巧くならないという事実によく現れています。囲碁では、局面、陣地を考慮しなければなりませんし、何より、囲碁の " 手" を識別する必要があります。こうしたことは、コンピュータ上でどのように表現すればよいのか未だに分かっていないのです。
--1956年のカンファレンスの参加者たちは、あなたも含めてだと思いますが、コンピュータに何ができるかという点に関して楽観的だったようですね。つまり、1970年くらいまでには、チェスをするとか、クラシック音楽を作曲するとか、人の話を理解するとか、そうしたことくらいはコンピュータにもできるようになるだろうと思っていた。あれから50年経って、どのくらい進歩したのでしょうか。50年前の予想はあまりに楽観的過ぎたのでしょうか。
私の場合はそう、楽観的過ぎました。しかし、当時、かなり悲観的な考えの人たちもいたと記憶しています。
--悲観すべき理由が何かがあったのですか。
要するに、こういうことです。人間は自分の認識している障害しか考慮できない。昔より今のほうが認識している障害は多い。だから今のほうが悲観的な人が多くなってきたのでしょう。
--この50年間に学んだことで、人工知能の研究に役立った重大なことをいくつか挙げるとすると何ですか。
そうですね。1つは、（人工知能を実現するには）コンピュータに「非単調推論」を実行させる必要があるということを認識したことでしょうか。
--その「非単調推論」について詳しく説明していただけませんか。
いいですよ。例えば、あるステートメントPがあり、これが複数のステートメントの集合Aから推論可能であるとします。また、別のステートメントの集合Bがあり、BにはAに含まれるすべてのステートメントが含まれているとします。通常の論理的な推論では、ステートメントPはBからも推論可能です。なぜなら、同じ証明が成り立つからです。ところが、人間はそうならないような推論をするのです。たとえば、私が、「ああ、11時には家にいるけれど、君の電話には出られないよ」と言ったとします。最初の「11時には家にいる」という部分から、あなたは「家にいるなら電話に出ることができるはずだ」と結論づけるでしょう。しかし、その後の文を付け加えると、そういう結論を引き出すことができなくなる。つまり、「非単調推論」というのは、ある結論を引き出したとき、それが正しい結論に思えても、何か別の事実が追加されたために、その正しさが保証されなくなる、そういう推論を指します。非単調推論が定式化され始めたのは1980年か、もう少し前くらいからですが、今では非常に大きな研究分野になっています。
--この50年間の研究で達成した最も大きな成果は何だと思われますか。当初の目標の何割くらいが達成されましたか。
われわれはまだ、人間と同レベルの知能を実現していません。でも、自動車を128マイル運転できるまでになったことは大変な進歩だと思います（編集者注：2005年秋のDARPA
Grand Challenge で優勝したスタンフォード大学のロボットカー" Stanley " は、モハーベ砂漠で131.6マイルの自動走行に成功した）。
--次に目指す大きな目標は何ですか。
コンテクストを考慮した常識と推論の定式化をさらに進歩させていきたいですね。これは私が長年に渡って取り組んできたテーマであり、私以外にも取り組んでいる人が何人かいます。この研究はDARPAも支援しているのですが、アイデアが不足していて人間の知能に到達するレベルには至っていません。
-- AIの目標はマシンに人間の知能を持たせて人間に近づけることではなく、人間の知能に相当するものをマシンで実現することだと理解していますが、正しいでしょうか。つまり、人間を再発明することが目標ではなく、人間に似た考えをするけれど人間の思考に勝る何かを創ることを目指していると。
そうです。それが私の考え方です。もちろん、人間の知能をシミュレートすることに興味を持っている人もいます。この考え方はいろいろな面で最善とは言えないのですが、Allen Newell やHerbert Simonなどが、そのような考え方をしていましたね。
I have visited 43 states , about 20 foreign countries , and 4 continents , but somehow never made it out to California .
That changed last week when I had to take a business trip to L.A .
I spent 5 days there , seeing some sights and taking care of business .
I visited the La Brea Tar Pits , toured Hollywood , got harassed by the LAPD at Hollywood and Vine , spent a day at Universal Studios , checked out Venice Beach , and drove around the city quite a bit .
The topics of Peak Oil and energy utilization were constantly on my mind , but what I saw there was mostly depressing .
The trip started out well .
The man in the airplane seat next to me struck up a conversation .
It turns out that he was a fraud investigator for a bank .
He told some pretty interesting stories about bank fraud .
But we eventually got into my line of work , and I brought up the topic of Peak Oil , as I am apt to do every chance I get .
I explained the dilemma to him .
I told him that I do n't think we are at a peak yet , but that it is coming in the not too distant future .
I told him that the situation we are in right now - with a supply / demand imbalance that may continue right up through the actual peak - should provide a preview of coming attractions ( and keep upward pressure on prices ) .
I explained the worst case scenarios , as well as how I think it is going to play out .
And he " got it " , just like people almost always do when you talk to them one - on - one .
If only we could talk to every person in the country one - on - one , we might start making some real progress .
Then he asked me a tough question that I always struggle with : " What should I do to prepare ? "
Now , this is something I think about every day .
But the answer to the question is completely dependent upon how bad you think things will get .
How much insurance do you need , and how much are you willing to pay for it ?
Each person must prepare according to their personal situation , but more importantly is how we prepare globally .
After all , my preparations wo n't amount to much if the country falls apart and descends into chaos .
I had a connecting flight in Salt Lake City , and we flew over the Great Salt Lake .
I had flown over it before , but I had never noticed how much algae is in the lake .
I started wondering about the prospects for a large - scale algal biodiesel operation there .
From there , we flew over a lot of desert that appeared to be completely barren from the air .
I wondered how much electricity we could produce from covering those barren areas with solar panels .
On the descent into L.A. , I noticed two things .
The first was the infamous L.A. traffic .
I have lived in Houston before , and I have heard people say that Houston traffic is as bad or worse .
Based on what I saw , it 's not .
The other thing I noticed was that the air was brown .
It would be several days before I figured out this was the reason my eyes were burning and itching during my entire trip .
Driving around Hollywood , I saw some reason for optimism .
There were a lot of city buses operating , and a sign on the back of one indicated that L.A. has the largest natural gas fleet in the country .
There were lots of people out walking ( something you do n't see in Houston ) , even away from the major tourist attractions .
At one point I saw a sign indicating the presence of a methanol pump , but I could n't figure out why they would be using methanol .
However , once I left Hollywood and got back on the freeway , my optimism faded .
Not only was the traffic incredibly dense , but it was all moving at 80 miles an hour , and Hummers and SUVs were abundant .
In fact , I have never seen so many Hummers in one day as I saw on my first day in L.A .
I have often thought that Houston has to be one of the worst possible places to be post - peak .
But L.A. may be even more car - dependent .
I drove 30 miles north of L.A. , and the traffic was still very heavy .
I finally pulled off of the freeway , and just observed the traffic for a while .
Fuel - efficient vehicles were greatly under -represented .
Speed limits seemed to be optional .
Conservation certainly did not appear to be embedded in the collective consciousness .
I arrived at my hotel in Thousand Oaks , and asked at the front desk about restaurants within walking distance .
They told me there was only 1 , less than a block away .
It later turned out that there were quite a few within a one - mile radius .
But apparently , that 's not walking distance .
I did walk to a restaurant about a half mile away at one point , and there were few pedestrians out .
Just like Houston , it seemed that everyone drives everywhere .
My first impression from Hollywood was that a lot of people traveled by foot .
That 's not what I saw as I got away from Hollywood .
Before I left L.A. , I did get to engage one more person on the subject of Peak Oil .
Once again he quickly grasped the seriousness of the issue .
I was pleased that I had brought the issue to the attention of another person .
But all I had to do was look back at the freeway to realize that my efforts were like a single drop of rain in a downpour .
Two people listened .
Millions were still oblivious in this one city .
Sometimes I feel so helpless .
I want to affect change .
I want to help point us in the right direction .
So , I take little steps by writing as much as I can to educate people , and by talking to people one - on - one .
Then I go to a city like L.A. and am frustrated that so many people are not getting the message .
What can we do ?
How can we affect the behavior of the masses ?
And what are the consequences if we do n't ?
Former test pilot Larry Neal of Boyd , Texas created this awesome flying machine called the Super Sky Cycle ( basically a flying bike - technically a cross between a motorcycle and an autogyro ) .
The flying bike goes as fast as 70 mph in the air and 60 mph on the road , and sells for around $ 25 grand !
Neal 's company : Butterfly LLC , YouTube Link - via comagz
Proof # 1 - Try praying
How might we prove that God is imaginary ?
One way would be to find a contradiction between the definition of God and the God we experience in the real world .
What would happen if we get down on our knees and pray to God in this way : Dear God , almighty , all - powerful , all - loving creator of the universe , we pray to you to cure every case of cancer on this planet tonight .
We pray in faith , knowing you will bless us as you describe in Matthew 7:7 , Matthew 17:20 , Matthew 21:21 , Mark 11:24 , John 14:12 - 14 , Matthew 18:19 and James 5:15 - 16 .
In Jesus ' name we pray , Amen .
We pray sincerely , knowing that when God answers this completely heartfelt , unselfish , non-materialistic prayer , it will glorify God and help millions of people in remarkable ways .
Will anything happen ?
No .
Of course not .
This is very odd .
Jesus makes specific promises in the Bible about how prayer is supposed to work .
Jesus says in many different places that he and God will answer your prayers .
And Christians believe Jesus -- according to this recent article , " 54 % of American adults believe the Bible is literally true . "
In some areas of the country the number goes as high as 75 % .
If the Bible is literally true , then something is seriously amiss .
Simply look at the facts .
In Matthew 7:7 Jesus says : Ask , and it will be given you ; seek , and you will find ; knock , and it will be opened to you .
For every one who asks receives , and he who seeks finds , and to him who knocks it will be opened .
Or what man of you , if his son asks him for bread , will give him a stone ?
Or if he asks for a fish , will give him a serpent ?
If you then , who are evil , know how to give good gifts to your children , how much more will your Father who is in heaven give good things to those who ask him !
If " every one who asks receives " , then if we ask for cancer to be cured , it should be cured .
Right ?
If " our Father who is in heaven gives good things to those who ask him " , then if we ask him to cure cancer , he should cure it .
Right ?
And yet nothing happens .
In Matthew 17:20 Jesus says :
For truly , I say to you , if you have faith as a grain of mustard seed , you will say to this mountain , ' Move from here to there , ' and it will move ; and nothing will be impossible to you .
If " nothing will be impossible to you " , then if we ask to cure cancer tonight , cancer should disappear .
Right ?
Yet nothing happens .
Note that if we take the Bible less - than - literally here , the statement " nothing will be impossible to you " becomes " lots of things will be impossible to you , " and that would mean that Jesus is lying .
In Matthew 21:21 : I tell you the truth , if you have faith and do not doubt , not only can you do what was done to the fig tree , but also you can say to this mountain , ' Go , throw yourself into the sea , ' and it will be done .
If you believe , you will receive whatever you ask for in prayer .
If " you will receive whatever you ask for in prayer " , then if we ask to cure cancer tonight , cancer should dissappear .
Right ?
Yet nothing happens .
Note again that there is not a non-literal way to interpret " you will receive whatever you ask for in prayer " , unless you replace " whatever " with " nothing " or " little . "
The message is reiterated Mark 11:24 :
Therefore I tell you , whatever you ask for in prayer , believe that you have received it , and it will be yours .
If God says , " believe that you have received it , and it will be yours , " and if we believe in God and his power , then what should happen if we pray to cure cancer tonight ?
It should be cured .
Either that , or God is lying .
In John chapter 14 , verses 12 through 14 , Jesus tells all of us just how easy prayer can be : " I tell you the truth , anyone who has faith in me will do what I have been doing .
He will do even greater things than these , because I am going to the Father .
And I will do whatever you ask in my name , so that the Son may bring glory to the Father .
You may ask me for anything in my name , and I will do it . " [ ref ]
Look at how direct this statement is : " You may ask me for anything in my name , and I will do it . "
This is the " Son of God " speaking .
Have we taken him " too literally ? "
No .
This is a simple , unambiguous statement .
Have we taken his statement " out of context ? "
No - Jesus uses the word anyone .
Yet Jesus ' statement is obviously false .
Because when we ask God to cure cancer tonight , nothing happens .
We see the same thing over and over again ...
In Matthew 18:19 Jesus says : Again I say to you , if two of you agree on earth about anything they ask , it will be done for them by my Father in heaven .
For where two or three are gathered in my name , there am I in the midst of them .
In James 5:15 - 16 the Bible says :
And the prayer offered in faith will make the sick person well ; the Lord will raise him up .
If he has sinned , he will be forgiven .
Therefore confess your sins to each other and pray for each other so that you may be healed .
The prayer of a righteous man is powerful and effective .
In Mark 9:23 : All things are possible to him who believes .
In Luke 1:37 : For with God nothing will be impossible .
Nothing could be simpler or clearer than Jesus ' promises about prayer in the Bible .
Yet , when we pray to eliminate cancer , nothing happens .
And keep in mind that this is Jesus talking here .
These are not the words of human beings .
These are not the words of " inspired " human beings .
These are supposedly the words of God himself , incarnated in a human body .
Jesus is supposed to be a perfect , sinless being .
And yet , it is obvious that Jesus is lying .
What Jesus says is clearly incorrect .
Jesus is supposed to be God .
God is supposed to be perfect .
When Jesus speaks , he should speak the truth .
Yet when we look at what Jesus says about prayer ,
he is clearly lying .
If you would like additional proof , gather a million faithful believers together into a giant prayer circle .
Have them all pray together in Jesus ' name that God cures every case of cancer on the planet tomorrow .
Pray sincerely , knowing that when God answers this completely heartfelt , unselfish , non-materialistic prayer , it will glorify God and help millions of people in remarkable ways .
Now , we certainly have two or more people gathered together , and they have asked in Jesus ' name , and we have not one but a million faithful believers who , by definition , have faith and believe .
We have fulfilled every one of Jesus ' requirements .
Will Jesus answer the prayer now ?
Of course not .
Your prayer will go unanswered , in direct defiance to Jesus ' promises in the Bible .
In fact , if you pray for anything that is impossible , your prayer will always go unanswered .
If you are an intelligent , rational human being , all of the examples mentioned above show you that the God of the Bible is imaginary .
The Bible clearly promises that God answers prayers .
Yet when we pray , nothing happens ( for a complete discussion proving that nothing happens , please see this page ) .
What Jesus says about prayer in the Bible clearly is not true .
Therefore , one of two things must be happening : God is imaginary .
God does exist , but he never answers prayers .
Unfortunately , God is defined by the Bible to be a prayer - answering being .
The contradiction between the reality of God and the definition of God proves that God is imaginary .
In fact , we have ample scientific evidence to demonstrate that the belief in prayer is nothing but pure superstition , as shown in the next proof ...
Go to Proof # 2 >>>
Understanding the Rationalizations
A favorite Christian rationalization for why God does not answer our prayer to eliminate cancer is because " it would take away free will . "
The logic :
If you pray and God answers your prayer , then God would have revealed himself to you , and you would know that God exists .
That would take away your free will to believe in him .
Of course , if this is true , then by default all of Jesus ' statements about prayer in the Bible are false .
It means that God can not answer any prayer .
Also , why is a God who must remain hidden like this incarnating himself and writing the Bible ?
If Jesus is God , and if God is perfect , why are n't all of Jesus 's verses about prayer true ?
Was Jesus exagerating ?
Was he fibbing ?
If Jesus is perfect , why would n't he speak the truth ?
Why does n't a prayer to cure cancer worldwide tomorrow work ?
Believers have many different ways to explain why all these verses in the Bible do not work , even if you are praying sincerely , unselfishly and non-materialistically , and even if the answer to your prayer would help millions of people and glorify God in the process .
They will say things like this : " You need to understand what Jesus was saying in the context the first century civilization in which he was speaking ... " or : " When Jesus talked about ' moving a mountain ' , he was speaking metaphorically .
When someone says , 'it is raining cats and dogs , ' no one takes him literally .
Jesus was using a figure of speech rather than speaking literally ... " or : God is not a thing .
He is a being .
He has a will .
He has desires .
He relates to people .
He has personality traits .
Prayer is a fancy word for talking to God .
God , who knows everything , even before we say it , knows the difference between our thoughts and wishes , and when we are actually addressing him .
He hears our prayers and responds .
His responses are based on his personal decisions .
We cannot predict how he will respond to our prayers ... [ ref ]
The primary problem with these rationalizations is that they miss the point .
The fact is that God never answers any prayers , as discussed here .
Going one step further , the problem is that all of these rationalizations miss two other important points :
God is supposed to be an all - powerful , all - knowing , perfect being .
The statement , " Nothing will be impossible for you " , along with the other Bible verses quoted above , are false .
The fact is , lots of things are impossible for you .
If a perfect being is going to make statements about how prayer works in the Bible , then three things are certain : 1 ) He would speak clearly , 2 ) he would say what he means , and 3 ) he would speak the truth .
That is what " being perfect " is all about .
A perfect , all - knowing God would know that people would be reading the Bible 2,000 years later , and therefore he would not use first - century idioms ( he would say what he means ) .
He would know that normal people will be reading the Bible and interpreting it in normal ways , so he would speak in such a way as to avoid mis-interpretation ( he would speak clearly ) .
He would know that when you say , " Nothing will be impossible for you " , that what it means is , " Nothing will be impossible for you " and he would make sure that the statement " Nothing will be impossible for you " is accurate ( he would speak the truth ) .
If God says it , it should be true -- otherwise he is not perfect .
Unfortunately , the fact is that thousands of things are impossible for you no matter how much you pray , and no one ( including Jesus ) has ever moved a mountain .
In order to see the truth , you need to accept the fact that all of the above verses are wrong .
The fact is , God does not answer prayers .
The reason why God does not answer your prayers is simple : God is imaginary .
Go to Proof # 2 >>>
Breaking a Visual CAPTCHA
Greg Mori( 1,2 ) and Jitendra Malik ( 1 )
(1) UC Berkeley Computer Vision Group
(2) Simon Fraser University
Summary
This is the homepage of the Shape Contexts based approach to break Gimpy , the CAPTCHA test used at Yahoo ! to screen out bots .
Our method can successfully pass that test 92 % of the time .
The approach we take uses general purpose algorithms that have been designed for generic object recognition .
The same basic ideas have been applied to finding people in images , matching handwritten digits , and recognizing 3D objects .
News Articles
Quick links :
Picture of a CAPTCHA in use at Yahoo .
Background
A CAPTCHA is a program that can generate and grade tests that :
Most humans can pass , BUT
Current computer programs can't pass
EZ - Gimpy and Gimpy , the CAPTCHAs that we have broken , are examples of word - based CAPTCHAs .
In EZ - Gimpy , the CATPCHA used by Yahoo !
( shown in the figure above ) , the user is presented with an image of a single word .
This image has been distorted , and a cluttered , textured background has been added .
The distortion and clutter is sufficient to confuse current OCR ( optical character recognition ) software .
However , using our computer vision techniques we are able to correctly identify the word 92 % of the time .
Gimpy is a more difficult variant of a word - based CAPTCHA .
Ten words are presented in distortion and clutter similar to EZ - Gimpy .
The words are also overlapped , providing a CAPTCHA test that can be challenging for humans in some cases .
The user is required to name 3 of the 10 words in the image in order to pass the test .
Our algorithm can pass this more difficult test 33 % of the time .
Our Approach
The fundamental ideas behind our approach to solving Gimpy are the same as those we are using to solve generic object recognition problems .
Our solution to the Gimpy CAPTCHA is just an application of a general framework that we have used to compare images of everyday objects and even find and track people in video sequences .
The essences of these problems are similar .
Finding the letters " T " , " A " , " M " , " E " in an image and connecting them to read the word " TAME " is akin to finding hands , feet , elbows , and faces and connecting them up to find a human .
Real images of people and objects contain large amounts of clutter .
Learning to deal with the adversarial clutter present in Gimpy has helped us in understanding generic object recognition problems .
Our related work on finding people and generic objects .
A high - level description of our method can be found here .
If you would like more details , see our paper from CVPR 2003 .
Results
EZ - Gimpy
Below are a few examples of images analyzed using our method , and the word that was found .
Correct words are shown in green , incorrect words in red .
For EZ - Gimpy we did experiments using 191 images .
We were able to correctly identify the word in 176 of these images : a success rate of 92 % !
Our algorithm takes only a few seconds to process one image .
If your would like to see our results on all 191 images , please click here .
POLISH SPACE JOIN AGAIN FLAG CANVAS PORTER MINE HORSE JEWEL WEIGHT SOUND RICE SOCK
Gimpy
The more difficult version of the Gimpy CAPTCHA presents an image such as the one shown below .
There are 10 words ( some repeated ) , overlaid in pairs .
The test - taker is required to list 3 of the words present in the image in order to pass .
The clutter in these images , real words instead of random background textures , is much more difficult to deal with .
In addition , we must find 3 words instead of just one .
Our current algorithm can find 3 correct words and pass this Gimpy test 33 % of the time .
Note that even if we could guess a single word correctly 70 % of the time , we would only expect to get 3 words correct approximately 0.7*0.7*0.7 = 34 % of the time .
Moreover , given our 33 % success rate , this CATPCHA would still be ineffective at filtering out " bots " since they can bombard a program with thousands of requests .
The algorithm we use is outlined in detail in our paper linked above .
Check out our results on the the harder version of Gimpy .
Links
Brash Machine
My local ATM has become aggressively informal .
At first it was just small things , like saying " Sure " and " No , thanks " instead of " yes " and " no " when asking if I want a receipt .
But now it 's completely out of control .
Now it 's all , " Howdie - ho , neighbor !
Hot enough for ya ?
Well golly gee willikers , what can I do you for ? "
Obviously some bank honcho thinks that patrons will respond favorably to this folksy , conversational style , but I find it repellant .
I do n't even like it when actual - human colleagues call me " Matt , " so I do n't really need a freakin ' machine chumming up to me like we 've just spent the evening polishing off a half - rack of Coors .
And it seems to be worse every time I go there .
At this point , pretty much every question and menu option has been meticulously phrased to be as laid - back as possible , and they 've even revised some of the older , breezy responses to make them more casual .
God knows where it will end .
I was in a supermarket recently searching for a brown mustard - and - conditioner in one .
It was while I was reading the ingredient label on a jar of Gouldens Dry Scalp Formula that I looked to the children 's book rack and there spied the title " My Little Golden Book About God . "
Now as anyone knows , my interest in life 's headiest metaphysical mystery has led me on some strange journeys ; from the highest mountain peaks of Peru to snort crystalized alpaca urine with an Incan shaman to the sewers beneath Istanbul to read 900 - year old grafitti scrawled by the heretical Saint Phoqallyall .
Having found no theological resolution in these rarified encounters I have left the door open to the chance that sublime truth may be found where I least expect it .
So it was with genuine anticipation that I opened the book , curious to know what the people at Little Golden Books believed small children who stick Beeferoni up their noses could absorb about the Inscrutible One .
You cannot imagine my horror , however , when my eyes met pages filled with saccharine , pastel artwork depicting cold - eyed androids that were clearly not of our realm .
In a Beautiful Mind moment of schizophrenic clarity I saw the book for what it was : not a gentle introduction to life 's most profound curiosity , but a primer for the parasitic offspring of an invisible invasion !
For the safety of our race ( if any still remain ) I have translated this book in the hopes that a resistance may arise .
Read the baby powder - scented Final Solution of our enemies from beyond , otherwise known as :
Let me just sum up the known facts here , and for the best big treatment of the story go see Glenn Greenwald
The short story is that what passes for the conservative braintrust these days -- a collection of repulsive little scabs no smarter than their own shoes -- has seized upon an article in the New York Times '
Travel section describing the small town of St. Michaels , Maryland , home to the vacation homes of numerous famous and wealthy Americans , notable among them Dick Cheney and Donald Rumsfeld .
There 's a picture there of Rumsfeld 's driveway .
This , the right - wing bloggers assert , is an intentional " exposure " of Cheney and Rumsfeld to terrorists , done with malice by the New York Times .
No , I 'm not kidding .
There 's only a few problems with this " theory " , as Greenwald admirably points out with the help of others in the blogosphere .
First , noting the astonishing fact that Cheney and Rumsfeld have vacation homes in St. Michaels is hardly new information .
In addition to being public information , it was printed in a similar soft story in the Washington Post last year .
So did , in fact , NewsMax -- one of the rightwing outlets now pretending that publishing that information now is treason .
Second , the New York Times printed a similar story in 2003 about the Clinton 's Chappaqua home , demonstrating that these puff pieces are , golly gee , done all the time .
Guess how many right - wing bloggers had a very public and ceremonially overdressed cow over that one ?
Yeah .
So essentially , this " affront " to the delicate sensibilities of these overstuffed sausages known as the " right " is a completely bogus story .
It 's all spin ; there 's no " there " .
None .
NewsMax itself could tell you where Cheney lived -- they even cited the Washington Post story as their source , in their article .
But here 's the nasty part .
The " response " the right wing blogs have decided on , as a result of this hidden menace that they and only they can see , is retaliation against the reporters and editors who enabled this story .
From one right - wing blog ( no link ; see Greenwald if you must ) :
So , in the school of what 's good for the goose is good for the gander , we are providing this link so YOU may help the blogosphere in locating the homes ( perhaps with photos ? ) of the editors and reporters of the New York Times .
Let 's start with the following New York Times reporters and editors : Arthur " Pinch " Sulzberger Jr. , Bill Keller , Eric Lichtblau , and James Risen .
Do you have an idea where they live ?
Go hunt them down and do America a favor .
Get their photo , street address , where their kids go to school , anything you can dig up , and send it to the link above .
This is your chance to be famous - grab for the golden ring .
Their homes .
Their children .
Go report on where their kids go to school , and it's " your chance " to " do America a favor " .
Find out where their kids go to school , so you can " grab for the golden ring " .
Yeah .
And that particular blogger is n't the only one encouraging such actions , and in fact numerous right - wing blogs have begun to publish the information ; phone numbers , street addresses .
Maps to get to those houses .
And encouragement to grab for that ring .
On a personal note , this is why I laughed my ass off at the " Online Integrity " sign - up sheet being circulated in the wake of the last event similar to this -- when Malkin 's followers used the phone numbers of college students posted prominently ( more than once ) on Malkin 's spittle - flecked site in order to , surprise surprise , inundate those students with crank calls and death threats .
The premise of Online Integrity was that right - wing bloggers were going to start kicking out bloggers who did not agree to adhere to some basic , bottom - rung premises of human behavior .
Guess how long that premise lasted .
So here 's where we 're at .
Will any of the right - wing bloggers denounce the published notion that , in order to settle a score with a newsperson , you should find out where their kids go to school and obliquely use that information to become " famous - grab for the golden ring ? "
Tell me , O noble dung beetles wriggling through whatever mouldering shit you can manage to dig up , where is that line ?
What should you do with the information about the children of reporters , if you find it ?
I 'm waiting .
Note to Malkin .
Note to Powerline .
Note to RedState .
You 're all worms .
You 're sick ; you 're disgusting ; you are an affront to everything America stands for .
Your stupidity makes angels cry , and your constant insistence on pushing blatantly false premises and stories taints this nation and taints the very premise of " journalism " .
You are shameless , cowardly , petty thugs , and you are apparently pathological liars .
So let 's all see what the right - wing response is .
Let 's see how they respond to being corrected on the facts of this so - called " treasonous action " .
Let 's see if they decide that explicit encouragement that the children of reporters and editors are now " fair game " is a line that should or should not be crossed .
They are very insistent that over - the - line behavior by anyone but themselves needs to be condemned by all ; let 's see it happen .
We 're waiting .
Tell us that children are off limits .
Go on .
That might just be , literally , the very least you can do .
Update [ 2006-7-2 22:3:50 by Hunter ] : Sean - Paul Kelley at The Agonist has a screenshot of the post quoted above .
Also see the General .
The Internet is a great breeding ground for political conspiracies , and there is a new one lighting up computer monitors across the country .
Bloggers are fascinated by what they see as eerie parallels between Watergate and a phone - jamming scandal in New Hampshire .
It has low - level Republican operatives involved in dirty campaign tricks .
It has checks from donors with murky backgrounds .
It has telephone calls to the White House .
What is unclear is whether it is the work of a few rogue actors , or something larger .
In 2002 , there was a hard - fought Senate race between Gov. Jeanne Shaheen , the Democrat , and John Sununu , the Republican .
On Election Day , Democratic workers arrived at five get - out - the - vote offices to find their phone lines jammed .
It turned out that the jamming was being done by an Idaho telemarketing firm that was being paid by a Virginia consulting group .
The fee for the jamming , reportedly $ 15,600 , was paid by New Hampshire Republicans .
The executive director of the New Hampshire Republican Party and the president of the Virginia consulting group pleaded guilty for their part in the scheme .
James Tobin , who was the New England political director for the Republican National Committee , went to trial and was convicted of telephone harassment last December .
Now , Jack Abramoff and his Indian tribe clients have joined the cast of characters , and some records of phone calls to the White House have turned up , though the significance of both of these revelations is hotly disputed .
The evidence that the phone - jamming scandal goes higher than Mr. Tobin remains scant .
But the watchdogs are right about this : the news media , prosecutors and the general public should demand more information about what happened .
EVERYONE loves a Cinderella makeover , especially when its setting is catapulted in time to the formidably spotless , lacquered world of modern fashion magazines .
The makers of " The Devil Wears Prada " seem , in fact , to be banking on it .
Which may be why they inserted a fairy tale metamorphosis into the heart of the film based on Lauren Weisberger 's best - selling roman à clef about an earnest journalism grad who becomes an assistant to the impossibly exacting editor of Runway , the country 's most powerful fashion magazine .
When the movie arrives in theaters tomorrow , some audience members may writhe with envy watching as Andy Sachs ( Anne Hathaway ) , the style - challenged lackey to Miranda Priestly ( Meryl Streep ) , sheds her scullery - maid persona for that of a smugly preening style princess .
Some will likely fall under the spell cast by David Frankel , the director of " The Devil Wears Prada , " who aimed , he said , to fuse fantasy — " the wish fulfillment of going to this magical kingdom of fashion " — with a sense of authenticity .
Did he hit his mark ?
To a point .
But to the unforgiving eye of insiders who attended a flurry of advance screenings , Andy 's swag - laden trip to the ball has about as much relation to reality as New York City does to Kankakee .
" Where is the chic ? " groused David Wolfe , a New York fashion and retail consultant well versed in the eccentricities of real - life magazine divas .
In his assessment , the film 's stylistic problems begin with Meryl Streep as the silver - coiffed Miranda , a character he thinks looks far too bland and bankerlike and ugh ! — far too pretty — to be convincing as Runway 's chilly commander in chief .
Google 's April surprise for state / Big chunk of record tax receipts from insiders ' stock sales
Internet giant Google 's stock has soared since it went public almost two years ago -- and that has created a windfall for state government coffers .
California took in a record $ 11.3 billion in personal income tax receipts in April , $ 4.3 billion more than it collected last April .
It 's almost certain that a significant chunk of April 's haul came from Google employees -- perhaps one - eighth or more of the tax receipt gain .
The fact that a single high - flying Silicon Valley company is giving such a big boost to the state treasury can be determined by examining insider stock trading information filed with the Securities and Exchange Commission .
MBA BY THE BAY : See how an MBA could change your life with SFGATE 's interactive directory of Bay Area programs .
Fourteen of Google 's top executives and directors sold $ 4.4 billion worth of stock last year , according to Thomson Financial .
That includes founders Sergey Brin and Larry Page , each of whom sold about $ 1.3 billion worth of stock .
Assuming the 14 insiders had acquired the shares at very low cost and that all were in the top 10.3 percent state - tax bracket , they could have owed the state close to $ 450 million in capital gains tax on their stock sales .
And it was n't only the top executives .
Many lower - level Google employees also sold stock in their company last year .
They do n't have to publicly disclose their sales .
We do n't know how much tax this group paid , but it clearly lifted the state 's total take from Google well above the $ 450 million figure .
It 's not clear exactly when the Google insiders paid their tax bills .
It 's possible they made estimated state - tax payments last year when they sold the stock .
In that case , their tax payments would not be included in April 's state - tax haul .
But it 's much more likely that they paid all or some of their capital gains tax in April when they filed their 2005 tax returns or requested an extension .
What we do know is that the Franchise Tax Board received a lot of very large checks with extension requests last month , says Brad Williams , director of fiscal forecasting with the state legislative analyst 's office .
" We did get a little information from the Franchise Tax Board about where the biggest payments were coming from , and a lot were coming from Silicon Valley , the San Francisco area .
That tends to suggest it is sales of stock , maybe by founders of companies , people with large numbers of shares , " Williams says .
Tech stocks had a good year in 2005 , and insiders at lots of companies cashed in options and sold shares .
But their gains were dwarfed by the fortunes made by Google insiders .
In 2005 , officers , directors and other insiders at the largest 200 publicly held companies in the Bay Area sold a total of $ 9.6 billion in stock , up from $ 7 billion in 2004 , according to Thomson Financial .
Google alone accounted for almost half of the 2005 total .
The Google founders still own the vast majority of their shares , which means they could make more contributions to the tax kitty if they decide to diversify their holdings and the company 's stock price holds up .
So far this year , a dozen Google insiders have sold $ 1.9 billion worth of stock , according to Thomson .
But it is risky for a state to rely on capital gains taxes , and April 's big payoff does n't mean that the state can count on Google bolstering the budget indefinitely .
In the late 1990s , taxes on capital gains and stock options started flooding into the state treasury .
In fiscal 2000 - 01 , they reached $ 17.5 billion , representing 39.3 percent of personal income tax revenues .
Thinking those gains would last , the state embarked on a spending spree .
But stock - market income fell off a cliff after early 2000 .
In 2002 - 03 , capital gains and stock options contributed only $ 5.4 billion , or 16.6 percent to personal income tax revenues .
Capital gains from Google and other companies are n't the only factors behind the surge in tax receipts .
Another likely source of April 's tax take , which could be less volatile than stock - based capital gains , is real estate .
There are no figures yet for 2005 , but for tax year 2004 , personal tax returns included $ 15.5 billion in gross capital gains from real estate , up from $ 9.6 billion the previous year .
Most of those gains came from the sale of rental property and second homes , but they also included the taxable portion of capital gains on the sale of primary residences .
If real estate capital gains grew at the same rate in 2005 as they did the previous year , they could have reached $ 25 billion in 2004 .
Assuming an average state - tax rate of 9 percent , they could have generated $ 2.3 billion in tax revenues for 2005 .
Again , a good portion of those gains could have showed up in the April tax figure .
Real estate gains " are more widely distributed " than stock market gains , says Williams .
" You 're not depending on a handful of people making decisions about huge stock sales .
You 're talking about a large number of people making individual decisions .
It 's not as volatile ; it 's probably more recurring .
However , it is subject to conditions in the real estate market , and right now we 're worried about a real estate bubble and what it will mean for both the volume of transactions and the rate of appreciation . "
Small businesses could have accounted for another portion of the April surprise .
Many companies that do business as sole proprietors , partnerships or limited liability corporations report their business income on their personal income tax returns .
" Last year was an extraordinary year for profits .
We knew that going in , but they may have been even better than we thought , " says Williams .
California is not the only state with burgeoning tax coffers .
" The surge is being seen by many states , " especially those that -- like California -- have rising property values and progressive tax structures , says Tim Blake , a senior municipal - debt analyst with Moody 's Investors Service .
Federal - tax revenues are also coming in much stronger than expected , a large part of the increase coming from capital gains and business profits .
" High - income taxpayers are doing better than low - income taxpayers , generally , " says Blake .
California 's tax structure is highly progressive , which makes it highly volatile .
For the 2004 tax year , 38,000 California tax returns reported more than $ 1 million in income .
They represented just 0.2 percent of all state - tax returns , yet they accounted for 14 percent of total adjusted gross income and about 30 percent of the total personal tax .
The top 3 percent of the returns , those with incomes exceeding $ 200,000 , paid about 60 percent of all state taxes .
" What happens to the top 1 percent is of great interest to the Department of Finance , " says David Hitchcock , a debt analyst with Standard & Poor's .
リファラによると、 「メニューバーの正体」という検索で訪れてくださった方がおられたようですので…。
“ 正体 ” が何を意図するのか分かりませんでしたが 、Mac の前身である Lisa のプロトタイプで、画面トップにメニューバーが設けられるまでの経緯は、以前もご紹介したこちらの文書に関連の言及があります。
Origins of the Apple Human Interface
Menus -- this was what , August 18th ?
" I think we should experiment with menus at the top or right of the window , or even totally detached at the top of the screen , full width . "
So up to this time , we were doing sort of the way Windows does , and every window had its own menu .
And I was thinking , " You know , maybe we ought to put it at the top . "
You ’ll see why in a minute when you see the pictures .
And then I said , " Hierarchical menus -- well , maybe we have to have them , we ca n’t get rid of them , but could we make them mouse accessed instead of having to type all these keystrokes ? "
So , these were my two causes of the moment .
それは 1980 年のこと。当時、試作段階だった Lisa は、まだマウスボタン も２つだった頃で、メニューも今の
Windows がやっているように各ウインドウに設けられていました。さらに、まだマウスが何に使えるかをきちんと把握できていなかった開発陣は、UCSD
Pascal の GUI の影響を強く受けていたため、メニューは深く階層化され、キーボード操作で選択するスタイルだったようです。
ちなみに、手本となった ALTO / Smalltalk システムの GUI のほうはというと 、1973 年の ALTO 誕生時に NLS から流用さ れ
た３ボタンのマウスをそのまま使用してはいたものの、ポップアップメニュー操作を軸に、かなり洗練された“ルック＆フィール”をすでに確立していました。横並びなら「左 」 「中 」 「右」、縦なら「上 」 「中 」 「下」のマウスボタンを、それぞれ「赤」「黄 」 「青」と呼称。赤ボタンには、ウインドウ内のオブジェクト（たとえばテキストや選択項目）のクリックやドラッグで指し示したり選択する操作を、黄ボタンには今の
Windows でいうところの右クリック、つまり操作項目を収めたメニューのポップアップを、青ボタンにはウインドウ操作のためのメニュー（今の
Windows でいうならウインドウタイトルにあるメニュー。閉じる、移動、サイズ変更など）のポップアップを割り当ててる…といったスタイルでした。
黄ボタン（第二ボタン）メニュー： ウインドウ内での操作 青ボタン（第３ボタン）メニュー： ウインドウ自体の操作
お馴染みの 、Smalltalk を GUI ベースの OS として動く ALTO （ つまり暫定ダイナブック）の映像
https://www.youtube.com/watch?v=aqW6Sp279Z0&t=16m50s（ジョブズが見た頃の
Smalltalk -76 の映像は16分50秒あたりから）
Lisa のプロトタイプも （PRAC 見学で Smalltalk GUI を知って、それまで研究していたオリジナルの GUI を捨ててしまった直後は）これを原則踏襲していたのですが、ただ、ウインドウタイトルに、ウインドウを操作するためのメニューをポップアップさせる機能を盛り込むことで青ボタンクリック操作を代替。ALTO/Smalltalk で３つ必要だったボタンをひとつ減らして２ボタンにしていました。くしくも、まさに今日の
Windows スタイルですね。しかしアトキンソンたちはそこで止まることはせず、それまで黄ボタンでポップアップさせていた操作メニューをウインドウに埋め込むことで（プルダウンメニューの誕生。ただし当初その位置は、下だとか、右だとか、上だとかを試行錯誤していたようです）、２つめのボタンに別の機能を割り振れるようにし（どうやら、ドラッグのための機能だった模様）、しかし、突き詰めると結局、それも要らない…といった一部不可解な紆余曲折を経ながらも、最終的にはワンボタンにたどり着きます。
デスクトップのメニューバーが生まれたのは、よく言われているように、やはり、各ウインドウにメニューを仕込んでいては、それがポップアップメニュー（Smalltalk タイプ）だとしても一目で概要を把握しにくく、メニュー項目列挙（後の
Windows タイプ）だとしてもメニューを列挙するためのスペースが十分確保できない…というのが理由のように読み取れます。ともあれ、デスクトップに設置されたメニューバーが誕生する前に、Apple もいったんはウインドウにメニューを組み込む
Windows スタイルを検討していたという事実は、ひじょうに興味深いですね。さらに、こと「
GUI の系譜 」という切り口では、ワンボタン化という行き過ぎた(笑) アレンジを加えてしまった
Lisa / Mac よりは、むし ろ Windows のほうが ALTO / Smalltalk GUI を受け継いだものとしては進化としては順当…などと書くと、おそらく多くの人は意外（心外？）に思うのでしょうね。きっと。
どうしてそのような誤った認識 （Windows GUI デザイン は *すべて* Mac のそれのマネであるかのような…）が世間に広まって根付いてしまったのかということも、興味あるところです。これもやはりまた、Smalltalk が（特に ' 70 年代通じての “ 暫定ダイナブック環境 ” としてのその有りようが）正しく理解・評価されなかったがゆえに生じた「常識のウソ」…のたぐいなのかな、と。
関連：
Porter Goss resigns as CIA chief RELATED WASHINGTON ( CNN ) -- CIA Director Porter Goss is resigning , President Bush announced on Friday .
" Porter 's tenure at the CIA was one of transition , where he 's helped this agency become integrated into the intelligence community , and that was a tough job , " Bush said in a photo session with Goss at the Oval Office .
" He 's got a five - year plan to increase the number of analysts and operatives , which is going to help make this country a safer place and help us win the war on terror , " the president said .
Goss told Bush : " I believe the agency is on a very even keel , sailing well , I honestly believe that we have improved dramatically . "
Goss became CIA chief on April 21 , 2005 .
Previous to that , he was a Republican congressman from Florida for 16 years .
Goss ' deputy , who may take over in the interim , is Vice Admiral Albert M. Calland .
Former CIA Director Stansfield Turner told CNN that Goss may have resigned because he was passed over for the new position of director of national intelligence , which went to John Negroponte .
Former Rep. Bob Barr agreed with Turner 's speculation and added , " I think there 's going to be more coming out , we do n't know the whole story . "
" This is a devastating blow , the importance of which really cannot be overestimated , " Barr told CNN .
" It indicates again a continuing downward slide in the intelligence capabilities of our government , it indicates again the disorganization on the part of our intelligence agencies at a time when we can ill afford to see that happen . "
Home Page
Get up - to - the minute news from CNN CNN.com gives you the latest stories and video from the around the world , with in - depth coverage of U.S. news , politics , entertainment , health , crime , tech and more .
Home Page
Get up - to - the minute news from CNN CNN.com gives you the latest stories and video from the around the world , with in - depth coverage of U.S. news , politics , entertainment , health , crime , tech and more .
The US Marine recruiter pictured in Fahrenheit 9/11 trying to persuade young men from the economically bleak town of Flint , Michigan , to enlist has been killed by a roadside bomb in Iraq , the Pentagon said .
Staff Sergeant Raymond Plouhar , 30 , died on Monday of wounds suffered while on duty in Anbar province .
He had barely a month left of his tour of duty in Iraq , where he was in charge of detecting and detonating makeshift bombs .
Sgt Plouhar had been angered by his depiction in the anti-war movie , where he was shown aggressively pressing young men to enlist , his family told the Detroit Free Press .
The Marine Corps later accused the film - maker , Michael Moore , of duping its recruiting teams into allowing their work to be caught on camera .
In the 2004 film Sgt Plouhar is shown approaching young African American men in the car park of a shopping mall in one of the poorest parts of Flint , and assuring them that the Marine Corps could help them become professional basketball players .
He tells his fellow recruiter he chose the location deliberately because it was in a depressed area .
" It 's better to get them when they 're in ones and twos , and work on them that way , " Sgt Plouhar tells the recruiter .
Sgt Plouhar had turned to recruiting during a four - year break from active duty after he donated one of his kidneys to an uncle .
Early this month , Mark Pilgrim made waves when he went shopping for a new Mac , but decided not to buy one , and , in When the bough breaks , wrote at length about switching to Ubuntu .
I ’ve been thinking about this a lot recently , and now John Gruber ’s written And Oranges , a fine excursus on Mark ’s piece .
I ’m pondering the switch away myself , too , and maybe sharing my thoughts will be helpful .
[ Update : Lots of feedback on the state of the Ubuntu art . ]
[ Update : More from Mark .
I feel sick , physically nauseated , that Apple has hidden my email — the record of my life — away in a proprietary undocumented format .
I ’ve had this happen once before ( the culprit was Eudora ) ; fool me twice , shame on me .
Hear a funny sound ?
That ’s a camel ’s back , breaking . ]
Note :
The links to pieces of software in this fragment are not to their pages , but to my experience with them on the Mac .
The Conversation Thus Far · First of all , I should say that I share every one of Mark ’s concerns .
In particular , it ’s bothered me for years that the Apple apps are n’t Open Source ; there are all these irritating little misfeatures and shortcomings that I ’d be willing and maybe able to fix , and there are lots more like me .
Since the apps are joined at the hip to OS X , there ’d be no real downside to Apple .
The real problem , it seems to me ( and I think this bothers Mark more than he says ) , is Apple ’s paranoid communication culture : it is forbidden to say anything except what it ’s compulsory to say .
Apple ’s exterior is polished , shiny ; and entirely opaque .
Personally , I think their success has been about shipping good products , but I think they believe it ’s a consequence of the tightness of the lip .
I ’d rather do business with a company I can talk to .
John Gruber ’s essay is very hard to disagree with , but I ’d place more weight than either he or Mark did on the increasing excellence of Ubuntu .
If you have n’t tried a recent Ubuntu , you really should ; the level of polish , and amount of stuff that “ Just Works ” , is really remarkable .
Ubuntu wo n’t always be the polish - and - quality leader among Linux distros , of course ; but for now , it ’s set a very high standard .
Non-Problems · I already use lots of OSS : Adium for chat , Camino ( based on Firefox ) for browsing , Emacs for editing , and NetBeans for Java .
So there ’d be zero cost in those spaces to switch to Ubuntu .
Quite a bit of the Apple software I use , I could move off with little trouble .
Mail.app is bothering me more and more every day with its lousy performance and pitiful search capabilities , so I think I ’d be OK with Thunderbird .
How hard can ripping CDs and playing MP3s be ?
I do n’t think I ’d miss iTunes , and I love music too much to get locked into the iTMS handcuffs .
I use iCal but I hate it ; it ’s lost my calendar data , which is intolerable .
I ’m only still there because I have n’t had the time to invest in finding an alternative .
Painful But Bearable · I know I ’d miss Preview , it ’s the unsung Apple software hero .
The thought of having to go back to using Acrobat makes me want to puke .
iMovie , that ’s another problem .
[ Update : Evince is said to be an excellent Preview replacement . ]
If I want to keep shooting HD video , and I do , maybe a dedicated Mac Mini video - editing station is the thing , because doing it on a laptop is a dumb idea anyhow .
On the non-Apple front , PhotoShop Elements meets my needs pretty well , but I ’m pretty sure I could learn to live with , if not love , the Gimp .
[ Update : Mark Pilgrim says Krita is good too . ]
Finally , there ’d be a certain amount of visual pain , because a lot of Linux applications think things like anti-aliasing , drop shadows , and transparency are optional extras , not things that are just expected to be there .
The Hard Issues ·
There are three things the Macs do that I do n’t think I could live without :
Quick suspend / resume ; the feature that originally drove me to switch , back in 2002 .
When I open my laptop and put my hands on the keyboard I want to be able to start typing right then .
[ Update : Several Ubuntuns write to tell me that the delay is down into the 15 - 20 second range ( but can be screwed up by the wrong hardware ) . ]
WiFi that Just Works .
It so often happens ; I ’m in a meeting , I open my laptop and I ’m on the air , while the Windows victims are saying “ Are you sure there ’s WiFi in here ?
What are the hex digits ? ” and the Linux types are reconfiguring their kernels .
[ Update : Ubuntuns report that this is getting there , but the answers contain disturbing mentions of “ this great utility ” and “ a little tinkering ” . ]
Outboard projector .
I have a public - facing job .
When I plug my computer into a projector , I want it to project , without me having to think about it .
I ’ve never seen a Linux or Solaris box do this reliably .
[ Update : Feedback confirms this is still a real issue in Linux - land . ]
Will I Switch ? · Yes .
For Mark ’s reasons , and because I ’m pretty darn sure that either Ubuntu or some other distro will eventually get the key things right .
Alternatively , Apple could open - source a few of their apps so we could all fix the pain points , and they could start having an actual conversation with the world .
Nothing less is acceptable .
As John Gruber points out , neither Mark nor I are exactly typical .
But you know what ?
I think that if the GNU / Linux / Solaris community can sustain its current level of energy and progress , and if Apple maintains its dysfunctional communications culture , there are going to be better choices just not for me , but for a lot of other people too .
Apparently , some were not .
There was yearning going on .
That preppy world can be appealing .
I do n't just mean the apparent security that comes with jobs on Wall Street and in white - shoe law firms , or the glamour threaded with nostalgia ( thank you , Scott Fitzgerald ) .
It 's plain old pretty : tennis courts and Long Island Sound and heirloom silver and people tanned by spending days on their sailboat .
The behavior is attractive , too .
Nobody pitches a fit over a line call and thank - you notes arrive like clockwork .
What 's not to like ?
What 's not to aspire to ?
From time to time I meet someone who tells me that she memorized our guide as a teenager and took it as a literal book of directions .
Maybe there was an implicit promise embedded in the humor : this ease , this comfort can be yours if you dare to wear pink and green .
Part of what made the insular preppy world so alluring was its assurance , which was part and parcel of its conservatism .
Preppies hung onto not just furniture and names but also customs and especially shares in Exxon bought back when it was called Standard Oil or something equally quaint .
The culture was also conservative in the sense of accepting these things without question .
Your true preppy , it seemed in 1980 , was a stranger to self - doubt : can we think for a minute about the whale as a design motif on clothes intended for grown men ?
Today , though , I think the unself - consciousness that used to distinguish the preppy world is gone .
When anthropologists study a tribe , however respectfully , they change it .
Preppy clothes had been a uniform by which you recognized the guy to sit next to on the train to New Haven .
Like all the best uniforms , they were a visual language , instantly not only identifying but also , more subtly , placing the wearer .
Nantucket red pants came from Nantucket .
Period .
No Nantucket , no pants .
The more faded they were , the more hours you 'd spent on the water .
They were better than an " I 'd rather be sailing " bumper sticker because only the right people could read them .
And then , suddenly , in the 1980's , everybody looked like the guy on the train to New Haven .
Imagine how they 'd feel at West Point if all the tourists were in uniform too : cadets might begin to wonder about uncomfortable things like claims to legitimacy .
Many people reading this will be aware that I am part of what is known as the Open Source Community , or the Free Software Community ( sometimes called the “ Free and Open Source Software ” community , or F / OSS ) .
It is often thought that one needs to be a programmer in order to be considered part of this community , but that ’s not true .
There are many aspects of the community to which it is possible to contribute : I try to be a part of as many as possible :
Writing code :
Usually the first thing that people think of when referring to contributions to the F / OSS World .
There are typically two parts to this : ( a ) writing complete applications or utilities ( I ’ve done a little of this , but considerably less than most ; my own application colordiff being the major part ) and ( b ) writing patches or additions to other , existing code : I wrote a small patch for Mutt a while ago , for example ;
: Usually the first thing that people think of when referring to contributions to the F / OSS World .
There are typically two parts to this : ( a ) writing complete applications or utilities ( I ’ve done a little of this , but considerably less than most ; my own application colordiff being the major part ) and ( b ) writing patches or additions to other , existing code : I wrote a small patch for Mutt a while ago , for example ; Submitting bug reports :
This is an important contribution to any F / OSS project : if a program does n’t work as expected , or crashes , it is good practice to submit a bug report to the developers .
This does n’t require any knowledge of the way the program works ( although if you have such knowledge , you might be able to contribute a fix along with the bug report ! ) and typically one includes as much information about how the problem occurred , so that the developers can reproduce the problem and fix it .
In the F / OSS world , these bug reports are deliberately made public ( contrast this with many commercial software applications over which a facade of flawlessness is often draped ! ) .
Having flaws well - documented and openly discussed generally results in quicker and more efficient fixes .
It also adds a degree of accountability to the whole process .
Submitting bug reports is something that I will always try to find time to do , if I come across a problem with an application I ’m using , at least after checking whether the same problem has already been reported or not ;
: This is an important contribution to any F / OSS project : if a program does n’t work as expected , or crashes , it is good practice to submit a bug report to the developers .
This does n’t require any knowledge of the way the program works ( although if you have such knowledge , you might be able to contribute a fix along with the bug report ! ) and typically one includes as much information about how the problem occurred , so that the developers can reproduce the problem and fix it .
In the F / OSS world , these bug reports are deliberately made public ( contrast this with many commercial software applications over which a facade of flawlessness is often draped ! ) .
Having flaws well - documented and openly discussed generally results in quicker and more efficient fixes .
It also adds a degree of accountability to the whole process .
Submitting bug reports is something that I will always try to find time to do , if I come across a problem with an application I ’m using , at least after checking whether the same problem has already been reported or not ; Beta - testing :
For programs that you use a lot , it can be very helpful to the ongoing development of the code if there are plenty of people testing new versions of the program .
This is essential for many projects where there are only a small group of actual coders .
This beta - testing will involve using the bleeding - edge versions of the program and reporting back on impressions of useability and so on ; often , submission of bug reports will be part of the process .
I used to beta -test Mutt , but do n’t really have the time any more which is a shame ;
: For programs that you use a lot , it can be very helpful to the ongoing development of the code if there are plenty of people testing new versions of the program .
This is essential for many projects where there are only a small group of actual coders .
This beta - testing will involve using the bleeding - edge versions of the program and reporting back on impressions of useability and so on ; often , submission of bug reports will be part of the process .
I used to beta -test Mutt , but do n’t really have the time any more which is a shame ; Documentation / translation :
There ’s no use in having a wonderful application if no - one can figure out how to use it .
Therefore , an often underestimated contribution to the F / OSS world is that of documentation .
There are different ‘ levels ’ of documentation for a large project .
Typically , there will be ( a ) a full comprehensive manual , ( b ) a “ quick start ” guide of some sort and often ( c ) an ad - hoc set of “ tips and tricks ” .
Some people are best suited to writing one or other of these types of documentation .
Related to documentation is translation : an application will often be written in such a way that alternate - language versions are easy to “ plug in ” ; however , someone needs to actually translate all the text .
This can be anything from the simple names written on application buttons or menus , up to full translations of the entire manual .
For F/ OSS users in non-English - speaking localities , this is an extremely useful facility to have and as a result , F / OSS translators are a very valuable resource ;
: There ’s no use in having a wonderful application if no - one can figure out how to use it .
Therefore , an often underestimated contribution to the F / OSS world is that of documentation .
There are different ‘ levels ’ of documentation for a large project .
Typically , there will be ( a ) a full comprehensive manual , ( b ) a “ quick start ” guide of some sort and often ( c ) an ad - hoc set of “ tips and tricks ” .
Some people are best suited to writing one or other of these types of documentation .
Related to documentation is translation : an application will often be written in such a way that alternate - language versions are easy to “ plug in ” ; however , someone needs to actually translate all the text .
This can be anything from the simple names written on application buttons or menus , up to full translations of the entire manual .
For F/ OSS users in non-English - speaking localities , this is an extremely useful facility to have and as a result , F / OSS translators are a very valuable resource ;
Helping other users :
When starting to use some new applications , it can be very helpful ( and reassuring ) to find a large community of other users to give guidance and assistance .
Therefore , if you possess skills and knowledge , a great contribution is to provide this kind of help to newer users .
For example , answering questions on mailing lists and on IRC is a very good way to help bring other users up to speed on the use of software , but also helps to build a community around it .
I try to do this on IRC and on some of the Debian mailing lists .
I find them helpful myself , so I try to “ give back ” ;
: When starting to use some new applications , it can be very helpful ( and reassuring ) to find a large community of other users to give guidance and assistance .
Therefore , if you possess skills and knowledge , a great contribution is to provide this kind of help to newer users .
For example , answering questions on mailing lists and on IRC is a very good way to help bring other users up to speed on the use of software , but also helps to build a community around it .
I try to do this on IRC and on some of the Debian mailing lists .
I find them helpful myself , so I try to “ give back ” ; Money : Many F/OSS projects , especially those that require extensive resources to function , will benefit from donations .
This is always encouraged !
The money is not generally used to ‘ pay ’ the developers , but to provide funding to the project ’s infrastructure , such as server hosting charges , bandwidth charges and so on ;
: Many F/OSS projects , especially those that require extensive resources to function , will benefit from donations .
This is always encouraged !
The money is not generally used to ‘ pay ’ the developers , but to provide funding to the project ’s infrastructure , such as server hosting charges , bandwidth charges and so on ; Advocacy : Explaining the advantages of F / OSS to technical and non-technical users alike is a also an important part of the F / OSS world .
There ’s more to all this than just getting software for no cost : there ’s a freedom associated with it that is not generally available in the commercial software world .
Notice that there are many aspects of the F / OSS community that do n’t require much in the way of technical skills .
The actual programming part of my contribution is probably less than 1 % of my entire time spent on F / OSS projects .
Polemik Generation Depri
Kann hier mal bitte jemand den Nölstecker rausziehen ?
Kann mal jemand eine andere Platte als die mit dem ewig gleichen depressiven Klagelied auflegen ?
SPIEGEL - ONLINE - Autorin Renée Zucker , 52 , erregt sich über eine Generation , die außer Jammern nichts gelernt hat .
2007-06-08
I have always enjoyed fractals , and was curious if scripting languages were up to the task .
I wrote a very simple Mandelbrot set generator for my test .
Rather than optimizing for each language , I tried to write each program in approximately the same way in each language to make a reasonable performance comparison .
Here are the results from running on my 867 mhz Powerbook G4 .
Shorter is better .
Please note , the following benchmarks are not scientific , and were simply done to satisfy my curiosity .
Your mileage may vary .
Feel free to send me ports to any other languages .
The program should print the time in seconds that elapsed at the bottom in the form of ' Elapsed % 0.2 f ' .
If you can , include instructions for building on MacOS X .
— Erik Wrenholt ( erik - at - timestretch.com ) 2005-09-20
2012-02-07 — Fractal Benchmark Extended : Theo Wollenleben has added many more language ports and benchmarks !
2007-06-08 —
I enabled optimization in C. ' gcc - O3 Mandelbrot.c -o Mandelbrot .'
2007 -06-04 — I added a compiled OCAml version .
Faster than both C and SBCL !
2007-06-02 —
I updated the C version to utilize doubles instead of floats .
Most scripting languages use doubles behind - the - scenes so this results in a more accurate comparision .
I updated Python to 2.5.1 .
Much faster !
I also began including speed relative to the fastest language .
2007-06-02 —
I fixed up the Java , Ruby , Lua , Io , PHP , and Applescript versions .
They were calculating one extra row and column ( less than or equal to 39 rather than just less than ) .
It turns out this did n't affect performance that much because those columns are over a low - iteration area .
I also starting running each language four times and averaging the time elapsed in order to make the results more consistent .
2007-05 -28 —
I added a SBCL Lisp version .
Unfortunately , SBCL triggers a crash report on MacOS X every time I invoke it .
SBCL 's actual performance may vary slightly from the results shown .
2007-05 - 27 —
I added a Ghostscript Postscript version .
2007-05 -26 —
I added an OCaml and Javascript ( Using Mozilla 's SpiderMonkey 1.6 ) .
I also removed the ' slow ' TCL version and left the optimized one .
After adding curly brackets around expressions , it increased the speed by 25 times .
2007 -04 -26 — I added an Applescript version .
2007 -04 - 24 —
Just for fun , I 'm including optimized versions that do n't change the character of the code ( e.g. no loop unrolling ) .
I received both Perl and TCL optimized versions and have included them in the benchmark .
It 's interesting to see how minor changes can drastically improve the performance of these scripts .
If you notice something glaringly inefficient in one of the examples below , let me know .
2007 -04-03 —
I temporarily removed the Haskell version while I learn how to get it to print ' Elapsed < seconds > ' .
Anders Bergh ported the scripts on this page to D , C# .
When I am able to run them from the command line , I 'll add them to this page .
Also pending are a Javascript , and a CL version .
Benchmark Generated on 2007-06-08 21:11:16
C gcc-4.0.1
// by Erik Wrenholt #include < stdio.h > # include < sys/ time.h >
# define BAILOUT 16 # define MAX_ITERATIONS
1000 int mandelbrot ( double x , double y ) { double cr = y - 0.5 ; double ci = x ; double zi = 0.0 ; double zr = 0.0 ; int i = 0 ; while ( 1 ) { i ++ ; double temp = zr * zi ; double zr2 = zr * zr ; double zi2 = zi * zi ; zr = zr2 - zi2 + cr ; zi = temp + temp + ci ; if ( zi2 + zr2 > BAILOUT ) return i ; if ( i > MAX_ITERATIONS ) return 0 ; } } int main ( int argc , const char * argv [ ] ) { struct timeval a Tv ; gettimeofday ( &aTv , NULL ) ; long init_time = a Tv.tv_sec ; long init_usec = a Tv.tv_usec ; int x , y ; for ( y = - 39 ; y < 39 ; y++) { printf ( "
" ) ; for ( x = - 39 ; x < 39 ; x++ ) { int i = mandelbrot ( x / 40.0 , y/ 40.0 ) ; if ( i==0 ) printf ( " * " ) ; else printf ( " " ) ; } } printf ( "
" ) ; gettimeofday ( &aTv , NULL ) ; double query_time = ( aTv.tv_sec - init_time ) + ( double ) ( aTv.tv_usec - init_usec ) /1000000.0 ; printf ( " C Elapsed %0.2f
" , query_time ) ; return 0 ; }
Java 1.4.2
// by Erik Wrenholt import java.util . * ; class Mandelbrot { static int BAILOUT = 16 ; static int MAX_ITERATIONS = 1000 ; private static int iterate ( float x , float y ) { float cr = y - 0.5 f ; float ci = x ; float zi = 0.0f ; float zr = 0.0f ; int i = 0 ; while ( true ) { i++ ; float temp = zr * zi ; float zr2 = zr * zr ; float zi2 = zi * zi ; zr = zr2 - zi2 + cr ; zi = temp + temp + ci ; if ( zi2 + zr2 > BAILOUT ) return i ; if ( i > MAX_ITERATIONS ) return 0 ; } } public static void main ( String args [ ] ) { Date d1 = new Date ( ) ; int x , y ; for ( y = - 39 ; y < 39 ; y++) { System.out.print ( "
" ) ; for ( x = - 39 ; x < 39 ; x++ ) { if ( iterate ( x / 40.0 f , y/40.0f ) == 0 ) System.out.print ( " * " ) ; else System.out.print ( " " ) ; } } Date d2 = new Date ( ) ; long diff = d2.getTime ( ) - d1.getTime ( ) ; System.out.println ( "
Java Elapsed " + diff/1000.0f ) ; } }
Io 20070410 Vector
#!/usr/local/bin/io # Vectorized by Steve Dekorte printSet := method ( bailout := 16 max_iterations := 1000 cr := Vector clone ci := Vector clone i := 0 for(y , - 39 , 38 , for (x , - 39 , 38 , cr atPut ( i , y/ 40.0 - 0.5 ) ci atPut ( i , ( x/40.0 ) ) i = i + 1 ) ) size := cr size zi := Vector clone setSize ( size ) zr := Vector clone setSize ( size ) zr2 := Vector clone setSize ( size ) zi2 := Vector clone setSize ( size ) temp := Vector clone setSize ( size ) for ( i , 1 , max_iterations , temp copy ( zr ) *= zi zr2 copy ( zr ) square zi2 copy ( zi ) square zr copy ( zr2 ) -= zi2 zr += cr zi copy ( temp ) *= 2 zi += ci ) result := zi2 + zr2 i := 0 for(y , - 39 , 38 , writeln for(x , - 39 , 38 , r := result at ( i ) write ( if ( r > 0 , " * " , " " ) ) i = i + 1 ) ) ) writeln ( "
Io Elapsed " .. Date secondsToRun( printSet ) )
Lua 5.1
#!/usr/local/bin/lua -- By Erik Wrenholt local BAILOUT = 16 local MAX_ITERATIONS = 1000 function iterate( x , y ) local cr = y - 0.5 local ci = x local zi = 0.0 local zr = 0.0 local i = 0 while 1 do i = i+1 local temp = zr * zi local zr2 = zr*zr local zi2 = zi*zi zr = zr2 - zi2+ cr zi = temp + temp+ci if ( zi2+zr2 > BAILOUT ) then return i end if ( i > MAX_ITERATIONS ) then return 0 end end end function mandelbrot ( ) local t = os. time ( ) for y = - 39 , 38 do for x = - 39 , 38 do if ( iterate ( x / 40.0 , y/ 40 ) == 0 ) then io.write ( " * " ) else io.write ( " " ) end end io.write ( "
" ) end io.write(string.format( " Time Elapsed %d
" , os.time ( ) - t ) ) end mandelbrot ( )
ocaml compiled 3.09.2
(* Courtesy of pango on #ocaml *) let bailout = 16 .
let max_iterations = 1000 let mandelbrot x y = let cr = y -. 0.5 in let ci = x in let zi = ref 0.0 in let zr = ref 0.0 in let i = ref 0 in let continue = ref true in let result = ref 0 in while ! continue do incr i ; let temp = !zr *. ! zi in let zr2 = ! zr *. ! zr in let zi2 = ! zi *. ! zi in zr := zr2 -. zi2 +. cr ; zi := temp +. temp +. ci ; if zi2 +. zr2 > bailout then begin result := !i ; continue := false ; end else if !i > max_iterations then continue := false ; done ; ! result let ( ) = let start_time = Unix.gettimeofday ( ) in for y = - 39 to 38 do print_newline ( ) ; for x = - 39 to 38 do let i = mandelbrot ( float x /. 40 . ) ( float y /. 40 . ) in print_char ( if i = 0 then '*' else ' ' ) ; done done ; print_newline ( ) ; let stop_time = Unix.gettimeofday ( ) in let query_time = stop_time -. start_time in Printf.printf " OCaml Elapsed %0.2f
" query_time
ocaml bytecode 3.09.2
#!/opt/local/bin/ocamlrun ocaml unix.cma (* Courtesy of pango on #ocaml *) let bailout = 16 .
let max_iterations = 1000 let mandelbrot x y = let cr = y -. 0.5 in let ci = x in let zi = ref 0.0 in let zr = ref 0.0 in let i = ref 0 in let continue = ref true in let result = ref 0 in while ! continue do incr i ; let temp = !zr *. ! zi in let zr2 = ! zr *. ! zr in let zi2 = ! zi *. ! zi in zr := zr2 -. zi2 +. cr ; zi := temp +. temp +. ci ; if zi2 +. zr2 > bailout then begin result := !i ; continue := false ; end else if !i > max_iterations then continue := false ; done ; ! result let ( ) = let start_time = Unix.gettimeofday ( ) in for y = - 39 to 38 do print_newline ( ) ; for x = - 39 to 38 do let i = mandelbrot ( float x /. 40 . ) ( float y /. 40 . ) in print_char ( if i = 0 then '*' else ' ' ) ; done done ; print_newline ( ) ; let stop_time = Unix.gettimeofday ( ) in let query_time = stop_time -. start_time in Printf.printf " OCaml Elapsed %0.2f
" query_time
Python 2.5.1
#!/usr/local/bin/python
# by Daniel Rosengren import sys , time stdout = sys.stdout BAILOUT = 16 MAX_ITERATIONS = 1000 class Iterator : def __init__( self ) : print ' Rendering ...' for y in range ( - 39 , 39 ) : stdout.write ( '
' ) for x in range ( - 39 , 39 ) : i = self.mandelbrot(x/40.0 , y/40.0 ) if i == 0 : stdout.write ('*') else : stdout.write (' ') def mandelbrot ( self , x , y ) : cr = y - 0.5 ci = x zi = 0.0 zr = 0.0 i = 0 while True : i += 1 temp = zr * zi zr2 = zr * zr zi2 = zi * zi zr = zr2 - zi2 + cr zi = temp + temp + ci if zi2 + zr2 > BAILOUT : return i if i > MAX_ITERATIONS : return 0 t = time .
time ( ) Iterator ( ) print '
Python Elapsed %.02f ' % ( time.time ( ) - t )
Ghostscript 8.51
%!PS % % frac.ps by Jeff Zaroyko % % a transliteration of the program by Erik Wrenholt % % at http://www.timestretch.com/FractalBenchmark.html / star {(* ) print } bind def / space { ( ) print } bind def realtime pop / BAILOUT 16 def / MAX_ITERATIONS
1000 def / mandelbrot { % % mx my / mx exch def / my exch def / cr my 0.5 sub def / ci mx def / zi 0.0 def /zr 0.0 def /i 0 def { / i i 1 add def / temp zr zi mul def / zr2 zr zr mul def / zi2 zi zi mul def / zr zr2 zi2 sub cr add def / zi temp temp add ci add def zi2 zr2 add BAILOUT gt { i exit } if i MAX_ITERATIONS gt { 0 exit } if } loop } bind def % main /y - 39 def { y 39 lt { /y y 1 add def (
) print / x - 39 def { x 39 lt { /x x 1 add def y 40.0 div x 40.0 div mandelbrot 0 eq { star } { space } ifelse } { exit } ifelse } loop } { exit }ifelse % Done .
} loop realtime dup log ceiling cvi string cvs (
Total time Elapsed ) print print ( ms
) print quit
Perl 5.8.6 Optimized
#!/usr/bin/perl # Ported from C to Perl by Anders Bergh < anders1@gmail.com >
# Some Perlification by John Gabriele ( 4-24-2007 ) .
use strict ; use warnings ; use Time : : HiRes qw ( gettimeofday ) ; my $ BAILOUT = 16 ; my $ MAX_ITERATIONS = 1000 ; my $ begin = gettimeofday ( ) ; sub mandelbrot { my ( $ x , $y ) = @_ ; my $ cr = $y - 0.5 ; my $ ci = $ x ; my ( $zi , $zr ) = ( 0.0 , 0.0 ) ; my $ i = 0 ; my ( $ temp , $ zr2 , $ zi2 ) ; while ( 1 ) { $ i += 1 ; $ temp = $zr * $ zi ; $ zr2 = $zr * $ zr ; $ zi2 = $ zi * $ zi ; $zr = $ zr2 - $ zi2 + $ cr ; $ zi = $ temp + $ temp + $ ci ; if ( $ zi2 + $ zr2 > $ BAILOUT ) { return $ i ; } if ( $ i > $ MAX_ITERATIONS ) { return 0 ; } } } for ( my $y = - 39 ; $y < 39 ; $ y++ ) { print ( "
" ) ; my $ i ; for ( my $x = - 39 ; $ x < 39 ; $ x++ ) { $ i = mandelbrot ( $ x / 40.0 , $y / 40.0 ) ; if ( $ i == 0 ) { print q{*} ; } else { print q{ } ; } } } print "
" ; my $ end = gettimeofday ( ) - $ begin ; print " Perl Elapsed $end
" ;
Perl 5.8.6
#!/usr/bin/perl # Ported from C to Perl by Anders Bergh < anders1@gmail.com >
# $ BAILOUT=16 ; $ MAX_ITERATIONS=1000 ; $ begin = time ( ) ; sub mandelbrot { local $x = $ _ [ 0 ] ; local $y = $ _ [ 1 ] ; local $ cr = $y - 0.5 ; local $ ci = $ x ; local $ zi = 0.0 ; local $zr = 0.0 ; local $ i = 0 ; while ( 1 ) { $ i = $ i + 1 ; local $ temp = $zr * $ zi ; local $ zr2 = $zr * $ zr ; local $ zi2 = $ zi * $ zi ; $zr = $ zr2 - $ zi2 + $ cr ; $ zi = $ temp + $ temp + $ ci ; if ( $ zi2 + $ zr2 > $ BAILOUT ) { return $ i ; } if ( $i > $ MAX_ITERATIONS ) { return 0 ; } } } for ( $y = - 39 ; $y < 39 ; $ y++ ) { print ( "
" ) ; for ( $x = - 39 ; $ x < 39 ; $ x++ ) { $ i = mandelbrot ( $ x / 40.0 , $ y / 40.0 ) ; if ( $i == 0 ) { print ( " * " ) ; } else { print ( " " ) ; } } } print ( "
" ) ; $ end = time ( ) - $ begin ; print " Perl Elapsed $end
" ;
PHP 5.1.4
#!/usr/local/php5/bin/php <? php define ( " BAILOUT " ,16 ) ; define ( " MAX_ITERATIONS " ,1000 ) ; class Mandelbrot { function Mandelbrot ( ) { $ d1 = microtime ( 1 ) ; for ( $y = - 39 ; $y < 39 ; $ y++ ) { echo ( "
" ) ; for ( $x = - 39 ; $ x < 39 ; $ x++ ) { if ( $ this -> iterate ( $ x / 40.0 , $y / 40.0 ) == 0 ) echo ( " * " ) ; else echo ( " " ) ; } } $ d2 = microtime ( 1 ) ; $ diff = $ d2 - $ d1 ; printf ( "
PHP Elapsed % 0.2f " , $ diff ) ; } function iterate ( $x , $y ) { $ cr = $ y - 0.5 ; $ ci = $ x ; $ zi = 0.0 ; $zr = 0.0 ; $ i = 0 ; while ( true ) { $ i++ ; $ temp = $zr * $ zi ; $ zr2 = $zr * $ zr ; $ zi2 = $ zi * $ zi ; $zr = $ zr2 - $ zi2 + $ cr ; $ zi = $ temp + $ temp + $ ci ; if ( $ zi2 + $ zr2 > BAILOUT ) return $ i ; if ( $i > MAX_ITERATIONS ) return 0 ; } } } $m = new Mandelbrot ( ) ; ?>
Ruby 1.8.4
#!/usr/local/bin/ruby
BAILOUT = 16 MAX_ITERATIONS
= 1000 class Mandelbrot def initialize puts " Rendering " for y in - 39 ...39 do puts for x in - 39...39 do i = iterate ( x / 40.0 , y/40.0 ) if ( i == 0 ) print " * " else print " " end end end end def iterate ( x , y ) cr = y - 0.5 ci = x zi = 0.0 zr = 0.0 i = 0 while ( 1 ) i += 1 temp = zr * zi zr2 = zr * zr zi2 = zi * zi zr = zr2 - zi2 + cr zi = temp + temp + ci return i if ( zi2 + zr2 > BAILOUT ) return 0 if ( i > MAX_ITERATIONS ) end end end time = Time.now Mandelbrot.new puts puts " Ruby Elapsed %f " % ( Time.now - time )
Javascript SpiderMonkey v1.6
#!/usr/local/bin/js
/* Javascript version by Patrick Haller .*/ function mandelbrot( x , y ) { var cr = y - 0.5 ; var ci = x ; var zi = 0.0 ; var zr = 0.0 ; var i = 0 ; var BAILOUT = 16 ; var MAX_ITERATIONS = 1000 ; while ( 1 ) { i++ ; var temp = zr * zi ; var zr2 = zr * zr ; var zi2 = zi * zi ; zr = zr2 - zi2 + cr ; zi = temp + temp + ci ; if ( zi2 + zr2 > BAILOUT ) { return i ; } if ( i > MAX_ITERATIONS ) { return 0 ; } } } function mandelbrot_run ( ) { var x ; var y ; output = " " ; var date = new Date ( ) ; for ( y = - 39 ; y < 39 ; y++) { print ( output ) ; output = " " ; for ( x = - 39 ; x < 39 ; x++ ) { var i = mandelbrot ( x / 40.0 , y/ 40.0 ) ; if ( i==0 ) { output += " * " ; } else { output += " " ; } } } var date2 = new Date ( ) ; output += "
JavaScript Elapsed " + ( date2.getTime ( ) - date.getTime ( ) ) / 1000 ; print ( output ) ; return false ; } mandelbrot_run ( ) ;
TCL 8.4 Optimized
#!/usr/bin/tclsh # Optimized Version by Samuel Zafrany # Ported from C by Anders Bergh < anders1@gmail.com > package require Tcl 8.4 set BAILOUT 16 set MAX_ITERATIONS 1000 proc mandelbrot {x y} { global BAILOUT global MAX_ITERATIONS set cr [ expr {$y - 0.5} ] set ci $x set zi 0.0 set zr 0.0 set i 0 while { 1 } { incr i set temp [ expr {$zr * $ zi} ] set zr2 [ expr {$zr * $ zr} ] set zi2 [ expr { $zi * $ zi} ] set zr [ expr { $zr2 - $ zi2 + $ cr} ] set zi [ expr {$temp + $ temp + $ ci} ] if { $zi2 + $ zr2 > $ BAILOUT} { return $ i } if { $i > $ MAX_ITERATIONS} { return 0 } } } set begin [ clock clicks - milliseconds ] for { set y - 39} {$y < 39 } {incr y} { puts " " for {set x - 39 } {$x < 39 } {incr x} { set i [ mandelbrot [ expr {$x / 40.0} ] [ expr {$y / 40.0} ] ] if { $i == 0} { puts - nonewline " * " } else { puts - nonewline " " } flush stdout } } puts " " set diff [ expr [ clock clicks - milliseconds ] - $ begin ] # puts " Tcl Elapsed [ expr int ( $diff / 1000 ) ] seconds ( $ diff ms ) " puts " Tcl Elapsed [ expr int ( $diff / 1000 ) ] "
Emacs Lisp
; By Erik Wrenholt ; emacs -l Mandelbrot.lisp - batch ( defun iterate ( xx yy ) ( let * ( ( BAILOUT 16.0 ) ( MAX_ITERATIONS 1000 ) ( bail_val 0 ) ( cr (- yy 0.5 ) ) ( ci xx ) ( zi 0.0 ) ( zr 0.0 ) ( i 0 ) ) ( while ( and (< i MAX_ITERATIONS ) ( < bail_val BAILOUT ) ) ( setq i (+ 1 i ) ) ( setq temp (* zr zi ) ) ( setq zr2 (* zr zr ) ) ( setq zi2 (* zi zi ) ) ( setq zr (+ ( - zr2 zi2 ) cr ) ) ( setq zi (+ temp temp ci ) ) ( setq bail_val (+ zi2 zr2 ) ) ) i ) ) ( defun mandelbrot ( ) ( setq yy - 39 ) ( while (< yy 39 ) ( setq yy (+ 1 yy ) ) ( setq xx - 39 ) ( while (< xx 39 ) ( setq xx (+ 1 xx ) ) ( if (= ( iterate ( / xx 40.0 ) ( / yy 40.0 ) ) 1000 ) ( princ " * " ) ( princ " " ) ) ) ( princ "
" ) ) ) ( setq the - time ( cadr ( current - time ) ) ) ( mandelbrot ) ( princ ( format " Elapsed %d " (- ( cadr ( current - time ) ) the - time ) ) )
Applescript
(* Applescript Version by Erik Wrenholt I could n't figure out how to write to stdout so it buffers the output until the end . *) on unixTime ( ) ( do shell script " date + %s " ) as integer end unixTime on iterate( x , y ) set BAILOUT to 16 set MAX_ITERATIONS to 1000 set cr to y - 0.5 set ci to x set zi to 0.0 set zr to 0.0 set i to 0 repeat while i < MAX_ITERATIONS set i to i + 1 set temp to zr * zi set zr2 to zr * zr set zi2 to zi * zi set zr to zr2 - zi2 + cr set zi to temp + temp + ci if zi2 + zr2 > BAILOUT then return i end if end repeat return 0 end iterate set t to unixTime ( ) set mandelbrotString to " " set nl to ( ASCII character 10 ) repeat with y from - 39 to 38 by 1 set mandelbrotString to mandelbrotString & nl repeat with x from - 39 to 38 by 1 if iterate ( x / 40.0 , y / 40.0 ) = 0 then set mandelbrotString to mandelbrotString & " * " else set mandelbrotString to mandelbrotString & " " end if end repeat end repeat set elapsed to unixTime ( ) - t mandelbrotString & nl & " Time Elapsed " & elapsed
Io 20070410
#!/usr/local/bin/IoServer # by Erik Wrenholt iterator :=
Object clone do ( bailout := 16 max_iterations := 1000 mandelbrot := method ( x , y , cr := y - 0.5 ci := x zi := 0.0 zr := 0.0 i := 0 while ( 1 , i = i + 1 temp := zr * zi zr2 := zr * zr zi2 := zi * zi zr := zr2 - zi2 + cr zi := temp + temp + ci if ( zi2 + zr2 > bailout , return i ) if ( i > max_iterations , return 0 ) ) ) print_set := method ( writeln ( " Rendering ... " ) for(y , - 39 , 38 , write ( "
" ) for(x , - 39 , 38 , i := mandelbrot( x/40.0 , y/40.0 ) if ( i == 0 , write ( " * " ) , write ( " " ) ) ) ) ) ) writeln writeln ( " Io Elapsed " .. Date secondsToRun( iterator print_set ) )
SBCL 1.0.2
A great idea I learned from weight training is the concept of progressive training .
Progressive training means that you keep gradually increasing the weights you lift ( over a period of weeks , months , and years ) , so you always experience a high degree of challenge in your training .
In broader terms progressive training means changing various aspects of your training to increase the challenge , including distance , speed , duration , etc .
If you keep lifting the same weights week after week , you are n’t going to get much stronger .
Progressive training helps ensure that you remain in the sweet spot of challenge , so you grow stronger in less time than you would otherwise .
Of course progressive training can be applied to other areas beyond your physical body .
I find it especially valuable as a skill - building tool .
Here ’s an example of how I ’ve been using progressive training since the summer of 2004 to build my speaking and communication skills .
Deciding to Train
First , I made the conscious decision to train up in this area .
I knew I eventually wanted to do professional speaking , and it was n’t hard for me to recognize that I lacked the basic knowledge and skills required to succeed .
I also had very little experience doing public speaking .
I figured it would take me at least a few years and many hundreds of hours to reach the level of skill I desired .
But instead of being intimidated by all that work ahead of me , I just accepted it .
Those years were going to pass anyway , so I might as well emerge on the other side a better speaker .
Basic Training
In May 2004 I decided to kick things off my training by joining Toastmasters International .
I attended local club meetings as a guest to find a club I liked , and then I joined one .
A few weeks later I gave my first 7 - minute “ icebreaker ” speech .
Over the following months , I gave more 7 - minute speeches .
I experimented with humorous speeches , storytelling , and various delivery styles .
I was less concerned about giving great speeches at this time than I was with simply gaining experience .
In the fall of 2004 , I entered Toastmasters ’ humorous speech contest and made it pretty far for a first - timer ( 2nd place at Division level ) .
Shortly after that I was invited to attend a couple advanced Toastmaster clubs and began visiting their meetings as a guest in addition to my regular club .
Six months later I competed in the Spring 2005 International speech contest and again did fairly well for my experience level ( 3rd place at Division ) .
Advanced Training
After 10 months in Toastmasters , I had earned my CTM award ( “ Competent Toastmaster ” ) .
This qualified me to join the most advanced club in Las Vegas , and I joined as soon as I could .
In that club the challenge was much greater .
Many of the members were pro speakers , some with decades of experience .
I began giving longer speeches , gradually building to the 20 - 40 minute range .
I received a lot of great feedback and coaching .
After six months in the advanced club , I dropped my original club because it was no longer challenging me enough .
A few months later I presented a 90 - minute workshop to a group of about 60 people , soon followed by a 90 - minute Q&A session .
I was well - prepared and received very positive feedback .
Stretching the Boundaries
To push myself even further , I began attending weekly improv comedy workshops to develop my improvisational skills .
I performed in a live show earlier this month .
I ’ve found improv very challenging , but it helps me think fast on my feet .
Plus it ’s stretched me in ways that Toastmasters meetings never would .
I get to experiment with unusual characters , do physical comedy , act out scenes with other players , and basically make a complete fool of myself in front of an audience .
But the benefit is that after doing this for a while , everything else seems much easier by comparison .
Throughout this time I worked on my content , speech writing , organization , delivery skills , gestures , vocal variety , facial expressions , eye contact , blocking ( i.e. movement around the stage ) , humor , storytelling , manner , take - home value , etc .
I attended workshops and seminars and read books on speaking skills and professional speaking .
This was a lot of work over an almost two - year period , probably amounting to almost 1000 hours of my time .
That ’s about 6 months of 40 - hour weeks .
And I did n’t get paid for any of it .
In fact , I had to pay for it , although the money was n’t much .
And the Training Continues …
So am I done training yet ?
Not remotely .
My next step is to join the National Speakers Association .
I ’m not qualified to join the national organization yet , but I can join the Las Vegas chapter , which just formed last year .
I plan to attend my first local NSA meeting in about three weeks .
Once again this will increase the challenge , introduce me to better coaches , and compel me to grow stronger and more competent .
In fact , the training will never really end .
Even as I start doing professional speaking , I ’ll continue the private training to keep improving .
Why Progressive Training ?
The major benefit to progressive training is that as you increase the challenge , what once seemed heavy to you will begin to feel much lighter .
Maybe that 20 - lb dumbbell feels heavy now , but once you ’ve progressed to 40 - lb dumbbells , that 20 - pounder feels light .
It still weighs the same it always did , but your capacity has grown , such that seems lighter by comparison .
You ca n’t always change the weight of the tasks ahead of you , but you can increase your strength to the point that those same tasks feel lighter .
When I delivered my first 7 - minute Toastmasters speech in June 2004 , it was a reasonable challenge for me .
But the speech I gave was very dull with no stories or humor .
And my delivery ( using notes , standing behind a lectern , monotone vocalization , lame gestures ) was unexciting .
But it was the best I could do at the time .
I was at the point of unconscious incompetence — I did n’t even know what I did n’t know .
Fast forward almost two years , and doing a 7 - minute speech like my first one seems like a ridiculously light weight .
Today I could give a better impromptu speech with no preparation , and I ’d feel more confident than I did back then with plenty of preparation and notes .
The weights I ’m training with today are so much heavier that a 7 - minute speech is feather - light by comparison .
But it sure did n’t feel that way when I first started .
Progressive training is the key to growing stronger .
If I ’d stuck with my basic Toastmasters club and kept doing vanilla 7 - minute speeches over and over , I ’d still have improved over time .
But I accelerated my growth significantly by progressing to longer speeches , workshops , humor , storytelling , bigger audiences , speech contests , improv comedy , etc .
After doing improv workshops , when I went back to doing impromptu speaking in Toastmasters , it seemed almost trivially easy , even though impromptu speaking used to challenge me greatly .
I thought to myself , “ All I have to do is speak for a minute off the top of my head ?
I do n’t have to sing it … with a foreign accent … while making it rhyme … while pretending to be a funny character … while trying to make it funny to the audience ?
Oh , this is going to be easy ! ”
Private Training Improves Public Performance
Whether your real - world performance involves public speaking , selling , or programming , you can accelerate your growth with progressive training .
Keep raising the bar for yourself , taking on challenges that are just beyond the edge of your comfort zone .
These should be weights that you can still lift , but they ’re going to require close to 100 % effort .
A lazy 50 % effort just wo n’t cut it .
50 % effort wo n’t help you grow .
100 % effort will .
The more we sweat in training , the less we bleed in war .
– U.S. Navy SEALs
That pretty much says it all , does n’t it ?
Live Performance Is NOT Training
When you train , hard is good .
When you perform , easy is good .
A live show is not acting school .
Making a sales call is not sales training .
Competing in a game is not practice .
The main difference between real - world performance and actual training is coverage .
In real - world performance situations , you ’ll lack sufficient coverage of those elements that occur infrequently in the real world but which can still be critical to your long - term success .
In the real world , situations will arise for which you are unprepared , and private training can prepare you for them , regardless of how often they occur outside of training .
It ’s often these infrequent situations that throw amateurs for a loop but which the pros handle competently .
For example , suppose you want to master the game of blackjack .
Grabbing a deck of cards and playing sample hands is a very poor way to learn .
Some situations occur very infrequently , but they can still make a significant difference in your results if you screw them up .
One of those situations is knowing when to split pairs and when to double down after splitting .
You can place an initial $ 100 bet , but with repeated pair - splitting and doubling down after splitting , you can suddenly have $ 500 or more riding on that same hand .
( Example :
The dealer has a 5 showing .
You split a pair of 7s and get another 7 , so you split again .
On the first 7 you get a 3 and double down with your 10 .
On the second 7 you get a 4 and double down with your 11 .
On the third 7 you get a 10 and stand at 17 .
Your original $ 100 bet is now $ 500 .
And this is indeed the correct strategy . )
If you play it incorrectly , the swing of that one hand can make or break your entire session , even though the probability of it happening is remote .
Most beginners would play this hand too conservatively and never split the first pair of 7s , standing at 14 against the dealers 5 .
They miss the opportunity for a big win when the odds are in their favor because they did n’t prepare for this situation in advance .
It ’s an improbable situation to be sure , but if you play long enough , it ’s only a matter of time before it happens .
Live performance also gives you excessive training where you least need it .
Even inexperienced blackjack players know they should always stay when they ’re dealt a 20 ( the most common hand in the game ) , and there ’s no point in continuing to practice the play of these hands .
Private training should be used to strengthen your weak areas , especially when your live performance is n’t giving you enough coverage of them .
Training Pays !
One of the reasons top professional speakers get paid thousands of dollars for an hour of their time is because of all the training and experience they ’ve endured to reach that point .
A great speaker can use that hour to permanently change the way people think and behave , and that skill will always be in high demand .
You can apply progressive training to build skill in any area of your life : physical , mental , social , spiritual , etc .
I ’ve found it especially useful in building my modern day survival skills .
Through lots of reading and experimentation , I learned how to create systems that generate income for me ( like this web site ) .
I have no hourly rate because I do n’t trade my time for money .
Consequently , I enjoy an almost ridiculous level of freedom .
On this Saturday morning , I ’m choosing to write this article , but I could just as easily blow off the next few months and do nothing .
Years of private training , which mainly involved conditioning the right mindset , made it possible for me to make plenty of money without needing a job .
Traditional employment wo n’t teach you such skills .
It ’s the kind of thing that must be learned via private practice .
Be Your Own Coach
You ’re the coach as well as the trainee .
You decide which areas of your life you want to train .
Just do n’t reinvent the wheel .
You do n’t have to develop your own custom program from scratch .
In many cases you can get a pre-made program from someone else .
For example , Toastmasters has a basic manual and more than a dozen advanced manuals , and they cost only a few dollars each .
Take full advantage of books , audio programs , web sites , classes , and so on .
Learn from others who ’ve already done the hard work of creating these resources for you .
No Excuses
Do n’t bother making up feeble excuses to justify why you do n’t have time for training .
If you have time to watch TV , you have time for training .
If you have time to go out to lunch , you have time for training .
If you have a CD or cassette player in your car , you have time for training .
Kick It Off With a 30 - Day Trial
I recommend kicking off a new training program with the 30 Days to Success approach .
Give yourself a strong push with 30 days of conscious effort , and then just allow momentum to carry you forward .
For example , it took some effort for me to reach the point of attending that first Toastmasters meeting .
But it was a no - brainer to show up for the fifth meeting after I ’d already attended the first four .
Showing up the first time is the hardest step .
Showing up the fifth time is easy .
After 100 times it ’s harder NOT to show up .
So Let ’s Get Training !
Now for your homework …
Pick one area of your life that you ’d like to see become a lot easier for you .
Remember that the whole point of progressive training is to make yourself stronger , so the weights in your life feel lighter and lighter .
The net effect is that your life will begin to feel easier .
Would you like to have an easier time performing your job ?
Would you like to be physically stronger ?
Do you want to have an easier time earning money ?
Would you like to have an easier time communicating with people , including members of the opposite sex ?
Do you want it to be easier for you to behave ethically and morally ?
Do you want it to be easier for you to write ?
Once you ’ve selected an area for growth , make the conscious decision to train that area over the next several weeks , months , or years .
Remember that the time is going to pass anyway .
Brainstorm some ideas for what you can do to begin training , and then immediately pick one and get started .
Find a local club like Toastmasters , and add the next meeting date to your calendar .
Buy a new book or audio program .
Sign up for a class .
Pick up the phone or fire off an email to request advice from someone who ’s already ahead of you in this area .
Take some kind of physical action to get the ball rolling .
And once it ’s in motion , keep it moving forward .
Once the ball has some momentum behind it , then and only then should you think about where you ’d like to direct it .
It ’s OK if it ’s moving in the wrong direction , as long as it ’s moving .
The worst thing you can do is to get stuck in analysis paralysis , thinking and planning but not actually doing anything .
The time to intelligently sculpt your training program is after you ’re in motion , not before — after you ’ve read a book or two , gotten advice from people , and attended a few classes or meetings .
The reason is that in the beginning you ’re still at the point of unconscious incompetence .
You do n’t even know what you do n’t know .
So first you have to reach the point of conscious incompetence , where you at least come to know what you do n’t know .
Then you can begin formalizing and structuring your skill building program .
Once the fog clears up a bit , you can use progressive training to work gradually towards conscious competence , and eventually … to unconscious competence , where your talent actually becomes a subconscious habit .
Now get started !
Something important is almost never mentioned in all the literature about programming and software development , and as a result we sometimes misunderstand each other .
You ’re a software developer .
Me too .
But we may not have the same goals and requirements .
In fact there are several different worlds of software development , and different rules apply to different worlds .
You read a book about UML modeling , and nowhere does it say that it does n’t make sense for programming device drivers .
Or you read an article saying that “ the 20 MB runtime [ required for .
NET ] is a NON issue ” and it does n’t mention the obvious : if you ’re trying to write code for a 32 KB ROM on a pager it very much is an issue !
I think there are five worlds here , sometimes intersecting , often not .
The five are :
Shrinkwrap Internal Embedded Games Throwaway
When you read the latest book about Extreme Programming , or one of Steve McConnell ’s excellent books , or Joel on Software , or Software Development magazine , you see a lot of claims about how to do software development , but you hardly ever see any mention of what kind of development they ’re talking about , which is unfortunate , because sometimes you need to do things differently in different worlds .
Let ’s go over the categories briefly .
Shrinkwrap is software that needs to be used “ in the wild ” by a large number of people .
It may be actually wrapped in cellophane and sold at CompUSA , or it may be downloaded over the Internet .
It may be commercial or shareware or open source or GNU or whatever — the main point here is software that will be installed and used by thousands or millions of people .
Shrinkwrap has special problems which derive from two special properties :
Since it has so many users who often have alternatives , the user interface needs to be easier than average in order to achieve success .
Since it runs on so many computers , the code must be unusually resilient to variations between computers .
Last week someone emailed me about a bug in CityDesk which only appears in Polish Windows , because of the way that operating system uses Right - Alt to enter special characters .
We tested Windows 95 , 95OSR2 , 98 , 98SE , Me , NT 4.0 , Win 2000 , and Win XP .
We tested with IE 5.01 , 5.5 , or 6.0 installed .
We tested US , Spanish , French , Hebrew , and Chinese Windows .
But we had n’t quite gotten around to Polish yet .
There are three major variations of shrinkwrap .
Open Source software is often developed without anyone getting paid to develop it , which changes the dynamics a lot .
For example , things that are not considered “ fun ” often do n’t get done in an all - volunteer team , and , as Matthew Thomas points out eloquently , this can hurt usability .
Development is much more likely to be geographically dispersed , which results in a radically different quality of team communication .
It ’s rare in the open source world to have a face to face conversation around a whiteboard drawing boxes and arrows , so the kind of design decisions which benefit from drawing boxes and arrows are usually decided poorly on such projects .
As a result geographically dispersed teams have done far better at cloning existing software where little or no design is required .
Consultingware is a variant of shrinkwrap which requires so much customization and installation that you need an army of consultants to install it , at outrageous cost .
CRM and CMS packages often fall in this category .
One gets the feeling that they do n’t actually do anything , they are just an excuse to get an army of consultants in the door billing at $ 300 / hour .
Although consultingware is disguised as shrinkwrap , the high cost of an implementation means this is really more like internal software .
Commercial web based software such as Salesforce.com or even the more garden variety eBay still needs to be easy to use and run on many browsers .
Although the developers have the luxury of ( at least ) some control over the “ deployment ” environment — the computers in the data center — they have to deal with a wide variety of web browsers and a large number of users so I consider this basically a variation of shrinkwrap .
Internal software only has to work in one situation on one company ’s computers .
This makes it a lot easier to develop .
You can make lots of assumptions about the environment under which it will run .
You can require a particular version of Internet Explorer , or Microsoft Office , or Windows .
If you need a graph , let Excel build it for you ; everybody in our department has Excel .
( But try that with a shrinkwrap package and you eliminate half of your potential customers . )
Here usability is a lower priority , because a limited number of people need to use the software , and they do n’t have any choice in the matter , and they will just have to deal with it .
Speed of development is more important .
Because the value of the development effort is spread over only one company , the amount of development resources that can be justified is significantly less .
Microsoft can afford to spend $ 500,000,000 developing an operating system that ’s only worth about $ 80 to the average person .
But when Detroit Edison develops an energy trading platform , that investment must make sense for a single company .
To get a reasonable ROI you ca n’t spend as much as you would on shrinkwrap .
So sadly lots of internal software sucks pretty badly .
Embedded Software has the unique property that it goes in a piece of hardware and in almost every case can never be updated .
This is a whole different world , here .
The quality requirements are much higher , because there are no second chances .
You may be dealing with a processor that runs dramatically more slowly than the typical desktop processor , so you may spend a lot of time optimizing .
Fast code is more important than elegant code .
The input and output devices available to you may be limited .
The GPS system in the car I rented last week had such pathetic I/O that the usability was dismal .
Have you ever tried to input an address on one of these things ?
They displayed a “ keyboard ” on screen and you had to use the directional arrows to choose letters from five small matrices of 9 letters each .
( Follow the link for more illustrations of this UI .
The GPS in my own car has a touch screen which makes the UI dramatically better .
But I digress ) .
Games are unique for two reasons .
First , the economics of game development are hit - oriented .
Some games are hits , many more games are failures , and if you want to make money on game software you recognize this and make sure that you have a portfolio of games so that the blockbuster hit makes up for the losses on the failures .
This is more like movies than software .
The bigger issue with the development of games is that there ’s only one version .
Once your users have played through Duke Nukem 3D , they are not going to upgrade to Duke Nukem 3.1D just to get some bug fixes and new weapons .
With some exceptions , once somebody has played the game to the end , it ’s boring to play it again .
So games have the same quality requirements as embedded software and an incredible financial imperative to get it right the first time .
Shrinkwrap developers have the luxury of knowing that if 1.0 does n’t meet people ’s needs and does n’t sell , maybe 2.0 will .
Finally Throwaway code is code that you create temporarily solely for the purpose of obtaining something else , which you never need to use again once you obtain that thing .
For example , you might write a little shell script that massages an input file that you got into the format you need it for some other purpose , and this is a one time operation .
There are probably other kinds of software development that I ’m forgetting .
Here ’s an important thing to know .
Whenever you read one of those books about programming methodologies written by a full time software development guru / consultant , you can rest assured that they are talking about internal , corporate software development .
Not shrinkwrapped software , not embedded software , and certainly not games .
Why ?
Because corporations are the people who hire these gurus .
They ’re paying the bill .
( Trust me , id software is not about to hire Ed Yourdon to talk about structured analysis . )
Last week Kent Beck made a claim that you do n’t really need bug tracking databases when you ’re doing Extreme Programming , because the combination of pair programming ( with persistent code review ) and test driven development ( guaranteeing 100 % code coverage of the automated tests ) means you hardly ever have bugs .
That did n’t sound right to me .
I looked in our own bug tracking database here at Fog Creek to see what kinds of bugs were keeping it busy .
Lo and behold , I discovered that very few of the bugs in there would have been discovered with pair programming or test driven development .
Many of our “ bugs ” are really what XP calls stories — basically , just feature requests .
We ’re using the bug tracking system as a way of remembering , prioritizing , and managing all the little improvements and big features we want to implement .
A lot of the other bugs were only discovered after much use in the field .
The Polish keyboard thing .
There ’s no way pair programming was going to find that .
And logical mistakes that never occurred to us in the way that different features work together .
The larger and more complex a program , the more interactions between the features that you do n’t think about .
A particular unlikely sequence of characters ( {${? , if you must know ) that confuses the lexer .
Some ftp servers produce an error when you delete a file that does n’t exist ( our ftp server does not complain so this never occurred to us . )
I carefully studied every bug .
Out of 106 bugs we fixed for the service pack release of CityDesk , exactly 5 of them could have been prevented through pair programming or test driven design .
We actually had more bugs that we knew about and thought were n’t important ( only to be corrected by our customers ! ) than bugs that could have been caught by XP methods .
But Kent is right , for other types of development .
For most corporate development applications , none of these things would be considered a bug .
Program crashes on invalid input ?
Run it again , and this time watch your {${ ?’s!
And we only have One Kind of FTP server and nobody in the whole company uses Polish Windows .
Most things in software development are the same no matter what kind of project you ’re working on , but not everything .
When somebody tells you about methodology , think about how it applies to the work you ’re doing .
Think about where the person is coming from .
Steve McConnell , Steve Maguire , and I all come from a very narrow corner : the world of mass market shrinkwrap spreadsheet applications written in Redmond , Washington .
As such we have higher bars for ease of use and lower bars for bugs .
Most of the other methodology gurus make their living doing consulting for in house corporate development , and that ’s what they ’re talking about .
In any case , we should all be able to learn something from each other .
Tags
Wal - Mart - hating interventionists are running out of reasons to hate Wal - Mart .
Incapable of making any kind of coherent argument that America 's biggest retailer is harmful to consumers or workers , they are now rewriting American business history — including the history of antitrust regulation — to vent their hatred of an institution that has done more to help the poor than all the government welfare programs devised in Washington .
A case in point is the cover of the July 2006 issue of Harper 's magazine that demands : " Break Up Wal - Mart ! "
Inside is a jumble of inaccuracies , fabrications , and economic mythology in the form of an article by one Barry C. Lynn entitled " Breaking the Chain : The Antitrust Case Against Wal - Mart . "
Lynn is a " fellow of the New America Foundation , " which claims to espouse " new ideas " for public policy .
In this case , Lynn espouses the " new idea " of applying nineteenth - century antitrust law to twenty - first century commerce .
The article begins with a straw - man caricature of market exchange .
Ask yourself this :
The last time you went to the store to buy a carton of milk , did you engage in a death " struggle " against other customers , as well as the merchant ?
Did you " grasp and elbow " your way to the milk aisle and then back to the checkout ?
Did you " shout and shove " your way through the store , amidst hundreds of others doing the same ?
Or did you simply pay for the milk , receive a " thank you " from the checkout clerk , after which you returned the pleasantry ?
If you answered " yes " to the first three questions then you agree with Lynn about the essential nature of market exchange , or " laissez faire , " as he labels it .
You would also be speaking absurdities .
After grossly mischaracterizing free - market exchange , Lynn does n't even wait until the second paragraph to present an incorrect rendition of business history .
" From Adam Smith onward , " he declares , " almost all the great preachers of laissez faire … accepted the need to use the power of the state " to battle monopoly so as not to " throw off basic balances , " whatever that may mean .
In reality , as opposed to Lynn 's theory , from Adams Smith on ( and before that ) , monopoly was always understood as being created by government .
Indeed ,
The Wealth of Nations was a critique of mercantilism , the system of state - sponsored monopolies , protectionism , and monetary superstition that plagued European economies at the time ( 1776 ) .
Lynn gets Adam Smith completely backwards .
For example , in the famous passage in The Wealth of Nations where Smith remarks that businessmen " seldom meet , even in merriment , " where the conversation does not turn into some sort of rhetorical conspiracy against the public , in the very next sentence he says that any laws to prevent such meetings would be inconsistent with liberty and justice .
He was not a trust buster , as Lynn would have us believe .
Moving on to paragraph two , Lynn complains that the Reagan administration " eviscerated America 's century - long tradition of antitrust enforcement … "
Tell that to Bill Gates and other victims of the federal government 's nonstop persecutions of successful businesses under the guise of antitrust .
Lynn seems oblivious to the easily discovered fact that the budget of the US Federal Trade Commission is more than triple what it was in the last year of the Reagan administration ; that there are still thousands of private antitrust lawsuits filed every year , and that growing armies of government bureaucrats , always seeking to justify their existence and expand their budgets , are employed not only by the FTC but also by the Antitrust Division of the US Department of Justice and by state attorneys general , who also regulate " monopoly . "
Lynn , whose resume identifies him as a business consultant , blames General Motors 's current economic woes on " intense competition " while ignoring the role of labor unions and massive government regulation in destroying one of America 's great corporations .
He is in a panic over the fact that there is " consolidation " in the iron ore and glass container industries , and the fact that Nike and Adidas " split a 60 percent share of the global market " for sneakers .
In doing so he ignores the past half century of research — and experience — on and with corporate mergers .
Beginning in the 1960s economists began to discover the old learning that " industrial consolidation " is typically caused by the fact that in many industries there are simply one or a few firms that are just better than the others at serving the consumers .
This was widely understood at the time the first federal antitrust law , the Sherman Antitrust Act of 1890 , was passed , and is why virtually the entire economics profession was against it ( see Thomas J. DiLorenzo and Jack High , " Antitrust and Competition , Historically Considered , " Economic Inquiry , July 1988 ) .
By the early 1980s literally hundreds of peer - reviewed journal articles and books on the subject could be cited by Yale Brozen in his landmark book , Concentration , Mergers , and Public Policy .
Lynn seems oblivious to all of this research .
His only comment on it is to mock a statement by a former University of Chicago law professor who referred to the research as " science . "
Lynn also fails to understand that in a market economy it is the consumer who is in charge , ultimately .
In the absence of government mandates , no business can become " powerful " ( a word that he uses repeatedly ) or profitable unless it can persuade consumers to buy its product , period .
Failing to understand this freshman - level economic lesson leads Lynn to make dozens of silly statements about companies like Wal - Mart that " fence off entire marketplaces " and " issue decrees " to their suppliers ( like " supply us with products that our customers will like " ) .
Wal - Mart has undeniably been a glorious economic blessing for its mostly low - and middle - income customers ; has created hundreds of thousands of new jobs ; has enriched thousands of small business owners who supply its products ; has invented many new and superior management techniques ; and has been a driving force of a large segment of the entire US economy .
In addition to all these benefits , and more , Wal - Mart has also compensated for the government 's assault on competition .
This assault has taken the form of anti-corporate takeover legislation and regulation .
During the late 1980s and 1990s dozens of states passed laws that made it more difficult for corporate takeovers to occur .
They were the result of lobbying efforts by corporate executives who wanted legal protection from competition for their own jobs .
The essence of the " market for corporate control " is that if a team of corporate executives is mismanaging a company , being lax in their work ethic , and generally causing the company to be " undervalued " and therefore less profitable than it could be , groups of investors can challenge that management through proxy battles and other means of acquiring ownership .
If successful , a takeover will throw out the incompetent managers and replace them with a better team .
It does n't always work out that way , since no one is omniscient , but the market for corporate control is nevertheless an important free - market institution that serves to greatly benefit customers , employees , and shareholders by encouraging efficiency in business operations .
All of those laws and regulations that handicapped the market for corporate control weakened this important element of the competitive process , rendering many American corporations less efficient and less competitive on international markets than they could be .
Enter Wal - Mart .
One thing Wal - Mart is known for is demanding that its suppliers follow a similar business model to its own , which involves a no - stone - left - unturned approach to cost cutting .
If you want to sell a zillion items in Wal - Mart stores , Wal - Mart executives will say to their suppliers , then you 'll have to come up with the best price for consumers .
There 's always room for improvement in that regard through human initiative and imagination .
This , in effect , replaces the competitive pressures on many American corporations that were taken away or watered down through the government 's anti-takeover legislation .
But to the economically misinformed like Barry C. Lynn , such " pressure " is an unequivocally bad thing .
He sheds crocodile tears for the poor , poor , Coca - Cola Company which was " forced " to " meet Wal - Mart 's decree " regarding the quality of its products sold in Wal - Mart stores .
Kraft was supposedly forced to " swallow " costs and " tear itself to pieces . "
Well , not exactly .
Costs can be reduced in order to increase profit margins .
Ask the incredibly successful Japanese automobile manufacturers .
Any kind of competition is a bad thing , according to Barry C. Lynn , who attempts to portray himself as a champion of competition .
When Wal - Mart came up with its own brands of products that competed with Proctor and Gamble products , poor , poor Proctor and Gamble was " beat … into submission . "
And what did Procter and Gamble " submit " to ?
Offering consumers better and cheaper products , that 's what .
That 's a no - no according to Lynn .
Lynn is frustrated that , at least statutorily and rhetorically , the antitrust laws are supposed " to protect only the consumer . "
He wants the laws to " protect " people like some of his business consulting clients who have a hard time competing in the market place with their high - priced and inferior products .
It is certainly true that antitrust regulation has in the past been used as a protectionist device by punishing firms for being too good at pleasing consumers , thereby taking business away from economically inferior but politically connected competitors .
Indeed , from the very beginning antitrust has been a protectionist racket ( see Thomas J. DiLorenzo , " The Origins of Antitrust : An Interest - Group Perspective , " International Review of Law and Economics , June 1985 ; Dominick Armentano , Antitrust and Monopoly : Anatomy of a Policy Failure ; and Fred McChesney and William Shughart , The Causes and Consequences of Antitrust : A Public - Choice Perspective ) .
It has been a tool of mercantilism , the very system that Adam Smith railed against in The Wealth of Nations .
The thoroughly confused Mr. Lynn , however , thinks that Smith actually advocated this very system !
Lynn points to the worst examples of governmental tyranny exercised through antitrust regulation to argue , effectively , that we need more such tyranny .
Not only does he speak wistfully of the " good old days " when antitrust laws would be used to punish business firms from cutting their costs and prices and improving their products so as to " protect " price - gouging merchants with inferior products from competition ; he also praises the heavy - handed destruction of property rights by the state in other ways .
" The Justice Department routinely used antitrust suits to force high - tech firms to share the technologies they had developed " with their competitors , he declares .
He makes no mention of the injustice of forcing someone to " share " his private property with others , nor does he seem aware of the fact that such " sharing " will destroy incentives to invest in such technology in the first place .
It is Lynn who advocates heavy - handed , fascist - style regulation and regimentation of industry by the state , including the " break up " of Wal - Mart and other successful corporations , yet in fine Orwellian fashion he refers to these free - market success stories as resembling " the Soviet Union in 1950 " with " a certain Stalinist flair . "
He makes such stupid remarks because of his fundamental misunderstanding that Wal - Mart — or any other private business — has no " power " at all to coerce anyone to do anything .
They can only hope to succeed by persuasion ; it is the state that has a legal monopoly of coercion that it every so often uses in Stalinesque ways , including many of the ways that are recommended by Lynn .
This essay is a chapter from Murray Rothbard ’s For A New Liberty .
“ Isolationism , ” Left and Right
“ Isolationism " was coined as a smear term to apply to opponents of American entry into World War II .
Since the word was often applied through guilt - by - association to mean pro-Nazi , “ isolationist ” took on a “ right wing ” as well as a generally negative flavor .
If not actively pro-Nazi , “ isolationists ” were at the very least narrow - minded ignoramuses ignorant of the world around them , in contrast to the sophisticated , worldly , caring “ internationalists ” who favored American crusading around the globe .
In the last decade , of course , antiwar forces have been considered “ leftists , ” and interventionists from Lyndon Johnson to Jimmy Carter and their followers have constantly tried to pin the “ isolationist ” or at least “ neoisolationist ” label on today ’s left wing .
Left or right ?
During World War I , opponents of the war were bitterly attacked , just as now , as “ leftists , ” even though they included in their ranks libertarians and advocates of laissez - faire capitalism .
In fact , the major center of opposition to the American war with Spain and the American war to crush the Philippine rebellion at the turn of the century was laissez - faire liberals , men like the sociologist and economist William Graham Sumner , and the Boston merchant Edward Atkinson , who founded the “ Anti-Imperialist League . ”
Furthermore , Atkinson and Sumner were squarely in the great tradition of the classical English liberals of the eighteenth and nineteenth centuries , and in particular such laissez - faire “ extremists ” as Richard Cobden and John Bright of the “ Manchester School . ”
Cobden and Bright took the lead in vigorously opposing every British war and foreign political intervention of their era and for his pains Cobden was known not as an “ isolationist ” but as the “ International Man . ” 1
Until the smear campaign of the late 1930s , opponents of war were considered the true “ internationalists , ” men who opposed the aggrandizement of the nation - state and favored peace , free trade , free migration and peaceful cultural exchanges among peoples of all nations .
Foreign intervention is “ international ” only in the sense that war is international : coercion , whether the threat of force or the outright movement of troops , will always cross frontiers between one nation and another .
“ Isolationism ” has a right - wing sound ; “ neutralism ” and “ peaceful coexistence ” sound leftish .
But their essence is the same : opposition to war and political intervention between countries .
This has been the position of antiwar forces for two centuries , whether they were the classical liberals of the eighteenth and nineteenth centuries , the “ leftists ” of World War I and the Cold War , or the “ rightists ” of World War II .
In very few cases have these anti-interventionists favored literal “ isolation ” : what they have generally favored is political nonintervention in the affairs of other countries , coupled with economic and cultural internationalism in the sense of peaceful freedom of trade , investment , and interchange between the citizens of all countries .
And this is the essence of the libertarian position as well .
Limiting Government
Libertarians favor the abolition of all States everywhere , and the provision of legitimate functions now supplied poorly by governments ( police , courts , etc. ) by means of the free market .
Libertarians favor liberty as a natural human right , and advocate it not only for Americans but for all peoples .
In a purely libertarian world , therefore , there would be no “ foreign policy ” because there would be no States , no governments with a monopoly of coercion over particular territorial areas .
But since we live in a world of nation - states , and since this system is hardly likely to disappear in the near future , what is the attitude of libertarians toward foreign policy in the current State - ridden world ?
For a New Liberty : The ... Rothbard , Murray N. Best Price : $ 20.50 Buy New $ 66.60 ( as of 07:15 EST - Details )
Pending the dissolution of States , libertarians desire to limit , to whittle down , the area of government power in all directions and as much as possible .
We have already demonstrated how this principle of “ de- statizing ” might work in various important “ domestic ” problems , where the goal is to push back the role of government and to allow the voluntary and spontaneous energies of free persons full scope through peaceful interaction , notably in the free - market economy .
In foreign affairs , the goal is the same : to keep government from interfering in the affairs of other governments or other countries .
Political “ isolationism ” and peaceful coexistence  refraining from acting upon other countries  is , then , the libertarian counterpart to agitating for laissez - faire policies at home .
The idea is to shackle government from acting abroad just as we try to shackle government at home .
Isolationism or peaceful coexistence is the foreign policy counterpart of severely limiting government at home .
Specifically , the entire land area of the world is now parcelled out among various States , and each land area is ruled by a central government with monopoly of violence over that area .
In relations between States , then , the libertarian goal is to keep each of these States from extending their violence to other countries , so that each State ’s tyranny is at least confined to its own bailiwick .
For the libertarian is interested in reducing as much as possible the area of State aggression against all private individuals .
The only way to do this , in international affairs , is for the people of each country to pressure their own State to confine its activities to the area it monopolizes and not to attack other States or aggress against their subjects .
In short , the objective of the libertarian is to confine any existing State to as small a degree of invasion of person and property as possible .
And this means the total avoidance of war .
The people under each State should pressure “ their ” respective States not to attack one another , or , if a conflict should break out , to withdraw from it as quickly as physically possible .
Let us assume for the moment , a world with two hypothetical countries : Graustark and Belgravia .
Each is ruled by its own State .
What happens if the government of Graustark invades the territory of Belgravia ?
From the libertarian point of view two evils immediately occur .
First , the Graustark Army begins to slaughter innocent Belgravian civilians , persons who are not implicated in whatever crimes the Belgravian government might have committed .
War , then , is mass murder , and this massive invasion of the right to life , of self - ownership , of numbers of people is not only a crime but , for the libertarian , the ultimate crime .
Second , since all governments obtain their revenue from the thievery of coercive taxation , any mobilization and launching of troops inevitably involve an increase in tax - coercion in Graustark .
For both reasons  because inter-State wars inevitably involve both mass murder and an increase in tax - coercion , the libertarian opposes war .
Period .
It was not always thus .
During the Middle Ages , the scope of wars was far more limited .
Before the rise of modern weapons , armaments were so limited that governments could  and often did  strictly confine their violence to the armies of the rival governments .
It is true that tax - coercion increased , but at least there was no mass murder of the innocents .
Not only was firepower low enough to confine violence to the armies of the contending sides , but in the premodern era there was no central nation - state that spoke inevitably in the name of all inhabitants of a given land area .
If one set of kings or barons fought another , it was not felt that everyone in the area must be a dedicated partisan .
Moreover , instead of mass conscript armies enslaved to their respective rulers , armies were small bands of hired mercenaries .
Often , a favorite sport for the populace was to observe a battle from the safety of the town ramparts , and war was regarded as something of a sporting match .
But with the rise of the centralizing State and of modern weapons of mass destruction , the slaughter of civilians , as well as conscript armies , have become a vital part of inter-State warfare .
Suppose that despite possible libertarian opposition , war has broken out .
Clearly , the libertarian position should be that , so long as the war continues , the scope of assault upon innocent civilians must be diminished as much as possible .
Old - fashioned international law had two excellent devices to accomplish this goal : the “ laws of war , ” and the “ laws of neutrality ” or “ neutrals ’ rights . ”
The laws of neutrality were designed to keep any war confined to the warring States themselves , without attacks upon nonwarring States and , particularly , aggression against the peoples of other nations .
Hence the importance of such ancient and now almost forgotten American principles as “ freedom of the seas ” or severe limitations upon the rights of warring States to blockade neutral trade with the enemy country .
In short , the libertarian tries to induce neutral States to remain neutral in any inter-State conflict , and to induce the warring States to observe fully the rights of neutral citizens .
The “ laws of war , ” for their part , were designed to limit as much as possible the invasion by warring States of the rights of civilians in their respective countries .
As the British jurist F. J. P. Veale put it :
The fundamental principle of this code was that hostilities between civilized peoples must be limited to the armed forces actually engaged … .
It drew a distinction between combatants and non-combatants by laying down that the sole business of the combatants is to fight each other and , consequently , that non-combatants must be excluded from the scope of military operations .
2
In the modified form of prohibiting the bombardment of all cities not in the front line , this rule held in Western European wars in recent centuries until Britain launched the strategic bombing of civilians in World War II .
Now , of course , the entire concept is scarcely remembered , since the very nature of modern nuclear warfare rests upon the annihilation of civilians .
To return to our hypothetical Graustark and Belgravia , suppose that Graustark has invaded Belgravia , and that a third government , Walldavia , now leaps into the war in order to defend Belgravia against “ Graustarkian aggression . ”
Is this action justifiable ?
Here , indeed , is the germ of the pernicious twentieth - century theory of “ collective security ”  the idea that when one government “ aggresses ” against another , it is the moral obligation of the other governments of the world to band together to defend the “ victimized ” State .
There are several fatal flaws in this concept of collective security against “ aggression . ”
One is that when Walldavia , or any other States , leap into the fray they are themselves expanding and compounding the extent of the aggression , because they are ( 1 ) unjustly slaughtering masses of Graustarkian civilians , and ( 2 ) increasing tax - coercion over Walldavian citizens .
Furthermore , ( 3 ) in this age when States and subjects are closely identifiable , Walldavia is thereby leaving Walldavian civilians open to retaliation by Graustarkian bombers or missiles .
Thus , entry into the war by the Walldavian government puts into jeopardy the very lives and properties of Walldavian citizens which the government is supposed to be protecting .
Finally , ( 4 ) conscription - enslavement of Walldavian citizens will usually intensify .
If this kind of “ collective security ” should really be applied on a worldwide scale , with all the “ Walldavias ” rushing into every local conflict and escalating them , every local skirmish would soon be raised into a global conflagration .
There is another crucial flaw in the collective security concept .
The idea of entering a war in order to stop “ aggression ” is clearly an analogy from aggression by one individual upon another .
Smith is seen to be beating up Jones  aggressing against him .
Nearby police then rush to the defense of the victim Jones ; they are using “ police action ” to stop aggression .
It was in pursuit of this myth , for example , that President Truman persisted in referring to American entry into the Korean war as a “ police action , ” a collective UN effort to repel “ aggression . ”
But “ aggression ” only makes sense on the individual Smith - Jones level , as does the very term “ police action . ”
These terms make no sense whatever on an inter-State level .
First , we have seen that governments entering a war thereby become aggressors themselves against innocent civilians ; indeed , become mass murderers .
The correct analogy to individual action would be : Smith beats up Jones , the police rush in to help Jones , and in the course of trying to apprehend Smith , the police bomb a city block and murder thousands of people , or spray machine - gun fire into an innocent crowd .
This is a far more accurate analogy , for that is what a warring government does , and in the twentieth century it does so on a monumental scale .
But any police agency that behaves this way itself becomes a criminal aggressor , often far more so than the original Smith who began the affair .
But there is yet another fatal flaw in the analogy with individual aggression .
When Smith beats up Jones or steals his property we can identify Smith as an aggressor upon the personal or property right of his victim .
But when the Graustarkian State invades the territory of the Belgravian State , it is impermissible to refer to “ aggression ” in an analogous way .
For the libertarian , no government has a just claim to any property or “ sovereignty ” right in a given territorial area .
The Belgravian State ’s claim to its territory is therefore totally different from Mr. Jones ’ claim to his property ( although the latter might also , on investigation , turn out to be the illegitimate result of theft ) .
No State has any legitimate property ; all of its territory is the result of some kind of aggression and violent conquest .
Hence the Graustarkian State ’s invasion is necessarily a battle between two sets of thieves and aggressors : the only problem is that innocent civilians on both sides are being trampled upon .
Ex America : The 50th A... Garrett , Garet Best Price : $ 2.14 Buy New $ 2.81 ( as of 11:13 EST - Details )
Aside from this general caveat on governments , the so - called “ aggressor ” State often has a quite plausible claim on its “ victim ” ; plausible , that is , within the context of the nation - state system .
Suppose that Graustark has crossed the Belgravian border because Belgravia had , a century earlier , invaded Graustark and seized its northeastern provinces .
The inhabitants of these provinces are culturally , ethnically , and linguistically Graustarkian .
Graustark now invades in order to be reunited at last with its fellow Graustarkians .
In this situation , by the way , the libertarian , while condemning both governments for making war and killing civilians , would have to side with Graustark as having the more just , or the less unjust , claim .
Let us put it this way :
In the unlikely event that the two countries could return to premodern warfare , with ( a ) weapons limited so that no civilians were injured in their persons or property ; ( b ) volunteer rather than conscript armies ; and also ( c ) financing by voluntary methods instead of taxation ; the libertarian could then , given our context , side unreservedly with Graustark .
Of all the recent wars , none has come closer  though not completely so  to satisfying these three criteria for a “ just war ” than the Indian war of late 1971 for the liberation of Bangla Desh .
The government of Pakistan had been created as a last terrible legacy of Imperial Britain to the Indian subcontinent .
In particular , the nation of Pakistan consisted of imperial rule by the Punjabis of West Pakistan over the more numerous and productive Bengalis of East Pakistan ( and also over the Pathans of the North - West Frontier ) .
The Bengalis had long been yearning for independence from their imperial oppressors ; in early 1971 , parliament was suspended as a result of Bengali victory in the elections ; from then on , Punjabi troops systematically slaughtered the civilian Bengal population .
Indian entry into the conflict aided the popular Bengali resistance forces of the Mukhti Bahini .
While taxes and conscription were , of course , involved , the Indian armies did not use their weapons against Bengali civilians ; on the contrary , here was a genuine revolutionary war of the Bengali public against a Punjabi occupying State .
Only Punjabi soldiers were on the receiving end of Indian bullets .
This example points up another characteristic of warfare : that revolutionary guerrilla war can be far more consistent with libertarian principles than any inter-State war .
By the very nature of their activities , guerrillas defend the civilian population against the depredations of a State ; hence , guerrillas , inhabiting as they do the same country as the enemy State , cannot use nuclear or other weapons of mass destruction .
Further : since guerrillas rely for victory on the support and aid of the civilian population , they must , as a basic part of their strategy , spare civilians from harm and pinpoint their activities solely against the State apparatus and its armed forces .
Hence , guerrilla war returns us to the ancient and honorable virtue of pinpointing the enemy and sparing innocent civilians .
And guerrillas , as part of their quest for enthusiastic civilian support , often refrain from conscription and taxation and rely on voluntary support for men and matriel .
The libertarian qualities of guerrilla warfare reside only on the revolutionary side ; for the counterrevolutionary forces of the State , it is quite a different story .
While the State cannot go to the length of “ nuking ” its own subjects , it does , of necessity , rely primarily on campaigns of mass terror : killing , terrorizing , and rounding up the mass of civilians .
Since guerrillas , to be successful , must be supported by the bulk of the population , the State , in order to wage its war , must concentrate on destroying that population , or must herd masses of civilians into concentration camps in order to separate them from their guerrilla allies .
This tactic was used by the Spanish general , “ Butcher ” Weyler , against the Cuban rebels in the 1890s , was continued by the American troops in the Philippines , and by the British in the Boer War , and continues to be used down to the recent ill - fated “ strategic hamlet ” policy in South Vietnam .
The libertarian foreign policy , then , is not a pacifist policy .
We do not hold , as do the pacifists , that no individual has the right to use violence in defending himself against violent attack .
What we do hold is that no one has the right to conscript , tax , or murder others , or to use violence against others in order to defend himself .
Since all States exist and have their being in aggression against their subjects and in the acquiring of their present territory , and since inter-State wars slaughter innocent civilians , such wars are always unjust  although some may be more unjust than others .
Guerrilla warfare against States at least has the potential for meeting libertarian requirements by pinpointing the guerrilla ’s battle against State officials and armies , and by their use of voluntary methods to staff and finance their struggle .
American Foreign Policy
We have seen that libertarians have as their prime responsibility the focussing on the invasions and aggressions of their own State .
The libertarians of Graustark must center their attentions on attempting to limit and whittle down the Graustark State , the Walldavian libertarians must try to check the Walldavian State , and so on .
In foreign affairs , the libertarians of every country must press their government to refrain from war and foreign intervention , and to withdraw from any war in which they may be engaged .
If for no other reason , then , libertarians in the United States must center their critical attention on the imperial and warlike activities of their own government .
But there are still other reasons for libertarians here to focus upon the invasions and foreign interventions of the United States .
For empirically , taking the twentieth century as a whole , the single most warlike , most interventionist , most imperialist government has been the United States .
Such a statement is bound to shock Americans , subject as we have been for decades to intense propaganda by the Establishment on the invariable saintliness , peaceful intentions , and devotion to justice of the American government in foreign affairs .
The expansionist impulse of the American State began to take increasing hold in the late nineteenth century , leaping boldly overseas with America ’s war against Spain , dominating Cuba , grabbing Puerto Rico and the Philippines , and brutally suppressing a Filipino rebellion for independence .
The imperial expansion of the United States reached full flower in World War I , when President Woodrow Wilson ’s leap into the fray prolonged the war and the mass slaughter , and unwittingly bred the grisly devastation that led directly to the Bolshevik triumph in Russia and the Nazi victory in Germany .
It was Wilson ’s particular genius to supply a pietistic and moralistic cloak for a new American policy of worldwide intervention and domination , a policy of trying to mould every country in the American image , suppressing radical or Marxist regimes on the one hand and old - fashioned monarchist governments on the other .
It was Woodrow Wilson who was to fix the broad features of American foreign policy for the rest of this century .
Almost every succeeding President has considered himself a Wilsonian and followed his policies .
It was no accident that both Herbert Hoover and Franklin D. Roosevelt  so long thought of as polar opposites  played important roles in America ’s first global crusade of World War I , and that both men harked back to their experience in World War I intervention and planning as the guideposts for their future foreign and domestic policies .
And it was one of Richard Nixon ’s first acts as President to place Woodrow Wilson ’s picture upon his desk .
In the name of “ national self - determination ” and “ collective security ” against aggression , the American government has consistently pursued a goal and a policy of world domination and of the forcible suppression of any rebellion against the status quo anywhere in the world .
In the name of combatting “ aggression ” everywhere  of being the world ’s “ policeman ”  it has itself become a great and continuing aggressor .
Anyone who balks at such a description of American policy should simply consider what the typical American reaction is to any domestic or foreign crisis anywhere on the globe , even at some remote site that cannot by any stretch of the imagination be considered a direct or even indirect threat to the lives and security of the American people .
The military dictator of “ Bumblestan ” is in danger ; perhaps his subjects are tired of being exploited by him and his colleagues .
The United States then becomes gravely concerned ; articles by journalists friendly to the State Department or the Pentagon spread the alarm about what might happen to the “ stability ” of Bumblestan and its surrounding area if the dictator should be toppled .
For it so happens that he is a “ pro-American ” or “ pro- Western ” dictator : that is , he is one of “ ours ” instead of “ theirs . ”
Millions or even billions of dollars ’ worth of military and economic aid are then rushed by the United States to prop up the Bumblestani field marshal .
If “ our ” dictator is saved , then a sigh of relief is heaved , and congratulations are passed around at the saving of “ our ” State .
The continuing or intensified oppression of the American taxpayer and of the Bumblestanian citizens are , of course , not considered in the equation .
Or if it should happen that the Bumblestani dictator may fall , hysteria might hit the American press and officialdom for the moment .
But then , after a while , the American people seem to be able to live their lives after “ losing ” Bumblestan about as well as before  perhaps even better , if it means a few billion less in foreign aid extracted from them to prop up the Bumblestani State .
If it is understood and expected , then , that the United States will try to impose its will on every crisis everywhere in the world , then this is clear indication that America is the great interventionary and imperial power .
The one place where the United States does not now attempt to work its will is the Soviet Union and the Communist countries  but , of course , it has tried to do so in the past .
Woodrow Wilson , along with Britain and France , tried for several years to crush bolshevism in the cradle , with American and Allied troops being sent to Russia to aid the Czarist ( “ White ” ) forces in trying to defeat the Reds .
After World War II , the United States tried its best to oust the Soviets from Eastern Europe , and succeeded in pushing them out of Azerbaijan in northwestern Iran .
It also helped the British to crush a Communist regime in Greece .
The United States tried its best to maintain Chiang Kai - shek ’s dictatorial rule in China , flying many of Chiang ’s troops northward to occupy Manchuria as the Russians pulled out after World War II ; and it continues to prevent the Chinese from occupying their offshore islands , Quemoy and Matsu .
After virtually installing the dictator Batista in Cuba , the United States tried desperately to oust the Communist Castro regime , by actions ranging from the CIA - engineered Bay of Pigs invasion to CIA - Mafia attempts to assassinate Castro .
Of all America ’s recent wars , certainly the most traumatic for Americans and their attitude toward foreign policy was the Vietnam war .
America ’s imperial war in Vietnam was , indeed , a microcosm of what has been tragically wrong with American foreign policy in this century .
American intervention in Vietnam did not begin , as most people believe , with Kennedy or Eisenhower or even Truman .
It began no later than the date when the American government , under Franklin Roosevelt , on November 26 , 1941 , delivered a sharp and insulting ultimatum to Japan to get its armed forces out of China and Indochina , from what would later be Vietnam .
This U.S. ultimatum set the stage inevitably for Pearl Harbor .
Engaged in a war in the Pacific to oust Japan from the Asian continent , the United States and its OSS ( predecessor to the CIA ) favored and aided Ho Chi Minh ’s Communist - run national resistance movement against the Japanese .
After World War II , the Communist Viet Minh was in charge of all northern Vietnam .
But then France , previously the imperial ruler of Vietnam , betrayed its agreement with Ho and massacred Viet Minh forces .
In this double cross , France was aided by Britain and the United States .
When the French lost to the reconstituted Viet Minh guerrilla movement under Ho , the United States endorsed the Geneva agreement of 1954 , under which Vietnam was to be quickly reunited as one nation .
For it was generally recognized that the postwar occupation divisions of the country into North and South were purely arbitrary and merely for military convenience .
But , having by trickery managed to oust the Viet Minh from the southern half of Vietnam , the United States proceeded to break the Geneva agreement and to replace the French and their puppet Emperor Bao Dai by its own clients , Ngo Dinh Diem and his family , who were installed in dictatorial rule over South Vietnam .
When Diem became an embarrassment , the CIA engineered a coup to assassinate Diem and replace him with another dictatorial regime .
To suppress the Viet Cong , the Communist - led national independence movement in the South , the United States rained devastation on South and North Vietnam alike  bombing and murdering a million Vietnamese and dragging half a million American soldiers into the quagmires and jungles of Vietnam .
Egalitarianism as a Re ... Murray N. Rothbard Best Price : $ 3.44 Buy New $ 8.95 ( as of 07:55 EST - Details )
Throughout the tragic Vietnamese conflict , the United States maintained the fiction that it was a war of “ aggression ” by the Communist North Vietnamese State against a friendly and “ pro-Western ” ( whatever that term may mean ) South Vietnamese State which had called for our aid .
Actually , the war was really a doomed but lengthy attempt by an imperial United States to suppress the wishes of the great bulk of the Vietnamese population and to maintain unpopular client dictators in the southern half of the country , by virtual genocide if necessary .
Americans are not accustomed to applying the term “ imperialism ” to the actions of the U.S. government , but the word is a particularly apt one .
In its broadest sense , imperialism may be defined as aggression by State A against the people of country B , followed by the subsequent coercive maintenance of such foreign rule .
In our example above , the permanent rule by the Graustark State over formerly northeastern Belgravia would be an example of such imperialism .
But imperialism does not have to take the form of direct rule over the foreign population .
In the twentieth century , the indirect form of “ neoimperialism ” has increasingly replaced the old - fashioned direct kind ; it is more subtle and less visible but no less effective a form of imperialism .
In this situation , the imperial State rules the foreign population through its effective control over native client - rulers .
This version of modern Western imperialism has been trenchantly defined by the libertarian historian Leonard Liggio :
The imperialist power of the Western countries … imposed on the world ’s peoples a double or reinforced system of exploitation  imperialism  by which the power of the Western governments maintains the local ruling class in exchange for the opportunity to superimpose Western exploitation upon existing exploitation by local states .
3
This view of America as a long - time imperial world power has taken hold among historians in recent years as the result of compelling and scholarly work by a distinguished group of New Left revisionist historians inspired by Professor William Appleman Williams .
But this was also the view of conservative as well as classical liberal “ isolationists ” during World War II and in the early days of the Cold War.4
Isolationist Criticisms
The last anti-interventionist and anti-imperialist thrust of the old conservative and classical liberal isolationists came during the Korean War .
Conservative George Morgenstern , chief editorial writer of the Chicago Tribune and author of the first revisionist book on Pearl Harbor , published an article in the right - wing Washington weekly Human Events , which detailed the grisly imperialist record of the United States government from the Spanish - American War down to Korea .
Morgenstern noted that the “ exalted nonsense ” by which President McKinley had justified the war against Spain was “ familiar to anyone who later attended the evangelical rationalizations of Wilson for intervening in the European war , of Roosevelt promising the millennium , …of Eisenhower treasuring the ‘ crusade in Europe ’ that somehow went sour , or of Truman , Stevenson , Paul Douglas or the New York Times preaching the holy war in Korea . ”
5
In a widely noted speech at the height of the American defeat in North Korea at the hands of the Chinese in late 1950 , conservative isolationist Joseph P. Kennedy called for U.S. withdrawal from Korea .
Kennedy proclaimed that “ I naturally opposed Communism but I said if portions of Europe or Asia wish to go Communistic or even have Communism thrust upon them , we can not stop it . ”
The result of the Cold War , the Truman Doctrine , and the Marshall Plan , Kennedy charged , was disaster  a failure to purchase friends and a threat of land war in Europe or Asia .
Kennedy warned that :
… half of this world will never submit to dictation by the other half … .
What business is it of ours to support French colonial policy in Indo - China or to achieve Mr. Syngman Rhee ’s concepts of democracy in Korea ?
Shall we now send the Marines into the mountains of Tibet to keep the Dalai Lama on his throne ?
Economically , Kennedy added , we have been burdening ourselves with unnecessary debts as a consequence of Cold War policy .
If we continue to weaken our economy “ with lavish spending either on foreign nations or in foreign wars , we run the danger of precipitating another 1932 and of destroying the very system which we are trying to save .
Kennedy concluded that the only rational alternative for America is to scrap the Cold War foreign policy altogether : “ to get out of Korea ” and out of Berlin and Europe .
The United States could not possibly contain Russian armies if they chose to march through Europe , and if Europe should then turn Communist , Communism “ may break of itself as a unified force … .
The more people that it will have to govern , the more necessary it becomes for those who govern to justify themselves to those being governed .
The more peoples that are under its yoke , the greater are the possibilities of revolt . ”
And here , at a time when cold warriors were forecasting a world Communist monolith as an eternal fact of life , Joseph Kennedy cited Marshall Tito as pointing the way for the eventual breakup of the Communist world : thus , “ Mao in China is not likely to take his orders from Stalin… . ”
Kennedy realized that “ this policy will , of course , be criticized as appeasement .
[ But ] … is it appeasement to withdraw from unwise commitments … .
If it is wise in our interest not to make commitments that endanger our security , and this is appeasement , then I am for appeasement . "
Kennedy concluded that “ the suggestions I make [ would ] conserve American lives for American ends , not waste them in the freezing hills of Korea or on the battlescarred plains of Western Germany . ”
6
One of the most trenchant and forceful attacks on American foreign policy to emerge from the Korean War was leveled by the veteran classical liberal journalist , Garet Garrett .
Garrett began his pamphlet , The Rise of Empire ( 1952 ) , by declaring , “ We have crossed the boundary that lies between Republic and Empire . ”
Explicitly linking this thesis with his notable pamphlet of the 1930s , The Revolution Was , which had denounced the advent of executive and statist tyranny within the republican form under the New Deal , Garrett once more saw a “ revolution within the form ” of the old constitutional republic .
Garrett , for example , called Truman ’s intervention in Korea without a declaration of war a “ usurpation ” of congressional power .
In his pamphlet , Garrett adumbrated the criteria , the hallmarks for the existence of Empire .
The first is the dominance of the executive power , a dominance reflected in the President ’s unauthorized intervention in Korea .
The second is the subordination of domestic to foreign policy ; the third , the “ ascendancy of the military mind ” ; the fourth , a “ system of satellite nations ” ; and the fifth , “ a complex of vaunting and fear , ” a vaunting of unlimited national might combined with a continuing fear , fear of the enemy , of the “ barbarian , ” and of the unreliability of the satellite allies .
Garrett found each one of these criteria to apply fully to the United States .
Having discovered that the United States had developed all the hallmarks of empire , Garrett added that the United States , like previous empires , feels itself to be “ a prisoner of history . ”
For beyond fear lies “ collective security , ” and the playing of the supposedly destined American role upon the world stage .
Garrett concluded :
It is our turn .
Our turn to do what ?
Our turn to assume the responsibilities of moral leadership in the world ,
Our turn to maintain a balance of power against the forces of evil everywhere  in Europe and Asia and Africa , in the Atlantic and in the Pacific , by air and by sea  evil in this case being the Russian barbarian .
Our turn to keep the peace of the world .
Our turn to save civilization .
Our turn to serve mankind .
But this is the language of Empire .
The Roman Empire never doubted that it was the defender of civilization .
Its good intentions were peace , law and order .
The Spanish Empire added salvation .
The British Empire added the noble myth of the white man ’s burden .
We have added freedom and democracy .
Yet the more that may be added to it the more it is the same language still .
A language of power .7
War As the Health of the State
Many libertarians are uncomfortable with foreign policy matters and prefer to spend their energies either on fundamental questions of libertarian theory or on such “ domestic ” concerns as the free market or privatizing postal service or garbage disposal .
Yet an attack on war or a warlike foreign policy is of crucial importance to libertarians .
There are two important reasons .
One has become a clich , but is all too true nevertheless : the overriding importance of preventing a nuclear holocaust .
To all the long - standing reasons , moral and economic , against an interventionist foreign policy has now been added the imminent , ever - present threat of world destruction .
If the world should be destroyed , all the other problems and all the other isms  socialism , capitalism , liberalism , or libertarianism  would be of no importance whatsoever .
Hence the prime importance of a peaceful foreign policy and of ending the nuclear threat .
The other reason is that , apart from the nuclear menace , war , in the words of the libertarian Randolph Bourne , “ is the health of the State . ”
War has always been the occasion of a great  and usually permanent  acceleration and intensification of State power over society .
War is the great excuse for mobilizing all the energies and resources of the nation , in the name of patriotic rhetoric , under the aegis and dictation of the State apparatus .
It is in war that the State really comes into its own : swelling in power , in number , in pride , in absolute dominion over the economy and the society .
Society becomes a herd , seeking to kill its alleged enemies , rooting out and suppressing all dissent from the official war effort , happily betraying truth for the supposed public interest .
Society becomes an armed camp , with the values and the morals  as the libertarian Albert Jay Nock once phrased it  of an “ army on the march . ”
It is particularly ironic that war always enables the State to rally the energies of its citizens under the slogan of helping it to defend the country against some bestial outside menace .
For the root myth that enables the State to wax fat off war is the canard that war is a defense by the State of its subjects .
The facts , however , are precisely the reverse .
For if war is the health of the State , it is also its greatest danger .
A State can only “ die ” by defeat in war or by revolution .
In war , therefore , the State frantically mobilizes its subjects to fight for it against another State , under the pretext that it is fighting to defend them .
8
In the history of the United States , war has generally been the main occasion for the often permanent intensification of the power of the State over society .
In the War of 1812 against Great Britain , as we have indicated above , the modern inflationary fractional - reserve banking system first came into being on a large scale , as did protective tariffs , internal federal taxation , and a standing army and navy .
And a direct consequence of the wartime inflation was the reestablishment of a central bank , the Second Bank of the United States .
Virtually all of these statist policies and institutions continued permanently after the war was over .
The Civil War and its virtual one - party system led to the permanent establishment of a neomercantilist policy of Big Government and the subsidizing of various big business interests through protective tariffs , huge land grants and other subsidies to railroads , federal excise taxation , and a federally controlled banking system .
It also brought the first imposition of federal conscription and an income tax , setting dangerous precedents for the future .
World War I brought the decisive and fateful turn from a relatively free and laissez - faire economy to the present system of corporate state monopoly at home and permanent global intervention abroad .
The collectivist economic mobilization during the war , headed by War Industries Board Chairman Bernard Baruch , fulfilled the emerging dream of big business leaders and progressive intellectuals for a cartelized and monopolized economy planned by the federal government in cozy collaboration with big business leadership .
And it was precisely this wartime collectivism that nurtured and developed a nationwide labor movement that would eagerly take its place as junior partner in the new corporate State economy .
This temporary collectivism , furthermore , served as a permanent beacon and model for big business leaders and corporatist politicians as the kind of permanent peacetime economy that they would like to impose on the United States .
As food czar , Secretary of Commerce , and later as President , Herbert C. Hoover helped bring this continuing monopolized statist economy into being , and the vision was fulfilled in a recrudescence of wartime agencies and even wartime personnel by Franklin D. Roosevelt ’s New Deal .9 World War I also brought a permanent Wilsonian global intervention abroad , the fastening of the newly imposed Federal Reserve System and a permanent income tax on society , high federal budgets , massive conscription , and intimate connections between economic boom , war contracts , and loans to Western nations .
World War II was the culmination and fulfillment of all these trends : Franklin D. Roosevelt finally fastened upon American life the heady promise of the Wilsonian domestic and foreign program : permanent partnership of Big Government , big business , and big unions ; a continuing and ever - expanding military - industrial complex ; conscription ; continuing and accelerating inflation ; and an endless and costly role as counterrevolutionary “ policeman ” for the entire world .
The Roosevelt - Truman - Eisenhower - Kennedy - Johnson - Nixon - Ford - Carter world ( and there is little substantive difference among any of these administrations ) is “ corporate liberalism , ” the corporate State fulfilled .
It is particularly ironic that conservatives , at least in rhetoric supporters of a free - market economy , should be so complacent and even admiring of our vast military - industrial complex .
There is no greater single distortion of the free market in present - day America .
The bulk of our scientists and engineers has been diverted from basic research for civilian ends , from increasing productivity and the standard of living of consumers , into wasteful , inefficient , and nonproductive military and space boondoggles .
These boondoggles are every bit as wasteful but infinitely more destructive than the vast pyramid building of the Pharaohs .
It is no accident that Lord Keynes ’s economics have proved to be the economics par excellence of the corporate liberal State .
For Keynesian economists place equal approval upon all forms of government spending , whether on pyramids , missiles , or steel plants ; by definition all of these expenditures swell the gross national product , regardless of how wasteful they may be .
It is only recently that many liberals have begun to awaken to the evils of the waste , inflation , and militarism that Keynesian corporate liberalism has brought to America .
As We Go Marching Flynn , John T. Check Amazon for Pricing .
As the scope of government spending  military and civilian alike  has widened , science and industry have been skewed more and more into unproductive goals and highly inefficient processes .
The goal of satisfying consumers as efficiently as possible has been increasingly replaced by the currying of favors by government contractors , often in the form of highly wasteful “ cost - plus ” contracts .
Politics , in field after field , has replaced economics in guiding the activities of industry .
Furthermore , as entire industries and regions of the country have come to depend upon government and military contracts , a huge vested interest has been created in continuing the programs , heedless of whether they retain even the most threadbare excuse of military necessity .
Our economic prosperity has been made to depend on continuing the narcotic of unproductive and antiproductive government spending .10
One of the most perceptive and prophetic critics of America ’s entry into World War II was the classical liberal writer John T. Flynn .
In his As We Go Marching , written in the midst of the war he had tried so hard to forestall , Flynn charged that the New Deal , culminating in its wartime embodiment , had finally established the corporate State that important elements of big business had been seeking since the turn of the twentieth century .
“ The general idea , ” Flynn wrote , was “ to reorder the society by making it a planned and coerced economy instead of a free one , in which business would be brought together into great guilds or an immense corporative structure , combining the elements of self rule and government supervision with a national economic policing system to enforce these decrees … .
This , after all , is not so very far from what business had been talking about … .
” 11
The New Deal had first attempted to create such a new society in the National Recovery Administration and the Agricultural Adjustment Administration , mighty engines of “ regimentation ” hailed by labor and business alike .
Now the advent of World War II had reestablished this collectivist program  “ an economy supported by great streams of debt under complete control , with nearly all the planning agencies functioning with almost totalitarian power under a vast bureaucracy . ”
After the war , Flynn prophesied , the New Deal would attempt to expand this system permanently into international affairs .
He wisely predicted that the great emphasis of vast governmental spending after the war would continue to be military , since this is the one form of government spending to which conservatives would never object , and which workers would also welcome for its creation of jobs .
“ Thus militarism is the one great glamorous public - works project upon which a variety of elements in the community can be brought into agreement .
” 12
Flynn predicted that America ’s postwar policy would be “ internationalist ” in the sense of being imperialist .
Imperialism “ is , of course , international … in the sense that war is international , ” and it will follow from the policy of militarism .
“ We will do what other countries have done ; we will keep alive the fears of our people of the aggressive ambitions of other countries and we will ourselves embark upon imperialistic enterprises of our own . ”
Imperialism will ensure for the United States the existence of perpetual “ enemies , ” of waging what Charles A. Beard was later to call “ perpetual war for perpetual peace . ”
For , Flynn pointed out , “ we have managed to acquire bases all over the world … .
There is no part of the world where trouble can break out where … we cannot claim that our interests are menaced .
Thus menaced there must remain when the war is over a continuing argument in the hands of the imperialists for a vast naval establishment and a huge army ready to attack anywhere or to resist an attack from all the enemies we shall be obliged to have .
” 13
One of the most moving portrayals of the change in American life wrought by World War II was written by John Dos Passos , a lifelong radical and individualist who was pushed from “ extreme left ” to “ extreme right ” by the march of the New Deal .
Dos Passos expressed his bitterness in his postwar novel , The Grand Design :
At home we organized bloodbanks and civilian defense and imitated the rest of the world by setting up concentration camps ( only we called them relocation centers ) and stuffing into them
American citizens of Japanese ancestry … without benefit of habeas corpus …
The President of the United States talked the sincere democrat and so did the members of Congress .
In the Administration there were devout believers in civil liberty .
“ Now we ’re busy fighting a war ; we ’ll deploy all four freedoms later on , ” they said … .
War is a time of Caesars … .
And the American people were supposed to say thank you for the century of the Common Man turned over for relocation behind barbed wire so help him God .
We learned .
There are things we learned to do
but we have not learned , in spite of the Constitution and the Declaration of Independence and the great debates at Richmond and Philadelphia
how to put power over the lives of men into the hands of one man
and to make him use it wisely .
14
Soviet Foreign Policy
In a previous chapter , we have already dealt with the problem of national defense , abstracting from the question of whether the Russians are really hell - bent upon a military attack upon the United States .
Since World War II , American military and foreign policy , at least rhetorically , has been based upon the assumption of a looming threat of Russian attack  an assumption that has managed to gain public approval for global American intervention and for scores of billions in military expenditures .
But how realistic , how well grounded , is this assumption ?
First , there is no doubt that the Soviets , along with all other Marxist - Leninists , would like to replace all existing social systems by Communist regimes .
But such a sentiment , of course , scarcely implies any sort of realistic threat of attack  just as an ill wish in private life can hardly be grounds for realistic expectation of imminent aggression .
On the contrary , Marxism - Leninism itself believes that a victory of communism is inevitable  not on the wings of outside force , but rather from accumulating tensions and “ contradictions ” within each society .
So Marxism - Leninism considers internal revolution ( or , in the current “ Eurocommunist ” version , democratic change ) for installing communism to be inevitable .
At the same time , it holds any coercive external imposition of communism to be at best suspect , and at worst disruptive and counterproductive of genuine organic social change .
Any idea of “ exporting ” communism to other countries on the backs of the Soviet military is totally contradictory to Marxist - Leninist theory .
We are not saying , of course , that Soviet leaders will never do anything contrary to Marxist - Leninist theory .
But to the extent that they act as ordinary rulers of a strong Russian nation - state , the case for an imminent Soviet threat to the United States is gravely weakened .
For the sole alleged basis of such a threat , as conjured up by our cold warriors , is the Soviet Union ’s alleged devotion to Marxist - Leninist theory and to its ultimate goal of world Communist triumph .
If the Soviet rulers were simply to act as Russian dictators consulting only their own nation - state interests , then the entire basis for treating the Soviets as a uniquely diabolic source of imminent military assault crumbles to the ground .
When the Bolsheviks took power in Russia in 1917 , they had given little thought to a future Soviet foreign policy , for they were convinced that Communist revolution would soon follow in the advanced industrial countries of Western Europe .
When such hopes were dashed after the end of World War I , Lenin and his fellow Bolsheviks adopted the theory of “ peaceful coexistence ” as the basic foreign policy for a Communist State .
The idea was this : as the first successful Communist movement , Soviet Russia would serve as a beacon for and supporter of other Communist parties throughout the world .
But the Soviet State qua State would devote itself to peaceful relations with all other countries , and would not attempt to export communism through inter-State warfare .
The idea here was not just to follow Marxist - Leninist theory , but was the highly practical course of holding the survival of the existing Communist State as the foremost goal of foreign policy : that is , never to endanger the Soviet State by courting inter-State warfare .
Other countries would be expected to become Communist by their own internal - processes .
Thus , fortuitously , from a mixture of theoretical and practical grounds of their own , the Soviets arrived early at what libertarians consider to be the only proper and principled foreign policy .
As time went on , furthermore , this policy was reinforced by a “ conservatism ” that comes upon all movements after they have acquired and retained power for any length of time , in which the interests of keeping power over one ’s nation - state begins to take more and more precedence over the initial ideal of world revolution .
This increasing conservatism under Stalin and his successors strengthened and reinforced the nonaggressive , “ peaceful coexistence ” policy .
The Bolsheviks , indeed , began their success story by being literally the only political party in Russia to clamor , from the beginning of World War I , for an immediate Russian pullout from the war .
Indeed , they went further and courted enormous unpopularity among the public by calling for the defeat of “ their own ” government ( “ revolutionary defeatism ” ) .
When Russia began to suffer enormous losses , accompanied by massive military desertions from the front , and the war became extremely unpopular , the Bolsheviks , guided by Lenin , continued to be the only party to call for an immediate end to the war  the other parties still vowing to fight the Germans to the end .
When the Bolsheviks took power , Lenin , over the hysterical opposition of even the majority of the Bolshevik central committee itself , insisted on concluding the “ appeasement ” peace of Brest - Litovsk in March 1918 .
Here , Lenin succeeded in taking Russia out of the war , even at the price of granting to the victorious German army all the parts of the Russian empire which it then occupied ( including White Russia and the Ukraine ) .
Thus , Lenin and the Bolsheviks began their reign by being not simply a peace party , but virtually a “ peace - at - any - price ” party .
After World War I and Germany ’s defeat , the new Polish State attacked Russia and succeeded in grabbing for itself a large chunk of White Russia and the Ukraine .
Taking advantage of the turmoil and of the civil war within Russia at the end of the war , various other national groups 
Finland , Estonia , Latvia , and Lithuania  decided to break away from the pre-World War I Russian empire and declare national independence .
Now , while Leninism pays lip service to national self - determination , to Soviet rulers , from the very beginning , it was clear that the boundaries of the old Russian State were supposed to remain intact .
The Red Army reconquered the Ukraine , not only from the Whites , but also from the Ukrainian nationalists , and from the indigenously Ukrainian anarchist army of Nestor Makhno as well .
For the rest , it was clear that Russia , like Germany in the 1920s and 1930s , was a “ revisionist ” country vis–vis the postwar settlement at Versailles .
That is , the lodestar of both Russian and German foreign policy was to recapture their pre-World War I borders  what they both considered the “ true ” borders of their respective States .
It should be noted that every political party or tendency in Russia and Germany , whether ruling the State or in opposition , agreed with this aim of full restoration of national territory .
But , it should be emphasized , while Germany under Hitler took strong measures to recapture the lost lands , the cautious and conservative Soviet rulers did absolutely nothing .
Only after the Stalin - Hitler pact and the German conquest of Poland did the Soviets , now facing no danger in doing so , recapture their lost territories .
Specifically , the Russians repossessed Estonia , Latvia , and Lithuania as well as the old Russian lands of White Russia and the Ukraine that had been eastern Poland .
And they were able to do so without a fight .
The old pre-World War I Russia had now been restored with the exception of Finland .
But Finland was prepared to fight .
Here the Russians demanded not the reincorporation of Finland as a whole , but only of parts of the Karelian Isthmus which were ethnically Russian .
When the Finns refused this demand , the “ Winter War ” ( 1939 –1940 ) between Russia and Finland ensued , which ended with the Finns conceding only Russian Karelia.15
On June 22 , 1941 , Germany , triumphant over everyone but England in the West , launched a sudden , massive , and unprovoked assault on Soviet Russia , an act of aggression aided and abetted by the other pro-German States in Eastern Europe : Hungary , Romania , Bulgaria , Slovakia , and Finland .
This German and allied invasion of Russia soon became one of the pivotal facts in the history of Europe since that date .
So unprepared was Stalin for the assault , so trusting was he in the rationality of the German - Russian accord for peace in Eastern Europe , that he had allowed the Russian army to fall into disrepair .
So unwarlike was Stalin , in fact , that Germany was almost able to conquer Russia in the face of enormous odds .
Since Germany otherwise would have been able to retain control of Europe indefinitely , it was Hitler who was led by the siren call of anti-Communist ideology to throw away a rational and prudent course and launch what was to be the beginning of his ultimate defeat .
New Individualist Review Best Price : $ 1.49 Buy New $ 18.00 ( as of 11:14 EST - Details )
The mythology of the cold warriors often concedes that the Soviets were not internationally aggressive until World War II  indeed , they are compelled to assert this point , since most cold warriors heartily approve the World War II alliance of the United States with Russia against Germany .
It was during and immediately after the war , they assert , that Russia became expansionist and drove its way into Eastern Europe .
What this charge overlooks is the central fact of the German and associated assault upon Russia in June 1941 .
There is no doubt that Germany and her allies launched this war .
Hence , in order to defeat the invaders , it was obviously necessary for the Russians to roll back the invading armies and conquer Germany and the other warring countries of Eastern Europe .
It is easier to make a case for the United States being expansionist for conquering and occupying Italy and part of Germany than it is for Russia ’s actions  after all , the United States was never directly attacked by the Germans .
During World War II , the United States , Britain , and Russia , the three major Allies , had agreed on joint three - power military occupation of all the conquered territories .
The United States was the first to break the agreement during the war by allowing Russia no role whatever in the military occupation of Italy .
Despite this serious breach of agreement , Stalin displayed his consistent preference for the conservative interests of the Russian nation - state over cleaving to revolutionary ideology by repeatedly betraying indigenous Communist movements .
In order to preserve peaceful relations between Russia and the West , Stalin consistently tried to hold back the success of various Communist movements .
He was successful in France and Italy , where Communist partisan groups might easily have seized power in the wake of the German military retreat ; but Stalin ordered them not to do so , and instead persuaded them to join coalition regimes headed by anti-Communist parties .
In both countries , the Communists were soon ousted from the coalition .
In Greece , where the Communist partisans almost did seize power , Stalin irretrievably weakened them by abandoning them and urging them to turn over power to newly invading British troops .
In other countries , particularly ones where Communist partisan groups were strong , the Communists flatly refused Stalin ’s requests .
In Yugoslavia , the victorious Tito refused Stalin ’s demand that Tito subordinate himself to the anti-Communist Mihailovich in a governing coalition ; Mao refused a similar Stalin demand that he subordinate himself to Chiang Kai-shek .
There is no doubt that these rejections were the beginning of the later extraordinarily important schisms within the world Communist movement .
Russia , therefore , governed Eastern Europe as military occupier after winning a war launched against her .
Russia ’s initial goal was not to communize Eastern Europe on the backs of the Soviet army .
Her goal was to gain assurances that Eastern Europe would not be the broad highway for an assault on Russia , as it had been three times in half a century  the last time in a war in which over twenty million Russians had been slaughtered .
In short , Russia wanted countries on her border which would not be anti-Communist in a military sense , and which would not be used as a springboard for another invasion .
Political conditions in Eastern Europe were such that only in more modernized Finland did non-Communist politicians exist whom Russia could trust to pursue a peaceful line in foreign affairs .
And in Finland , this situation was the work of one far - seeing statesman , the agrarian leader Julio Paasikivi .
It was because Finland , then and since , has firmly followed the “ Paasikivi line ” that Russia was willing to pull its troops out of Finland and not to insist on the communization of that country  even though it had fought two wars with Finland in the previous six years .
Even in the other Eastern European countries , Russia clung to coalition governments for several years after the war and only fully communized them in 1948  after three years of unrelenting American Cold War pressure to try to oust Russia from these countries .
In other areas , Russia readily pulled its troops out of Austria and out of Azerbaijan .
The cold warriors find it difficult to explain Russian actions in Finland .
If Russia is always hell - bent to impose Communist rule wherever it can , why the “ soft line ” on Finland ?
The only plausible explanation is that its motivation is security for the Russian nation - state against attack , with the success of world communism playing a very minor role in its scale of priorities .
In fact , the cold warriors have never been able either to explain or absorb the fact of deep schisms in the world Communist movement .
For if all Communists are governed by a common ideology , then every Communist everywhere should be part of one unified monolith , and one which , given the early success of the Bolsheviks , would make them subordinates or “ agents ” of Moscow .
If Communists are mainly motivated by their bond of Marxism - Leninism , how come the deep China - Russia split , in which Russia , for example , keeps one million troops at the ready on the China - Russia frontier ?
How come the enmity between the Yugoslav and Albanian Communist States ?
How come the actual military conflict between the Cambodian and Vietnamese Communists ?
The answer , of course , is that once a revolutionary movement seizes State power , it begins very quickly to take on the attributes of a ruling class with a class interest in retaining State power .
The world revolution begins to pale , in their outlook , to insignificance .
And since State elites can and do have conflicting interests in power and wealth , it is not surprising that inter-Communist conflicts have become endemic .
Since their victory over German and associated military aggression in World War II , the Soviets have continued to be conservative in their military policy .
Their only use of troops has been to defend their territory in the Communist bloc , rather than to extend it further .
Thus , when Hungary threatened to leave the Soviet bloc in 1956 , or Czechoslovakia in 1968 , the Soviets intervened with troops  reprehensibly , to be sure , but still acting in a conservative and defensive rather than expansionist manner .
( The Soviets apparently gave considerable thought to invading Yugoslavia when Tito took it out of the Soviet bloc , but were deterred by the formidable qualities for guerrilla fighting of the Yugoslav army . )
In no case has Russia used troops to extend its bloc or to conquer more territories .
Professor Stephen F. Cohen , director of the program in Russian Studies at Princeton , has recently delineated the nature of Soviet conservatism in foreign affairs :
That a system born in revolution and still professing revolutionary ideas should have become one of the most conservative in the world may seem preposterous .
But all those factors variously said to be most important in Soviet politics have contributed to this conservatism : the bureaucratic tradition of Russian government before the revolution ; the subsequent bureaucratization of Soviet life , which proliferated conservative norms and created an entrenched class of zealous defenders of bureaucratic privilege ; the geriatric nature of the present - day elite ; and even the official ideology , whose thrust turned many years ago from the creation of a new social order to extolling the existing one …
In other words , the main thrust of Soviet conservatism today is to preserve what it already has at home and abroad , not to jeopardize it .
A conservative government is , of course , capable of dangerous militaristic actions , as we saw in Czechoslovakia … but these are acts of imperial protectionism , a kind of defensive militarism , not a revolutionary or aggrandizing one .
It is certainly true that for most Soviet leaders , as presumably for most American leaders , detente is not an altruistic endeavor but the pursuit of national interests .
In one sense , this is sad .
But it is probably also true that mutual self - interest provides a more durable basis for detente than lofty , and finally empty , altruism .16
Similarly , as impeccable an anti-Soviet source as former CIA Director William Colby finds the overwhelming concern of the Soviets to be the defensive goal of avoiding another catastrophic invasion of their territory .
As Colby testified before the Senate Foreign Relations Committee :
You will find a concern , even a paranoia , over their [ the Soviets ’ ] own security .
You will find the determination that they shall never again be invaded and put through the kinds of turmoil that they have been under and many different invasions …
I think that they … want to overprotect themselves to make certain that that does not happen … 17
Even the Chinese , for all their bluster , have pursued a conservative and pacific foreign policy .
Not only have they failed to invade Taiwan , recognized internationally as part of China , but they have even allowed the small offshore islands of Quemoy and Matsu to remain in Chiang Kai - shek ’s hands .
No moves have been made against the British and Portuguese - occupied enclaves of Hong Kong and Macao .
And China even took the unusual step of declaring a unilateral cease - fire and withdrawal of forces to its border after having triumphed easily over Indian arms in their escalated border war .18
Pearl Harbor : The Stor ... George Morgenstern Best Price : $ 27.72 Buy New $ 81.14 ( as of 11:40 EST - Details )
Avoiding A Priori History
There is still one thesis common to Americans and even to some libertarians that may prevent them from absorbing the analysis of this chapter : the myth propounded by Woodrow Wilson that democracies must inevitably be peace - loving while dictatorships are inevitably warlike .
This thesis was of course highly convenient for covering Wilson ’s own culpability for dragging America into a needless and monstrous war .
But apart from that , there is simply no evidence for this assumption .
Many dictatorships have turned inward , cautiously confining themselves to preying on their own people : examples range from premodern Japan to Communist Albania to innumerable dictatorships in the Third World today .
Uganda ’s Idi Amin , perhaps the most brutal and repressive dictator in today ’s world , shows no signs whatever of jeopardizing his regime by invading neighboring countries .
On the other hand , such an indubitable democracy as Great Britain spread its coercive imperialism across the globe during the nineteenth and earlier centuries .
The theoretical reason why focussing on democracy or dictatorship misses the point is that States  all States  rule their population and decide whether or not to make war .
And all States , whether formally a democracy or dictatorship or some other brand of rule , are run by a ruling elite .
Whether or not these elites , in any particular case , will make war upon another State is a function of a complex interweaving web of causes , including temperament of the rulers , the strength of their enemies , the inducements for war , public opinion .
While public opinion has to be gauged in either case , the only real difference between a democracy and a dictatorship on making war is that in the former more propaganda must be beamed at one ’s subjects to engineer their approval .
Intensive propaganda is necessary in any case  as we can see by the zealous opinion - moulding behavior of all modern warring States .
But the democratic State must work harder and faster .
And also the democratic State must be more hypocritical in using rhetoric designed to appeal to the values of the masses : justice , freedom , national interest , patriotism , world peace , etc .
So in democratic States , the art of propagandizing their subjects must be a bit more sophisticated and refined .
But this , as we have seen , is true of all governmental decisions , not just war or peace .
For all governments  but especially democratic governments  must work hard at persuading their subjects that all of their deeds of oppression are really in their subjects ’ best interests .
What we have said about democracy and dictatorship applies equally to the lack of correlation between degrees of internal freedom in a country and its external aggressiveness .
Some States have proved themselves perfectly capable of allowing a considerable degree of freedom internally while making aggressive war abroad ; other States have shown themselves capable of totalitarian rule internally while pursuing a pacific foreign policy .
The examples of Uganda , Albania , China , Great Britain , etc. , apply equally well in this comparison .
In short , libertarians and other Americans must guard against a priori history : in this case , against the assumption that , in any conflict , the State which is more democratic or allows more internal freedom is necessarily or even presumptively the victim of aggression by the more dictatorial or totalitarian State .
There is simply no historical evidence whatever for such a presumption .
In deciding on relative rights and wrongs , on relative degrees of aggression in any dispute in foreign affairs , there is no substitute for a detailed empirical , historical investigation of the dispute itself .
It should occasion no great surprise , then , if such an investigation concludes that a democratic and relatively far freer United States has been more aggressive and imperialistic in foreign affairs than a relatively totalitarian Russia or China .
Conversely , hailing a State for being less aggressive in foreign affairs in no way implies that the observer is in any way sympathetic to that State ’s internal record .
It is vital  indeed , it is literally a life - and - death matter  that Americans be able to look as coolly and clear - sightedly , as free from myth at their government ’s record in foreign affairs as they are increasingly able to do in domestic politics .
For war and a phony “ external threat ” have long been the chief means by which the State wins back the loyalty of its subjects .
As we have seen , war and militarism were the gravediggers of classical liberalism ; we must not allow the State to get away with this ruse ever again.19
A Foreign Policy Program
To conclude our discussion , the primary plank of a libertarian foreign policy program for America must be to call upon the United States to abandon its policy of global interventionism : to withdraw immediately and completely , militarily and politically , from Asia , Europe , Latin America , the Middle East , from everywhere .
The cry among American libertarians should be for the United States to withdraw now , in every way that involves the U.S. government .
The United States should dismantle its bases , withdraw its troops , stop its incessant political meddling , and abolish the CIA .
It should also end all foreign aid  which is simply a device to coerce the American taxpayer into subsidizing American exports and favored foreign States , all in the name of “ helping the starving peoples of the world . ”
In short , the United States government should withdraw totally to within its own boundaries and maintain a policy of strict political “ isolation ” or neutrality everywhere .
The spirit of this ultra -“ isolationist , ” libertarian foreign policy was expressed during the 1930s by retired Marine Corps Major General Smedley D. Butler .
In the fall of 1936 , General Butler proposed a now - forgotten constitutional amendment , an amendment which would delight libertarian hearts if it were once again to be taken seriously .
Here is Butler ’s proposed constitutional amendment in its entirety :
The removal of members of the land armed forces from within the continental limits of the United States and the Panama Canal Zone for any cause whatsoever is hereby prohibited .
The vessels of the United States Navy , or of the other branches of the armed service , are hereby prohibited from steaming , for any reason whatsoever except on an errand of mercy , more than five hundred miles from our coast .
Aircraft of the Army , Navy and Marine Corps is hereby prohibited from flying , for any reason whatsoever , more than seven hundred and fifty miles beyond the coast of the United States.20
Disarmament
Strict isolationism and neutrality , then , is the first plank of a libertarian foreign policy , in addition to recognizing the chief responsibility of the American State for the Cold War and for its entry into all the other conflicts of this century .
Given isolation , however , what sort of arms policy should the United States pursue ?
Many of the original isolationists also advocated a policy of “ arming to the teeth ” ; but such a program , in a nuclear age , continues the grave risk of global holocaust , a mightily armed State , and the enormous waste and distortions that unproductive government spending imposes on the economy .
Even from a purely military point of view , the United States and the Soviet Union have the power to annihilate each other many times over ; and the United States could easily preserve all of its nuclear retaliatory power by scrapping every armament except Polaris submarines which are invulnerable and armed with nuclear missiles with multi-targeted warheads .
Bur for the libertarian , or indeed for anyone worried about massive nuclear destruction of human life , even disarming down to Polaris submarines is hardly a satisfactory settlement .
World peace would continue to rest on a shaky “ balance of terror , ” a balance that could always be upset by accident or by the actions of madmen in power .
No ; for anyone to become secure from the nuclear menace it is vital to achieve worldwide nuclear disarmament , a disarmament toward which the SALT agreement of 1972 and the SALT II negotiations are only a very hesitant beginning .
Since it is in the interest of all people , and even of all State rulers , not to be annihilated in a nuclear holocaust , this mutual self - interest provides a firm , rational basis for agreeing upon and carrying out a policy of joint and worldwide “ general and complete disarmament ” of nuclear and other modern weapons of mass destruction .
Such joint disarmament has been feasible ever since the Soviet Union accepted Western proposals to this effect on May 10 , 1955  an acceptance which only gained a total and panicky Western abandonment of their own proposals !
21
The American version has long held that while we have wanted disarmament plus inspection , the Soviets persist in wanting only disarmament without inspection .
The actual picture is very different : since May 1955 , the Soviet Union has favored any and all disarmament and unlimited inspection of whatever has been disarmed ; whereas the Americans have advocated unlimited inspection but accompanied by little or no disarmament !
This was the burden of President Eisenhower ’s spectacular but basically dishonest “ open skies ” proposal , which replaced the disarmament proposals we quickly withdrew after the Soviet acceptance of May 1955 .
Even now that open skies have been essentially achieved through American and Russian space satellites , the 1972 controversial SALT agreement involves no actual disarmament , only limitations on further nuclear expansion .
Furthermore , since American strategic might throughout the world rests on nuclear and air power , there is good reason to believe in Soviet sincerity in any agreement to liquidate nuclear missiles or offensive bombers .
Not only should there be joint disarmament of nuclear weapons , but also of all weapons capable of being fired massively across national borders ; in particular bombers .
It is precisely such weapons of mass destruction as the missile and the bomber which can never be pinpoint - targeted to avoid their use against innocent civilians .
In addition , the total abandonment of missiles and bombers would enforce upon every government , especially including the American , a policy of isolation and neutrality .
Only if governments are deprived of weapons of offensive warfare will they be forced to pursue a policy of isolation and peace .
Surely , in view of the black record of all governments , including the American , it would be folly to leave these harbingers of mass murder and destruction in their hands , and to trust them never to employ those monstrous weapons .
If it is illegitimate for government ever to employ such weapons , why should they be allowed to remain , fully loaded , in their none - too - clean hands ?
The contrast between the conservative and the libertarian positions on war and American foreign policy was starkly expressed in an interchange between William F. Buckley , Jr. , and the libertarian Ronald Hamowy in the early days of the contemporary libertarian movement .
Scorning the libertarian critique of conservative foreign policy postures , Buckley wrote : “ There is room in any society for those whose only concern is for tablet - keeping ; but let them realize that it is only because of the conservatives ’ disposition to sacrifice in order to withstand the [ Soviet ] enemy , that they are able to enjoy their monasticism , and pursue their busy little seminars on whether or not to demunicipalize the garbage collectors . ”
To which Hamowy trenchantly replied :
It might appear ungrateful of me , but I must decline to thank Mr. Buckley for saving my life .
It is , further , my belief that if his viewpoint prevails and that if he persists in his unsolicited aid the result will almost certainly be my death ( and that of tens of millions of others ) in nuclear war or my imminent imprisonment as an “ un- American ” … .
I hold strongly to my personal liberty and it is precisely because of this that I insist that no one has the right to force his decisions on another .
Mr. Buckley chooses to be dead rather than Red. So do I .
But I insist that all men be allowed to make that decision for themselves .
A nuclear holocaust will make it for them .22
To which we might add that anyone who wishes is entitled to make the personal decision of “ better dead than Red ” or “ give me liberty or give me death . ”
What he is not entitled to do is to make these decisions for others , as the prowar policy of conservatism would do .
What conservatives are really saying is : “ Better them dead than Red , ” and “ give me liberty or give them death ”  which are the battle cries not of noble heroes but of mass murderers .
In one sense alone is Mr. Buckley correct : in the nuclear age it is more important to worry about war and foreign policy than about demunicipalizing garbage disposal , as important as the latter may be .
But if we do so , we come ineluctably to the reverse of the Buckleyite conclusion .
We come to the view that since modern air and missile weapons cannot be pinpoint - targeted to avoid harming civilians , their very existence must be condemned .
And nuclear and air disarmament becomes a great and overriding good to be pursued for its own sake , more avidly even than the demunicipalization of garbage .
Notes
1 See William H. Dawson , Richard Cobden and Foreign Policy ( London : George Allen and Unwin , 1926 ) .
2 F. J. P. Veale , Advance to Barbarism ( Appleton , Wisc. : C. C. Nelson Publishing Co. , 1953 ) , p. 58 .
3 Leonard P. Liggio , Why the Futile Crusade ?
( New York : Center for Libertarian Studies , 1978 ) , p. 3 .
4 For “ New Left ” revisionists , see , in addition to Williams himself , the work of Gabriel Kolko , Lloyd Gardner , Stephen E. Ambrose , N. Gordon Levin , Jr. , Walter LaFeber , Robert F. Smith , Barton Bernstein , and Ronald Radosh .
Coming to similar conclusions from far different revisionist traditions were Charles A. Beard and Harry Elmer Barnes , the libertarian James J. Martin , and classical liberals John T. Flynn and Garet Garrett .
Ronald Radosh , in his Prophets on the Right : Profiles of Conservative Critics of American Globalism ( New York : Simon & Schuster 1975 ) has appreciatively portrayed the conservative isolationist opposition to American intervention in World War II .
In numerous articles and in his Not to the Swift : The Old Isolationists in the Cold War Era ( Lewisburg , Pa. : Bucknell University Press , 1978 ) , Justus D. Doenecke has carefully and sympathetically analyzed the sentiment of World War II isolationists in confronting the early Cold War .
A call for a common anti-interventionist and anti-imperialist movement by Left and Right can be found in Carl Oglesby and Richard Shaull , Containment and Change ( New York : Macmillan , 1967 ) .
For an annotated bibliography of the writings of isolationists , see Doenecke , The Literature of Isolationism ( Colorado Springs , Colo. : Ralph Myles , 1972 ) .
5 George Morgenstern , “ The Past Marches On , ” Human Events ( April 22 , 1953 ) .
The revisionist work on Pearl Harbor was Morgenstern , Pearl Harbor : Story of a Secret War ( New York : Devin - Adair 1947 ) .
For more on the conservative isolationists and their critique of the Cold War , see Murray N. Rothbard , “ The Foreign Policy of the Old Right , ” Journal of Libertarian Studies ( Winter 1978 ) .
6 Joseph P. Kennedy , “ Present Policy is Politically and Morally Bankrupt , ” Vital Speeches ( January 1 , 1951 ) , pp. 170–73 .
7 Garet Garrett , The People ’s Pottage ( Caldwell , Idaho : Caxton Printers , 1953 ) , pp. 158–59 , 129–174 .
For more expressions of conservative or classical liberal anti-imperialist critiques of the Cold War , see Doenecke , Not to the Swift , p. 79 .
8 For more on a libertarian theory of foreign policy , see Murray N. Rothbard , “ War , Peace and the State , ” in Egalitarianism As A Revolt Against Nature and other Essays ( Washington , D.C. : Libertarian Review Press , 1974 ) pp. 7080 .
9 Numerous revisionist historians have recently developed this interpretation of twentieth - century American history .
In particular , see the works of , among others , Gabriel Kolko , James Weinstein , Robert Wiebe , Robert D. Cuff , William E. Leuchtenburg , Ellis D. Hawley , Melvin I. Urofsky , Joan Hoff Wilson , Ronald Radosh , Jerry Israel , David Eakins , and Paul Conkin  again , as in foreign policy revisionism , under the inspiration of William Appleman Williams .
A series of essays using this approach may be found in Ronald Radosh and Murray N. Rothbard , eds. , A New History of Leviathan ( New York : Dutton , 1972 ) .
10 On the economic distortions imposed by the military - industrial policies , see Seymour Melman , ed. , The War Economy of the United States ( New York : St. Martin ’s Press , 1971 ) .
11 John T. Flynn , As We Go Marching ( New York : Doubleday , Doran & Co. , 1944 ) , pp. 193–94 .
12 Ibid. , pp. 198 , 201 , 207 .
13 Ibid. , pp. 212–13 , 225–26 .
14 John Dos Passos , The Grand Design ( Boston : Houghton Mifflin Co. , 1949 ) , pp. 416–418 .
15 For an illuminating view of the Russo - Finnish conflict , see Max Jakobson , The Diplomacy of the Winter War ( Cambridge : Harvard University Press , 1961 ) .
16 Stephen F. Cohen , “ Why Detente Can Work , ” Inquiry ( December 19 , 1977 ) , pp. 14–15 .
17 Quoted in Richard J. Barnet , “ The Present Danger : American Security and the U.S. - Soviet Military Balance , ” Libertarian Review ( November 1977 ) , p. 12 .
18 See Neville Maxwell , India ’s China War ( New York : Pantheon Books , 1970 ) .
Neither is China ’s reconquest and suppression of national rebellion in Tibet a valid point against our thesis .
For Chiang Kai - shek as well as all other Chinese have for many generations considered Tibet as part of Greater China , and China was here acting in the same conservative nation - state manner as we have seen guiding the Soviets .
19 For a critique of recent attempts by cold warriors to revive the bogey of a Soviet military threat , see Barnet , The Present Danger .
20 The Woman ’s Home Companion ( September 1936 ) , p. 4 . Reprinted in Mauritz A. Hallgren , The Tragic Fallacy ( New York : Knopf , 1937 ) , p. 194n .
21 On the details of the shameful Western record in these negotiations , and as a corrective to the portrayals in the American press , see Philip Noel - Baker , The Arms Race ( New York : Oceana Publications , 1958 ) .
22 Ronald Hamowy and William F. Buckley , Jr. “ National Review : Criticism and Reply , ” New Individualist Review ( November 1961 ) , pp. 9,11 .
Murray N. Rothbard ( 19261995 ) was dean of the Austrian School , founder of modern libertarianism , and academic vice president of the Mises Institute .
He was also editor — with Lew Rockwell — of The Rothbard - Rockwell Report , and appointed Lew as his literary executor .
Murray Rothbard Archives
The Best of Murray N. Rothbard
Robotron and OOP
public class ListItem {
private object _next = null ;
public object Next {
get { return _next ; }
set { _next = value ; }
}
}
public abstract class Process : ListItem {
private int _nextTime ;
public Process ( ) { Reset ( ) ; }
public int NextTime {
get { return _nextTime ; }
set { _nextTime = value ; }
}
public bool Tick ( ) { return -- _nextTime <= 0 ; }
public abstract bool Run ( ) ;
public abstract void Reset ( ) ;
}
public void OnTick ( ) {
object prev = null ;
object curr = ProcessList ; // some property
while ( curr != null ) {
Process p = ( Process ) curr ;
// if the process is ready to run , run it
if ( p.Tick ( ) ) {
// if run returns true , reset and move on
if ( p.Run ( ) ) {
p.Reset ( ) ;
prev = curr ;
curr = p.
Next ;
}
else {
// remove it from the process list
object next = p.
Next ;
RemoveFromList( ProcessList , prev , curr ) ;
curr = next ;
}
}
else { // just move on
prev = curr ;
curr = p.
Next ;
}
}
}
public void MainLoop ( )
{
WaitForTimerInterrupt ( ) ;
OnTick ( ) ;
}
typedef struct t_ListItem {
struct t_listItem * Next ;
unsigned char Size , ID ;
} t_ListItem ;
typedef struct t_Process {
t_ListItem ListItem ; /* must be first */
short NextTime ;
f_RunProcPtr RunProc ;
f_ResetProcPtr ResetProc ;
} t_Process ;
typedef bool ( * f_RunProcPtr ) ( ) ;
typedef void ( * f_ResetProcPtr ) ( ) ;
bool Tick ( t_Process * p )
{
return --(p->NextTime ) <= 0 ;
}
bool RunProcess ( t_Process * p )
{
return *( p->RunProc ) ( ) ;
}
ListNext EQU 0 ; the symbol ' Next ' equates to 0 ( offset 0 )
ItemSize EQU 2 ; ListNext is 2 bytes ( points are 16 bit on 6809 )
ItemID EQU 3 ;
NextTime EQU 4 ; the next time to run
RunProc EQU 6 ;
Tick PULS Y ; get return address in Y
PULS X ; get process pointer in X
DEC NextTime , X ; decrement the next time , sets condition codes
JMP [ Y ] ; return
OnTick
... ; set up code omitted - Y points to process
LDY CurrProc
PSHS Y
JSR Tick
BCC .1 ; carry clear - no execution
LDY CurrProc ; refetch current process
JSR [ RunProc , Y ] ; call its execute
BEQ RemoveCurrProc ; remove the process on false
.1 LDY CurrProc ; refetch currproc
LDY ListNext , Y ; get next
STY CurrProc ; store it om current process
... ; etc
RunProcesses
PSHS X , Y ; save x and Y
LDY ProcessList ; get the list head in y
BEQ .4 ; exit on null
LDX # 0 ; clear x ( prev )
.1 DEC NextTime , Y ; drop the tick count
BCC .2 ; still > 0 ? continue
JSR [ RunProc , Y ] ; run the process
BNE .3 ; on non-zero , the proc was removed
.2 TFR Y,X ; move curr to prev
.3 LDY ListNext , Y ; get the next
BNE .1 ; on non-null , go back
.4 PULS X , Y ; restore X and Y
RTS
Many years back , joe holt and I pulled the ROMs from a Robotron machine that I bought .
Joe write a disassembler for 6809 and we started poring over the assembly language to try to make head or tail of its operation using the schematics as a guide for hardware .
At one point , I even called Eugene Jarvis , the author , to get a couple hints .
From this , we figured out the operational model .
I do n't have the specific details in my head , but I recall enough to present it .
The interesting thing about Robotron is that the underlying game engine is object - oriented , but because it was written in straight assembly language , they could do some pretty fabulous things to make it work .
Robotron had a linked list of processes ( Jarvis ' term ) .
Each process was used to perform a simple task in the game .
In addition , there was a display list of objects that were to be drawn .
I 'm a little hazy in my memory as to whether or not the display list was the same as the process list - it could be without any loss of generality .
The hardware generated a clock tick and when that hit , each process was checked for whether or not it needed to be run , and if so , it was run .
If this was written in C# , it would look something like this :
Now this is not precisely ideal OO design since the is - a and has - a relationships are n't right .
A list should have list items that have processes .
A process should not be a list item , but that 's what the design was .
You 'll see why in a bit .
As I said , this is not ideal oop design , but bear with me .
At this point , to make things that operate in the game on a regular basis , just subclass from Process and insert instances into the process list .
The main game loop will be something like :
This design is nice in a few respects .
When you are starting a new level , you populate the process list with level processes and off you go .
When a level is complete , clear the process list .
When it 's time to do a cut scene , populate the list with a cut scene process , etc .
One process that existed in the Williams games was a process to rotate colors in the hardware colormap to give the slick , flashy look to their games .
Obviously , they did n't have C# .
In fact , I doubt there was even a C compiler for the 6809 when the game was written .
So how do you get this nice functionality without the syntactic sugar ?
Like this :
This is a C struct that represents a linked list item .
Now , if I want to make any other struct into a list item , all I need to do is put that struct as the first element in my struct : a t_Process contains a t_ListItem , which means that if I cast a pointer to a t_Process as a t_ListItem , then I can treat it just like a t_ListItem and do it safely .
f_Run and f_Reset are defined like this : So the C implementation of Tick ( ) will look like this :
And to run a process :
The beauty of doing the code this way ( with the t_ListItem ) , is that there will only ever be one instance of list manipulation code and it will run properly on anything that has a t_ListItem as its first element .
This means that your executable will be a whole lot smaller .
If you noticed , I snuck in a few extra things in the list item - a byte for a size and a byte for an ID .
This lets me look at any item and find out how many bytes it is ( up to 255 ) and attach an ID to it .
In a low - level debugger , I can look at those two bytes and pretty much know what kind of item I 'm looking at right away .
As defined , this is really bad for C since you can always have structs that are way bigger than 255 bytes and you may have more than 255 object types , but remember , we 're talking about a video game with a tiny amount of RAM .
Robotron did n't have a version of malloc ( ) , but it did do dynamic allocation .
At boot time , sections of memory were partitioned into " 8 byte structs " , " 12 byte structs " etc .
Then since each struct effectively contained an t_listItem , each newly partitioned block was linked to the next .
This means that if you wanted to allocate a new 8 - byte block , you 'd pull the first item off the 8 byte block list .
To free a 16 byte block , you stick it back on the 16 byte block list , and because the size is in the struct , you can tell where it needs to go .
This means that allocation and deallocation are wicked fast .
Assembly does n't really have the notion of structs , just byte offsets .
A t_ListItem was really this : So a ListItem is 4 bytes .
The bad news is that I lied about the definitions of Run and Reset .
Run actually looks like this in a C definition : typedef bool ( * f_RunProcPtr ) ( t_Process p ) ; and there is no Reset ( ) - that gets done in Run ( ) .
So the offset of the next run time would look like this :
Tick would look like this in assembly :
Note that unlike typical C implementations , this code consumes its own arguments .
Now , I can tell you right now that this is n't really what it does - Tick is implemented inline in the code that runs the process list ( this is not actual Robotron code - I 'm reimplementing it from memory ) .
In this code , Y is the curr pointer and X is the previous .
The RunProc not only manages the reset , it manages removing the item from the process list as well .
All routines follow a strict do - no - evil policy - that is all routines enter and leave with the registers intact , except for the condition codes .
So why is this all notable ?
In 13 instructions or roughly 23 bytes , we have the core of a non-preemptive multitasking operating system .
That 's the same amount of memory to hold the phrase , " Eugene P. Jarvis rocks ! " in ASCII .
Now , nobody codes like this for any kind of significant applications .
It takes just too dang long .
And then you have to deal with maintenance and so on .
Robotron is a different playing field , though .
The machine had a 64 K address space , of which a precious 24 K was RAM and 32 K was ROM ( I know , 24 K + 32 K > 64 K - they used some clever tricks to make video RAM write - only and layered ROM over the top of that ) .
In that environment , you can afford to code like you own every single byte in the machine because you know what it does .
Nonetheless , I still think it 's important to keep an eye on the past as we move into the future .
After all , many embedded systems ( for mice , keyboards , disk / flash drives and so on use processors that are on par with the one in Robotron .
Some day you might be coding for one of those .
横田めぐみさん遺骨は偽物と「 断定」されたのか
この話題に関連して 。
こんな妙な転職があったとは全然知らなかった。報道されなかったよなあ。そういやDNA鑑定が出た直後に村上龍が「なぜ第三国に依頼して説得力を高めないんだ」とえらく筋の通ったことを言ってたが。これはヤバイだろ。
産経新聞は2005年3月26日朝刊の社会面にて、遺骨を鑑定した帝京大学の吉井さんが警視庁へ引き抜かれた件について報じています。こういうことは、多い。→報道は不十分なのか（2005-08-18）
北朝鮮が提出した 「 横田めぐみさんの遺骨」が偽物であったと日本国政府が発表したのは2004年12月8日午後の官房長官会見の場でした。新聞報道は翌9日朝刊に始まっています。
横田めぐみさんのものとされる「遺骨 」 はＤＮＡ鑑定により、二週間余りで「別人」との結論が出された。
「北」が遺骨を焼いたため、鑑定は困難とみられていたが、現在は一億八千万人中の一人を判別するまで鑑定技術が向上している。捜査関係者は「北は日本の科学捜査を甘くみていたのでは」と話している。
めぐみさんの事件を捜査する新潟県警は十一月下旬に警察庁科学警察研究所（科警研）と帝京大に依頼。遺骨は高温で焼かれた上に細かく「やってみなければ鑑定できるかどうかも分からない」（警察庁幹部）という状態で、科警研での鑑定はＤＮＡ検出が困難で「鑑定不能」だった。
しかし、帝京大で最先端のＤＮＡ鑑定の結果、「遺骨」から二人の人物のＤＮＡが検出された。関係者によると、横田さんの両親が大切に保存していためぐみさんの臍（へそ）の緒から抽出したＤＮＡと異なることが、七日に判明した。
帝京大の鑑定技術は「国内最高水準」（新潟県警）。オウム真理教による坂本堤弁護士一家殺害事件など、事件捜査で鑑定を行っているほか、旧ソ連に抑留されて現地で亡くなった戦没者の遺骨鑑定も担当、遺族の特定につなげた。
帝京大での成功について、民間のＤＮＡ鑑定会社「ＤＮＡソリューション」の船越一弘社長は「ＤＮＡの抽出に使った検体の違いや、試薬の種類、抽出後の鑑定作業の違いが結果につながった」とみる。 鑑定は、ＤＮＡを包んでいるタンパク質を試薬で酵素分解してＤＮＡだけを抽出、これを比較対象のＤＮＡと特徴を比べて行う。
「研究レベルであれば、試薬は最新のものも含め何種類もあるだろう。二人の人物のものとまで鑑定できたのであれば、正常なＤＮＡが抽出できたと思われる」と船越社長。抽出したＤＮＡの一部が破損していても「破損程度によっては時間と労力をかけＤＮＡの正常な特定部位を割り出し鑑定することも可能」という。
そして国会論戦の模様は以下の通り。
首藤委員 そういう話は我々はもう新聞でも何でも読んでいるわけですけれども。
では、何で障害になっているのかというと、それはやはり日本と北朝鮮との関係ですよね。障害になっているのは二国間の関係なんですよ。その二国間の関係のどこが起点かというと、それは昨年に外務省が派遣団を送って、そこで横田めぐみさんの遺骨と称されるものが送られてきた、それを科学分析に回したらにせものだった。そういうことで十二月から一挙に緊張感を強めて、日本は小泉さんが約束した人道支援まで打ち切っちゃったわけですね。
では、そのもととなった、横田めぐみさんの遺骨がにせものだった、かくも不誠実な国だ、かくも私たちをばかにしている国だ、こういうふうに一方的に言っているわけですけれども、では、その科学的分析というのは、これはもう前回言わせていただきましたこのネイチャーで、いや、そんなことでは、火葬になった骨の断片からは、今の技術ではミトコンドリアのＤＮＡは発見されないというのが科学的知見であり、発見されたとしても科学的にそれを確証できないという記事が出ました。
私は、世界を代表するような科学雑誌のネイチャーがそういうことを発表したのは驚いたんですけれども、さらにまた、それの継続でネイチャーは、日本政府をもう一度、日本政府のやっていることは科学を政治でゆがめているとエディトリアルで書いているわけですよ。
このネイチャーは、御存じのとおり、何か趣味の人が見るのではなくて、世界を代表するような科学者、何十万人の大科学者がそれを見ているわけですよ。だから、もしそういうことで、ネイチャーの言っていることに日本も反論できなければ、これはもう本当に日本の科学の水準、そしてまた科学を日本が悪用しているんじゃないかという批判にこたえられないわけですよ。
これは既にもうネイチャーだけではなくて、韓国でも大変強烈な批判があって、韓国は日本と違って、例の有名な地下鉄の火災事件というのがあって、地下鉄で犯人がガソリンをまいたために百人を超える人が焼死体になっている。本当にたくさんのサンプルがあるわけですよ。そこでも、こんなに限られた空間で、こういう火葬とかシステム的に高温の熱を与えるんじゃなくて、火葬というのはばらばらな条件があって、靴を履いていれば温度が下がったりいろいろなことがある。それにもかかわらず、韓国では、その焼死体の中の焼けた骨からは一切ＤＮＡが発見されなかったということなんですよね。
それから、九・一一のアメリカのテロの中でも、あれも本当に限られた、しかも火葬とかいうんじゃなくて本当にいろいろな条件があって、もっと検査という点ではよりＤＮＡが残りやすい状況にあったにもかかわらず、何と四割が確定できなかったというように言われているんですよ。
どうしてそれが日本で認められるのか。そんなだったら、日本の科学的水準が本当に怪しいものだ、しかも、それを政治がゆがめているという評価が定着していきますと、例えばＢＳＥの問題に関しても、日本がこういう科学的な成果があるからアメリカじゃなくて日本はこちらへ行くんだと言っても、世界で通らないじゃないですか。
ですから、そうしたネイチャーの第二回のものが、エディトリアルが出て、世界じゅうから日本のこの検査に関しては大変な批判がある、これに対して日本政府はどういうふうに対応しようとしているんでしょうか。いかがでしょうか。 町村国務大臣 ネイチャーが立派な雑誌であるということは私も承知をしておりますが、一々の報道等には、それは必要があれば反論してもいいのですが、私どもは一々それについて言う必要はない、こう考えております。
御指摘の取材を受けた関係者に対しても、これは私ども、直接というよりは捜査当局の方から事実関係を確認したわけでございますけれども、その関係者は取材の中で、焼かれた骨によるＤＮＡ鑑定の困難性一般論を述べたにとどまっておりまして、当該鑑定結果が確定的ではないんだという旨を言及したことではないということをその方が言っておられると私どもは聞いております。
いずれにいたしましても、この当該報道が今回私どもがやったこの鑑定結果に何らの影響を及ぼすものではない、私どもはそう判断をいたしております。 首藤委員 違いますよ、外務大臣、これは日本の、あるいは東アジアの安全が絡むかもしれない大きな問題なんですよ。いろいろ緊張関係があって、もっと大きな深刻な問題になったとき、あるいは日本が国際社会で拉致問題を解決するために訴えて、その起点がどこにあるか論争になったとき、日本の態度というものが、こんなに非科学的なことで日本が主張してきたということが明らかになれば、我が国は再度、私たちの名誉を失っていくわけですよ。ですから、このことは本当にそんな一雑誌の問題ではないんですよ。
私自身も、その雑誌の記事を書かれたシラノスキー記者にインタビューして詳しく聞きましたよ。そうすると、やはりこれは、それを分析された吉井講師自身が、これは驚いた、自分でもまさか出てくるとは思わなかったというぐらい、彼らにとってもたまたま出てきたことなんですね。
しかし、問題は、それがうそだとかいうんじゃなくて、明らかに、吉井講師自身が認めているように、骨というものはまるでスポンジのようにいろいろなＤＮＡを吸収してしまう。そこで人が話していて、例えばつばが飛んでいったり、あるいはそういう何か生体の微妙な飛沫、汗とか空気の中の湿気とか、そういうものでもＤＮＡというのは吸収されていくわけですね。
そこで、例えば、違うというならば、ほかの人のＤＮＡ、ミトコンドリアが出るというならば、例えばそこの研究室にいるすべての女性のＤＮＡをチェックしたか、そういうことが本当は必要となるわけですが、この問題がどういうふうにされたかは大変疑問なまま、あたかも科学的な証拠だとして外交の関係を断絶するぐらい大きなことをやり、それが六カ国協議の障害になっているんですね。この責任というのは、やはり政府の責任というのは余りにも大きいと思うんですね。
問題なのは、ではもう一回骨を出してくださいと言ったら、それは実験の過程で粉砕しちゃってなくなっちゃいましたと。証拠がなくなったら、これは反論しようがないじゃないですか。いかに北朝鮮のいわゆる備忘録がインチキだとかいったって、こちらも立証できなければいけない。
そこでお願いしたいのは、分析ですけれども、クローン化していくわけですね。ただその骨からＤＮＡを取り出すんじゃなくて、それを、そのミトコンドリアのＤＮＡをクローン化していく、いわゆるネステッドＰＣＲという方式で吉井講師が独自にやられるわけですけれども、当然のことながら、その結果として出たものは何かの形で残っているんです。
骨自体は、粉砕しそれを溶液に浸して溶かしてしまったかもしれない。しかし、その結果を遺伝子に写したプライマーや、あるいは、もし細菌とかそういうものに写したら、それはそこのコロニーには当然のことながら残っているわけですね。それは果たして残っているのか。もし残っていなかったら、私は、それは証拠を隠滅したことになる、そうじゃないでしょうか。警察の御意見をお聞きしたいと思いますが。
瀬川政府参考人 お答えいたします。
本件鑑定は、まず申し上げますと、横田めぐみさんの遺骨であるとして北朝鮮側から提供があったものにつきまして、刑事訴訟法の規定に基づきまして、厳格な手続によりまして、国内最高水準の研究機関であります帝京大学及び科学警察研究所でＤＮＡ鑑定を実施したものでございます。
今御質問の中で、いわゆるコンタミネーション、汚染の可能性ということも御指摘をされましたけれども、そういった問題については、鑑定人において十分考慮され、骨片をまず十分に洗浄した上で鑑定を行ったものと聞いております。その表面を洗浄した液からはＤＮＡは全く検出されていないということでございまして、骨表面の汚染物質によるＤＮＡ鑑定の結果ではないということが鑑定書の中においても明らかになっているところでございます。
それから、お尋ねの鑑定に供したＤＮＡの増幅物は保存されているのかということでございますが、具体的な鑑定の内容につきましては捜査上の問題でございますので差し控えさせていただきますけれども、一般論として申し上げれば、こういった鑑定に際しましては、鑑定の客観性を確保するために、可能な範囲で再鑑定のための考慮というものが払われているものであるということは申し上げておきたいというふうに思います。
ただ、本件の鑑定は、事の重大性、重要性を十分考慮しまして、鑑定人において二度にわたって行われました。二度とも同様の結果が出たものであるということを申し上げておきたいというふうに思います。 首藤委員 いや、局長、それはおかしいですよ。刑事訴訟法でこういうような手続で、例えば人の罪科が決まり、警察は柏に巨大な科学警察研究所、科警研を持っていて、にもかかわらず一私学の一講師がやっている研究機関が日本の最高水準というんだったら、それなら科警研は廃止したらいいじゃないですか。膨大な人間がいて。そんなことで有罪、無罪の証拠が出たら、科学警察じゃないし、近代警察じゃないですよ、それは。
それは、当然のことながらクロスチェックをして、もしこういうような国際的な問題だったら、国際機関にも頼んでやって、それから例えば先ほど言っていたネステッドＰＣＲの結果、サンプルが残っているならそれを今提示されたらどうですか。我が国も吉井講師以外にもいろいろな法医学の専門家がたくさんいて、その方たちが見て、ああ、それは間違いない、これは確かにそういうことがあって、コンタミネーションじゃないということがわかれば、それはそれでまた一つの外交をバックアップする事実になっていくわけです。ですから、どうしてそういうことをされないかですよ。
私は、吉井講師に会う必要はもちろんあると思いますけれども、それはまたこれからの話題として、その吉井講師が何と警視庁の科捜研の研究科長になっちゃった。これ、職員ですよ。科学警察の研究所へ出向されるとか、そういうことならともかく、一民間人のおよそ警察的な訓練を受けていない人が警視庁の科学捜査の、捜研の、それの職員になってしまう。それは、多くは今既に言われているように、証人隠しじゃないですか。
こんなことをやっていては日本がやはり世界から認められるわけないですよ。こんなこと、分析結果、私は北朝鮮の今までやったことも言っていることもでたらめだと思いますよ。しかし、相手がでたらめだからといってこちらがでたらめをやっていいということは何もないんですよ。やはりきちっとやっていかなければいけないんだと思うんですよ。
そうした問題に関して大臣にお聞きしたいんですよ。ですから、客観的に言うと、これは韓国でもアメリカでも、このネイチャー誌を見た人からもうぼろくそに言われています。それならば、なぜこんなインチキなものをやったか。二つしかないんですよ。
一つは、もういいから、北朝鮮との間はもう完全に国交を断絶するつもりでばんとぶつけてやる、もう言い言葉に返す言葉でぶつけてやると。あるいは、横田めぐみさんが本当にどこかで生きていると確証を持っていて、だから遺骨なんというのは全部うそなんだということを考えておられるのか。どっちのケースでしょうか。外務大臣、いかがでしょうか。 町村国務大臣 委員から我が方の科学的な鑑定のその信憑性をまことに疑わしめるような、そういう御発言があったのは、私は大変残念なことだと思います。私どもは、何の予断も持たずに、あらかじめどういう結論を引き出そうということで警察の鑑定を受けたわけではございません。あくまでも鑑定は鑑定として、客観的、第三者的なものに答えを出してもらおうということで警察の方がなさったわけであります。
それについてまことに今の委員の発言は、何かあたかも結論を持ってそういう結果をもうどんどん書いたと言わんばかりの御発言は、ぜひこれは、私どもがこの問題に真剣に取り組んでいるということに対する半ば侮辱ともとれるような御発言でありますから、ひとつ私は、その辺はよく慎重に言葉を選んで御発言をいただきたいとお願いをいたします。 首藤委員 いや、外務大臣、今おっしゃった言葉はそっくりお返ししますよ。私は、こういうことを言えば、私のところにはたくさんの抗議メールが来て、いろいろな電話がかかってきて、大変な思いをしているんですよ。しかし、私は、日本の名誉のために、国会議員として真実を明らかにしなければいけないと。
私は、別に政府を批判しているんじゃないんですよ。真実はどこにあるのか。真実を確証できるならば、証拠があるなら、もう一度確証したらどうですか、そういうことを言っているわけですよ。それは、ですから外務大臣、まさに同じ言葉をお返ししたいと思います。
残念ながら時間になりましたけれども、私は、この問題を明らかにしなければ必ず国際社会の場で日本が再度たたかれることになる、したがってやはりこの問題はしっかりして先へ進んでいきたい、そういうことを切に切にお願いして、質問を終わります。
どうもありがとうございました。
首藤信彦さんは2005年9月の衆議院議員選挙で落選しました。私は首藤さんの日頃の主張には感心しないことが多い。けれども与党に真実をきちんと明らかにする意欲が欠けている問題について、野党の追及は必要だとあらためて思う。
遺骨は偽物と発表して以来、「なぜ経済制裁しないのか」と世論が盛り上がっています。しかし政府は、次第に包囲網を狭めつつも、現在に至るまで強力な制裁を発動していません。それは何故か?
という問いに対する、ひとつの答えがここにあるのだと思う。
Information
注意書き
The 8 most expensive paints in the world .
NO PICTURE !
Introduction
This page covers topics from abstract research on games to applied technology for commercial video game production .
It aims to appeal to academic researchers and game developers , as well as those who fall somewhere in between .
Video game design and production is a fast paced , hit - driven , technology - based field .
Hardware used in game consoles and personal computers continues to improve , getting faster and cheaper at a dizzying pace .
Video game developers start each new project with increased computational resources , and a long list of cool features they would like to incorporate .
Since they normally work on very tight production schedules , they have little or no time to experiment with untested technology .
Results from recent research help to bridge that gap .
Researchers , working largely in academia and occasionally in industry , are motivated by exploring new technology .
To be published , research must be novel : either a completely new idea or a significant improvement on an old idea .
Commercial game development can provide a rich stream of " ... it would be nice if ... " ideas which can inspire new research projects .
This focus on novelty in the research world contrasts with the commercial world .
There , while novelty is good , what really matters is an enjoyable , engaging experience .
A sequel can be a hit while a strikingly original game may not .
These two communities have conflicting goals and very different cultures .
Yet a mutually beneficial symbiotic relation can exist between them .
With luck this page may lead to cross-fertilization and perhaps some beneficial collaborations .
Maintenance of this page is generously sponsored by the R&D group of Sony Computer Entertainment America .
What is n't here
Some aspects of game technology research are well covered elsewhere and will not be duplicated here .
For example , all research on computer graphics is ultimately relevant to video games .
Computer graphics is a huge field with its own excellent online resources , such as SIGGRAPH and its literature .
There are excellent online resources devoted to specific aspects of computer graphics , such as Real Time Rendering and animation .
Game design is covered elsewhere ( 1 , 2 , 3 ) and mentioned here only in terms of technology .
Other than those broad exceptions , almost anything available on the web about research or technology related to video games is fair game .
Feel free to suggest additions or corrections for this page .
A reintroduction to XML with an emphasis on character encoding
© 2002–2005 Mike J Brown .
Non-commercial distribution in whole or in part is permitted , provided authorship credit is preserved .
Latest revision : 2014-08-05
The only slightly odd thing about this marvellous and indispensable document ( with lots of other fine goodies on the same site ) is the title , with its use of the terms " tutorial " and " reintroduction " .
People with little or no knowledge of XML who went there might soon wander off again in puzzlement .
And experienced XML practitioners might not look at the site at all , expecting it would be too elementary for them .
You do need to know XML quite well to make much sense of what Mike offers ; but even if you know XML very well indeed , Mike has things to say about encoding that you almost certainly either do n't know at all , or have n't yet fully grasped .
If only everyone writing XSLT processors , for example , had taken everything Mike says on board from the start , there would be a lot less encoding and transcoding headaches forever recurring on the relevant lists .
A further point , which is not Mike 's problem , but a general cultural issue .
He uses a few key terms ( " abstract " , " mapping " etc ) in a precise mathematical / comp .
sci. way , and unless you understand those precise senses you wo n't fully follow what he is saying .
Since I 'm writing for people with a Humanities background , I have regrettably to sound that warning , because so many people in the Humanities foolishly pride themselves on their militant ignorance of basic mathematical terminology and concepts
Where would we be if scientists took the same view ?
If I 'm writing a review for the TLS , I naturally avoid some of the more technical linguistic or analytical vocabulary I freely use when writing an article for a scholarly journal .
But I 'd be very surprised if the TLS editor complained because my copy used hard words like " narrator " , " sonnet " or " parody " that a " general reader " could n't possibly be expected to understand .
None of Mike 's use of " technical " vocabulary in this piece goes beyond the analogous domain in his own area of expertise , so if you do n't understand his terms , educate yourself rather than giving up or complaining .
You know it makes sense !
-- Michael Beddow
This is a crash course in some essential concepts for software developers who are reading and writing XML documents on a regular basis .
It is oriented toward people with some sort of programming background .
The intended audience should already understand some basic things like what bits and bytes are , how to read hexadecimal numbers , what characters are , and they should be comfortable with phrases like " hierarchical data model " .
I wrote this document after having the realization , in early 2000 , that every published XML reference I have seen does not adequately explain some fundamental concepts that , in my opinion , are essential to understand before trying to do any serious development with XML .
It might seem strange that examples of how to write an XML document are not introduced until well into the tutorial .
I feel strongly that the proper way to learn this material is to understand the founding concepts and principles first .
Then the details of the syntax become almost incidental .
Why you need to know this : XML is specified in terms of allowable sequences of " characters " as defined by the ISO / IEC 10646 - 1:1993 international standard , which is almost , but not quite , the same thing as The Unicode Standard version 2.0 .
In written languages , a grapheme is an unit , expressed as some kind of mark , that conveys basic information essential to the language .
Letters , numbers , punctuation and diacritics are examples of graphemes found in the Latin script ( component of a writing system ) that is used to write in English , French , Spanish , German , Vietnamese , and various other languages .
Graphemes are abstract concepts ; any time you write or see the capital letter " A " rendered on paper or on your computer screen , you recognize it as being the same grapheme — the letter A — regardless of the font or handwriting or medium in which it is written .
The actual marks you see are allographs , or glyphs , that represent the " A " grapheme .
In computing and telecommunications , dividing the basic marks of a writing system into graphemes is helpful , but is not sufficient , on its own , to reproduce written text , since there is more to writing than just spewing a stream of graphemes .
Therefore , in these contexts , graphemes are represented by abstract units called characters .
For example , the capital letter " A " is a grapheme that , in computing and telecom , is represented by the capital letter " A " character .
Characters do n't always represent things that people who study writing systems would consider to be true graphemes .
For example , instead of representing an individual grapheme , a character might represent a particular combination of graphemes : the small letter " e " grapheme with a grave accent grapheme over it , " ` " , can be , in computing and telecom , a single " small e with grave " character , " è " .
Characters can also embody other units that are not graphemes .
For example , in the Latin script , we need to put space between words .
In the other scripts , such space is n't necessary , although the concept of word separation is still useful .
So there exist special characters that represent different kinds of word , line , and paragraph separators and / or literal , visible space .
There are also special characters that do n't manifest in writing at all , but are rather just exist in order to convey instructions to a mechanical device ( tab , line feed , carriage return , and form feed characters , for example ) or to provide hints for interpreting or rendering subsequent characters .
The Unicode Standard is a character coding system designed to support the interchange , processing , and display of the written texts of the diverse languages of the modern world .
It is a product of The Unicode Consortium .
The Unicode Consortium is a group of major computer corporations , software producers , database vendors , research institutions , international agencies , various user groups , and interested individuals .
Since 1991 the Unicode Consortium has worked with the International Organization for Standardization ( ISO ) to develop the Unicode Standard and the international standard ISO 10646 in tandem .
The character encoding portion of Version 2.0 of the Unicode Standard is identical to ISO / IEC 10646 - 1:1993 plus its first seven published amendments .
Unicode 3.0 was published in February 2000 and its relevant portions were later adopted as ISO / IEC 10646 - 1:2000 .
Although there are newer versions of Unicode that correspond with ISO / IEC 10646 - 1 and 10646 - 2 combined , this tutorial primarily addresses the versions available prior to 2000 , since XML does not reference the newer versions .
ISO / IEC 10646- 1 defines and is also known as the Universal Character Set , or UCS .
In general , the terms Unicode and UCS are interchangeable because the two specifications share the following characteristics :
They both assign the same values and descriptions to all the same characters
They both specify the same levels of implementation
They both use a 16 - bit code space ( this will be explained later )
They both specify the UTF - 8 and UTF - 16 character encoding forms ( this will also be explained later )
Unicode differs from ISO / IEC 10646 - 1 in the following significant ways :
The Unicode Standard specifies semantics , properties and rendering algorithms for characters ; ISO / IEC 10646 - 1 does not .
The Unicode Standard does not acknowledge ( but likewise does not prohibit ) the UCS - 2 and UCS - 4 character encoding forms found in ISO / IEC 10646 - 1. ( explained later )
The Unicode Standard is a relatively affordable printed publication that can be purchased through any bookseller and is supplemented by many online materials at http://www.unicode.org/.
The entire Unicode Standard itself is also now available online , but ISO / IEC 10646 - 1 is an expensive printed publication that can only be purchased through ISO partners and has no online edition .
There are a few other less significant , but still important , differences that are described in Tony Graham 's excellent book Unicode - A Primer ( ISBN 0-7645-4625 -2 ) .
The title of this book is somewhat misleading , as it seems to be less a primer and more a technical encyclopedia , but it 's still worth perusing , as it explains many aspects of Unicode in prose that is relatively easy to comprehend .
Note : Unless otherwise stated , any further references to Unicode in this document mean The Unicode Standard , version 3.0 .
Why you need to know this : XML documents consist , at a granular level , of abstract characters that have had several encoding mechanisms applied to them .
In order to consistently author , store , transmit and process XML documents , there must be an awareness of the encodings that are being or have been applied .
The basic idea of Unicode and the UCS is that a set of abstract objects called characters can be represented by at least one descriptive name and also by at least one unique number .
The names are not canonical because they translated to many languages for different publications of the standard .
The numbers are constant and canonical .
A character 's number is abstract to computers because there are many different ways of representing numbers in an information processing architecture .
So , Unicode and the UCS prescribe a model for information systems to store , exchange and process character data .
In general , a set of abstract characters is a character repertoire .
A code space is a set of numbers called code points , or code positions .
These numbers are scalar values : non-negative , not - necessarily - contiguous integers .
A mapping of abstract characters from a character repertoire to code points is called a coded character set .
Other names for such mappings are character encoding , coded character repertoire , character set definition , or code page .
Each combination of an abstract character and its code point in a coded character set is an encoded character .
A coded character set can reserve code points for special purposes other than mapping to abstract characters .
Aside from the Universal Character Set and Unicode , other popular coded character sets include the following subsets :
The WGL4 ( Windows Glyph List ) defined by Microsoft and Agfa Monotype , which is a repertoire of 560 abstract characters implemented by most MS Windows fonts .
It is a subset of Unicode plus two private use characters , encompassing the characters in ISO 6937 plus all Microsoft / IBM 8 - bit code pages .
Since WGL4 is defined as a subset of Unicode , it can be considered a coded character set .
The AGL ( Adobe Glyph List ) , a superset of WGL4 .
( Despite being called " Glyph " Lists , they are actually character - to - code point mappings . )
Note :
The " 0 x " notation used in this document is the C language 's notation for hexadecimal numbers .
( Ref : ISO 9899 ) .
It is one of many possible notations for values in a base 16 system .
There is no particular reason it is being used here other than that it seems to be a fairly widely recognized convention .
Unicode and the UCS define a coded character set in which each abstract character is mapped to a code point in the range 0x0.. 0x10 FFFF ( 0 through 1,114,111 decimal ) .
This code space is divided into 17 planes of 65,536 ( 0x10000 ) code points each .
The first plane , encompassing code points 0x0..0xFFFF , is called the Basic Multilingual Plane , or BMP , and it covers all of the characters in common use in all of the modern languages of the world .
It omits some less common characters as well as those that were used in arcane scripts ; those characters are in the higher planes .
The Unicode Standard calls each of the code points in the 0x0..0x10 FFFF code space a Unicode scalar value .
Each Unicode scalar value uniquely identifies the character assigned to that code point , if such an assignment has been made .
There are certain ranges of Unicode scalar values that are not assigned to characters by the standard ; they are reserved for special functions or future extension mechanisms .
There are also code points that have been assigned to unspecified , privately - defined characters .
In the diagram below , each green cloud shows a code point and each beige cloud shows a character name .
Each combination of code point + character name is an encoded character ( " encoded " just in the sense that is has been associated with a number ) .
Unicode allows certain encoded characters to be combined in sequences in order to represent abstract characters that may or may not have other encoded character representations .
That is , one or more encoded characters can together represent , through equivalence , a single abstract character .
For example , as shown by one of the pink clouds in the diagram above , the character LATIN CAPITAL LETTER A ( code point 0x41 ) followed by the " combining " character COMBINING RING ABOVE ( code point 0x30A ) are two separate characters that are not only equivalent to the single " compatibility " character LATIN CAPITAL LETTER A WITH RING ABOVE ( code point 0xC5 ) , but also to the equivalent to the single character ANGSTROM SIGN ( code point 0x212B ) .
Here are 3 ways of representing the Unicode scalar value of the Unicode character named " ANGSTROM SIGN " :
in the C language 's hexadecimal notation : 0x212B
in decimal notation : 8491
in EBNF notation : \v00212B
Here is a way of representing the abstract character itself , using its scalar value :
in Unicode 's deprecated " U - " notation , which requires 8 hex digits : U-0000212B
in Unicode 's " U + " notation , which requires 4 to 6 hex digits : U+212B
Note : using the " U + " notation to represent a character by its code point is a convention introduced in Unicode 3.1 ( most likely due to abuse of the old convention ) .
Prior to Unicode 3.1 , the " U + " notation could only be used for Unicode code values , as described below , and required exactly 4 hex digits .
In prose , the " U + " notation is the preferred way of referring to characters .
Code values , or code units , are numbers that computers use to represent abstract objects and concepts like Unicode characters .
Like code points , code values are typically non-negative integers , but code values usually only manifest in a fixed 8 bit , 16 bit , or 32 bit width .
An encoding form is the mapping of a code point representing an abstract character in a coded character set to a sequence of one or more code values .
ISO / IEC 10646 - 1 defines a 32 - bit encoding form called UCS - 4 , in which each encoded character in the UCS is represented by a 32 - bit code value in the code space 0x0..0x7 FFFFFFF ( the most significant bit is not used ) .
This encoding form is sufficient to represent all 0x10 FFFF Unicode scalar values and then some .
Some people consider this wasteful to reserve such a large code space for mapping a relatively small set of code points , so a new encoding form , UTF - 32 , was proposed .
UTF - 32 is a subset of UCS - 4 that uses 32 - bit code values only in the 0x0..0x10 FFFF code space .
UTF - 32 became part of the Unicode Standard in 2002 , with the publication of Unicode Standard Annex # 19 , which was later incorporated into Unicode 4.0 .
ISO / IEC 10646 - 1 also defines a 16 - bit encoding form called UCS - 2 , in which a 16 - bit code value in the code space 0x0..0xFFFF directly corresponds to an identical scalar value , but this form is , of course , inherently limited to representing only the first 65,536 scalar values .
The Unicode Standard and ISO / IEC 10646 - 1 both define two more important encoding forms : UTF - 8 and UTF - 16 .
UTF - 16 is a variation on UCS - 2 that maps each Unicode scalar value to a unique sequence of up to two 16 - bit code values .
In UTF - 16 , each 16 - bit code value in the 0x0..0xD7 FF and 0xE000 ..0xFFFF code spaces directly corresponds to the same Unicode scalar value .
A surrogate pair of 16 - bit code values from the 0xD800 ..0xDFFF code space algorithmically represents a single Unicode scalar value in the range 0x010000 ..0x10 FFFF .
The first half of the pair is always in the 0xD800 ..0xDBFF range , and the second half of the pair is in the 0xDC00 ..0xDFFF range .
Unicode
scalar value UCS -4
code value
sequence UCS -2
code value
sequence UTF - 16
code value
sequence 0x0 0x00000000 0x0000 0x0000 | | | | 0xD7 FF 0x0000D7FF 0xD7FF 0xD7FF
Unicode scalar values omit
0xD800..0xDFFF 0xE000 0x0000E000 0xE000 0xE000 | | | | 0xFFFF 0x0000 FFFF 0xFFFF 0xFFFF 0x10000 0x00010000 0xD800 0xDC00 | | | 0x10 FFFF 0x0010 FFFF 0xDBFF 0xDFFF 0x00110000 [ n/a ] | 0x7FFFFFFF
UTF - 8 algorithmically maps each Unicode scalar value to a unique sequence of one to six 8 - bit code values .
The mechanism used by UTF - 8 is relatively complex .
XML developers should at least know that the first 256 Unicode scalar values 0x0..0xFF intentionally coincide with identical code points and byte values in the ASCII ( 0x20..0x7 F ) , ISO / IEC 8859 - 1 ( 0x A0..0xFF ) , and ISO / IEC 6429 ( 0x00..0x1 F , 0x80 -0x9 F ) standards .
The UTF - 8 sequences for the same range are shown in this table :
Unicode scalar value UTF - 8 code value sequence 0x0..0x7 F 0x00..0x7 F 0x80..0xBF 0xC2 0x80 ..
0xC2 0xBF 0xC0..0xFF 0xC3 0x80 .. 0xC3 0xBF
Here are various ways to represent the abstract character named " GOTHIC LETTER QAITHRA ( =Q ) " , which is assigned to the Unicode scalar value 0x10335 :
as a Unicode scalar value , in Unicode 's " U - " notation : U-00010335
as a Unicode scalar value , in Unicode 's " U + " notation : U+10335
as a UCS - 4 code value sequence , in C hex notation : 0x00010335
as a UCS - 2 code value sequence : illegal ; out of range
as a UTF - 16 code value sequence , in C hex notation : 0xD800 0xDF35
as a UTF - 8 code value sequence , in C hex notation : 0xF0 0x90 0x8c 0xB5
Starting with Unicode 3.1 , the standard directly assigns abstract characters to Unicode scalar values ( code points ) .
Previous versions of Unicode only assigned each character to a sequence of 1 or 2 " Unicode values " .
Unicode values are the code value sequences produced by the UTF - 16 encoding form .
In order to retain backward compatibility with earlier versions of Unicode , Unicode 3.0 and ISO / IEC 10646 -1:2000 adopted the UTF - 16 encoding form as the basis for Unicode values , making UTF - 16 the only official usage of the 0xD800 ..0xDFFF scalar range .
Prior to version 3.1 , Unicode prescribed a " U+xxxx " notation with 4 hex digits to designate a Unicode value in printed literature .
A Unicode value sequence is considered equivalent to the abstract character it represents .
Since these Unicode values were UTF - 16 code values , encoded characters with scalar values in the 0x0..0xFFFF range were represented with one U+xxxx designation , and encoded characters with scalar values in the 0x010000..0x10 FFFF range were represented with a pair of U+xxxx designations .
For example , the character at code point 0x010000 was represented in the old notation by U+D800 U+DC00 , but is represented in the new notation by U+10000 .
Starting with Unicode 3.1 , the " U + " notation with 4 to 6 hex digits now designates a Unicode scalar value , not a code value .
Code values are now written as 4 hex digits in angle brackets , separated by spaces when there is a sequence , like < D800 DC00 > .
Unicode allows certain encoded characters to be combined in sequences in order to represent abstract characters that may or may not have other encoded character representations .
That is , one or more encoded characters can together represent , through equivalence , a single abstract character .
For example , as shown by one of the pink clouds in the diagram above , the character LATIN CAPITAL LETTER A ( code point 0x41 ) followed by the " combining " character COMBINING RING ABOVE ( code point 0x30A ) are two separate characters that are not only equivalent to the single " compatibility " character LATIN CAPITAL LETTER A WITH RING ABOVE ( code point 0xC5 ) , but also to the equivalent to the single character ANGSTROM SIGN ( code point 0x212B ) .
So here are three more ways to represent the abstract character named " GOTHIC LETTER QAITHRA ( =Q ) " :
as a Unicode value pair , in EBNF notation : \uD800 \uDF35
as a Unicode value pair , in Unicode 3.0's " U + " notation : U+D800 , U+DF35
as a Unicode value pair , in Unicode 3.1 's notation : < D800 DF35 >
As precise as code values are , these representations are still too abstract for a computer to work with .
Computers need code values to manifest as bits & bytes in a certain order .
Character encoding schemes and character maps accomplish this .
An algorithm for converting code values to a sequence of 8 - bit values ( bytes or octets ) for cross - platform data exchange is a character encoding scheme .
Encoding forms that produce 7 - bit or 8 - bit code value sequences do n't need additional processing , so UTF - 8 , for example , can be considered to be both a character encoding form and a character encoding scheme .
Other encoding forms , however , need to have a consistent mechanism applied to convert their 16 - bit or 32 - bit code value sequences to 8 - bit sequences .
Unicode 3.0 has the character encoding schemes UTF - 16BE and UTF - 16LE for this purpose .
These work like UTF - 16 but split each code value into a sequence of one or more pairs of bytes , with each byte pair being either in Big Endian order for UTF - 16BE ( i.e. , the byte with the most significant bits comes first ) or Little Endian order for UTF - 16LE .
Continuing with the example , here are representations of GOTHIC LETTER QAITHRA ( =Q ) as a sequence of octets that a computer can use :
UTF - 16BE bytes : 11011000 00000000 11011111 00110101 ( 0xD800 0xDF35 )
UTF - 16LE bytes : 00000000 11011000 00110101 11011111 ( 0x00D8 0x35DF )
UTF - 8 bytes : 11110000 10010000 10001100 10110101 ( 0xF0 0x90 0x8C 0xB5 )
A character map correlates an abstract character in a character repertoire with a specific sequence of bytes , skipping the intermediate steps of code points , encoding forms , and encoding schemes .
Other words for character map are character set , charset ( i.e. , what is used in Content - Type HTTP and MIME headers ) , charmap , or sometimes code page .
Character maps are what most people envision when they speak of ' character sets ' .
Examples of character maps are US - ASCII , ISO - 8859 -1 , EUC - JP , KOI8 - R , to name just a few .
A note about fonts : A font is , in general , just a collection of glyphs : visual representations of characters , or the necessary instructions for drawing those characters , in a particular , often decorative , style .
A glyph that represents a character is no more that character than a painting of a tree is an actual tree .
TrueType font files happen to contain a mapping of glyphs to Unicode code points .
This makes it easy for a Unicode - aware operating system to obtain the rendering instructions for characters according to their code point .
Why you need to know this :
In order to author XML documents , one must understand what sequences of what characters are allowed in an XML document , and how to find and interpret the syntax rules that are defined in the spec .
An XML document is a UCS character sequence that follows certain patterns .
These patterns provide a means of representing a logical hierarchy ( a tree ) of data .
The XML 1.0 Recommendation establishes conventions for using certain UCS character sequences to represent data and certain other UCS character sequences to represent markup .
The markup allows the logical hierarchy to be expressed in the document along with the data itself .
The Recommendation defines these conventions partly with prose explanations and partly with a formal grammar written as a set of " productions " in Extended Backus - Naur Form ( EBNF ) notation .
This notation is described briefly in section 6 of the spec .
It is helpful to know how to read the EBNF productions because they are the definitive reference for proper syntax .
The EBNF productions do little more than enumerate allowable UCS character sequences .
Basic sequences are assigned to symbols , which in turn are the foundation for more advanced combinations of symbols and other character sequences .
These sequences build upon each other to the point where an entire XML document can be expressed with the following EBNF production :
document ::= prolog element Misc *
This production says that the symbol named document ( which represents a well - formed XML document ) , consists simply of one prolog followed by one element followed by zero or more Misc s. Each of these symbols is defined in terms of other symbols and character sequences .
Note that the XML 1.0 Recommendation refers to UCS characters by their Unicode scalar values , using a notation of #x followed by only as many hex digits as needed .
So # x9 in the EBNF productions means the abstract character that would be represented in Unicode 3.1's " U + " notation as U+0009 .
It does not necessarily mean a byte with hex value 9 .
Char ::= # x9 | #xA | #xD | [ #x20-#xD7 FF ] | [ # xE000-#xFFFD ] | [ # x10000-#x10 FFFF ]
S ::= ( #x20 | #x9 | # xD | # xA ) +
The first line means that Char is the one character that is in those ranges listed .
Note that characters U+0000 through U+0008 and several other ranges are not considered Char s and are not allowed in XML documents .
The second line shows that S is a sequence of one or more instances of any of the 4 " whitespace " characters .
The definition of a Comment is given as :
Comment ::= '<!--' ( ( Char - ' - ' ) | ( ' -' ( Char - ' - ' ) ) ) * '-->'
This means that Comment is the 4 characters <!-- and the 3 characters --> , in between which are 0 or more instances of either a Char that is not - , or the character - followed by a Char that is not -.
Misc ::= Comment | PI | S
This means that Misc is one of Comment , PI , or S .
The definition of PI is too lengthy to include here , so we 'll just leave it as it is .
Since Comment and S have been defined , it would be just as accurate to say :
Misc ::= '<!--' (( #x9 | #xA | #xD | [ #x20-#xD7 FF ] | [ # xE000-#xFFFD ] | [ # x10000-#x10 FFFF ] - '-') | (' -' ( #x9 | #xA | #xD | [ #x20-#xD7 FF ] | [ # xE000-#xFFFD ] | [ # x10000-#x10 FFFF ] - '-' ) ) ) * '-->' | PI | ( #x20 | # x9 | # xD | # xA ) +
The other components of document are defined in the same way .
It follows that a well - formed XML document is a UCS character sequence that follows certain patterns .
XML documents , in order to be stored or transmitted , must manifest in an encoded form as bits and bytes , using a consistent character encoding mechanism such as UTF - 16 or UTF - 8 .
When these " physical " documents are assembled or modified , care must be taken to ensure that encodings are consistently applied .
If one encoded document is pasted into the middle of another that has a different encoding , the resulting byte sequence could represent corrupted data or could even be unparsable .
The XML 1.0 Recommendation requires that any software that reads XML documents and provides access to their content and structure must be able to support both UTF - 8 and UTF - 16 encoding forms .
The spec further dictates that if UTF - 16 encoding is used , a byte - order mark must be present at the beginning of the document .
If no hints to a document 's encoding are available , it is assumed that UTF - 8 encoding is in effect , and it would be an error if the document were not actually encoded with UTF - 8 .
Because in Latin - based languages the majority of the characters needed in an XML document come from the US - ASCII range ( U+0000 to U+007F ) , UTF - 8 is usually the most suitable encoding .
UTF - 16 may be more straightforward to implement , but it is difficult to compose UTF - 16 encoded documents with most text editing software , and it is wasteful to use 2 bytes per character when most characters fall in a very small range .
UTF - 8 is also advantageous because the XML spec requires that it be the assumed encoding when the document contains no other cues as to its encoding .
Interpretation of an XML document 's logical contents cannot begin until the encoded document has first been decoded into a sequence of UCS characters .
Since UCS characters are intangible , decoding , to a computer , really means conversion to some other encoding form , most likely UTF - 16 , UCS - 2 or UCS - 4 .
Decoding a document , comparing it to the EBNF productions , and interpreting its logical contents in a consistent manner is the job of a software application called an XML processor , also commonly referred to as an XML parser .
An XML parser feeds the logical contents to another application that makes use of that info in some way .
SAX ( Simple API for XML ) is a de facto standard that defines a convention for parsers to report the logical contents to an application .
Why you need to know this :
The term ' entity ' is ubiquitous in XML , but has a very specific meaning .
It is important to understand and distinguish between entities , entity references , character references , and character entities .
The XML 1.0 Recommendation states that an XML document can be divided into sections called entities .
Each entity can exist in a different place — a block of memory or a file on a disk , for example .
The entity that contains the main body of the document is the document entity .
If an entity consists of XML character data ( i.e. , it is a fragment of an XML document ) , it is called a parsed entity .
An XML parser combines the document entity and parsed entities into a contiguous sequence of UCS characters .
As it reads a document entity , it locates , decodes , and imports the contents of each parsed entity as replacement text that replaces references to that entity .
Parsed entities can have their own character encodings .
An entity that contains non-XML data of any kind ( e.g. , a binary file like a JPEG or MP3 ) cannot be read by an XML parser and is therefore called an unparsed entity .
An XML document can contain information about the location and format of an unparsed entity , and it can refer to the entity , but it cannot actually contain the entity itself .
An XML parser does not replace a reference to an unparsed entity ; it just passes the info about the entity to the application .
Unparsed entities can only be referred to in limited contexts and are not particularly useful .
The XML 1.0 Recommendation requires that entities be declared in the Document Type Definition ( DTD ) , which is a special part of an XML document 's logical structure where document validity constraints are declared .
A required part of the DTD , the internal subset , exists in the document entity .
An optional part of the DTD , the external subset , may exist in an entity that is external to the document entity .
An entity that is only for use in the document is a general entity .
An entity that is for use only within the DTD is a parameter entity .
Parameter entities are useful as macros for often - repeated text that is used in a DTD , or to represent pseudo data types .
An entity is either internal or external .
If the declaration of an entity identifies the entity 's replacement text by its location ( a URI ) , or if the entity is unparsed , then the entity is said to be external .
If the declaration of an entity includes its replacement text ( either with literal characters , entity references , or both ) , then it is said to be internal .
Due to the limitations on unparsed entities , the actual combinations of characteristics of a given entity are as follows :
Internal parsed general
Internal parsed parameter
External parsed general
External parsed parameter
External unparsed general
When a parsed entity is declared in a DTD , it is given a name .
This name is the basis of references to that entity .
The syntax of an entity reference is the UCS character sequence &name ; for general entities , and % name ; for parameter entities .
There are 5 built - in internal general parsed entities that all XML processors must recognize , even if they have not been declared in a DTD .
These entities are used to escape character data that is not markup .
Built - in entity reference Replaces character & & < < > > " " ' '
An XML parser that is not validating an XML document is not required to read any external entities , so in some situations it is not an error for a document to refer to an entity that is declared in one of those entities .
This depends on whether the document declares itself as being " standalone " , which means that it does not have markup declarations ( including entity declarations ) in any external entities .
In addition to entity references there are character references , each of which refers to one UCS character by its code points .
The syntax of a character reference is the same as for general entities , but instead of a name , the character is identified by its code position , in the form #xABCD for hex or # 1234 for decimal .
For example , or are both references to U+00A0 , the non-breaking space character .
The term character entity is not defined by the XML spec , but since character reference and entity have definite meanings , one can infer that a character entity is a general entity that has a single character as its replacement text .
The five built - in entities can be considered character entities , but a numeric character reference like is not an entity at all , so it cannot be called a character entity .
There are restrictions on what UCS characters are allowed in a parsed entity .
Certain characters are disallowed , and cannot even be referenced via character references .
The allowed characters are : U+0009 ( tab ) , U+000A ( linefeed ) , U+000D ( carriage return ) , U+0020 through U+D7FF , U+E000 through U+FFFD , and U+10000 through U+10 FFFF .
Consequently , a parsed entity is not a good place to store arbitrary binary data , unless the data is pre-encoded with the Base64 or uuencode mechanisms .
Why you need to know this :
This is the heart of XML ; one must think of XML not just in terms of its literal , lexical structures , but also in terms of the logical , implied structures that the document 's text represents .
The allowable UCS character sequences in a decoded document fall into two main categories : markup and character data .
The character data is at the very least a representation of data , and often is in fact literal data .
The markup models that data as a tree , annotates the document with comments , provides information to an XML parser , declares and refers to entities , and declares certain valid logical structures for all documents of that type .
Most markup is considered to be part of the " logical " contents of a document , but entity and character references are considered " physical " for some reason .
There are several logical structures in an XML document :
XML Declaration or Text Declaration
Document Type Declaration
Processing Instructions
Comments
Text ( Character Data )
Elements and their Attributes
Document Type Definition ( DTD )
An XML document must begin with markup called a prolog .
A prolog consists of either an XML declaration or a text declaration , optionally followed by a Document Type Declaration , optionally followed by comments or processing instructions .
Whitespace may appear after any of these components of the prolog .
A document entity 's prolog begins with an XML declaration and takes the form :
<?xml version = " 1.0 " encoding = " UTF - 8 " standalone = " no " ?>
The XML version is required , but encoding and standalone declarations are optional .
The prolog for any entity other than the document entity begins with a text declaration .
A text declaration is in the same format as an XML declaration , but it is optional , always contains an encoding declaration , and never contains a standalone declaration .
In an XML declaration , the encoding declaration is not required , but is recommended so that an XML parser can be sure it is decoding the document correctly .
Without an encoding declaration , the parser must rely on a default heuristic for determining the encoding , inevitably resulting in an assumption of either UTF - 8 or UTF - 16 .
It is considered an error if the document 's encoding is not what was declared or assumed .
So for example , if the encoding is declared to be iso - 8859 - 1 , the parser should reject it if any bytes in the 0x80..0x9 F range are encountered , because those bytes do not exist in iso - 8859 - 1 .
Although it is allowed to have any value , an encoding declaration should use the name of a character map as defined by the Internet Assigned Numbers Authority ( IANA ) in their official list of " character set " names , or else a made - up name beginning with " x - " .
The encoding name is case insensitive .
Character data can exist in one of two forms : parsed or unparsed .
If it is parsed , then it is a PCDATA section and the UCS characters can be included in the document directly , provided they have instances of the markup delimiters < > and & escaped using entity references , like so :
1 & 2 are < three
In general , " > " does not have to be escaped , but it is good practice to escape it for the benefit of humans who might be looking at the character data .
It is also good practice , and sometimes necessary , to escape " " " and " ' " in attribute values .
If a section of character data is to be unparsed , then it is a CDATA section and must be enclosed in markup of the form :
<![ CDATA [ 1 & 2 are < three ] ] >
People are often misinformed about what a CDATA section actually is .
It is just a convenience for the document author , saving them the trouble of escaping data upon input .
It does not mark a span of text with a " Dear Application , please preserve me all the way through to output , if you can " flag .
Rather , it merely says " Dear XML Parser , if you see something in here that looks like markup , it 's not really markup .
Please report it to the Application as ordinary character data , as if ' < ' and ' & ' had been written as ' < ' and ' & '. "
Using a CDATA section does not really buy anything other than convenience , and it does nothing to make XML a good vehicle for transporting other markup , unless such markup is never going to be treated as markup ever again .
Character data is divided into named chunks called elements and attributes .
Although the XML 1.0 Recommendation does not dictate semantics for these structures , it does imply that they define a hierarchy - a tree of data with a root , branches and leaves .
It also places restrictions on attributes such that each attribute can only be a name - value pair that is associated with an element , thereby implying that an attribute is a granular , inherent property of an element .
An element or attribute can have any name that begins with a letter , underscore or colon and otherwise contains only certain other characters ( letters , digits , periods , hyphens , underscores , colons , combining characters or extenders ) .
Names beginning with the case - insensitive sequence ' xml ' have special meaning .
An XML element 's name is its type .
All elements with the same name are of the same type ( this word is used a lot in the spec , so it 's good to know what it means ) .
Two attributes with the same name cannot be associated with a single element .
An element is a container for its contents , which can be character data , more elements , or both , in any combination .
An XML document must have exactly one root element , also known as the document element .
All character data and other elements must be contained within the document element .
A parent - child relationship exists between an element and the elements contained within it .
If an element has no contents , then it is " empty " and is denoted with an empty - element tag of the form :
< elementName / >
If an element has contents , then the contents are bounded by a start tag and end tag , like this :
< elementName > this character data is the contents </ elementName >
When other elements are in the contents , start and end tags must not overlap .
< greeting > Hello < name > Jane , how are you ?</ greeting ></name >
< greeting > Hello < name > Jane < / name > , how are you ?</ greeting >
An attribute that is associated with an element is inserted in the element 's start tag next to the name of the element .
The name of the attribute is given , along with its value in single quotes ( ASCII apostrophes , actually , not curly quotes ) or ASCII double quotes .
Double quotes are most common .
< greeting type= " informal " >
Hey Dude !
What up ?</ greeting >
< greeting type= ' informal '>
Hey Dude !
What up ?</ greeting >
If an attribute value contains the same kind of quotes that are quoting the entire value , then those quotes in the value must be escaped .
< movie name= ' Rosemary 's Baby ' />
Attribute values are not the best place to store just any character data , because an XML parser will not interpret the values exactly as they appear in the document .
When the document is read by an XML parser , the attribute values will be subjected to whitespace normalization , which in this case means that sequences of whitespace characters ( space , tab , linefeed , or carriage return ) will be removed from the beginning and end of the value , and consecutive sequences of whitespace elsewhere in the value will be replaced by a single space character .
An XML document can be annotated with comments , as long as those comments are separate from other markup .
An XML parser may choose to ignore comments .
Text inside the comment does not need to be escaped with entity references , but a sequence of two hyphens is disallowed within the comment .
<!-- this is a comment -->
< anElement > hello <!-- this is another comment --> world </ anElement >
Looking very much like the prolog is a bit of markup called a processing instruction .
It provides a mechanism for an XML parser to pass information to an application via the document , but it is not considered part of the document 's data .
It takes the form :
<? foo bar ?>
where foo is the target , an identifier for the application to which the instruction is directed .
The target can optionally be formally declared in the DTD via a notation declaration .
Any number of whitespace - separated characters that follow the target , up to the ' ?> ' delimiter , are made available to the application .
Processing instructions are not used that often .
<?xml-stylesheet href=" style.css " type =" text /css " ?>
In this example , xml- stylesheet is the target ( presumably this is meaningful to the application ) , and the underlined string is the instruction .
This instruction might be said to contain " pseudo - attributes " because it resembles a series of attributes , but it is just a single opaque , meaningless string , as far as the XML parser is concerned .
This string will be interpreted by the application , not the parser .
XML 1.0 provides for a logical structure called the Document Type Definition , or DTD .
Like a processing instruction , the DTD is not part of the data in a document .
The DTD contains user - defined declarations of what element and attribute names are valid , rules for contents of elements and values of attributes , and the names and locations of entities .
All documents written to conform to the rules in a given DTD are considered to be of the same type , hence the name Document Type Definition .
If a document matches all the character encoding and syntax rules defined in the EBNF productions in the XML 1.0 Recommendation , then it is well - formed and can be read by any XML parser .
If a document also matches the rules defined in a DTD and the validity constraints imposed by the XML 1.0 Recommendation , then it is valid .
A validating parser is required to check for well - formedness and report validity violations in an entire document , including parsed entities and the complete DTD .
A non-validating parser is required to check for well - formedness only in the document entity and the internal DTD subset , and does not need to report any validity violations .
A non-validating parser is also not required to read and get replacement text from external parsed entities , but it must inform the application where references to such entities occur .
XML DTDs use an SGML - inherited syntax to define a frustratingly limited vocabulary for documents .
There are a lot of subtle rules to follow when writing DTDs and the only good reference is the XML spec itself , so this tutorial will not go into too much detail .
The declarations in an XML DTD consist of a mixture of tokens and EBNF constructs , inside what look like element tags ( but are n't ) .
One major kind of declaration is for entities .
Each entity is declared with an indicator of whether it is a parameter or general entity , its name , and , depending on whether it is internal or external , a literal entity value in quotes ( if internal ) , or an identifier for where the replacement text can be found ( if external and parsed ) :
<!ENTITY whoa " WHOA ! " >
<!ENTITY baby SYSTEM " baby.txt " >
<!ENTITY % my -DTD - fragment SYSTEM " https://foo.net/path/to/my.dtd " >
<!ENTITY % standard - DTD PUBLIC " //W3C-Gobbledygook/1.0 " >
These examples say that there is a general entity named ' whoa ' with replacement text ' WHOA !' ; a general entity named ' baby ' whose replacement text can be found in the file named ' baby.
txt ' ; a parameter entity ( denoted by the percent sign ) named ' my - DTD - fragment ' whose replacement text can be found at the location identified ; and a parameter entity named ' standard - DTD ' whose replacement text can be found at a location that the XML parser should know where to find , based on the public identifier given .
An XML parser will determine an internal entity 's replacement text by replacing character references and parameter entity references it finds in the literal entity value ( the quoted string in the entity declaration ) .
Therefore , the built - in entities , if declared , must look like the following :
What 's the deal with the double - escaping for lt and amp ?
It has to do with how replacement text for entity declarations is handled : General entity references are not resolved inside the declaration , but character references and parameter entity references are .
The idea is that you can do this : <! ENTITY % nombre " Señor Gomez " >
<!ENTITY question " ¿Como esta ? " >
<!ENTITY foo " ¡Hola % nombre ; ! & question ; " >
These declarations indicate the following : entity
name entity
type literal entity value replacement text nombre parameter Señor Gomez Señor Gomez question general ¿ Como esta ?
¿ Como esta ? foo general ¡ Hola % nombre ; !
&question ; ¡ Hola Señor Gomez ! &question ;
When you put in a document ... < greeting > & foo ;</ greeting > ... the replacement text goes in : < greeting > ¡Hola Señor Gomez !
&question ;</ greeting >
Notice how " & " in the replacement text ends up in the document unchanged , so it signifies the beginning of an entity reference .
Similarly , " < " would also be unchanged and would thus look like the beginning of a tag .
When the document is parsed , after the replacement text has been substituted in , general entities will be resolved and other markup will be processed normally .
In effect , it is as if the document contained : < greeting > ¡Hola Señor Gomez ! ¿ Como esta ?</ greeting >
So now it should be evident why one would need to doubly escape " < " and " & " when defining entities .
They only need to be escaped in this special way when writing an entity declaration , due to the way replacement text is calculated and parsed .
<!ENTITY lt " & # 60 ; " >
<! ENTITY gt " > " >
<!ENTITY amp " &#38 ; " >
<! ENTITY apos " ' " >
<! ENTITY quot " " " >
If a DTD or part of a DTD is in an external entity , the entity 's replacement text should begin with a text declaration , but is not required to .
External unparsed general entities are handled a little differently .
Processing them is the responsibility of the application ; the XML parser 's responsibility ends with the reporting of information about the entity .
Some information about the entity 's internal format must be declared after the identifier that indicates the entity 's location :
<!ENTITY selfPortrait SYSTEM " me.jpg " NDATA JPEGformat >
<! NOTATION JPEGformat SYSTEM " http://www.jpeg.org " >
The presence of the NDATA token indicates that the entity is unparsed .
The arbitrary name following it is just a key to the notation declaration .
The notation declaration just pairs the name with an identifier that the application should recognize as a cue for how to handle the entity .
Notation declarations have additional applications , described below in the section on attribute declarations .
The only place in an XML document where an unparsed entity can be referenced is in the value of an attribute that has been declared to be of type ENTITY or ENTITIES .
The entity name is the attribute value ; no delineation with " & " and " ; " is needed .
Another major kind of declaration is for elements :
<!ELEMENT greeting ( # PCDATA | name ) *>
This says :
An element of type ' greeting ' exists ( i.e. , there can be elements named ' greeting ' ) .
The asterisk indicates that there can be zero or more instances of whatever precedes the asterisk , which in this case is the grouping ( denoted by parentheses ) of parsed character data ( denoted by the token # PCDATA ) or ( denoted by the vertical bar ) an element of type ' name ' .
The element type ' name ' must also be declared , since it was mentioned .
This will do :
<!ELEMENT name ( # PCDATA )>
If the DTD contained those two element declarations , then the following document would be valid :
< greeting > ¡Hola , < name > César</name >!</greeting >
In this example , the text before and after the < name > is allowed because of the #PCDATA in the declaration for the element greeting .
The XML parser would report to the application :
There is an element named ' greeting ' .
It contains the character data '¡ Hola , ' ,
followed by an element named ' name ' , which contains
the character data ' César ' .
After that ' name ' element , the ' greeting ' element contains the character data '!'.
There is a relatively obscure feature of XML that says that a validating parser must notify the application when the DTD says that an element can contain only element content ( no PCDATA ) .
The purpose of this notification is so that the application can know whether it is OK to discard any whitespace that might appear in that element .
Continuing with the previous example , let 's add a wrapper element called , simply " wrapper " :
<!ELEMENT wrapper ( greeting ) >
The valid document could then look like :
< wrapper >
< greeting > ¡Hola , < name > César</name >!</greeting >
</ wrapper >
The XML parser would report to the application :
There is an element named ' wrapper ' .
It contains the character data ' ( linefeed ) ( space ) ( space ) ' .
This is insignificant whitespace .
After that , there is an element named ' greeting ' , which contains
the character data ' ¡ Hola , ' ( note the significant space ) ,
followed by an element named ' name ' , which contains
the character data ' César ' .
After that ' name ' element , the ' greeting ' element contains the character data '!'.
Following the ' greeting ' element is the character data ' ( linefeed ) ' .
This is insignificant whitespace .
There is a way for a document author to override this behavior and force an application to recognize all whitespace in an element as being significant , using the xml : space attribute , described below .
Another major kind of declaration is for attributes .
Attributes can be complicated to declare , so here is a relatively simple example :
<!ATTLIST greeting
type ( formal | informal ) # REQUIRED
length CDATA #IMPLIED >
This says that for the element of type ' greeting ' , there are two attributes named ' type ' , which is required to be present , and ' length ' , which is optional ( denoted by the # IMPLIED token ) .
The ' type ' attribute can have a value consisting of a special class of parsed character data called an NMTOKEN , which must be in this case one of either ' formal ' or ' informal ' .
The ' length ' attribute can have a value consisting of any parsed character data , denoted by the CDATA token .
CDATA is just a token and should not be confused with an unparsed CDATA section in the document .
Attribute value types can be :
CDATA ( any parsed character data ; may be further restricted by a default value ) ;
( any parsed character data ; may be further restricted by a default value ) ; NMTOKEN ( any character sequence matching the production for NMTOKEN ) ;
( any character sequence matching the production for NMTOKEN ) ; NMTOKENS ( a sequence of one or more whitespace - separated NMTOKENs ) ;
( a sequence of one or more whitespace - separated NMTOKENs ) ;
An enumerated list of particular NMTOKENS ( as in the example above ) ;
( as in the example above ) ; ID ( any character sequence matching the production for ID and that does n't repeat in a document ) ;
( any character sequence matching the production for ID and that does n't repeat in a document ) ; IDREF ( an ID sequence that is the same as an attribute of type ID elsewhere in the same document ) ;
( an ID sequence that is the same as an attribute of type ID elsewhere in the same document ) ; IDREFS ( one or more whitespace - separated IDREF sequences ) ;
( one or more whitespace - separated IDREF sequences ) ; NOTATION ( a character sequence matching the name of a declared notation ; see below for explanation and examples ) .
( a character sequence matching the name of a declared notation ; see below for explanation and examples ) .
ENTITY ( the name of an unparsed entity declared elsewhere in the DTD )
( the name of an unparsed entity declared elsewhere in the DTD ) ENTITIES ( a sequence of one or more whitespace - separated ENTITY )
It is also possible to declare default values for attributes by putting the quoted value in place of the #REQUIRED or #IMPLIED token .
The attribute can be declared as always existing ( even if it is omitted from the document ) and always having the default value by preceding the default value with the token # FIXED .
The XML 1.0 Recommendation defines two attributes that have special meaning and that can be associated with any element .
When these special attributes are used and the document is being checked for validity , the spec requires that they be declared in the DTD .
The special CDATA - type attribute named xml : space , as mentioned before , must be declared as having either the value " preserve " to indicate that the application should always consider any whitespace in the element contents to be significant character data , or the value " default " to indicate that the application does not need to consider the element 's whitespace to be significant .
The special CDATA - type attribute named xml:lang associates an element 's contents with a human language .
More information about its valid values and when to use it is in the next section , below .
There is also a rarely - used declaration called a notation , which creates a name - location pair that can be used to signal to an application that a parsed character data section is to be interpreted as having some kind of additional encoding , such as Base64 or PostScript .
It can also be used to describe the target for a processing instruction .
Here is an example declaring two notations , an element , and an attribute of type NOTATION .
The possible value of the attribute is one of the two declared notation names :
<! NOTATION ps PUBLIC " Postscript Level 3 " >
<! NOTATION vrml SYSTEM " http://www.web3d.org/ " >
<!ELEMENT FormattedData ( # PCDATA )>
<!ATTLIST FormattedData
Format NOTATION ( ps | vrml ) # REQUIRED >
An element conforming to these declarations might look like this :
< FormattedData Format= " ps " >
gsave
112 75 moveto 112 300 lineto
showpage grestore
</FormattedData >
As mentioned above , xml:lang is a special attribute that allows document authors to flag element content as being related to a particular language .
According to the XML 1.0 Recommendation and its errata , the value of an xml:lang attribute must be an ( XML ) LanguageID .
A LanguageID is normatively defined by IETF RFC 1766 , " Tags for the Identification of Languages " .
The XML spec muddles this quite a bit by trying to provide a summary of what RFC 1766 says , and they botched their references , so it 's rather confusing .
RFC 1766 provides several ways of constructing a LanguageID .
The simplest method is to use an ISO 639:1988 2 - letter language code .
These codes are case - insensitive but are typically lowercase .
Examples : " en " or " fr " .
Reference : http://ftp.std.com/obi/Standards/ISO/ISO_639.
ISO 639 has been updated a number of times since 1988 and is now in 2 parts , ISO 639 - 1 for the 2 - letter codes and ISO 639 - 2 for 3 - letter codes .
It has been argued that due to XML 1.0's normative reference to RFC 1766 and that document 's requirement that it be superseded to accommodate updates to ISO 639 , we are technically stuck with using the 1988 codes .
In a post to the IETF Languages mailing list on 02 Aug 2000 , Harald Tveit Alvestrand , the author of RFC 1766 , said " The intent of RFC 1766 and the current draft is that the lists referred to are the published versions + any later changes .
I refuse to put in references to unpublished documents , but that 's my only religion on the matter ; replacement text is welcome . "
2. ISO 639 does n't identify some obscure languages , so RFC 1766 also allows IANA registered language identifiers to be used .
These codes either begin with " i- " followed by 3 to 8 letters identifying a language , or they begin with an ISO 639 2 - letter language code , followed by a hypen and 3 to 8 letters denoting the region in which the langauge is used ( useful for identifying regional dialects ) .
These codes are case - insensitive but are typically lowercase .
Examples : " i-navajo " ( Navajo ) or " zh - yue " ( Cantonese ) .
Reference : http://www.isi.edu/in-notes/iana/assignments/languages/tags.
3. RFC 1766 says you can make up your own identifiers , as long as they begin with " x- " or " X - " .
Example : " x- piglatin " .
4. RFC 1766 allows 2 - letter country codes to be appended to the 2 - letter language codes , in the same way the IANA language tags append 3 - to - 8 letter region codes .
When a 2 - letter suffix is being used , it * must * be a 2 - letter country code from ISO 3166:1988 .
These codes are case - insensitive but are typically UPPERCASE .
Examples : " en-US " or " en-GB " or " fr - CA " .
Reference : https://en.wikipedia.org/wiki/ISO_3166.
As with ISO 639 , ISO 3166 has been updated a number of times and is now ISO 3166 - 1 , but you 're only allowed to use the 1988 codes .
5 . You can go on tacking on as many additional suffixes onto the end as you want , after the 2 - letter country code from ISO 3166:1988 .
If you did n't use a 2 - letter country code , you can still append any suffixes you want , as long as the first one is n't 2 letters .
1 . Use the xml:lang attribute as a descriptive supplement to elements that contain language - specific character data , whether that character data is element content or in the element 's other attribute values .
xml:lang is intended to apply to everything contained within the element , so it 's not necessary to use it on all sub-elements if it has already been declared .
If xml:lang is used in an element , it must be declared in the DTD , like any other attribute .
The " xml : " prefix does not have to be declared in an xmlns : xml attribute , though ; the XML Namespaces recommendation says that xml : is by default bound to a particular namespace .
Example :
<?xml version = " 1.0 " ?>
<! DOCTYPE dialog [
<!ELEMENT question ( # PCDATA ) >
<!ELEMENT answer ( # PCDATA ) >
<!ELEMENT dialog ( question , answer ) >
<!ATTLIST question
by CDATA #IMPLIED
xml:lang CDATA #IMPLIED >
<!ATTLIST answer
by CDATA #IMPLIED
xml:lang CDATA #IMPLIED >
] >
< dialog >
< question by =" Limey Brit " xml:lang= " en - GB " >
What colour is your tea , mate ?</ question >
< answer by =" American Dork " xml:lang = " en - US " >
Tea comes in different colors ?</ answer >
</dialog >
Here is a demonstration of the inheritance principle .
The entire dialog is English , and it may not be necessary to differentiate between dialects .
Only the dialog element contains the xml:lang attribute , but the attribute implies that the entire contents of the element are in English , so an application will likely say that the language of the question and answer elements is English in each case :
<?xml version = " 1.0 " ?>
< dialog xml:lang= " en " >
< question by =" Limey Brit " > What colour is your tea , mate ?</ question >
< answer by =" American Dork " > Tea comes in different colors ?</ answer >
</dialog >
2 . Try to only use xml:lang as a descriptor of language - specific content of data elements .
In situations where , say , a user has made a language choice in a UI and you want to record that choice in an XML document , you should make up your own element for this purpose .
When the language itself is a significant piece of data rather than just a property of one other granular piece of data , you need to use something other than xml:lang .
Example :
<?xml version = " 1.0 " ?>
< Site >
< SiteProperties >
< SiteLanguage > fr</ SiteLanguage >
...
</ SiteProperties >
< SiteData >
< MerchantName > Violet 's Violets</ MerchantName >
< Slogan xml:lang= " en- US " >
We aim to please </ Slogan >
< Slogan xml:lang = " fr- CA " > Parlez - vous ?
Oui !</ Slogan >
...
</ SiteData >
</ Site >
In this example , the application could select the correct Slogan for inclusion in the site by comparing the SiteLanguage with the xml:lang attributes .
In XSLT / XPath , this is trivial , using the lang ( ) function , which looks for ancestors with xml:lang and ignores suffix disparities ( so a test for " fr " would match " fr - CA " ) .
In practice , for most applications , using just the ISO 639:1988 2 - letter codes , or those codes plus the ISO 3166:1988 2 - letter country code suffixes , is more than sufficient .
Acknowledgments :
This work was based upon ...
Ruby ’s rise seems to have some people in the world of Python nervous .
Without question , Ruby ’s increase in popularity can be largely attributed to Ruby on Rails .
Though I could be wrong , it seems like many Python people look at the fine bits of code that exist for Python and think “ Python can do that !
The only reason Ruby is getting users is because there ’s only one web framework to use ” .
This thought then gets extrapolated to the notion that we in Pythonland need to somehow create one web framework “ to rule them all ” .
Ruby gets some converts who like the way the language works : “ Perl , only better ” or features like Ruby ’s blocks .
Or , maybe those people do n’t like Python ’s significant whitespace .
Whatever the reason , creating a Python web framework to rule them all is not going to change the minds of these people because they ’re picking up Ruby for Ruby , not for Rails .
So , eliminating those folks from discussion , I guess the thinking is that people are moving from language J with framework S to Ruby On Rails because Ruby has only one framework to choose from .
Of course , that ’s not even true : there are several web frameworks for Ruby .
Ruby on Rails is just the largest and best known .
People are n’t choosing Ruby over Python because Ruby has one obvious choice for a web framework .
People are choosing Ruby On Rails because it will help them get their projects done , and they know it will help them get their projects done .
Java , as a language / platform , has been quite successful despite having a variety of ways to write webapps : servlets , JSP , Struts , Tapestry , WebWork , JSF , etc .
People are n’t migrating to Ruby because they ’re tired of having to choose a web framework .
People are choosing Rails because it ’ll get the job done faster than the technologies they were using in Java .
It all boils down to user experience .
In the case of a web application framework , the user is a developer of webapps .
Anything you can do to make the developer ’s life easier will win users : better and easier APIs , convenient tools and better docs are three examples .
There ’s no “ official ” backing for TurboGears , and it did n’t come out of a committee of Pythonistas trying to achieve world domination by “ creating ” the “ One Framework ” .
And yet , TurboGears is gaining users , many of whom are refugees from PHP and Java projects .
This is purely market forces at work : people are coming to TurboGears and Python because they meet a need and at a reasonable cost ( and if you do n’t think open source web frameworks have a cost , I think that ’s a good topic for another article ) .
As with Rails , people come to the website , learn about the project and gain confidence that the TurboGears will meet their needs now and in the future .
In a nutshell : if it makes sense for Python to have one dominant web framework , it will happen naturally through the choices people make every day when deciding how to get a project done .
Rather than spending my time thinking about how to create the Python web framework to rule them all , I ’m spending my time doing whatever I can to make writing webapps easier .
Tags
Those of us who appreciate liberty , voluntary exchange , and workers ’ property rights to their own labor have long - objected to the American organized labor movement .
Since the 1930s , this movement has been defined by the AFL - CIO .
This “ mother of all unions ” is the biggest , with a membership of just under 13 million workers at the end of 2004 .
It is the baddest , defined by corruption and thuggery that can only result from state protection ( and that would be snuffed out if labor were defined by market forces ) .
And today , it is broken , after last week ’s announcement that Andrew Stern ’s Service Employees International Union and James P. Hoffa ’s Teamsters are leaving the AFL - CIO .
Both unions command 3.2 million workers .
The schism reflects deeper problems than a simple disagreement about strategy between Stern and the John J. Sweeney , the AFL - CIO ’s longtime boss .
Both the United Food and Commercial Workers and Unite Here , which represents apparel , hotel and restaurant employees , are boycotting the AFL - CIO ’s annual convention and are likely to go their own way as well .
The union family is showing its dysfunctional colors .
This is a huge split , fomented by falling living standards of union members , the ascendancy of the hard - to - organize service sector , the inability to unionize an automobile industry that is escaping Detroit , and an increasingly competitive , dynamic , and global economy that eschews high - priced and stagnant labor markets .
Take away public - sector employees , who operate outside of market forces , and labor union membership in the U.S. is at a record low 7.9 percent of all wage and salary workers .
As they say in the South , you can stick a fork in organized labor .
It ’s done .
What amazes is what took this development so long to come about .
From an Austrian perspective , the same logic that informed Ludwig von Mises ’ prediction that Soviet communism would never last explains the demise of American organized labor .
Mises argued that socialism ’s lack of market prices would make economic coordination impossible .
How would shortages or surpluses get communicated to economic planners ?
How would changes in consumer tastes and preferences be known ?
Socialist governments , which often become warlike in order to maintain popular support , would never match the efficiency of the market system .
Their longevity reflected the West ’s willingness to subsidize them more than any inherent soundness to socialism as an idea .
In the same way , labor unionism , when state supported , removes workers from the normal coordinating mechanisms found in labor markets .
These markets operate like any other market for scarce resources .
Firms demand labor and pay wages for it , demanding more at lower wages and less at higher wages .
Workers sell their labor to these firms , selling less for low wages and more for high wages .
Through the interaction of buyers and sellers of labor , labor markets tend to clear , coordinating the movement of labor inputs in the production process .
The rise of unionism , on its own , would normally pose no threat to labor markets ’ coordinating tendencies .
Any group of workers would be free to organize and demand higher wages in exchange for labor .
Firms would be free to pay those wages — or not .
If some workers held monopoly power in the supply of their labor — which could be the case if they had unique skills that were especially valued by firms — then firms may very well choose to pay higher wages .
In a competitive labor market , these workers ’ success at earning higher wages would also sew the seeds for their eventual reduction , as the higher wages would signal other workers to obtain the skills necessary for their line of work too .
This benign case of unionism becomes destructive , however , when these workers receive protection from the government .
This introduces violence into what otherwise would have been peaceful , voluntary exchanges of labor between buyers and sellers .
Make no mistake : absent the state , any success that organized labor might have in obtaining higher wages , and thus increasing the costs of production , would be short - lived .
With government comes the introduction of force in the relationship between labor producers and consumers , either directly ( such as when authorities jail un- anointed non-union laborers for working in unionized industries ) or indirectly ( such as when union violence occurs , as allowed by the Norris - LaGuardia Act of 1932 ) .
As socialism is impossible in the long run , so is state - supported labor unionism , because all of the government protection in the world cannot stop market forces from operating .
These forces explain the dire straits that organized labor faces today .
Taken as a whole , the growth of outsourcing , right - to - work laws , technological changes that improve the movement of capital and labor , all reflect that market forces in labor markets can be delayed when government and organized labor join , but not completely squelched .
The reason is simple .
No matter what governments do to protect a special class of workers , consumers ’ desire for lower prices never ceases , setting in motion entrepreneurial activities that will make centralized labor organization a thing of the 20th century .
So let ’s cheer the division of organized labor .
Its implosion is a reminder that , in the long run , market forces trump state power .
And that ’s an idea that unites Miseseans …even without state - support .
September 2001
( This article explains why much of the next generation of software may be server - based , what that will mean for programmers , and why this new kind of software is a great opportunity for startups .
It 's derived from a talk at BBN Labs . )
In the summer of 1995 , my friend Robert Morris and I decided to start a startup .
The PR campaign leading up to Netscape 's IPO was running full blast then , and there was a lot of talk in the press about online commerce .
At the time there might have been thirty actual stores on the Web , all made by hand .
If there were going to be a lot of online stores , there would need to be software for making them , so we decided to write some .
For the first week or so we intended to make this an ordinary desktop application .
Then one day we had the idea of making the software run on our Web server , using the browser as an interface .
We tried rewriting the software to work over the Web , and it was clear that this was the way to go .
If we wrote our software to run on the server , it would be a lot easier for the users and for us as well .
This turned out to be a good plan .
Now , as Yahoo Store , this software is the most popular online store builder , with about 14,000 users .
When we started Viaweb , hardly anyone understood what we meant when we said that the software ran on the server .
It was not until Hotmail was launched a year later that people started to get it .
Now everyone knows that this is a valid approach .
There is a name now for what we were : an Application Service Provider , or ASP .
I think that a lot of the next generation of software will be written on this model .
Even Microsoft , who have the most to lose , seem to see the inevitablity of moving some things off the desktop .
If software moves off the desktop and onto servers , it will mean a very different world for developers .
This article describes the surprising things we saw , as some of the first visitors to this new world .
To the extent software does move onto servers , what I 'm describing here is the future .
The Next Thing ?
When we look back on the desktop software era , I think we 'll marvel at the inconveniences people put up with , just as we marvel now at what early car owners put up with .
For the first twenty or thirty years , you had to be a car expert to own a car .
But cars were such a big win that lots of people who were n't car experts wanted to have them as well .
Computers are in this phase now .
When you own a desktop computer , you end up learning a lot more than you wanted to know about what 's happening inside it .
But more than half the households in the US own one .
My mother has a computer that she uses for email and for keeping accounts .
About a year ago she was alarmed to receive a letter from Apple , offering her a discount on a new version of the operating system .
There 's something wrong when a sixty - five year old woman who wants to use a computer for email and accounts has to think about installing new operating systems .
Ordinary users should n't even know the words " operating system , " much less " device driver " or " patch . "
There is now another way to deliver software that will save users from becoming system administrators .
Web - based applications are programs that run on Web servers and use Web pages as the user interface .
For the average user this new kind of software will be easier , cheaper , more mobile , more reliable , and often more powerful than desktop software .
With Web - based software , most users wo n't have to think about anything except the applications they use .
All the messy , changing stuff will be sitting on a server somewhere , maintained by the kind of people who are good at that kind of thing .
And so you wo n't ordinarily need a computer , per se , to use software .
All you 'll need will be something with a keyboard , a screen , and a Web browser .
Maybe it will have wireless Internet access .
Maybe it will also be your cell phone .
Whatever it is , it will be consumer electronics : something that costs about $ 200 , and that people choose mostly based on how the case looks .
You 'll pay more for Internet services than you do for the hardware , just as you do now with telephones . [ 1 ]
It will take about a tenth of a second for a click to get to the server and back , so users of heavily interactive software , like Photoshop , will still want to have the computations happening on the desktop .
But if you look at the kind of things most people use computers for , a tenth of a second latency would not be a problem .
My mother does n't really need a desktop computer , and there are a lot of people like her .
The Win for Users
Near my house there is a car with a bumper sticker that reads " death before inconvenience . "
Most people , most of the time , will take whatever choice requires least work .
If Web - based software wins , it will be because it 's more convenient .
And it looks as if it will be , for users and developers both .
To use a purely Web - based application , all you need is a browser connected to the Internet .
So you can use a Web - based application anywhere .
When you install software on your desktop computer , you can only use it on that computer .
Worse still , your files are trapped on that computer .
The inconvenience of this model becomes more and more evident as people get used to networks .
The thin end of the wedge here was Web - based email .
Millions of people now realize that you should have access to email messages no matter where you are .
And if you can see your email , why not your calendar ?
If you can discuss a document with your colleagues , why can't you edit it ?
Why should any of your data be trapped on some computer sitting on a faraway desk ?
The whole idea of " your computer " is going away , and being replaced with " your data . "
You should be able to get at your data from any computer .
Or rather , any client , and a client does n't have to be a computer .
Clients should n't store data ; they should be like telephones .
In fact they may become telephones , or vice versa .
And as clients get smaller , you have another reason not to keep your data on them : something you carry around with you can be lost or stolen .
Leaving your PDA in a taxi is like a disk crash , except that your data is handed to someone else instead of being vaporized .
With purely Web - based software , neither your data nor the applications are kept on the client .
So you do n't have to install anything to use it .
And when there 's no installation , you do n't have to worry about installation going wrong .
There can't be incompatibilities between the application and your operating system , because the software does n't run on your operating system .
Because it needs no installation , it will be easy , and common , to try Web - based software before you " buy " it .
You should expect to be able to test - drive any Web - based application for free , just by going to the site where it 's offered .
At Viaweb our whole site was like a big arrow pointing users to the test drive .
After trying the demo , signing up for the service should require nothing more than filling out a brief form ( the briefer the better ) .
And that should be the last work the user has to do .
With Web - based software , you should get new releases without paying extra , or doing any work , or possibly even knowing about it .
Upgrades wo n't be the big shocks they are now .
Over time applications will quietly grow more powerful .
This will take some effort on the part of the developers .
They will have to design software so that it can be updated without confusing the users .
That 's a new problem , but there are ways to solve it .
With Web - based applications , everyone uses the same version , and bugs can be fixed as soon as they 're discovered .
So Web - based software should have far fewer bugs than desktop software .
At Viaweb , I doubt we ever had ten known bugs at any one time .
That 's orders of magnitude better than desktop software .
Web - based applications can be used by several people at the same time .
This is an obvious win for collaborative applications , but I bet users will start to want this in most applications once they realize it 's possible .
It will often be useful to let two people edit the same document , for example .
Viaweb let multiple users edit a site simultaneously , more because that was the right way to write the software than because we expected users to want to , but it turned out that many did .
When you use a Web - based application , your data will be safer .
Disk crashes wo n't be a thing of the past , but users wo n't hear about them anymore .
They 'll happen within server farms .
And companies offering Web - based applications will actually do backups -- not only because they 'll have real system administrators worrying about such things , but because an ASP that does lose people 's data will be in big , big trouble .
When people lose their own data in a disk crash , they can't get that mad , because they only have themselves to be mad at .
When a company loses their data for them , they 'll get a lot madder .
Finally , Web - based software should be less vulnerable to viruses .
If the client does n't run anything except a browser , there 's less chance of running viruses , and no data locally to damage .
And a program that attacked the servers themselves should find them very well defended . [ 2 ]
For users , Web - based software will be less stressful .
I think if you looked inside the average Windows user you 'd find a huge and pretty much untapped desire for software meeting that description .
Unleashed , it could be a powerful force .
City of Code
To developers , the most conspicuous difference between Web - based and desktop software is that a Web - based application is not a single piece of code .
It will be a collection of programs of different types rather than a single big binary .
And so designing Web - based software is like desiging a city rather than a building : as well as buildings you need roads , street signs , utilities , police and fire departments , and plans for both growth and various kinds of disasters .
At Viaweb , software included fairly big applications that users talked to directly , programs that those programs used , programs that ran constantly in the background looking for problems , programs that tried to restart things if they broke , programs that ran occasionally to compile statistics or build indexes for searches , programs we ran explicitly to garbage - collect resources or to move or restore data , programs that pretended to be users ( to measure performance or expose bugs ) , programs for diagnosing network troubles , programs for doing backups , interfaces to outside services , software that drove an impressive collection of dials displaying real - time server statistics ( a hit with visitors , but indispensable for us too ) , modifications ( including bug fixes ) to open - source software , and a great many configuration files and settings .
Trevor Blackwell wrote a spectacular program for moving stores to new servers across the country , without shutting them down , after we were bought by Yahoo .
Programs paged us , sent faxes and email to users , conducted transactions with credit card processors , and talked to one another through sockets , pipes , http requests , ssh , udp packets , shared memory , and files .
Some of Viaweb even consisted of the absence of programs , since one of the keys to Unix security is not to run unnecessary utilities that people might use to break into your servers .
It did not end with software .
We spent a lot of time thinking about server configurations .
We built the servers ourselves , from components -- partly to save money , and partly to get exactly what we wanted .
We had to think about whether our upstream ISP had fast enough connections to all the backbones .
We serially dated RAID suppliers .
But hardware is not just something to worry about .
When you control it you can do more for users .
With a desktop application , you can specify certain minimum hardware , but you can't add more .
If you administer the servers , you can in one step enable all your users to page people , or send faxes , or send commands by phone , or process credit cards , etc , just by installing the relevant hardware .
We always looked for new ways to add features with hardware , not just because it pleased users , but also as a way to distinguish ourselves from competitors who ( either because they sold desktop software , or resold Web - based applications through ISPs ) did n't have direct control over the hardware .
Because the software in a Web - based application will be a collection of programs rather than a single binary , it can be written in any number of different languages .
When you 're writing desktop software , you 're practically forced to write the application in the same language as the underlying operating system -- meaning C and C ++.
And so these languages ( especially among nontechnical people like managers and VCs ) got to be considered as the languages for " serious " software development .
But that was just an artifact of the way desktop software had to be delivered .
For server - based software you can use any language you want . [ 3 ]
Today a lot of the top hackers are using languages far removed from C and C++ : Perl , Python , and even Lisp .
With server - based software , no one can tell you what language to use , because you control the whole system , right down to the hardware .
Different languages are good for different tasks .
You can use whichever is best for each .
And when you have competitors , " you can " means " you must " ( we 'll return to this later ) , because if you do n't take advantage of this possibility , your competitors will .
Most of our competitors used C and C++ , and this made their software visibly inferior because ( among other things ) , they had no way around the statelessness of CGI scripts .
If you were going to change something , all the changes had to happen on one page , with an Update button at the bottom .
As I 've written elsewhere , by using Lisp , which many people still consider a research language , we could make the Viaweb editor behave more like desktop software .
Releases
One of the most important changes in this new world is the way you do releases .
In the desktop software business , doing a release is a huge trauma , in which the whole company sweats and strains to push out a single , giant piece of code .
Obvious comparisons suggest themselves , both to the process and the resulting product .
With server - based software , you can make changes almost as you would in a program you were writing for yourself .
You release software as a series of incremental changes instead of an occasional big explosion .
A typical desktop software company might do one or two releases a year .
At Viaweb we often did three to five releases a day .
When you switch to this new model , you realize how much software development is affected by the way it is released .
Many of the nastiest problems you see in the desktop software business are due to catastrophic nature of releases .
When you release only one new version a year , you tend to deal with bugs wholesale .
Some time before the release date you assemble a new version in which half the code has been torn out and replaced , introducing countless bugs .
Then a squad of QA people step in and start counting them , and the programmers work down the list , fixing them .
They do not generally get to the end of the list , and indeed , no one is sure where the end is .
It 's like fishing rubble out of a pond .
You never really know what 's happening inside the software .
At best you end up with a statistical sort of correctness .
With server - based software , most of the change is small and incremental .
That in itself is less likely to introduce bugs .
It also means you know what to test most carefully when you 're about to release software : the last thing you changed .
You end up with a much firmer grip on the code .
As a general rule , you do know what 's happening inside it .
You do n't have the source code memorized , of course , but when you read the source you do it like a pilot scanning the instrument panel , not like a detective trying to unravel some mystery .
Desktop software breeds a certain fatalism about bugs .
You know that you 're shipping something loaded with bugs , and you 've even set up mechanisms to compensate for it ( e.g. patch releases ) .
So why worry about a few more ?
Soon you 're releasing whole features you know are broken .
Apple did this earlier this year .
They felt under pressure to release their new OS , whose release date had already slipped four times , but some of the software ( support for CDs and DVDs ) was n't ready .
The solution ?
They released the OS without the unfinished parts , and users will have to install them later .
With Web - based software , you never have to release software before it works , and you can release it as soon as it does work .
The industry veteran may be thinking , it 's a fine - sounding idea to say that you never have to release software before it works , but what happens when you 've promised to deliver a new version of your software by a certain date ?
With Web - based software , you would n't make such a promise , because there are no versions .
Your software changes gradually and continuously .
Some changes might be bigger than others , but the idea of versions just does n't naturally fit onto Web - based software .
If anyone remembers Viaweb this might sound odd , because we were always announcing new versions .
This was done entirely for PR purposes .
The trade press , we learned , thinks in version numbers .
They will give you major coverage for a major release , meaning a new first digit on the version number , and generally a paragraph at most for a point release , meaning a new digit after the decimal point .
Some of our competitors were offering desktop software and actually had version numbers .
And for these releases , the mere fact of which seemed to us evidence of their backwardness , they would get all kinds of publicity .
We did n't want to miss out , so we started giving version numbers to our software too .
When we wanted some publicity , we'd make a list of all the features we 'd added since the last " release , " stick a new version number on the software , and issue a press release saying that the new version was available immediately .
Amazingly , no one ever called us on it .
By the time we were bought , we had done this three times , so we were on Version 4 .
Version 4.1 if I remember correctly .
After Viaweb became Yahoo
Store , there was no longer such a desperate need for publicity , so although the software continued to evolve , the whole idea of version numbers was quietly dropped .
Bugs
The other major technical advantage of Web - based software is that you can reproduce most bugs .
You have the users ' data right there on your disk .
If someone breaks your software , you do n't have to try to guess what 's going on , as you would with desktop software : you should be able to reproduce the error while they 're on the phone with you .
You might even know about it already , if you have code for noticing errors built into your application .
Web - based software gets used round the clock , so everything you do is immediately put through the wringer .
Bugs turn up quickly .
Software companies are sometimes accused of letting the users debug their software .
And that is just what I 'm advocating .
For Web - based software it 's actually a good plan , because the bugs are fewer and transient .
When you release software gradually you get far fewer bugs to start with .
And when you can reproduce errors and release changes instantly , you can find and fix most bugs as soon as they appear .
We never had enough bugs at any one time to bother with a formal bug - tracking system .
You should test changes before you release them , of course , so no major bugs should get released .
Those few that inevitably slip through will involve borderline cases and will only affect the few users that encounter them before someone calls in to complain .
As long as you fix bugs right away , the net effect , for the average user , is far fewer bugs .
I doubt the average Viaweb user ever saw a bug .
Fixing fresh bugs is easier than fixing old ones .
It 's usually fairly quick to find a bug in code you just wrote .
When it turns up you often know what 's wrong before you even look at the source , because you were already worrying about it subconsciously .
Fixing a bug in something you wrote six months ago ( the average case if you release once a year ) is a lot more work .
And since you do n't understand the code as well , you 're more likely to fix it in an ugly way , or even introduce more bugs . [ 4 ]
When you catch bugs early , you also get fewer compound bugs .
Compound bugs are two separate bugs that interact : you trip going downstairs , and when you reach for the handrail it comes off in your hand .
In software this kind of bug is the hardest to find , and also tends to have the worst consequences . [ 5 ]
The traditional " break everything and then filter out the bugs " approach inherently yields a lot of compound bugs .
And software that 's released in a series of small changes inherently tends not to .
The floors are constantly being swept clean of any loose objects that might later get stuck in something .
It helps if you use a technique called functional programming .
Functional programming means avoiding side - effects .
It 's something you 're more likely to see in research papers than commercial software , but for Web - based applications it turns out to be really useful .
It 's hard to write entire programs as purely functional code , but you can write substantial chunks this way .
It makes those parts of your software easier to test , because they have no state , and that is very convenient in a situation where you are constantly making and testing small modifications .
I wrote much of Viaweb 's editor in this style , and we made our scripting language , RTML , a purely functional language .
People from the desktop software business will find this hard to credit , but at Viaweb bugs became almost a game .
Since most released bugs involved borderline cases , the users who encountered them were likely to be advanced users , pushing the envelope .
Advanced users are more forgiving about bugs , especially since you probably introduced them in the course of adding some feature they were asking for .
In fact , because bugs were rare and you had to be doing sophisticated things to see them , advanced users were often proud to catch one .
They would call support in a spirit more of triumph than anger , as if they had scored points off us .
Support
When you can reproduce errors , it changes your approach to customer support .
At most software companies , support is offered as a way to make customers feel better .
They 're either calling you about a known bug , or they 're just doing something wrong and you have to figure out what .
In either case there 's not much you can learn from them .
And so you tend to view support calls as a pain in the ass that you want to isolate from your developers as much as possible .
This was not how things worked at Viaweb .
At Viaweb , support was free , because we wanted to hear from customers .
If someone had a problem , we wanted to know about it right away so that we could reproduce the error and release a fix .
So at Viaweb the developers were always in close contact with support .
The customer support people were about thirty feet away from the programmers , and knew that they could always interrupt anything with a report of a genuine bug .
We would leave a board meeting to fix a serious bug .
Our approach to support made everyone happier .
The customers were delighted .
Just imagine how it would feel to call a support line and be treated as someone bringing important news .
The customer support people liked it because it meant they could help the users , instead of reading scripts to them .
And the programmers liked it because they could reproduce bugs instead of just hearing vague second - hand reports about them .
Our policy of fixing bugs on the fly changed the relationship between customer support people and hackers .
At most software companies , support people are underpaid human shields , and hackers are little copies of God the Father , creators of the world .
Whatever the procedure for reporting bugs , it is likely to be one - directional : support people who hear about bugs fill out some form that eventually gets passed on ( possibly via QA ) to programmers , who put it on their list of things to do .
It was very different at Viaweb .
Within a minute of hearing about a bug from a customer , the support people could be standing next to a programmer hearing him say " Shit , you 're right , it 's a bug . "
It delighted the support people to hear that " you 're right " from the hackers .
They used to bring us bugs with the same expectant air as a cat bringing you a mouse it has just killed .
It also made them more careful in judging the seriousness of a bug , because now their honor was on the line .
After we were bought by Yahoo , the customer support people were moved far away from the programmers .
It was only then that we realized that they were effectively QA and to some extent marketing as well .
In addition to catching bugs , they were the keepers of the knowledge of vaguer , buglike things , like features that confused users . [ 6 ]
They were also a kind of proxy focus group ; we could ask them which of two new features users wanted more , and they were always right .
Morale
Being able to release software immediately is a big motivator .
Often as I was walking to work I would think of some change I wanted to make to the software , and do it that day .
This worked for bigger features as well .
Even if something was going to take two weeks to write ( few projects took longer ) , I knew I could see the effect in the software as soon as it was done .
If I 'd had to wait a year for the next release , I would have shelved most of these ideas , for a while at least .
The thing about ideas , though , is that they lead to more ideas .
Have you ever noticed that when you sit down to write something , half the ideas that end up in it are ones you thought of while writing it ?
The same thing happens with software .
Working to implement one idea gives you more ideas .
So shelving an idea costs you not only that delay in implementing it , but also all the ideas that implementing it would have led to .
In fact , shelving an idea probably even inhibits new ideas : as you start to think of some new feature , you catch sight of the shelf and think " but I already have a lot of new things I want to do for the next release . "
What big companies do instead of implementing features is plan them .
At Viaweb we sometimes ran into trouble on this account .
Investors and analysts would ask us what we had planned for the future .
The truthful answer would have been , we did n't have any plans .
We had general ideas about things we wanted to improve , but if we knew how we would have done it already .
What were we going to do in the next six months ?
Whatever looked like the biggest win .
I do n't know if I ever dared give this answer , but that was the truth .
Plans are just another word for ideas on the shelf .
When we thought of good ideas , we implemented them .
At Viaweb , as at many software companies , most code had one definite owner .
But when you owned something you really owned it : no one except the owner of a piece of software had to approve ( or even know about ) a release .
There was no protection against breakage except the fear of looking like an idiot to one 's peers , and that was more than enough .
I may have given the impression that we just blithely plowed forward writing code .
We did go fast , but we thought very carefully before we released software onto those servers .
And paying attention is more important to reliability than moving slowly .
Because he pays close attention , a Navy pilot can land a 40,000 lb. aircraft at 140 miles per hour on a pitching carrier deck , at night , more safely than the average teenager can cut a bagel .
This way of writing software is a double - edged sword of course .
It works a lot better for a small team of good , trusted programmers than it would for a big company of mediocre ones , where bad ideas are caught by committees instead of the people that had them .
Brooks in Reverse
Fortunately , Web - based software does require fewer programmers .
I once worked for a medium - sized desktop software company that had over 100 people working in engineering as a whole .
Only 13 of these were in product development .
All the rest were working on releases , ports , and so on .
With Web - based software , all you need ( at most ) are the 13 people , because there are no releases , ports , and so on .
Viaweb was written by just three people . [ 7 ]
I was always under pressure to hire more , because we wanted to get bought , and we knew that buyers would have a hard time paying a high price for a company with only three programmers .
( Solution : we hired more , but created new projects for them . )
When you can write software with fewer programmers , it saves you more than money .
As Fred Brooks pointed out in The Mythical Man-Month , adding people to a project tends to slow it down .
The number of possible connections between developers grows exponentially with the size of the group .
The larger the group , the more time they 'll spend in meetings negotiating how their software will work together , and the more bugs they 'll get from unforeseen interactions .
Fortunately , this process also works in reverse : as groups get smaller , software development gets exponentially more efficient .
I can't remember the programmers at Viaweb ever having an actual meeting .
We never had more to say at any one time than we could say as we were walking to lunch .
If there is a downside here , it is that all the programmers have to be to some degree system administrators as well .
When you 're hosting software , someone has to be watching the servers , and in practice the only people who can do this properly are the ones who wrote the software .
At Viaweb our system had so many components and changed so frequently that there was no definite border between software and infrastructure .
Arbitrarily declaring such a border would have constrained our design choices .
And so although we were constantly hoping that one day ( " in a couple months " ) everything would be stable enough that we could hire someone whose job was just to worry about the servers , it never happened .
I do n't think it could be any other way , as long as you 're still actively developing the product .
Web - based software is never going to be something you write , check in , and go home .
It 's a live thing , running on your servers right now .
A bad bug might not just crash one user 's process ; it could crash them all .
If a bug in your code corrupts some data on disk , you have to fix it .
And so on .
We found that you do n't have to watch the servers every minute ( after the first year or so ) , but you definitely want to keep an eye on things you 've changed recently .
You do n't release code late at night and then go home .
Watching Users
With server - based software , you 're in closer touch with your code .
You can also be in closer touch with your users .
Intuit is famous for introducing themselves to customers at retail stores and asking to follow them home .
If you 've ever watched someone use your software for the first time , you know what surprises must have awaited them .
Software should do what users think it will .
But you can't have any idea what users will be thinking , believe me , until you watch them .
And server - based software gives you unprecedented information about their behavior .
You 're not limited to small , artificial focus groups .
You can see every click made by every user .
You have to consider carefully what you 're going to look at , because you do n't want to violate users ' privacy , but even the most general statistical sampling can be very useful .
When you have the users on your server , you do n't have to rely on benchmarks , for example .
Benchmarks are simulated users .
With server - based software , you can watch actual users .
To decide what to optimize , just log into a server and see what 's consuming all the CPU .
And you know when to stop optimizing too : we eventually got the Viaweb editor to the point where it was memory - bound rather than CPU - bound , and since there was nothing we could do to decrease the size of users ' data ( well , nothing easy ) , we knew we might as well stop there .
Efficiency matters for server - based software , because you 're paying for the hardware .
The number of users you can support per server is the divisor of your capital cost , so if you can make your software very efficient you can undersell competitors and still make a profit .
At Viaweb we got the capital cost per user down to about $ 5 .
It would be less now , probably less than the cost of sending them the first month 's bill .
Hardware is free now , if your software is reasonably efficient .
Watching users can guide you in design as well as optimization .
Viaweb had a scripting language called RTML that let advanced users define their own page styles .
We found that RTML became a kind of suggestion box , because users only used it when the predefined page styles could n't do what they wanted .
Originally the editor put button bars across the page , for example , but after a number of users used RTML to put buttons down the left side , we made that an option ( in fact the default ) in the predefined page styles .
Finally , by watching users you can often tell when they 're in trouble .
And since the customer is always right , that 's a sign of something you need to fix .
At Viaweb the key to getting users was the online test drive .
It was not just a series of slides built by marketing people .
In our test drive , users actually used the software .
It took about five minutes , and at the end of it they had built a real , working store .
The test drive was the way we got nearly all our new users .
I think it will be the same for most Web - based applications .
If users can get through a test drive successfully , they 'll like the product .
If they get confused or bored , they wo n't .
So anything we could do to get more people through the test drive would increase our growth rate .
I studied click trails of people taking the test drive and found that at a certain step they would get confused and click on the browser 's Back button .
( If you try writing Web - based applications , you 'll find that the Back button becomes one of your most interesting philosophical problems . )
So I added a message at that point , telling users that they were nearly finished , and reminding them not to click on the Back button .
Another great thing about Web - based software is that you get instant feedback from changes : the number of people completing the test drive rose immediately from 60 % to 90 % .
And since the number of new users was a function of the number of completed test drives , our revenue growth increased by 50 % , just from that change .
Money
In the early 1990s I read an article in which someone said that software was a subscription business .
At first this seemed a very cynical statement .
But later I realized that it reflects reality : software development is an ongoing process .
I think it 's cleaner if you openly charge subscription fees , instead of forcing people to keep buying and installing new versions so that they 'll keep paying you .
And fortunately , subscriptions are the natural way to bill for Web - based applications .
Hosting applications is an area where companies will play a role that is not likely to be filled by freeware .
Hosting applications is a lot of stress , and has real expenses .
No one is going to want to do it for free .
For companies , Web - based applications are an ideal source of revenue .
Instead of starting each quarter with a blank slate , you have a recurring revenue stream .
Because your software evolves gradually , you do n't have to worry that a new model will flop ; there never need be a new model , per se , and if you do something to the software that users hate , you 'll know right away .
You have no trouble with uncollectable bills ; if someone wo n't pay you can just turn off the service .
And there is no possibility of piracy .
That last " advantage " may turn out to be a problem .
Some amount of piracy is to the advantage of software companies .
If some user really would not have bought your software at any price , you have n't lost anything if he uses a pirated copy .
In fact you gain , because he is one more user helping to make your software the standard -- or who might buy a copy later , when he graduates from high school .
When they can , companies like to do something called price discrimination , which means charging each customer as much as they can afford . [ 8 ]
Software is particularly suitable for price discrimination , because the marginal cost is close to zero .
This is why some software costs more to run on Suns than on Intel boxes : a company that uses Suns is not interested in saving money and can safely be charged more .
Piracy is effectively the lowest tier of price discrimination .
I think that software companies understand this and deliberately turn a blind eye to some kinds of piracy . [ 9 ]
With server - based software they are going to have to come up with some other solution .
Web - based software sells well , especially in comparison to desktop software , because it 's easy to buy .
You might think that people decide to buy something , and then buy it , as two separate steps .
That 's what I thought before Viaweb , to the extent I thought about the question at all .
In fact the second step can propagate back into the first : if something is hard to buy , people will change their mind about whether they wanted it .
And vice versa : you 'll sell more of something when it 's easy to buy .
I buy more books because Amazon exists .
Web - based software is just about the easiest thing in the world to buy , especially if you have just done an online demo .
Users should not have to do much more than enter a credit card number .
( Make them do more at your peril . )
Sometimes Web - based software is offered through ISPs acting as resellers .
This is a bad idea .
You have to be administering the servers , because you need to be constantly improving both hardware and software .
If you give up direct control of the servers , you give up most of the advantages of developing Web - based applications .
Several of our competitors shot themselves in the foot this way -- usually , I think , because they were overrun by suits who were excited about this huge potential channel , and did n't realize that it would ruin the product they hoped to sell through it .
Selling Web - based software through ISPs is like selling sushi through vending machines .
Customers
Who will the customers be ?
At Viaweb they were initially individuals and smaller companies , and I think this will be the rule with Web - based applications .
These are the users who are ready to try new things , partly because they 're more flexible , and partly because they want the lower costs of new technology .
Web - based applications will often be the best thing for big companies too ( though they 'll be slow to realize it ) .
The best intranet is the Internet .
If a company uses true Web - based applications , the software will work better , the servers will be better administered , and employees will have access to the system from anywhere .
The argument against this approach usually hinges on security : if access is easier for employees , it will be for bad guys too .
Some larger merchants were reluctant to use Viaweb because they thought customers ' credit card information would be safer on their own servers .
It was not easy to make this point diplomatically , but in fact the data was almost certainly safer in our hands than theirs .
Who can hire better people to manage security , a technology startup whose whole business is running servers , or a clothing retailer ?
Not only did we have better people worrying about security , we worried more about it .
If someone broke into the clothing retailer 's servers , it would affect at most one merchant , could probably be hushed up , and in the worst case might get one person fired .
If someone broke into ours , it could affect thousands of merchants , would probably end up as news on CNet , and could put us out of business .
If you want to keep your money safe , do you keep it under your mattress at home , or put it in a bank ?
This argument applies to every aspect of server administration : not just security , but uptime , bandwidth , load management , backups , etc .
Our existence depended on doing these things right .
Server problems were the big no - no for us , like a dangerous toy would be for a toy maker , or a salmonella outbreak for a food processor .
A big company that uses Web - based applications is to that extent outsourcing IT .
Drastic as it sounds , I think this is generally a good idea .
Companies are likely to get better service this way than they would from in - house system administrators .
System administrators can become cranky and unresponsive because they 're not directly exposed to competitive pressure : a salesman has to deal with customers , and a developer has to deal with competitors ' software , but a system administrator , like an old bachelor , has few external forces to keep him in line . [ 10 ]
At Viaweb we had external forces in plenty to keep us in line .
The people calling us were customers , not just co-workers .
If a server got wedged , we jumped ; just thinking about it gives me a jolt of adrenaline , years later .
So Web - based applications will ordinarily be the right answer for big companies too .
They will be the last to realize it , however , just as they were with desktop computers .
And partly for the same reason : it will be worth a lot of money to convince big companies that they need something more expensive .
There is always a tendency for rich customers to buy expensive solutions , even when cheap solutions are better , because the people offering expensive solutions can spend more to sell them .
At Viaweb we were always up against this .
We lost several high - end merchants to Web consulting firms who convinced them they'd be better off if they paid half a million dollars for a custom - made online store on their own server .
They were , as a rule , not better off , as more than one discovered when Christmas shopping season came around and loads rose on their server .
Viaweb was a lot more sophisticated than what most of these merchants got , but we could n't afford to tell them .
At $ 300 a month , we could n't afford to send a team of well - dressed and authoritative - sounding people to make presentations to customers .
A large part of what big companies pay extra for is the cost of selling expensive things to them .
( If the Defense Department pays a thousand dollars for toilet seats , it 's partly because it costs a lot to sell toilet seats for a thousand dollars . )
And this is one reason intranet software will continue to thrive , even though it is probably a bad idea .
It 's simply more expensive .
There is nothing you can do about this conundrum , so the best plan is to go for the smaller customers first .
The rest will come in time .
Son of Server
Running software on the server is nothing new .
In fact it 's the old model : mainframe applications are all server - based .
If server - based software is such a good idea , why did it lose last time ?
Why did desktop computers eclipse mainframes ?
At first desktop computers did n't look like much of a threat .
The first users were all hackers -- or hobbyists , as they were called then .
They liked microcomputers because they were cheap .
For the first time , you could have your own computer .
The phrase " personal computer " is part of the language now , but when it was first used it had a deliberately audacious sound , like the phrase " personal satellite " would today .
Why did desktop computers take over ?
I think it was because they had better software .
And I think the reason microcomputer software was better was that it could be written by small companies .
I do n't think many people realize how fragile and tentative startups are in the earliest stage .
Many startups begin almost by accident -- as a couple guys , either with day jobs or in school , writing a prototype of something that might , if it looks promising , turn into a company .
At this larval stage , any significant obstacle will stop the startup dead in its tracks .
Writing mainframe software required too much commitment up front .
Development machines were expensive , and because the customers would be big companies , you 'd need an impressive - looking sales force to sell it to them .
Starting a startup to write mainframe software would be a much more serious undertaking than just hacking something together on your Apple II in the evenings .
And so you did n't get a lot of startups writing mainframe applications .
The arrival of desktop computers inspired a lot of new software , because writing applications for them seemed an attainable goal to larval startups .
Development was cheap , and the customers would be individual people that you could reach through computer stores or even by mail - order .
The application that pushed desktop computers out into the mainstream was VisiCalc , the first spreadsheet .
It was written by two guys working in an attic , and yet did things no mainframe software could do . [ 11 ]
VisiCalc was such an advance , in its time , that people bought Apple IIs just to run it .
And this was the beginning of a trend : desktop computers won because startups wrote software for them .
It looks as if server - based software will be good this time around , because startups will write it .
Computers are so cheap now that you can get started , as we did , using a desktop computer as a server .
Inexpensive processors have eaten the workstation market ( you rarely even hear the word now ) and are most of the way through the server market ;
Yahoo's servers , which deal with loads as high as any on the Internet , all have the same inexpensive Intel processors that you have in your desktop machine .
And once you 've written the software , all you need to sell it is a Web site .
Nearly all our users came direct to our site through word of mouth and references in the press . [ 12 ]
Viaweb was a typical larval startup .
We were terrified of starting a company , and for the first few months comforted ourselves by treating the whole thing as an experiment that we might call off at any moment .
Fortunately , there were few obstacles except technical ones .
While we were writing the software , our Web server was the same desktop machine we used for development , connected to the outside world by a dialup line .
Our only expenses in that phase were food and rent .
There is all the more reason for startups to write Web - based software now , because writing desktop software has become a lot less fun .
If you want to write desktop software now you do it on Microsoft 's terms , calling their APIs and working around their buggy OS .
And if you manage to write something that takes off , you may find that you were merely doing market research for Microsoft .
If a company wants to make a platform that startups will build on , they have to make it something that hackers themselves will want to use .
That means it has to be inexpensive and well - designed .
The Mac was popular with hackers when it first came out , and a lot of them wrote software for it . [ 13 ]
You see this less with Windows , because hackers do n't use it .
The kind of people who are good at writing software tend to be running Linux or FreeBSD now .
I do n't think we would have started a startup to write desktop software , because desktop software has to run on Windows , and before we could write software for Windows we'd have to use it .
The Web let us do an end - run around Windows , and deliver software running on Unix direct to users through the browser .
That is a liberating prospect , a lot like the arrival of PCs twenty - five years ago .
Microsoft
Back when desktop computers arrived , IBM was the giant that everyone was afraid of .
It 's hard to imagine now , but I remember the feeling very well .
Now the frightening giant is Microsoft , and I do n't think they are as blind to the threat facing them as IBM was .
After all , Microsoft deliberately built their business in IBM 's blind spot .
I mentioned earlier that my mother does n't really need a desktop computer .
Most users probably do n't .
That 's a problem for Microsoft , and they know it .
If applications run on remote servers , no one needs Windows .
What will Microsoft do ?
Will they be able to use their control of the desktop to prevent , or constrain , this new generation of software ?
My guess is that Microsoft will develop some kind of server / desktop hybrid , where the operating system works together with servers they control .
At a minimum , files will be centrally available for users who want that .
I do n't expect Microsoft to go all the way to the extreme of doing the computations on the server , with only a browser for a client , if they can avoid it .
If you only need a browser for a client , you do n't need Microsoft on the client , and if Microsoft does n't control the client , they can't push users towards their server - based applications .
I think Microsoft will have a hard time keeping the genie in the bottle .
There will be too many different types of clients for them to control them all .
And if Microsoft 's applications only work with some clients , competitors will be able to trump them by offering applications that work from any client . [ 14 ]
In a world of Web - based applications , there is no automatic place for Microsoft .
They may succeed in making themselves a place , but I do n't think they 'll dominate this new world as they did the world of desktop applications .
It 's not so much that a competitor will trip them up as that they will trip over themselves .
With the rise of Web - based software , they will be facing not just technical problems but their own wishful thinking .
What they need to do is cannibalize their existing business , and I can't see them facing that .
The same single - mindedness that has brought them this far will now be working against them .
IBM was in exactly the same situation , and they could not master it .
IBM made a late and half - hearted entry into the microcomputer business because they were ambivalent about threatening their cash cow , mainframe computing .
Microsoft will likewise be hampered by wanting to save the desktop .
A cash cow can be a damned heavy monkey on your back .
I 'm not saying that no one will dominate server - based applications .
Someone probably will eventually .
But I think that there will be a good long period of cheerful chaos , just as there was in the early days of microcomputers .
That was a good time for startups .
Lots of small companies flourished , and did it by making cool things .
Startups but More So
The classic startup is fast and informal , with few people and little money .
Those few people work very hard , and technology magnifies the effect of the decisions they make .
If they win , they win big .
In a startup writing Web - based applications , everything you associate with startups is taken to an extreme .
You can write and launch a product with even fewer people and even less money .
You have to be even faster , and you can get away with being more informal .
You can literally launch your product as three guys sitting in the living room of an apartment , and a server collocated at an ISP .
We did .
Over time the teams have gotten smaller , faster , and more informal .
In 1960 , software development meant a roomful of men with horn rimmed glasses and narrow black neckties , industriously writing ten lines of code a day on IBM coding forms .
In 1980 , it was a team of eight to ten people wearing jeans to the office and typing into vt100s .
Now it 's a couple of guys sitting in a living room with laptops .
( And jeans turn out not to be the last word in informality . )
Startups are stressful , and this , unfortunately , is also taken to an extreme with Web - based applications .
Many software companies , especially at the beginning , have periods where the developers slept under their desks and so on .
The alarming thing about Web - based software is that there is nothing to prevent this becoming the default .
The stories about sleeping under desks usually end : then at last we shipped it and we all went home and slept for a week .
Web - based software never ships .
You can work 16 - hour days for as long as you want to .
And because you can , and your competitors can , you tend to be forced to .
You can , so you must .
It 's Parkinson 's Law running in reverse .
The worst thing is not the hours but the responsibility .
Programmers and system administrators traditionally each have their own separate worries .
Programmers have to worry about bugs , and system administrators have to worry about infrastructure .
Programmers may spend a long day up to their elbows in source code , but at some point they get to go home and forget about it .
System administrators never quite leave the job behind , but when they do get paged at 4:00 AM , they do n't usually have to do anything very complicated .
With Web - based applications , these two kinds of stress get combined .
The programmers become system administrators , but without the sharply defined limits that ordinarily make the job bearable .
At Viaweb we spent the first six months just writing software .
We worked the usual long hours of an early startup .
In a desktop software company , this would have been the part where we were working hard , but it felt like a vacation compared to the next phase , when we took users onto our server .
The second biggest benefit of selling Viaweb to Yahoo ( after the money ) was to be able to dump ultimate responsibility for the whole thing onto the shoulders of a big company .
Desktop software forces users to become system administrators .
Web - based software forces programmers to .
There is less stress in total , but more for the programmers .
That 's not necessarily bad news .
If you 're a startup competing with a big company , it 's good news . [ 15 ]
Web - based applications offer a straightforward way to outwork your competitors .
No startup asks for more .
Just Good Enough
One thing that might deter you from writing Web - based applications is the lameness of Web pages as a UI .
That is a problem , I admit .
There were a few things we would have really liked to add to HTML and HTTP .
What matters , though , is that Web pages are just good enough .
There is a parallel here with the first microcomputers .
The processors in those machines were n't actually intended to be the CPUs of computers .
They were designed to be used in things like traffic lights .
But guys like Ed Roberts , who designed the Altair , realized that they were just good enough .
You could combine one of these chips with some memory ( 256 bytes in the first Altair ) , and front panel switches , and you 'd have a working computer .
Being able to have your own computer was so exciting that there were plenty of people who wanted to buy them , however limited .
Web pages were n't designed to be a UI for applications , but they 're just good enough .
And for a significant number of users , software that you can use from any browser will be enough of a win in itself to outweigh any awkwardness in the UI .
Maybe you can't write the best - looking spreadsheet using HTML , but you can write a spreadsheet that several people can use simultaneously from different locations without special client software , or that can incorporate live data feeds , or that can page you when certain conditions are triggered .
More importantly , you can write new kinds of applications that do n't even have names yet .
VisiCalc was not merely a microcomputer version of a mainframe application , after all -- it was a new type of application .
Of course , server - based applications do n't have to be Web - based .
You could have some other kind of client .
But I 'm pretty sure that 's a bad idea .
It would be very convenient if you could assume that everyone would install your client -- so convenient that you could easily convince yourself that they all would -- but if they do n't , you 're hosed .
Because Web - based software assumes nothing about the client , it will work anywhere the Web works .
That 's a big advantage already , and the advantage will grow as new Web devices proliferate .
Users will like you because your software just works , and your life will be easier because you wo n't have to tweak it for every new client . [ 16 ]
I feel like I 've watched the evolution of the Web as closely as anyone , and I can't predict what 's going to happen with clients .
Convergence is probably coming , but where ?
I can't pick a winner .
One thing I can predict is conflict between AOL and Microsoft .
Whatever Microsoft's .NET turns out to be , it will probably involve connecting the desktop to servers .
Unless AOL fights back , they will either be pushed aside or turned into a pipe between Microsoft client and server software .
If Microsoft and AOL get into a client war , the only thing sure to work on both will be browsing the Web , meaning Web - based applications will be the only kind that work everywhere .
How will it all play out ?
I do n't know .
And you do n't have to know if you bet on Web - based applications .
No one can break that without breaking browsing .
The Web may not be the only way to deliver software , but it 's one that works now and will continue to work for a long time .
Web - based applications are cheap to develop , and easy for even the smallest startup to deliver .
They 're a lot of work , and of a particularly stressful kind , but that only makes the odds better for startups .
Why Not ?
E. B . White was amused to learn from a farmer friend that many electrified fences do n't have any current running through them .
The cows apparently learn to stay away from them , and after that you do n't need the current .
" Rise up , cows ! " he wrote , " Take your liberty while despots snore ! "
If you 're a hacker who has thought of one day starting a startup , there are probably two things keeping you from doing it .
One is that you do n't know anything about business .
The other is that you 're afraid of competition .
Neither of these fences have any current in them .
There are only two things you have to know about business : build something users love , and make more than you spend .
If you get these two right , you 'll be ahead of most startups .
You can figure out the rest as you go .
You may not at first make more than you spend , but as long as the gap is closing fast enough you 'll be ok .
If you start out underfunded , it will at least encourage a habit of frugality .
The less you spend , the easier it is to make more than you spend .
Fortunately , it can be very cheap to launch a Web - based application .
We launched on under $ 10,000 , and it would be even cheaper today .
We had to spend thousands on a server , and thousands more to get SSL .
( The only company selling SSL software at the time was Netscape . )
Now you can rent a much more powerful server , with SSL included , for less than we paid for bandwidth alone .
You could launch a Web - based application now for less than the cost of a fancy office chair .
As for building something users love , here are some general tips .
Start by making something clean and simple that you would want to use yourself .
Get a version 1.0 out fast , then continue to improve the software , listening closely to the users as you do .
The customer is always right , but different customers are right about different things ; the least sophisticated users show you what you need to simplify and clarify , and the most sophisticated tell you what features you need to add .
The best thing software can be is easy , but the way to do this is to get the defaults right , not to limit users ' choices .
Do n't get complacent if your competitors ' software is lame ; the standard to compare your software to is what it could be , not what your current competitors happen to have .
Use your software yourself , all the time .
Viaweb was supposed to be an online store builder , but we used it to make our own site too .
Do n't listen to marketing people or designers or product managers just because of their job titles .
If they have good ideas , use them , but it 's up to you to decide ; software has to be designed by hackers who understand design , not designers who know a little about software .
If you can't design software as well as implement it , do n't start a startup .
Now let 's talk about competition .
What you 're afraid of is not presumably groups of hackers like you , but actual companies , with offices and business plans and salesmen and so on , right ?
Well , they are more afraid of you than you are of them , and they 're right .
It 's a lot easier for a couple of hackers to figure out how to rent office space or hire sales people than it is for a company of any size to get software written .
I 've been on both sides , and I know .
When Viaweb was bought by Yahoo , I suddenly found myself working for a big company , and it was like trying to run through waist - deep water .
I do n't mean to disparage Yahoo .
They had some good hackers , and the top management were real butt - kickers .
For a big company , they were exceptional .
But they were still only about a tenth as productive as a small startup .
No big company can do much better than that .
What 's scary about Microsoft is that a company so big can develop software at all .
They 're like a mountain that can walk .
Do n't be intimidated .
You can do as much that Microsoft can't as they can do that you can't .
And no one can stop you .
You do n't have to ask anyone 's permission to develop Web - based applications .
You do n't have to do licensing deals , or get shelf space in retail stores , or grovel to have your application bundled with the OS .
You can deliver software right to the browser , and no one can get between you and potential users without preventing them from browsing the Web .
You may not believe it , but I promise you , Microsoft is scared of you .
The complacent middle managers may not be , but Bill is , because he was you once , back in 1975 , the last time a new way of delivering software appeared .
Notes
[ 1 ] Realizing that much of the money is in the services , companies building lightweight clients have usually tried to combine the hardware with an online service .
This approach has not worked well , partly because you need two different kinds of companies to build consumer electronics and to run an online service , and partly because users hate the idea .
Giving away the razor and making money on the blades may work for Gillette , but a razor is much smaller commitment than a Web terminal .
Cell phone handset makers are satisfied to sell hardware without trying to capture the service revenue as well .
That should probably be the model for Internet clients too .
If someone just sold a nice - looking little box with a Web browser that you could use to connect through any ISP , every technophobe in the country would buy one .
[ 2 ] Security always depends more on not screwing up than any design decision , but the nature of server - based software will make developers pay more attention to not screwing up .
Compromising a server could cause such damage that ASPs ( that want to stay in business ) are likely to be careful about security .
[ 3 ]
In 1995 , when we started Viaweb , Java applets were supposed to be the technology everyone was going to use to develop server - based applications .
Applets seemed to us an old - fashioned idea .
Download programs to run on the client ?
Simpler just to go all the way and run the programs on the server .
We wasted little time on applets , but countless other startups must have been lured into this tar pit .
Few can have escaped alive , or Microsoft could not have gotten away with dropping Java in the most recent version of Explorer .
[ 4 ]
This point is due to Trevor Blackwell , who adds " the cost of writing software goes up more than linearly with its size .
Perhaps this is mainly due to fixing old bugs , and the cost can be more linear if all bugs are found quickly . "
[ 5 ]
The hardest kind of bug to find may be a variant of compound bug where one bug happens to compensate for another .
When you fix one bug , the other becomes visible .
But it will seem as if the fix is at fault , since that was the last thing you changed .
[ 6 ]
Within Viaweb we once had a contest to describe the worst thing about our software .
Two customer support people tied for first prize with entries I still shiver to recall .
We fixed both problems immediately .
[ 7 ]
Robert Morris wrote the ordering system , which shoppers used to place orders .
Trevor Blackwell wrote the image generator and the manager , which merchants used to retrieve orders , view statistics , and configure domain names etc .
I wrote the editor , which merchants used to build their sites .
The ordering system and image generator were written in C and C++ , the manager mostly in Perl , and the editor in Lisp .
[ 8 ]
Price discrimination is so pervasive ( how often have you heard a retailer claim that their buying power meant lower prices for you ? ) that I was surprised to find it was outlawed in the U.S. by the Robinson - Patman Act of 1936 .
This law does not appear to be vigorously enforced .
[ 9 ]
In No Logo , Naomi Klein says that clothing brands favored by " urban youth " do not try too hard to prevent shoplifting because in their target market the shoplifters are also the fashion leaders .
[ 10 ] Companies often wonder what to outsource and what not to .
One possible answer : outsource any job that 's not directly exposed to competitive pressure , because outsourcing it will thereby expose it to competitive pressure .
[ 11 ]
The two guys were Dan Bricklin and Bob Frankston .
Dan wrote a prototype in Basic in a couple days , then over the course of the next year they worked together ( mostly at night ) to make a more powerful version written in 6502 machine language .
Dan was at Harvard Business School at the time and Bob nominally had a day job writing software .
" There was no great risk in doing a business , " Bob wrote , " If it failed it failed .
No big deal . "
[ 12 ]
It 's not quite as easy as I make it sound .
It took a painfully long time for word of mouth to get going , and we did not start to get a lot of press coverage until we hired a PR firm ( admittedly the best in the business ) for $ 16,000 per month .
However , it was true that the only significant channel was our own Web site .
[ 13 ]
If the Mac was so great , why did it lose ?
Cost , again .
Microsoft concentrated on the software business , and unleashed a swarm of cheap component suppliers on Apple hardware .
It did not help , either , that suits took over during a critical period .
[ 14 ]
One thing that would help Web - based applications , and help keep the next generation of software from being overshadowed by Microsoft , would be a good open - source browser .
Mozilla is open - source but seems to have suffered from having been corporate software for so long .
A small , fast browser that was actively maintained would be a great thing in itself , and would probably also encourage companies to build little Web appliances .
Among other things , a proper open - source browser would cause HTTP and HTML to continue to evolve ( as e.g. Perl has ) .
It would help Web - based applications greatly to be able to distinguish between selecting a link and following it ; all you 'd need to do this would be a trivial enhancement of HTTP , to allow multiple urls in a request .
Cascading menus would also be good .
If you want to change the world , write a new Mosaic .
Think it 's too late ?
In 1998 a lot of people thought it was too late to launch a new search engine , but Google proved them wrong .
There is always room for something new if the current options suck enough .
Make sure it works on all the free OSes first -- new things start with their users .
[ 15 ]
Trevor Blackwell , who probably knows more about this from personal experience than anyone , writes :
" I would go farther in saying that because server - based software is so hard on the programmers , it causes a fundamental economic shift away from large companies .
It requires the kind of intensity and dedication from programmers that they will only be willing to provide when it 's their own company .
Software companies can hire skilled people to work in a not - too - demanding environment , and can hire unskilled people to endure hardships , but they can't hire highly skilled people to bust their asses .
Since capital is no longer needed , big companies have little to bring to the table . "
[ 16 ]
In the original version of this essay , I advised avoiding Javascript .
That was a good plan in 2001 , but Javascript now works .
Thanks to Sarah Harlin , Trevor Blackwell , Robert Morris , Eric Raymond , Ken Anderson , and Dan Giffin for reading drafts of this paper ; to Dan Bricklin and Bob Frankston for information about VisiCalc ; and again to Ken Anderson for inviting me to speak at BBN .
You 'll find this essay and 14 others in Hackers & Painters .
Some Technical Details
Japanese Translation
Microsoft finally agrees
Gates Email
In selling , it is important to understand not only the nature of the product you are offering but the nature of your prospect as well .
When I was in college and thinking about joining a fraternity , I had an experience that really points out the value of understanding this very important trigger .
Of all the fraternities I could have joined in college , I chose the worst one .
Why ?
After spending time visiting various fraternities , I had figured out the nature of why guys join a fraternity in the first place .
I reasoned that with this knowledge , I could singlehandedly take the worst fraternity on campus and turn it into the best one , simply by coming up with an effective marketing plan to dramatically increase membership .
My approach would take into account the nature of my prospect ( the student ) and , using this information , seduce that student into wanting to join my fraternity at the exclusion of all others .
I would thus , by building a large membership , transform my fraternity into a top- rated organization , regardless of how bad it had been when I joined .
This may seem like a rather naive plan , but I was convinced that I personally could make a difference .
After joining and going through the initiation period , I got sworn in , went before my fraternity brothers , and laid out my plan — “ Operation Survival ” as I called it .
I explained that guys join a fraternity for two psychological and motivating factors — one was as a vehicle to meet girls and the other was to experience the camaraderie , brotherhood and love of a group of guys .
I showed that an illusion could be created to capture this effect of love and social interaction in a fraternity for the sake of acquiring new members or “ pledges , ” as they were called .
The goal was to have more guys wanting to join our fraternity than any other on campus .
And we needed this big infusion of new faces or our fraternity would surely die — that ’s how bad this place was and how badly we were doing attracting new members .
It truly was Operation Survival .
My plan was simple and consisted of two parts .
The first part was to invite the most beautiful and sexy girls to act as hostesses for our get - acquainted events .
I did n’t want the active brothers ’ girlfriends to act as hostesses , as was usually the case .
No , these gals had to be world - class — girls the guys would talk about for days after our event .
The second was the way each brother had to introduce a fellow brother to a prospective member .
I insisted that the brother should say to a prospect something very loving and warm about his fellow fraternity brother .
For example , “ Put your arms around your brother and tell the prospect what a wonderful person your brother is and how much you genuinely admire and love this guy . ”
The plan was not as easy to execute as it might seem .
First , no world - class gal on campus wanted any part of my fraternity .
Second , the guys hated each other .
Expressing love about a fellow brother whom you hated seemed a rather difficult gesture , if not impossible .
But I did a few things that made it work .
We hired four of the most beautiful strippers from the local strip clubs .
They were young , sexy , and welcomed the opportunity to “ act out ” roles as university coeds and hostesses for our three planned get - acquainted parties .
I then rehearsed the guys and made them put their arms around each other , expressing this new brotherly love that was so foreign and repulsive to them .
They could barely stand it .
But the charade worked .
Not only did we end up with the biggest pledge class in our history , beating all the other fraternities , but some of the guys actually got closer to their fellow brothers , and an entire new spirit spread throughout the fraternity .
There was such a buzz around campus about the girls who were acting as our hostesses that by the time we held our third party , we did n’t have room for the crowd that we attracted .
In fact , the strippers enjoyed their experience so much that they invited some of their beautiful girlfriends to join the fun .
( One of the gals even turned out to be a hooker . )
The students were so impressed with the love , brotherhood , and display of beautiful women that when it came time to join , the students were literally begging to sign up .
I had understood the psychological trigger of my product ( the fraternity ) and of my prospect ( the young student looking for a place to find love and social interaction ) .
The key in this case was the power of knowing the nature of the prospect — those emotional aspects of the prospect that would respond best to a planned pitch .
Operation Survival was a huge success and transformed my fraternity into one of the best on campus — all from a simple marketing plan and in a few short weeks .
Let me cite a few more examples to illustrate this very important principle .
How can you use this trigger to your advantage in a face - to - face selling opportunity ?
Get to know the nature of your prospect relative to the nature of your product .
Become an expert on your prospect .
Be a good listener ; talk to your prospects and those who know and have dealt with them .
You ’ll soon discover the very nature of your prospect and the emotional reasons he or she will buy .
If I were selling a home , I would get to know the motivations of my prospects and what they are looking for in a home .
I would find out their history .
I would ask them about their other home - buying experiences and what their hobbies are .
I would gather as much information about them as possible and then I would develop a sense of what emotional and logical needs they might have .
Understanding their needs and the nature of the prospect in general would give me enough information to craft a very effective sales presentation that , ideally , would match the nature of my product with the nature of my prospect .
The prospect has basic emotional needs that your product will solve , regardless of how sophisticated or simple your product offering is .
Examine those emotional needs .
For the moment , forget the logical needs .
It is from the perspective of emotion that you will reach the core essence of your prospect ’s motivation .
And it is from this essence that you will get all the clues you need to uncover the way to that prospect ’s heart and soul and eventually to his or her pocketbook .
Triggers by Joe Sugarman
Marketing Secrets of a Mail Order Maverick : Stories & Lessons on the Power of Direct Marketing to Start a Successful Business , Create a Brand
10 Totally Stupid Online Business Ideas That Made Someone Rich
10 + Unusual Ways To Make Easy Money On The Internet If You Love Writing .
Stupid Shit People ACTUALLY
Put On Their Resumes
35 Weird Facts You Never Heard Of
10 Things You Did Not Know You Could Buy On Amazon .
Com
( Here 's an email Carl de Marcken of ITA Software sent to a friend , describing their experiences using Lisp in one of the software industry 's most demanding applications . )
Date : Fri , 12 Jan 2001 15:42:34 - 0500
From : Carl de Marcken
Geoffrey ,
Here are some tidbits ...
1. Right now Sabre , Galileo , Amadeus and Worldspan operate many millions of dollars of IBM and Unisys mainframes each to answer the vast majority of queries done by airline phone agents , airport desk agents , travel agents , and travel web sites ( other than our own and our customers ' ) .
Their computers are housed in bomb - proof , fire - walled ( literally ) complexes in Kansas City , Denver , Germany and Atlanta , and mostly run assembly language code for performance reasons .
From what we can discern , their algorithms are basic : until we pointed it out to them I do n't think they had any understanding of how hard the problem they 're trying to solve is , or how far their solutions are from optimal .
2. ITA Software is slowly replacing the industry 's hardware and software with Common Lisp code running on Linux PCs , that uses relatively involved algorithms that show off our academic CS background .
The easiest place to see the code in action is on our web site , www.itasoftware.com.
3 . The vast majority of our " thinking " code is in Common Lisp .
We run both CMUCL and Franz , under Linux / Intel , HPUX / PA , and NT / Intel , and have about 200,000 lines of Lisp in our base search engine .
Our web site page generation code is also largely written in Common Lisp , though there 's also fair bit of Java there .
4 . Because we have about 2 gigs of static data we need rapid access to , we use C++ code to memory - map huge files containing pointerless C structs ( of flights , fares , etc ) , and then access these from Common Lisp using foreign data accesses .
A struct field access compiles into two or three instructions , so there 's not really any performance .
penalty for accessing C rather than Lisp objects .
By doing this , we keep the Lisp garbage collector from seeing the data ( to Lisp , each pointer to a C object is just a fixnum , though we do often temporarily wrap these pointers in Lisp objects to improve debuggability ) .
Our Lisp images are therefore only about 250 megs of " working " data structures and code .
5 . Every query that hits our site gets sent via tcpip to a Lisp process running on an dual 800 mhz x86 Linux box with 2g of ram ( $ 3000 , vs about $ 1,000,000 for a similarly capable mainframe ) , and the process devotes between 5 and 15 seconds of CPU time to it .
One of our customers will have 200 such boxes , each running 2 or 3 Lisp processes .
We save on ram by putting multiple processes on one box , since the virtual memory system automatically shares our read - only memory - mapped files between processes .
6 . If you want to do a simple round - trip from BOS to LAX in two weeks , coming back in three , willing to entertain a 24 hour departure window for both parts , then limiting to " reasonable " routes ( at most 3 flights and at most 10 hours or so ) you have about 5,000 ways to get there and 5,000 ways to get back .
Listing them is a mostly trivial graph - search ( there are a few minor complications , but not many ) , that anybody could do in a fraction of a second .
7 . The real challenge is that a single fixed itinerary ( a fixed set of flights from BOS to LAX and a fixed set back ) with only two flights in each direction may have more than 10,000 possible combinations of applicable " fares " , each fare with complex restrictions that must be checked against the flights and the other fares .
That means that the search space for this simple trip is of the order 5000 x 5000 x 10000 , and a naive program would need to do a _lot_ of computation just to validate each of these possibilities .
Suitably formalized , its not even clear that the problem of finding the cheapest flight is NP - complete , since it is difficult to put a bound on the size of the solution that will result in the cheapest price .
If you 're willing to dispense with restrictions on the energy in the universe , then it is actually possible to formalize the cheapest - price problem in a not - too - unreasonable way that leads to a proof of undecidability by reduction to the Post correspondance problem :-) .
8. Our Lisp code is running very clever algorithms that let us produce in a reasonable time a data structure we call the " pricing - graph " from which we can very efficiently answer a query of the form " give me the k - th best solution ( a validated set of flights and fares ) , ordered according to the function f " , assuming of course certain restrictions on f , where the number of answers represented by the pricing - graph is 10^20 - 10^30 depending on the type of trip .
In this way , we can reasonably claim that in 10 seconds we can produce 10^30 answers , even if we could not possibly enumerate the list of such answers .
9 . We can do 10 seconds of Lisp computation on a 800 mhz box and cons less than 5 k of data .
This is because we pre-allocate all data structures we need and die on queries that exceed them .
This may make many Lisp programmers cringe , but with a 250 meg image and real - time constraints , we can't afford to generate garbage .
For example , rather than using cons , we use " cons ! " , which grabs cells from an array of 10,000,000 cells we 've preallocated and which gets reset every query .
10 .
A lot of our Lisp is designed to compile into very efficient assembly .
We make a lot of use of Lisp 's macro capabilities , but shy away from many other Lisp features like closures , generic functions , complex sequence functions and garbage collection .
We 're doing an incredible amount of computation - getting 10 seconds on a modern machine is an incredible gift - but if we 're sloppy at all 10 seconds can turn into ten minutes , not adequate for a travel agent or web site .
We disassemble most every Lisp function looking for inefficiencies and have had both CMUCL and Franz enhanced to compile our code better .
11 . Occasionally we 've had to move code from Lisp to C++ , usually because of data loading issues ( Lisp garbage collectors just can't deal with gigs of data , and there 's no way to rapidly load gigs of data into a Lisp ) .
Our experience has been a 10 to 1 code expansion ; I do n't think there are any programmers in our company that regret the choice of Common Lisp .
12 . We 've had very little trouble getting non-Lisp programmers to read and understand and extend our Lisp code .
The only real problem is that the training most programmers have in Lisp has taught them to code very inefficiently , without paying any attention to the compiler .
Of course , with things like STL and Java , I think programmers of other languages are also becoming pretty ignorant .
Date : Tue , 15 Jan 2002 17:49:04 - 0800
From : Carl de Marcken
Paul ,
I do n't have any problems with it going up on a site , but please make a note that this message is old and the world is constantly changing : we now have thousands of CPUs running our code , and various airlines and major web sites ( Orbitz , e.g. ) depending on it .
The mainframes are disappearing as our stuff replaces it .
Laziness is the impulse to avoid work and this admirable attribute drives all progress in civilization .
However , instead of being celebrated as it should be , laziness is reviled .
Tragically , throughout one ’s schooling and continuing through one ’s professional career , a person who happens to be blessed with the glorious God - given asset of laziness is brow - beaten and insulted by parents , teachers , and employers to forsake it .
Teachers et al fail to appreciate that laziness is responsible for most of humanity ’s advances .
Let ’s face it : the guy who invented the sail was fed up with rowing .
The first soul to hop on the back of a horse was too lazy to walk any more .
Every major progressive step in society was driven by someone trying to get out of doing any work .
Each knew , deep down , that there is always an easier , faster , cheaper , safer , better way of accomplishing a task and that hard work is completely and utterly unnecessary , besides being a monumental waste of life .
So instead of culturing a population of creative , inventive , artistic , peaceful souls who are blissfully basking in their laziness , guiltlessly avoiding all work , and reaping enormous financial , emotional , spiritual , and healthful fruits as a result , our collective mindset has produced a society of superficial , stress - out , unfulfilled hard workers , who achieve little more than a pittance in their lifetimes and then die young .
You do not achieve breathtatking results by working long and hard .
The true secret of success lies in leveraging / multiplying power and effectiveness .
When that happens , it takes less effort to accomplish more .
Here ’s the good news .
There are easy ways to multiply the power of all your resources – your energy , your time , your skills , your brain power , your passion , your money , etc .
You just need to know where and how to look for them .
And , of course , you need to take the time to look .
Unfortunately people have bought into the concept of hard work so completely , they are blinded by it and they have sold their souls for skimpy paychecks instead of looking for better , easier , lazier ways that are many times more lucrative .
It ’s sad because it is so preventable .
Hard work is a superficial approach .
And superficial approaches are always weak and ineffectual .
Hard work is just not necessary .
There is ALWAYS an easier , more effective way of accomplishing the same thing .
If you are working hard , it means you are n’t using your intelligence or creativity to find the “ lever ” that takes the work out of a task .
Those who are motivated by laziness take the time to find that lever and therefore avoid the short - term and long - term misery of hard work .
As a bonus , as if avoiding work was not reward enough , they also get rich .
www.lazyway.net
Tony Robbins says that thinking is a process of asking and answering questions .
He stresses the importance of asking the right questions to get the right answers and therefore the right results .
I agree with him .
Most people ask lousy questions that cripple their results .
Lousy questions turn your focus away from what you want and towards more of what you do n’t want .
And since we ask and answer mental questions every day , our questions wield great power over our results .
Here are some examples of weak questions vs. strong questions :
Upon waking up early
Weak : Can I fall back asleep again ?
Should I go back to bed ?
Strong :
What would be the best way to start my day ?
How can I energize myself ?
Where can I find something inspirational or motivational to read right now ?
When contemplating exercise ( and feeling unmotivated )
Weak :
Is it too hot / cold to exercise ?
Can I skip it for today ?
What difference will it make if I just skip a day ?
Do n’t I deserve a day off ?
Strong :
Wo n’t it feel great hitting the showers afterwards ?
What should I listen to while I workout ?
Wo n’t it be wonderful to achieve my fitness goals ?
How can I make this session more fun ?
When considering a dietary improvement
Weak :
What foods am I going to have to give up ?
How am I going to deal with the deprivation ?
Am I going to have to eat like this forever ?
Strong :
What foods that I like will I get to eat more of ?
What new foods can I experiment with ?
Wo n’t it be great when I reach my goal weight ?
Wo n’t it be wonderful to finally master this area of my life once and for all ?
Once I succeed at this , who else can I help ?
Nearing the end of the workday
Weak :
Have I done enough that I can justify quitting for the day ?
Is this a good time to stop ?
Can I finish this tomorrow ?
Strong :
What ’s next ?
How can I complete one more task ?
How much more can I get done today ?
When spending time with the kids
Weak :
Why do I have to do so much childcare ?
How can I keep the kids from draining my energy this evening ?
What ’s the bare minimum I can do to keep them out of my hair ?
How early can I put them to bed ?
Strong :
What can I do with the kids that will leave me feeling energized ?
What do I appreciate most about my kids ?
What would I enjoy doing with them this evening ?
What would happen if I let my kids direct how we spend our time together ?
When facing an unfamiliar social situation
Weak :
How can I avoid looking like an idiot ?
What should I talk about ?
How can I keep from being too nervous or shy ?
How did I get myself into this situation ?
Can I get out of going ?
Strong :
Wo n’t it be fun to meet some interesting new people ?
If I see someone there who ’s a bit shy , what can I do to make him / her feel more comfortable ?
What can I expect others at this event to have in common with me ?
When feeling depressed , anxious , or otherwise negative
Weak :
Why do I feel so down ?
Why ca n’t I be happy ?
How come I never get any time to myself ?
Strong :
What can I do to energize myself ?
Who can I talk to that would help cheer me up ?
What can I read or listen to that would inspire me ?
Are these feelings trying to tell me something — should I go journal about them ?
How long can I hold a fake smile before it forces me to start feeling good again ?
What ’s the difference ?
Weak questions are disempowering .
They keep your focused on your own ego , your problems , and your shortcomings .
Weak questions keep you focused on what ’s wrong … on what is n’t working .
That might seem like a good idea , but all it does is further reinforce the situation you ’d like to change .
Weak questions will lead your brain to come up with answers that are useless , circular , or even destructive .
Yet weak questions are addictive .
At first glance they may even seem helpful , and that ’s why they ’re so insidious .
You might think that if you ’re depressed , the best thing you can do is to ask , “ Why am I so depressed ? ” Perhaps if you could diagnose the problem , you could cure it .
But it does n’t work that way .
When you ’re in a negative state or situation , you are n’t thinking clearly to begin with .
You ’re in no position to accurately diagnose yourself .
Effectively you ’re blind .
So the answers you get back will be worthless .
At best you ’ll merely come up with a temporary solution , but the underlying condition will remain , and the problem will simply submerge and crop up again later , sometimes in a different form .
Asking why you ’re depressed merely feeds your depression .
In answering the why question , now you ’ve added a story on top of your depression .
That goes way beyond acknowledging your depression and trying to do something about it .
Strong questions are empowering .
They keep you focused on solutions , on what you can control .
When you focus on what you can do , you avoid falling into analysis paralysis .
Ultimately the way out of any negative situation is right thinking .
Wrong thinking leads you in circles .
Right thinking leads to action .
Going back to the depression example , the first thing you need to do is to get yourself to a more positive emotional state .
And with practice that can be done in a matter of minutes — even seconds if you ’ve studied NLP .
Strong questions will help you shift your focus away from depression and the thoughts that reinforce it and towards action .
When you focus too much thought on what you ca n’t control and do n’t like , depression is a natural consequence .
When you ask different questions to focus on what you can control and what you like , depression will lift .
Mediocre results largely come about from asking mediocre questions .
Great results come from asking great questions .
If you do n’t like the results you ’re getting , try asking completely different questions from the ones you ’re used to asking .
Ask questions that turn your focus towards your goals instead of away from them .
Ask questions that allow you to enhance the pleasure in your life instead of creating greater pain .
